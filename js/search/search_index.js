var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.159,1,2.711]],["body/classes/Account.html",[0,0.178,1,3.98,2,0.904,3,0.191,4,0.16,5,0.119,6,4.606,7,1.806,8,3.019,9,0.351,10,1.058,11,7.57,12,1.652,13,6.13,14,2.535,15,2.598,16,1.233,17,2.664,18,1.095,19,4.814,20,4.81,21,0.862,22,5.202,23,0.774,24,0.008,25,0.536,26,0.488,27,0.58,28,2.521,29,2.169,30,2.576,31,5.202,32,1.927,33,2.396,34,1.364,35,4.341,36,4.213,37,3.561,38,5.202,39,1.063,40,5.202,41,1.94,42,2.039,43,3.229,44,2.475,45,2.475,46,2.039,47,2.475,48,2.402,49,2.207,50,2.475,51,0.31,52,0.966,53,4.341,54,2.093,55,1.192,56,1.474,57,1.095,58,5.202,59,1.989,60,4.606,61,0.181,62,1.61,63,1.382,64,2.598,65,2.823,66,3.176,67,5.202,68,2.333,69,2.823,70,1.94,71,3.49,72,4.606,73,3.685,74,3.322,75,2.333,76,2.148,77,5.202,78,5.202,79,3.919,80,0.005,81,0.006,82,0.005]],["title/classes/ApiValidationError.html",[0,0.159,83,2.956]],["body/classes/ApiValidationError.html",[0,0.199,2,1.009,3,0.214,4,0.178,5,0.133,7,1.938,9,0.392,10,1.135,18,1.223,21,0.859,23,0.864,24,0.008,25,0.599,26,0.506,27,0.648,39,1.056,43,3.466,51,0.299,61,0.202,62,1.798,65,3.152,80,0.005,81,0.006,82,0.005,83,4.658,84,6.457,85,5.142,86,6.054,87,3.284,88,3.012,89,4.107,90,3.292,91,1.602,92,7.059,93,5.808,94,6.772,95,5.808,96,7.059,97,1.88,98,5.808,99,5.808,100,5.808,101,5.808,102,5.808,103,1.249,104,3.401,105,4.703,106,1.276,107,5.808,108,5.142,109,4.703,110,3.47,111,3.958,112,2.532,113,4.376,114,4.114,115,3.71,116,5.808]],["title/classes/ApiValidationErrorResponse.html",[0,0.159,117,3.748]],["body/classes/ApiValidationErrorResponse.html",[0,0.199,2,1.007,3,0.213,4,0.178,5,0.133,7,1.936,9,0.391,10,1.134,18,1.221,21,0.711,23,0.862,24,0.008,25,0.598,26,0.447,27,0.647,34,1.238,51,0.326,61,0.201,80,0.005,81,0.006,82,0.005,83,5.613,88,3.008,89,4.103,90,3.008,96,7.053,104,4.665,110,3.466,111,4.841,112,2.528,114,4.107,117,5.9,118,7.053,119,5.133,120,2.11,121,4.653,122,4.448,123,4.887,124,4.379,125,7.285,126,5.798,127,6.002,128,5.798,129,4.368,130,5.798,131,5.798,132,1.509,133,5.798,134,5.798,135,5.798,136,7.285,137,7.285,138,5.798,139,1.238,140,7.285,141,5.798]],["title/modules/AuthModule.html",[142,1.401,143,3.279]],["body/modules/AuthModule.html",[0,0.21,3,0.225,4,0.188,5,0.14,12,1.184,24,0.008,51,0.373,61,0.213,80,0.005,81,0.007,82,0.005,106,1.344,142,2.281,143,6.456,144,2.462,145,3.479,146,5.42,147,5.42,148,5.42,149,5.975,150,6.309,151,4.244,152,3.322,153,2.826,154,6.122,155,3.585,156,3.949,157,7.536,158,4.612,159,6.122,160,5.42,161,6.122,162,4.106,163,4.957,164,7.536,165,6.122,166,6.122,167,6.122,168,6.122,169,3.322,170,3.004]],["title/modules/AuthorizationModule.html",[142,1.401,171,3.105]],["body/modules/AuthorizationModule.html",[0,0.215,3,0.23,4,0.192,5,0.143,24,0.008,51,0.351,61,0.218,80,0.005,81,0.007,82,0.005,106,1.375,142,2.313,144,2.519,145,3.528,151,4.303,152,3.398,153,2.891,155,3.635,156,4.004,169,4.147,171,6.252,172,5.543,173,5.543,174,5.543,175,5.543,176,6.008,177,5.714,178,5.72,179,6.261,180,6.261,181,6.261,182,3.072,183,5.543]],["title/injectables/AuthorizationService.html",[177,2.826,184,0.995]],["body/injectables/AuthorizationService.html",[0,0.146,3,0.157,4,0.131,5,0.098,9,0.288,12,1.678,18,0.898,21,0.723,23,1.101,24,0.008,25,0.763,26,0.415,27,0.825,34,0.725,39,1.067,51,0.303,52,1.145,57,0.898,61,0.148,69,4.016,80,0.004,81,0.005,82,0.004,91,1.305,103,1.673,106,0.937,132,1.401,139,1.01,177,3.629,178,5.146,182,2.093,183,3.776,184,1.278,185,1.63,186,3.776,187,2.773,188,6.056,189,6.056,190,6.84,191,4.265,192,4.265,193,4.265,194,2.308,195,4.083,196,4.395,197,5.133,198,3.831,199,4.265,200,3.347,201,5.943,202,3.833,203,3.358,204,2.669,205,3.987,206,4.265,207,4.265,208,3.749,209,3.776,210,4.265,211,4.21,212,5.262,213,3.796,214,5.262,215,2.093,216,3.776,217,1.761,218,5.08,219,3.987,220,2.764,221,4.265,222,4.265,223,3.454,224,4.265,225,4.265,226,4.265,227,5.943,228,4.265,229,4.265,230,2.604,231,4.265,232,5.943,233,4.265,234,4.265]],["title/classes/BaseEntity.html",[0,0.159,235,2.202]],["body/classes/BaseEntity.html",[0,0.275,2,1.025,3,0.217,4,0.181,5,0.135,8,2.556,9,0.398,10,1.25,14,3.137,15,2.256,16,1.526,17,2.314,21,0.719,24,0.008,26,0.413,28,2.431,29,2.002,30,2.378,34,1.365,39,1.064,41,3.137,42,3.297,46,3.297,51,0.302,52,1.195,55,1.688,56,1.673,61,0.256,63,1.568,64,2.256,80,0.005,81,0.006,82,0.005,88,2.437,235,3.821,236,4.779,237,5.902,238,5.902,239,2.991,240,4.779,241,2.991,242,4.779,243,4.779,244,5.225,245,3.769,246,2.991,247,5.225,248,2.808,249,4.779,250,3.769,251,3.324,252,5.225,253,4.779,254,5.225,255,4.18,256,2.896,257,4.446,258,4.779,259,5.225]],["title/classes/BaseEntityWithTimestamps.html",[0,0.159,8,1.606]],["body/classes/BaseEntityWithTimestamps.html",[0,0.27,2,0.981,3,0.208,4,0.174,5,0.129,8,2.731,9,0.381,10,1.225,14,3.087,15,3.009,16,1.502,17,3.086,21,0.808,24,0.008,26,0.402,28,2.586,29,2.13,30,2.451,32,1.825,33,2.268,34,1.452,39,1.043,41,3.087,42,3.246,46,3.246,48,2.608,49,2.396,51,0.293,52,1.176,55,1.642,56,1.601,61,0.249,63,1.501,64,2.159,80,0.005,81,0.006,82,0.005,88,2.333,235,3.409,236,4.574,239,2.862,240,4.574,241,2.862,242,4.574,243,4.574,244,5.001,245,3.608,246,2.862,247,5.001,248,2.687,249,4.574,250,3.608,251,3.181,252,5.001,253,4.574,254,5.001,255,4.001,256,2.772,257,4.255,258,4.574,259,5.001,260,5.649,261,5.649,262,5.649,263,5.649]],["title/classes/BusinessError.html",[0,0.159,86,3.105]],["body/classes/BusinessError.html",[0,0.262,2,0.923,3,0.195,4,0.163,5,0.122,7,1.83,9,0.359,10,1.072,18,1.45,21,0.839,23,0.79,24,0.008,25,0.548,26,0.51,27,0.592,34,0.903,39,1.138,51,0.313,61,0.185,62,1.644,74,4.4,75,3.089,80,0.005,81,0.006,82,0.005,86,4.621,87,3.332,88,3.699,89,4.556,90,3.547,91,1.513,92,7.163,97,2.23,103,1.142,104,4.478,105,6.551,106,1.166,113,5.76,120,1.933,124,4.239,139,0.903,264,4.702,265,4.478,266,4.879,267,3.879,268,4.879,269,4.034,270,4.206,271,6.191,272,5.311,273,5.73,274,6.889,275,5.311,276,5.311,277,5.311,278,5.311,279,5.311,280,5.311,281,4.702,282,6.889,283,3.11,284,4.621,285,6.889,286,5.311]],["title/modules/CoreModule.html",[142,1.401,287,3.279]],["body/modules/CoreModule.html",[0,0.2,3,0.214,4,0.179,5,0.133,24,0.008,51,0.353,61,0.203,75,3.278,80,0.005,81,0.006,82,0.005,106,1.28,112,3.187,120,2.121,142,2.535,144,2.345,145,3.375,151,4.116,152,3.163,153,2.691,156,3.83,287,6.568,288,5.16,289,5.16,290,6.233,291,6.233,292,5.373,293,6.233,294,5.829,295,4.669,296,7.31,297,4.669,298,5.919,299,5.919,300,7.31,301,4.903,302,5.507,303,4.903,304,7.31,305,4.281,306,5.178,307,6.471,308,7.31,309,5.507,310,5.829,311,5.829,312,5.829,313,5.829]],["title/classes/CourseEntity.html",[0,0.159,314,2.512]],["body/classes/CourseEntity.html",[0,0.253,2,0.858,3,0.121,4,0.101,5,0.076,7,1.745,8,2.79,9,0.516,10,0.769,12,0.639,14,1.842,15,1.888,16,1.276,17,1.936,18,1.04,21,0.768,23,0.491,24,0.008,25,0.61,26,0.441,27,0.368,28,1.495,29,1.907,30,2.493,32,1.258,33,1.563,34,1.254,37,3.867,39,0.784,41,1.231,42,1.294,43,2.642,44,1.571,45,1.571,46,1.294,47,1.571,48,1.524,49,1.401,50,1.571,51,0.202,52,0.841,54,1.987,55,0.756,56,0.936,57,0.695,59,1.888,61,0.244,62,1.831,63,1.572,68,1.481,70,2.207,76,2.904,80,0.003,81,0.004,82,0.003,97,1.069,132,1.397,139,1.195,194,2.313,203,1.294,208,2.503,241,1.673,256,1.62,283,1.934,314,2.681,315,1.859,316,4.156,317,4.156,318,4.005,319,2.511,320,3.699,321,4.939,322,1.401,323,5.239,324,3.302,325,3.302,326,3.212,327,3.699,328,1.934,329,2.424,330,1.524,331,1.262,332,3.96,333,1.934,334,2.681,335,1.792,336,1.62,337,2.853,338,1.934,339,1.859,340,1.673,341,1.571,342,1.934,343,1.859,344,1.934,345,1.859,346,2.782,347,1.859,348,1.481,349,1.859,350,1.069,351,1.859,352,1.524,353,1.859,354,1.62,355,1.202,356,1.859,357,1.934,358,1.146,359,1.524,360,1.73,361,1.673,362,2.681,363,1.792,364,1.859,365,1.792,366,1.859,367,1.831,368,2.503,369,3.333,370,3.465,371,1.792,372,2.681,373,3.465,374,3.465,375,3.223,376,3.465,377,2.681,378,1.051,379,3.333,380,3.699,381,1.73,382,2.016,383,1.842,384,3.685,385,3.45,386,3.613,387,3.016,388,2.016,389,2.016,390,2.016,391,1.62,392,1.62,393,2.016,394,2.016,395,2.016,396,1.792,397,1.934,398,2.016,399,1.401,400,4.528,401,2.016,402,2.016,403,2.016,404,3.016,405,2.016,406,2.016,407,2.016,408,2.016,409,1.673,410,2.016,411,2.016,412,2.016,413,2.016,414,3.016,415,3.016,416,2.016,417,2.016,418,2.016,419,2.782,420,1.859,421,1.792,422,1.673,423,3.016,424,3.016,425,1.934,426,1.73,427,1.571,428,2.016,429,2.016,430,2.016,431,2.016,432,1.62,433,1.934,434,1.934,435,1.934,436,1.934,437,2.016,438,2.016,439,2.016,440,2.016,441,2.016,442,2.016,443,2.016,444,2.016]],["title/classes/CourseInfo.html",[0,0.159,445,2.607]],["body/classes/CourseInfo.html",[0,0.208,2,1.056,3,0.224,4,0.187,5,0.139,7,1.993,9,0.41,10,1.167,14,2.797,16,1.361,18,1.279,21,0.83,23,0.904,24,0.008,25,0.9,26,0.498,27,0.678,29,2.028,30,2.409,39,1.126,41,2.266,42,2.382,43,3.017,46,2.382,51,0.307,52,1.066,55,1.392,56,1.722,57,1.279,59,2.323,61,0.211,62,1.881,80,0.005,81,0.007,82,0.005,235,4.153,319,2.868,322,2.577,391,2.982,392,2.982,427,2.891,445,4.224,446,7.204,447,3.422,448,4.58,449,5.032,450,4.304,451,4.304]],["title/classes/CourseNews.html",[0,0.159,452,2.607]],["body/classes/CourseNews.html",[0,0.224,2,0.568,3,0.12,4,0.215,5,0.075,7,1.86,8,2.551,9,0.221,10,0.763,12,0.632,14,1.828,15,1.874,16,1.067,17,1.922,21,0.856,23,0.486,24,0.008,25,0.606,26,0.485,27,0.894,28,2.119,29,2.156,30,2.579,32,1.498,33,1.862,34,1.19,39,1.146,41,1.219,42,1.282,43,3.527,44,1.555,45,1.555,46,1.282,47,1.555,48,1.509,49,1.387,50,1.555,51,0.312,52,0.995,54,2.366,55,0.749,56,0.927,57,0.688,61,0.243,62,1.012,64,2.249,66,4.275,70,1.219,76,2.429,80,0.003,81,0.004,82,0.003,90,3.036,91,1.077,103,0.703,139,0.556,194,1.783,195,3.419,196,3.725,198,2.429,215,1.604,219,2.193,235,2.332,248,2.798,265,2.871,284,2.193,319,1.25,322,2.495,330,2.263,337,1.219,350,2.38,355,2.676,358,2.834,367,1.517,378,0.58,383,1.828,445,3.313,452,2.761,453,2.193,454,3.452,455,3.669,456,3.312,457,4.629,458,4.384,459,4.174,460,2.716,461,3.693,462,5.38,463,3.269,464,2.647,465,3.289,466,3.8,467,4.167,468,3.289,469,2.647,470,2.647,471,3.473,472,4.384,473,3.473,474,3.289,475,3.473,476,2.647,477,2.647,478,3.547,479,2.647,480,3.313,481,3.592,482,2.647,483,2.647,484,2.647,485,3.131,486,2.647,487,3.473,488,2.647,489,3.473,490,2.647,491,3.827,492,2.315,493,2.761,494,1.841,495,2.315,496,1.555,497,2.088,498,2.315,499,2.315,500,2.315,501,2.315,502,2.315,503,2.088,504,2.315,505,2.315,506,3.473,507,2.798,508,2.886,509,2.716,510,2.716,511,2.798,512,3.592,513,3.193,514,2.315,515,3.473,516,2.315,517,2.315,518,4.167,519,1.914,520,1.914]],["title/classes/CourseTaskInfo.html",[0,0.159,521,3.748]],["body/classes/CourseTaskInfo.html",[0,0.161,2,0.814,3,0.172,4,0.144,5,0.145,7,1.684,8,2.941,9,0.316,10,0.986,12,0.906,14,2.364,15,2.423,16,1.15,17,2.485,18,0.986,19,4.489,20,4.529,21,0.863,23,0.697,24,0.008,25,0.794,26,0.5,27,0.522,28,1.918,29,2.178,30,2.51,32,2.111,33,2.624,34,1.466,35,5.295,36,5.817,37,3.321,39,1.065,41,1.747,42,1.836,43,3.096,44,2.228,45,2.228,46,1.836,47,2.228,48,2.162,49,1.987,50,2.228,51,0.294,52,0.901,53,4.916,54,1.884,55,1.073,56,1.328,57,0.986,59,1.79,61,0.22,62,1.45,63,1.909,70,1.747,76,2.967,80,0.004,81,0.006,82,0.004,132,0.887,317,3.569,318,3.44,334,2.542,346,2.638,372,4.178,375,3.525,427,2.228,447,2.638,491,2.743,521,5.132,522,6.864,523,3.468,524,5.817,525,7.698,526,4.684,527,5.412,528,4.684,529,4.147,530,5.176,531,4.684,532,4.684,533,4.684,534,3.793,535,2.638,536,4.684,537,3.529,538,4.684,539,3.793,540,3.529]],["title/classes/CoursegroupEntity.html",[0,0.159,421,2.512]],["body/classes/CoursegroupEntity.html",[0,0.254,2,0.865,3,0.123,4,0.103,5,0.076,7,1.755,8,2.799,9,0.518,10,0.775,12,0.646,14,1.857,15,1.904,16,1.282,17,1.953,18,1.049,21,0.75,23,0.497,24,0.008,25,0.614,26,0.43,27,0.372,28,1.508,29,1.847,30,2.499,32,1.268,33,1.576,34,1.26,37,3.702,39,0.789,41,1.245,42,1.309,43,2.657,44,1.588,45,1.588,46,1.309,47,1.588,48,1.541,49,1.416,50,1.588,51,0.204,52,0.847,54,2.003,55,0.765,56,0.946,57,0.703,59,1.904,61,0.246,62,1.844,63,1.583,68,1.497,70,2.222,76,2.917,80,0.003,81,0.004,82,0.003,97,1.081,132,1.403,139,1.201,194,2.309,203,1.309,208,2.524,241,1.692,256,1.638,283,1.955,314,1.812,315,1.88,316,4.173,317,3.355,318,3.233,319,2.525,320,2.805,322,1.416,323,4.409,326,3.233,327,3.719,328,1.955,329,2.444,330,1.541,331,1.276,332,3.979,333,1.955,334,2.703,335,1.812,336,1.638,337,2.863,338,1.955,339,1.88,340,1.692,341,1.588,342,1.955,343,1.88,344,1.955,345,1.88,346,2.805,347,1.88,348,1.497,349,1.88,350,1.081,351,1.88,352,1.541,353,1.88,354,1.638,355,1.215,356,1.88,357,1.955,358,1.158,359,1.541,360,1.749,361,1.692,362,2.703,363,1.812,364,1.88,365,1.812,366,1.88,367,1.844,368,2.524,369,3.355,370,3.488,371,1.812,372,2.703,373,3.488,374,3.488,375,3.241,376,3.488,377,2.703,378,1.058,379,3.355,380,4.173,381,1.749,382,2.039,383,1.857,384,3.702,385,3.467,386,3.637,387,3.041,388,2.039,389,2.039,390,2.039,391,1.638,392,1.638,393,2.039,394,2.039,395,2.039,396,1.812,397,1.955,398,2.039,399,1.416,400,4.542,401,2.039,402,2.039,403,2.039,404,3.041,405,2.039,406,2.039,407,2.039,408,2.039,409,1.692,410,2.039,411,2.039,412,2.039,413,2.039,414,3.041,415,3.041,416,2.039,417,2.039,418,2.039,419,3.719,420,1.88,421,2.703,422,1.692,423,3.041,424,3.041,425,1.955,426,1.749,427,1.588,428,2.039,429,2.039,430,2.039,431,2.039,432,1.638,433,1.955,434,1.955,435,1.955,436,1.955,437,2.039,438,2.039,439,2.039,440,2.039,441,2.039,442,2.039,443,2.039,444,2.039,541,4.981,542,3.339,543,3.339,544,3.339]],["title/classes/CreateNewsParams.html",[0,0.159,545,3.105]],["body/classes/CreateNewsParams.html",[0,0.232,2,0.899,3,0.19,4,0.159,5,0.118,9,0.35,10,1.054,16,1.229,21,0.812,24,0.008,26,0.466,28,2.051,29,2.073,39,1.168,51,0.309,52,1.288,61,0.18,68,3.593,80,0.005,81,0.006,82,0.005,90,3.434,120,3.208,132,0.98,195,3.387,197,4.423,202,3.223,215,3.706,355,3.026,358,2.78,368,2.624,454,3.401,456,3.827,545,4.545,546,6.908,547,3.901,548,3.325,549,5.104,550,3.815,551,6.775,552,4.584,553,5.178,554,5.487,555,4.137,556,5.487,557,5.104,558,5.178,559,5.178,560,4.799,561,4.799,562,5.178,563,5.178,564,5.349,565,5.487,566,3.968,567,5.178,568,5.178,569,4.995,570,2.541,571,5.998,572,6.733,573,3.032,574,3.667,575,3.307]],["title/controllers/DelayController.html",[576,2.018,577,3.487]],["body/controllers/DelayController.html",[0,0.207,3,0.222,4,0.186,5,0.138,9,0.408,21,0.59,24,0.008,29,1.506,32,1.903,34,1.027,51,0.332,61,0.21,80,0.005,81,0.007,82,0.005,91,1.642,103,1.299,106,1.327,110,2.875,132,1.416,139,1.271,155,2.875,170,3.668,187,2.628,204,2.689,220,2.147,306,5.295,576,3.259,577,6.115,578,6.054,579,4.893,580,7.509,581,6.043,582,5.295,583,4.254,584,5.295,585,4.057,586,5.632,587,5.35,588,6.043,589,3.69,590,4.893,591,6.054,592,5.35,593,5.35,594,6.043,595,4.552,596,2.965,597,4.893,598,5.015,599,4.893,600,3.28,601,4.893,602,4.552]],["title/injectables/DurationLoggingInterceptor.html",[184,0.995,603,3.748]],["body/injectables/DurationLoggingInterceptor.html",[0,0.202,3,0.217,4,0.181,5,0.135,9,0.398,10,1.145,21,0.719,23,0.876,24,0.008,25,0.607,26,0.33,27,0.657,32,1.5,33,1.865,34,1.251,51,0.344,61,0.205,80,0.005,81,0.006,82,0.005,87,2.921,91,1.616,103,1.267,106,1.294,120,2.144,132,1.116,139,1.001,184,1.582,185,2.252,303,4.936,509,3.705,586,5.544,598,4.936,603,5.959,604,7.105,605,5.216,606,7.359,607,5.544,608,4.936,609,3.499,610,4.562,611,6.515,612,6.515,613,6.332,614,7.442,615,5.891,616,3.087,617,7.105,618,7.359,619,5.891,620,4.771,621,5.891,622,5.216,623,5.216,624,3.952,625,5.891,626,3.952,627,5.959,628,5.891,629,5.891,630,5.891]],["title/modules/ErrorModule.html",[142,1.401,290,3.279]],["body/modules/ErrorModule.html",[0,0.226,3,0.242,4,0.202,5,0.151,24,0.008,32,2.006,51,0.345,61,0.229,80,0.006,81,0.007,82,0.006,106,1.447,120,2.397,142,2.385,144,2.65,155,3.134,213,5.032,290,5.58,305,4.614,309,6.58,589,4.022,600,3.575,631,6.587,632,6.975,633,4.811,634,3.992,635,3.992,636,5.58,637,6.587,638,6.587,639,5.334]],["title/classes/ErrorResponse.html",[0,0.159,104,2.711]],["body/classes/ErrorResponse.html",[0,0.208,2,1.052,3,0.223,4,0.186,5,0.139,18,1.576,21,0.591,23,0.901,24,0.008,25,0.624,26,0.489,27,0.675,39,1.215,51,0.248,61,0.21,80,0.005,81,0.007,82,0.005,87,3.089,88,3.505,89,4.575,90,3.355,97,2.63,104,4.383,105,4.902,106,1.33,112,3.542,120,2.724,121,5.189,122,4.57,123,5.021,124,3.922,281,5.36,640,5.36,641,6.054,642,6.054,643,6.054,644,4.902,645,5.301,646,6.054,647,3.867,648,5.36,649,3.696,650,2.639,651,3.545,652,4.061,653,4.902]],["title/injectables/FeathersAuthProvider.html",[178,2.956,184,0.995]],["body/injectables/FeathersAuthProvider.html",[0,0.145,3,0.155,4,0.13,5,0.096,9,0.285,12,1.626,14,1.572,18,0.888,21,0.784,23,1.194,24,0.008,25,0.828,26,0.45,27,0.895,34,0.717,39,1.026,41,2.535,51,0.317,55,0.966,57,0.888,61,0.147,80,0.004,81,0.005,82,0.004,91,1.295,103,1.666,106,0.926,132,1.639,139,1.365,178,3.765,184,1.268,185,1.612,187,2.915,194,2.359,195,3.6,196,4.176,197,4.311,198,3.199,203,3.231,204,2.866,205,3.955,216,3.732,217,1.741,220,2.753,230,2.574,235,2.804,239,2.136,350,1.365,367,2.398,378,0.748,385,2.069,582,4.176,583,2.209,609,2.964,654,7.295,655,3.414,656,5.895,657,6.018,658,5.895,659,5.895,660,6.018,661,4.216,662,4.901,663,4.216,664,5.895,665,4.216,666,3.732,667,4.216,668,5.895,669,4.216,670,5.895,671,4.216,672,4.216,673,4.216,674,5.219,675,4.216,676,3.732,677,5.895,678,3.732,679,5.895,680,5.895,681,4.216,682,4.216,683,3.234,684,4.216,685,5.895,686,5.895,687,5.895,688,4.216,689,2.986,690,4.216,691,4.216,692,2.209,693,4.216,694,2.469,695,4.774,696,3.732,697,4.216,698,4.216]],["title/interfaces/FeathersError.html",[378,0.822,699,3.279]],["body/interfaces/FeathersError.html",[3,0.248,4,0.207,5,0.154,7,2.121,9,0.455,10,1.242,24,0.008,26,0.516,39,1.207,61,0.234,80,0.006,81,0.007,82,0.006,88,3.633,97,2.755,112,3.481,378,1.196,699,5.655,700,2.512,701,5.963,702,5.963,703,7.79]],["title/modules/FeathersModule.html",[142,1.401,176,3.105]],["body/modules/FeathersModule.html",[0,0.212,3,0.227,4,0.189,5,0.141,24,0.008,51,0.31,61,0.214,80,0.005,81,0.007,82,0.005,106,1.354,120,2.245,142,2.586,144,3.295,145,3.495,151,4.263,152,3.347,153,2.847,155,3.601,169,4.109,176,6.064,182,4.019,585,4.109,662,5.704,676,5.46,683,3.601,704,5.46,705,5.46,706,5.46,707,6.167,708,4.835,709,4.433,710,4.109,711,3.836,712,4.622,713,5.078,714,5.078,715,5.078,716,5.078,717,6.13,718,3.495]],["title/interfaces/FeathersService.html",[378,0.822,719,3.487]],["body/interfaces/FeathersService.html",[0,0.175,3,0.187,4,0.156,5,0.116,9,0.344,16,1.215,21,0.654,23,0.997,24,0.008,25,0.691,26,0.446,27,0.747,39,0.674,51,0.338,57,1.072,61,0.277,75,2.282,80,0.004,81,0.006,82,0.004,91,1.471,103,1.441,106,1.118,132,0.964,139,0.865,144,2.047,182,2.497,184,1.441,194,2.026,204,2.636,218,4.386,378,0.904,507,3.187,508,3.287,509,3.093,510,3.093,511,3.187,512,4.091,585,4.488,589,3.108,609,2.219,662,3.108,683,4.178,700,1.898,708,3.251,709,4.842,710,2.762,711,4.19,712,3.108,713,3.414,714,3.414,715,3.414,716,3.414,717,4.121,718,2.35,719,5.995,720,5.642,721,3.605,722,3.569,723,7.046,724,4.859,725,5.931,726,7.009,727,5.089,728,5.184,729,4.091,730,5.931,731,5.089,732,3.636,733,3.414,734,3.251,735,4.121,736,5.425,737,5.425,738,5.425,739,4.121,740,3.605,741,4.506,742,4.506,743,4.506,744,4.506,745,4.506]],["title/injectables/FeathersServiceProvider.html",[184,0.995,662,2.826]],["body/injectables/FeathersServiceProvider.html",[0,0.175,3,0.188,4,0.157,5,0.117,9,0.344,16,0.925,18,1.073,21,0.655,23,0.998,24,0.008,25,0.691,26,0.446,27,0.748,39,0.993,51,0.339,57,1.073,61,0.277,75,2.286,80,0.004,81,0.006,82,0.004,91,1.473,103,1.096,106,1.119,120,1.855,132,0.965,139,0.866,144,2.698,182,3.291,184,1.442,185,1.949,194,1.707,204,2.221,218,4.389,378,0.905,507,3.19,508,3.291,509,3.096,510,3.096,511,3.19,512,4.095,585,4.322,589,3.112,609,2.222,662,4.095,683,4.18,708,4.283,709,4.663,710,3.64,711,4.504,712,4.095,713,4.499,714,4.499,715,4.499,716,4.499,717,5.431,718,3.096,719,5.999,720,5.646,721,3.61,722,2.286,723,5.937,724,4.095,725,4.513,726,6.069,728,4.576,730,4.513,732,3.64,733,3.419,734,3.256,735,4.128,736,5.431,737,5.431,738,5.431,739,4.128,740,4.75,741,4.513,742,4.513,743,5.937,744,4.513,745,4.513,746,6.706,747,5.097,748,5.097,749,5.097,750,3.61]],["title/classes/FileTaskInfo.html",[0,0.159,751,3.105]],["body/classes/FileTaskInfo.html",[0,0.189,2,0.96,3,0.203,4,0.17,5,0.126,7,1.878,8,3.062,9,0.373,10,1.1,12,1.069,14,2.635,15,2.701,16,1.282,17,2.77,18,1.163,19,5.005,20,4.779,21,0.862,23,0.822,24,0.008,25,0.847,26,0.476,27,0.616,28,2.139,29,2.164,30,2.57,32,1.799,33,2.237,34,1.201,39,1.032,41,2.061,42,2.166,43,3.303,44,2.628,45,2.628,46,2.166,47,2.628,48,2.551,49,2.344,50,2.628,51,0.319,52,1.004,55,1.266,56,1.566,57,1.163,59,2.112,61,0.192,62,1.71,63,1.468,70,2.061,80,0.005,81,0.006,82,0.005,348,2.478,361,2.8,447,3.112,455,4.082,491,3.236,523,3.492,529,4.892,530,4.757,751,4.74,752,7.27,753,5.525,754,5.525,755,3.374,756,2.999]],["title/classes/FilterOptions.html",[0,0.159,757,3.279]],["body/classes/FilterOptions.html",[0,0.181,2,0.626,3,0.133,4,0.111,5,0.157,9,0.243,10,0.82,12,1.325,15,2.014,17,2.065,18,0.758,21,0.712,23,0.536,24,0.008,25,0.543,26,0.522,27,0.813,28,2.565,32,2.003,34,0.895,39,0.908,51,0.312,52,0.512,55,1.207,56,1.021,57,0.758,61,0.183,63,0.957,80,0.003,81,0.005,82,0.003,87,1.311,97,2.466,106,0.791,120,1.311,132,1.297,139,0.612,184,1.133,187,1.166,194,2.003,204,1.193,217,1.487,220,1.28,239,1.825,331,1.377,337,1.964,367,2.653,377,1.955,385,3.737,396,1.955,399,2.642,422,2.669,496,3.914,523,2.505,609,2.297,627,5.549,634,1.825,757,5.164,758,2.917,759,6.662,760,4.656,761,4.656,762,4.663,763,4.184,764,5.268,765,2.199,766,3.602,767,3.602,768,3.602,769,3.085,770,3.189,771,2.3,772,2.713,773,3.189,774,3.731,775,7.662,776,4.723,777,4.266,778,7.502,779,5.162,780,3.189,781,3.189,782,2.917,783,5.492,784,3.189,785,3.189,786,3.189,787,4.266,788,2.109,789,3.189,790,3.189,791,2.917,792,2.713,793,1.825,794,2.551,795,2.713,796,2.917,797,2.917,798,2.713,799,2.917,800,3.189,801,6.066,802,2.917,803,3.189,804,2.917,805,3.189,806,2.917,807,3.189,808,2.199,809,2.551,810,2.3,811,2.3,812,2.028,813,3.189,814,5.513,815,4.663,816,3.534,817,3.189,818,3.189,819,2.917,820,2.551,821,2.551,822,3.189,823,3.189,824,2.713,825,2.917,826,3.189,827,3.189,828,3.189,829,3.189]],["title/classes/FilteredCourseGroups.html",[0,0.159,432,2.271]],["body/classes/FilteredCourseGroups.html",[0,0.259,2,0.897,3,0.129,4,0.108,5,0.08,7,1.629,8,2.347,9,0.526,10,0.804,12,0.678,16,1.112,18,1.291,21,0.737,23,0.522,24,0.008,25,0.632,26,0.437,27,0.391,30,2.494,34,1.15,37,3.778,39,0.684,51,0.211,52,0.871,54,2.077,55,0.803,56,0.994,57,0.738,59,1.974,61,0.251,62,1.897,63,1.629,68,1.572,70,2.286,76,2.978,80,0.003,81,0.005,82,0.003,91,1.134,97,1.135,103,0.754,132,1.428,139,1.226,194,2.321,203,1.374,208,2.617,241,1.777,256,1.72,283,2.053,314,1.903,315,1.974,316,3.809,317,3.453,318,3.327,319,2.344,320,2.908,326,3.327,327,3.809,328,2.053,329,2.534,330,1.619,331,1.34,332,4.061,333,2.053,334,2.803,335,1.903,336,1.72,337,2.909,338,2.053,339,1.974,340,1.777,341,1.668,342,2.053,343,1.974,344,2.053,345,1.974,346,2.908,347,1.974,348,1.572,349,1.974,350,1.135,351,1.974,352,1.619,353,1.974,354,1.72,355,1.276,356,1.974,357,2.053,358,1.217,359,1.619,360,1.837,361,1.777,362,2.803,363,1.903,364,1.974,365,1.903,366,1.974,367,1.897,368,2.617,369,3.453,370,3.59,371,1.903,372,2.803,373,3.59,374,3.59,375,3.319,376,3.59,377,2.803,378,1.088,379,3.453,380,3.809,381,1.837,382,2.141,383,1.926,384,3.952,385,3.538,386,3.743,387,3.153,388,2.141,389,2.141,390,2.141,391,1.72,392,1.72,393,2.141,394,2.141,395,2.141,396,1.903,397,2.053,398,2.141,399,1.487,400,4.849,401,2.141,402,2.141,403,2.141,404,3.153,405,2.141,406,2.141,407,2.141,408,2.141,409,1.777,410,2.141,411,2.141,412,2.141,413,2.141,414,3.743,415,3.153,416,2.141,417,2.141,418,3.153,419,2.908,420,1.974,421,1.903,422,1.777,423,3.153,424,3.153,425,2.053,426,1.837,427,1.668,428,2.141,429,2.141,430,2.141,431,2.141,432,2.534,433,2.053,434,2.053,435,2.053,436,2.053,437,2.141,438,2.141,439,2.141,440,2.141,441,2.141,442,2.141,443,2.141,444,2.141,830,4.572,831,5.164,832,3.506,833,3.506,834,3.506,835,3.506]],["title/interfaces/GlobalConstants.html",[378,0.822,836,3.487]],["body/interfaces/GlobalConstants.html",[3,0.238,4,0.199,5,0.148,9,0.437,10,1.213,24,0.008,26,0.469,27,0.968,39,1.228,51,0.265,61,0.225,80,0.006,81,0.007,82,0.006,132,1.476,378,1.149,700,2.413,836,6.302,837,5.24,838,7.866,839,7.866,840,7.866,841,6.312,842,6.471,843,6.312,844,3.789,845,4.341]],["title/classes/GlobalErrorFilter.html",[0,0.159,636,3.279]],["body/classes/GlobalErrorFilter.html",[0,0.175,2,0.597,3,0.126,4,0.106,5,0.079,9,0.232,10,0.792,21,0.592,23,0.757,24,0.008,25,0.625,26,0.401,27,0.567,30,1.017,32,0.875,33,1.088,34,1.216,49,1.458,51,0.317,61,0.119,64,1.314,80,0.003,81,0.004,82,0.003,83,3.87,86,4.493,87,2.205,88,2.766,89,2.865,90,2.502,91,1.331,103,1.44,104,4.912,106,0.755,110,1.635,111,1.865,112,4.079,121,2.195,122,5.049,124,1.801,129,2.589,132,1.717,139,1.471,182,2.973,218,2.98,267,2.865,271,5.424,378,0.61,409,3.07,460,2.797,507,2.421,508,2.497,509,2.349,510,2.349,511,1.635,609,2.642,610,4.552,624,3.413,633,4.366,635,2.578,636,3.604,694,2.012,699,4.745,703,3.042,710,1.865,718,1.586,734,2.195,846,5.046,847,2.434,848,6.059,849,5.791,850,4.907,851,5.088,852,3.436,853,5.088,854,6.064,855,6.059,856,6.699,857,3.436,858,6.059,859,3.436,860,3.436,861,3.042,862,3.042,863,3.436,864,3.436,865,2.783,866,3.042,867,2.783,868,6.064,869,2.783,870,2.434,871,3.042,872,3.413,873,2.783,874,2.434,875,3.87,876,2.195,877,2.783,878,3.042,879,4.505,880,3.042,881,2.783,882,3.042,883,3.042,884,3.042,885,3.042,886,3.042,887,3.7,888,4.12,889,3.436,890,4.12,891,5.387,892,3.436,893,3.436,894,3.436,895,4.12,896,3.436,897,3.436,898,5.088,899,3.436,900,3.436,901,2.305,902,4.505,903,2.434,904,3.042,905,2.195,906,2.305,907,4.505,908,3.412,909,2.783,910,4.505,911,3.042,912,4.12,913,3.042,914,3.042,915,2.589,916,2.783,917,3.042,918,3.042,919,2.783,920,2.783,921,2.783,922,2.589,923,2.589,924,3.042,925,3.042,926,3.042,927,3.042,928,6.331,929,2.783,930,6.331,931,3.042,932,2.783,933,3.042,934,3.436,935,3.436,936,3.436,937,5.088,938,3.436,939,3.436]],["title/classes/GlobalValidationPipe.html",[0,0.159,940,3.487]],["body/classes/GlobalValidationPipe.html",[0,0.272,2,0.995,3,0.211,4,0.176,5,0.131,7,1.921,10,0.891,18,1.668,21,0.559,24,0.008,26,0.444,29,1.802,32,1.841,34,0.974,51,0.296,61,0.199,62,1.773,64,2.764,80,0.005,81,0.006,82,0.005,83,3.658,94,5.854,106,1.258,111,4.516,120,2.084,124,3.001,129,4.315,139,0.974,266,5.121,305,4.234,340,2.902,496,3.769,548,3.887,569,3.354,573,4.234,650,2.497,692,3.001,694,3.354,728,3.497,756,3.108,776,3.354,940,5.446,941,6.4,942,5.07,943,5.854,944,4.414,945,5.854,946,5.854,947,5.854,948,4.85,949,7.922,950,5.727,951,4.85,952,4.057,953,4.638,954,5.727,955,2.902,956,3.842,957,5.727,958,5.727,959,4.315,960,5.727,961,5.727,962,5.727,963,3.842,964,4.057,965,5.727,966,4.057,967,5.727,968,4.638,969,5.727,970,3.354,971,5.727,972,5.727]],["title/classes/GroupEntity.html",[0,0.159,384,2.426]],["body/classes/GroupEntity.html",[0,0.249,2,0.833,3,0.117,4,0.098,5,0.073,7,1.711,8,2.76,9,0.51,10,0.746,12,0.614,14,1.788,15,1.833,16,1.254,17,1.88,18,1.01,21,0.815,23,0.472,24,0.008,25,0.713,26,0.473,27,0.644,28,1.452,29,1.983,30,2.525,32,1.221,33,1.518,34,1.236,37,3.956,39,0.853,41,1.184,42,1.245,43,2.59,44,1.51,45,1.51,46,1.245,47,1.51,48,1.466,49,1.346,50,1.51,51,0.196,52,0.821,54,1.929,55,0.727,56,0.9,57,0.668,59,1.833,61,0.24,62,1.789,63,1.535,68,1.424,70,2.155,76,2.855,80,0.003,81,0.004,82,0.003,91,1.053,97,1.028,103,0.683,132,1.377,139,1.175,194,2.303,203,1.245,208,2.43,241,1.609,256,1.558,283,1.859,314,1.723,315,1.788,316,3.626,317,3.254,318,3.136,319,2.462,320,2.701,322,1.346,326,3.495,327,3.626,328,1.859,329,2.353,330,1.466,331,1.214,332,3.893,333,1.859,334,2.603,335,1.723,336,1.558,337,2.815,338,1.859,339,1.788,340,1.609,341,1.51,342,1.859,343,1.788,344,1.859,345,1.788,346,2.701,347,1.788,348,1.424,349,1.788,350,1.028,351,1.788,352,1.466,353,1.788,354,1.558,355,1.155,356,1.788,357,1.859,358,1.101,359,1.466,360,1.663,361,1.609,362,2.603,363,1.723,364,1.788,365,1.723,366,1.788,367,2.14,368,2.43,369,3.626,370,3.384,371,1.723,372,2.603,373,3.384,374,3.384,375,3.16,376,3.384,377,2.603,378,1.026,379,3.893,380,4.094,381,1.663,382,1.938,383,2.401,384,3.81,385,3.704,386,3.529,387,2.928,388,1.938,389,1.938,390,1.938,391,1.558,392,1.558,393,1.938,394,1.938,395,1.938,396,1.723,397,1.859,398,3.932,399,2.034,400,4.48,401,1.938,402,1.938,403,1.938,404,2.928,405,1.938,406,1.938,407,1.938,408,1.938,409,1.609,410,1.938,411,1.938,412,1.938,413,1.938,414,2.928,415,2.928,416,1.938,417,1.938,418,1.938,419,2.701,420,1.788,421,1.723,422,1.609,423,2.928,424,2.928,425,1.859,426,1.663,427,1.51,428,1.938,429,1.938,430,1.938,431,1.938,432,1.558,433,1.859,434,1.859,435,1.859,436,1.859,437,1.938,438,1.938,439,1.938,440,1.938,441,1.938,442,1.938,443,1.938,444,1.938,973,4.795,974,3.174,975,5.779,976,3.174,977,3.174,978,3.174,979,3.174,980,3.174]],["title/classes/GroupEntityCollection.html",[0,0.159,400,2.607]],["body/classes/GroupEntityCollection.html",[0,0.256,2,0.878,3,0.125,4,0.105,5,0.078,7,1.601,8,2.314,9,0.522,10,0.786,12,0.659,16,1.093,18,1.064,21,0.729,23,0.896,24,0.008,25,0.734,26,0.418,27,0.672,30,2.478,34,1.133,37,3.733,39,0.669,51,0.207,52,0.856,54,2.033,55,0.78,56,0.965,57,0.717,59,1.932,61,0.248,62,1.865,63,1.601,68,1.527,70,2.247,76,2.941,80,0.003,81,0.004,82,0.003,91,1.11,97,1.636,103,1.434,132,1.413,139,1.211,194,2.321,203,1.335,208,2.561,241,1.725,256,1.67,283,1.994,314,1.848,315,1.917,316,3.755,317,3.394,318,3.27,319,2.304,320,2.846,322,1.444,326,3.27,327,3.755,328,1.994,329,2.48,330,1.572,331,1.301,332,4.469,333,1.994,334,2.742,335,1.848,336,1.67,337,2.881,338,1.994,339,1.917,340,1.725,341,1.619,342,1.994,343,1.917,344,1.994,345,1.917,346,2.846,347,1.917,348,1.527,349,1.917,350,1.102,351,1.917,352,1.572,353,1.917,354,1.67,355,1.239,356,1.917,357,1.994,358,1.181,359,1.572,360,1.784,361,1.725,362,2.742,363,1.848,364,1.917,365,1.848,366,1.917,367,1.865,368,2.561,369,3.394,370,3.529,371,1.848,372,2.742,373,3.529,374,3.529,375,3.272,376,3.529,377,2.742,378,1.07,379,4.011,380,3.755,381,1.784,382,2.079,383,1.884,384,4.248,385,3.495,386,3.679,387,3.085,388,2.079,389,2.079,390,2.079,391,1.67,392,1.67,393,2.079,394,2.079,395,2.079,396,1.848,397,1.994,398,2.079,399,1.444,400,4.646,401,3.085,402,2.079,403,4.071,404,3.085,405,2.079,406,2.079,407,2.079,408,3.085,409,2.561,410,2.079,411,2.079,412,4.071,413,2.079,414,3.679,415,3.085,416,2.079,417,2.079,418,3.085,419,2.846,420,1.917,421,1.848,422,1.725,423,3.085,424,3.085,425,1.994,426,1.784,427,1.619,428,2.079,429,2.079,430,2.079,431,2.079,432,1.67,433,1.994,434,1.994,435,1.994,436,1.994,437,2.079,438,2.079,439,2.079,440,2.079,441,2.079,442,2.079,443,2.079,444,2.079,729,2.079,830,4.474,981,5.053,982,5.053,983,3.404,984,3.404,985,3.404,986,3.404]],["title/injectables/GroupRepo.html",[184,0.995,987,3.105]],["body/injectables/GroupRepo.html",[0,0.19,3,0.204,4,0.17,5,0.127,9,0.374,12,1.071,18,1.165,21,0.761,23,1.16,24,0.008,25,0.804,26,0.437,27,0.869,51,0.336,52,0.786,55,1.268,57,1.165,61,0.192,63,1.88,80,0.005,81,0.006,82,0.005,87,2.014,91,1.554,103,1.521,106,1.215,132,1.339,139,1.202,142,1.675,184,1.521,185,2.116,187,2.812,194,2.248,203,3.405,204,2.722,217,2.285,220,2.513,239,2.805,314,3.004,316,3.984,318,3.004,331,2.116,366,3.117,367,1.713,421,3.004,634,2.805,769,4.812,808,3.379,809,3.92,810,3.535,812,3.984,987,4.745,988,4.9,989,5.728,990,7.074,991,3.535,992,5.535,993,5.728,994,5.535,995,7.074,996,5.535,997,4.17,998,5.535,999,3.92,1000,7.074,1001,5.535,1002,5.535,1003,7.074,1004,5.535]],["title/injectables/GroupUC.html",[184,0.995,1005,3.105]],["body/injectables/GroupUC.html",[0,0.186,3,0.2,4,0.167,5,0.124,9,0.366,16,1.479,18,1.142,21,0.682,23,1.039,24,0.008,25,0.72,26,0.493,27,0.779,34,0.922,37,4.274,51,0.334,52,0.771,57,1.142,61,0.189,80,0.005,81,0.006,82,0.005,87,1.974,91,1.534,103,1.167,106,1.191,132,1.636,139,0.922,184,1.502,185,2.074,187,2.501,194,2.076,203,2.127,204,2.313,217,2.24,220,1.928,316,4.593,317,3.933,318,3.79,326,2.944,369,3.055,380,4.752,383,3.041,420,3.055,432,3.427,433,3.177,434,3.177,435,3.177,436,3.177,987,5.795,989,5.655,993,5.655,1005,4.685,1006,4.803,1007,5.425,1008,5.425,1009,5.425,1010,3.055,1011,5.425,1012,4.393,1013,5.425,1014,5.425,1015,6.984,1016,5.425,1017,5.425,1018,6.183,1019,5.425,1020,6.984,1021,6.984,1022,6.984,1023,6.984,1024,5.425,1025,6.183]],["title/interfaces/ICourseProperties.html",[320,2.607,378,0.822]],["body/interfaces/ICourseProperties.html",[0,0.26,2,0.619,3,0.131,4,0.109,5,0.082,7,1.644,8,2.365,9,0.529,10,0.813,12,0.689,16,1.123,18,0.75,24,0.008,25,0.539,26,0.407,27,0.846,30,2.503,34,1.159,37,3.803,39,0.692,51,0.214,52,0.879,54,2.102,55,0.816,56,1.01,57,0.75,59,1.998,61,0.252,62,1.915,63,1.644,68,1.598,70,2.308,76,2.997,80,0.003,81,0.005,82,0.003,97,1.153,132,1.436,139,1.234,194,2.348,203,1.397,208,2.648,241,1.805,256,1.748,283,2.086,314,1.934,315,2.006,316,4.415,317,4.272,318,4.117,319,2.366,320,3.485,326,3.359,327,3.839,328,2.086,329,2.564,330,1.645,331,1.362,332,4.088,333,2.086,334,2.836,335,1.934,336,1.748,337,2.923,338,2.086,339,2.006,340,1.805,341,1.695,342,2.086,343,2.006,344,2.086,345,2.006,346,2.943,347,2.006,348,1.598,349,2.006,350,1.153,351,2.006,352,1.645,353,2.006,354,1.748,355,1.297,356,2.006,357,2.086,358,1.236,359,1.645,360,1.867,361,1.805,362,2.836,363,1.934,364,2.006,365,1.934,366,2.006,367,1.915,368,2.648,369,3.485,370,3.624,371,1.934,372,2.836,373,3.624,374,3.624,375,3.345,376,3.624,377,2.836,378,1.099,379,3.485,380,3.839,381,1.867,382,2.175,383,1.949,384,3.803,385,3.562,386,3.779,387,3.191,388,2.175,389,2.175,390,2.175,391,1.748,392,1.748,393,2.175,394,2.175,395,2.175,396,1.934,397,2.086,398,2.175,399,1.511,400,4.62,401,2.175,402,2.175,403,2.175,404,3.191,405,2.175,406,2.175,407,2.175,408,2.175,409,1.805,410,2.175,411,2.175,412,2.175,413,2.175,414,3.191,415,3.191,416,2.175,417,2.175,418,2.175,419,2.943,420,2.006,421,1.934,422,1.805,423,3.191,424,3.191,425,2.086,426,1.867,427,1.695,428,2.175,429,2.175,430,2.175,431,2.175,432,1.748,433,2.086,434,2.086,435,2.086,436,2.086,437,2.175,438,2.175,439,2.175,440,2.175,441,2.175,442,2.175,443,2.175,444,2.175,700,1.329]],["title/interfaces/ICoursegroupProperties.html",[378,0.822,419,2.607]],["body/interfaces/ICoursegroupProperties.html",[0,0.261,2,0.628,3,0.133,4,0.111,5,0.083,7,1.658,8,2.381,9,0.532,10,0.822,12,0.699,16,1.132,18,0.761,24,0.008,25,0.544,26,0.385,30,2.511,34,1.167,37,3.825,39,0.7,51,0.216,52,0.887,54,2.124,55,0.828,56,1.024,57,0.761,59,2.019,61,0.254,62,1.931,63,1.658,68,1.621,70,2.327,76,3.015,80,0.003,81,0.005,82,0.003,97,1.17,132,1.444,139,1.241,194,2.341,203,1.417,208,2.676,241,1.831,256,1.773,283,2.116,314,1.961,315,2.035,316,4.434,317,3.514,318,3.386,319,2.385,320,2.974,326,3.386,327,3.865,328,2.116,329,2.591,330,1.668,331,1.381,332,4.111,333,2.116,334,2.866,335,1.961,336,1.773,337,2.936,338,2.116,339,2.035,340,1.831,341,1.719,342,2.116,343,2.035,344,2.116,345,2.035,346,2.974,347,2.035,348,1.621,349,2.035,350,1.17,351,2.035,352,1.668,353,2.035,354,1.773,355,1.315,356,2.035,357,2.116,358,1.254,359,1.668,360,1.894,361,1.831,362,2.866,363,1.961,364,2.035,365,1.961,366,2.035,367,1.931,368,2.676,369,3.514,370,3.654,371,1.961,372,2.866,373,3.654,374,3.654,375,3.367,376,3.654,377,2.866,378,1.108,379,3.514,380,4.434,381,1.894,382,2.206,383,1.969,384,3.825,385,3.582,386,3.81,387,3.224,388,2.206,389,2.206,390,2.206,391,1.773,392,1.773,393,2.206,394,2.206,395,2.206,396,1.961,397,2.116,398,2.206,399,1.533,400,4.637,401,2.206,402,2.206,403,2.206,404,3.224,405,2.206,406,2.206,407,2.206,408,2.206,409,1.831,410,2.206,411,2.206,412,2.206,413,2.206,414,3.224,415,3.224,416,2.206,417,2.206,418,2.206,419,3.514,420,2.035,421,1.961,422,1.831,423,3.224,424,3.224,425,2.116,426,1.894,427,1.719,428,2.206,429,2.206,430,2.206,431,2.206,432,1.773,433,2.116,434,2.116,435,2.116,436,2.116,437,2.206,438,2.206,439,2.206,440,2.206,441,2.206,442,2.206,443,2.206,444,2.206,700,1.348]],["title/interfaces/ICreateNews.html",[378,0.822,1026,3.105]],["body/interfaces/ICreateNews.html",[3,0.206,4,0.172,5,0.128,9,0.379,10,1.11,20,3.159,24,0.008,26,0.502,28,2.375,39,1.155,51,0.23,52,0.797,57,1.181,61,0.308,80,0.005,81,0.006,82,0.005,90,3.41,120,2.042,132,1.351,194,1.998,195,3.2,196,3.976,197,4.179,202,2.669,215,2.753,248,3.394,336,2.753,337,2.092,350,1.816,355,3.005,358,3.073,378,1.547,399,2.38,427,2.669,454,3.401,456,4.184,494,3.159,700,2.092,722,2.516,1026,4.786,1027,3.974,1028,6.317,1029,6.687,1030,5.778,1031,3.763,1032,5.778,1033,3.974,1034,3.974,1035,4.967,1036,3.763,1037,3.583]],["title/interfaces/ICurrentUser.html",[378,0.822,1038,2.512]],["body/interfaces/ICurrentUser.html",[1,4.22,3,0.21,4,0.175,5,0.13,7,1.514,9,0.385,10,1.121,12,1.606,16,1.507,24,0.008,26,0.48,39,1.257,51,0.233,61,0.25,63,1.915,80,0.005,81,0.006,82,0.005,97,2.333,203,3.256,211,5.104,341,2.71,367,2.708,378,1.279,700,2.125,1038,4.289,1039,4.614,1040,4.614,1041,5.882,1042,4.208,1043,4.927,1044,3.536,1045,4.352,1046,5.104,1047,4.036,1048,4.036,1049,4.292,1050,4.614,1051,5.044,1052,4.614,1053,4.614,1054,4.614,1055,4.614,1056,4.614]],["title/interfaces/IErrorType.html",[273,3.279,378,0.822]],["body/interfaces/IErrorType.html",[3,0.248,4,0.207,5,0.154,9,0.456,10,1.244,24,0.008,26,0.516,39,1.236,61,0.235,80,0.006,81,0.007,82,0.006,87,3.1,90,3.636,113,6.633,273,5.662,378,1.198,700,2.517,1057,5.975,1058,5.975]],["title/interfaces/IGroupProperties.html",[378,0.822,379,2.607]],["body/interfaces/IGroupProperties.html",[0,0.258,2,0.604,3,0.128,4,0.107,5,0.08,7,1.621,8,2.337,9,0.525,10,0.799,12,0.672,16,1.107,18,0.732,24,0.008,25,0.741,26,0.471,27,0.89,30,2.49,34,1.145,37,4.184,39,0.892,51,0.21,52,0.867,54,2.064,55,0.796,56,0.985,57,0.732,59,1.962,61,0.25,62,1.888,63,1.621,68,1.559,70,2.275,76,2.967,80,0.003,81,0.004,82,0.003,97,1.125,132,1.424,139,1.221,194,2.343,203,1.363,208,2.601,241,1.761,256,1.706,283,2.036,314,1.887,315,1.958,316,3.793,317,3.436,318,3.311,319,2.332,320,2.89,326,3.9,327,3.793,328,2.036,329,2.518,330,1.605,331,1.329,332,4.046,333,2.036,334,2.785,335,1.887,336,1.706,337,2.901,338,2.036,339,1.958,340,1.761,341,1.654,342,2.036,343,1.958,344,2.036,345,1.958,346,2.89,347,1.958,348,1.559,349,1.958,350,1.125,351,1.958,352,1.605,353,1.958,354,1.706,355,1.265,356,1.958,357,2.036,358,1.206,359,1.605,360,1.822,361,1.761,362,2.785,363,1.887,364,1.958,365,1.887,366,1.958,367,2.327,368,2.601,369,4.046,370,3.573,371,1.887,372,2.785,373,3.573,374,3.573,375,3.305,376,3.573,377,2.785,378,1.083,379,3.793,380,4.38,381,1.822,382,2.123,383,2.68,384,3.765,385,3.526,386,3.725,387,3.134,388,2.123,389,2.123,390,2.123,391,1.706,392,1.706,393,2.123,394,2.123,395,2.123,396,1.887,397,2.036,398,2.123,399,1.475,400,4.591,401,2.123,402,2.123,403,2.123,404,3.134,405,2.123,406,2.123,407,2.123,408,2.123,409,1.761,410,2.123,411,2.123,412,2.123,413,2.123,414,3.134,415,3.134,416,2.123,417,2.123,418,2.123,419,2.89,420,1.958,421,1.887,422,1.761,423,3.134,424,3.134,425,2.036,426,1.822,427,1.654,428,2.123,429,2.123,430,2.123,431,2.123,432,1.706,433,2.036,434,2.036,435,2.036,436,2.036,437,2.123,438,2.123,439,2.123,440,2.123,441,2.123,442,2.123,443,2.123,444,2.123,700,1.296]],["title/interfaces/ILogger.html",[378,0.822,1059,3.487]],["body/interfaces/ILogger.html",[3,0.211,4,0.177,5,0.132,9,0.388,21,0.839,23,1.278,24,0.008,25,0.885,26,0.481,27,1.013,39,1.249,61,0.2,80,0.005,81,0.006,82,0.005,89,4.837,91,1.591,103,1.847,112,3.159,378,1.02,616,4.904,700,2.143,729,5.354,1059,5.458,1060,5.088,1061,6.414,1062,4.86,1063,7.245,1064,7.245,1065,5.747,1066,5.747,1067,6.414,1068,6.425,1069,5.747,1070,6.414,1071,5.747,1072,5.747,1073,5.747,1074,6.414,1075,5.747,1076,5.088,1077,5.088]],["title/interfaces/INewsProperties.html",[66,2.826,378,0.822]],["body/interfaces/INewsProperties.html",[0,0.246,3,0.146,4,0.242,5,0.091,7,1.903,8,1.958,9,0.267,10,0.878,12,0.766,16,0.719,24,0.008,25,0.408,26,0.479,27,0.923,28,2.168,30,2.45,34,1.117,39,1.195,51,0.331,52,1.076,54,2.27,55,0.908,56,1.123,57,0.834,61,0.263,62,1.226,64,2.512,66,4.373,70,1.477,76,2.714,80,0.003,81,0.005,82,0.003,90,3.249,139,0.673,194,2.241,195,3.212,196,3.33,198,1.636,215,1.944,219,2.658,235,2.684,248,3.126,265,3.304,284,2.658,319,1.515,322,1.68,330,1.829,337,1.477,350,2.621,355,2.863,358,2.964,367,1.226,378,0.703,383,1.477,445,3.178,452,2.231,453,2.658,454,3.328,455,4.123,456,3.835,457,5.361,458,5.077,459,4.834,460,1.829,462,5.551,465,2.658,466,3.567,468,2.658,471,2.806,472,3.785,473,2.806,474,2.658,475,2.806,478,3.567,480,4.033,481,4.373,485,2.53,487,2.806,489,2.806,491,4.194,492,2.806,493,3.178,494,2.231,495,2.806,496,1.885,497,2.53,498,2.806,499,2.806,500,2.806,501,2.806,502,2.806,503,2.53,504,2.806,505,2.806,506,3.997,507,3.126,508,3.225,509,3.034,510,3.034,511,3.126,512,4.013,513,3.567,514,2.806,515,3.997,516,2.806,517,2.806,518,4.655,519,2.32,520,2.32,700,1.477]],["title/interfaces/INewsScope.html",[378,0.822,1036,3.105]],["body/interfaces/INewsScope.html",[3,0.21,4,0.175,5,0.131,9,0.385,10,1.123,20,3.214,24,0.008,26,0.491,27,0.927,28,1.728,39,0.956,51,0.234,52,0.811,57,1.202,61,0.309,80,0.005,81,0.006,82,0.005,90,2.357,120,2.077,132,1.366,194,2.014,195,3.235,196,4.008,197,4.224,202,2.715,215,2.801,248,3.432,336,2.801,337,2.128,350,1.848,355,2.077,358,3.084,378,1.554,399,3.355,427,2.715,454,3.41,456,2.892,494,3.214,700,2.128,722,2.56,1026,3.829,1027,4.043,1028,5.053,1029,5.841,1030,5.841,1031,3.829,1032,6.729,1033,4.043,1034,4.043,1035,6.386,1036,4.839,1037,5.307]],["title/interfaces/IPagination.html",[378,0.822,763,2.826]],["body/interfaces/IPagination.html",[3,0.253,4,0.211,5,0.157,9,0.464,10,1.258,24,0.008,26,0.453,27,0.988,61,0.239,80,0.006,81,0.007,82,0.006,97,2.963,378,1.221,700,2.564,760,5.658,761,5.658,763,4.935,1078,6.088]],["title/interfaces/IRoleProperties.html",[378,0.822,1079,3.487]],["body/interfaces/IRoleProperties.html",[0,0.188,3,0.202,4,0.168,5,0.125,7,1.456,8,2.439,9,0.524,10,1.094,24,0.008,25,0.893,26,0.474,27,0.913,30,2.424,34,1.195,35,4.489,39,1.194,51,0.288,52,0.999,53,3.5,55,1.255,56,1.553,57,1.154,59,2.095,61,0.27,62,1.696,63,1.456,70,2.043,76,2.263,80,0.005,81,0.006,82,0.005,194,2.155,198,3.577,319,2.095,368,3.562,378,0.973,383,2.043,391,2.689,392,2.689,573,3.209,647,4.489,700,2.043,887,3.346,964,3.881,1042,4.66,1044,3.808,1079,5.846,1080,4.128,1081,4.128,1082,4.851,1083,4.128,1084,3.676,1085,4.437,1086,4.437,1087,4.851,1088,4.851,1089,4.851,1090,4.851,1091,5.295]],["title/interfaces/IUserProperties.html",[378,0.822,1092,3.487]],["body/interfaces/IUserProperties.html",[0,0.186,3,0.2,4,0.167,5,0.124,7,1.441,8,2.423,9,0.583,10,1.087,12,1.049,24,0.008,25,0.796,26,0.484,27,0.909,30,2.558,34,0.922,35,3.465,39,1.217,51,0.316,52,0.992,53,3.465,54,2.182,55,1.243,56,1.538,57,1.142,59,2.074,61,0.243,62,1.679,70,2.023,76,2.884,80,0.005,81,0.006,82,0.005,194,2.199,319,2.074,350,2.797,367,1.679,378,0.963,503,3.465,647,4.46,700,2.023,1042,4.511,1043,3.055,1044,4.141,1091,4.087,1092,5.819,1093,4.393,1094,5.661,1095,5.39,1096,5.39,1097,4.803,1098,4.803,1099,4.803,1100,4.803,1101,4.393,1102,4.393,1103,4.393,1104,4.393,1105,4.803,1106,4.803]],["title/modules/InterceptorModule.html",[142,1.401,291,3.279]],["body/modules/InterceptorModule.html",[0,0.212,3,0.228,4,0.19,5,0.142,24,0.008,51,0.336,61,0.215,63,1.645,80,0.005,81,0.007,82,0.005,106,1.36,120,2.253,129,4.664,142,2.297,144,2.49,155,2.945,250,4.846,291,5.375,305,4.444,306,5.812,589,3.78,598,5.09,600,4.118,639,6.145,718,3.949,756,3.36,944,4.633,955,3.845,1107,6.191,1108,6.145,1109,5.375,1110,5.716,1111,4.846,1112,8.553,1113,3.845,1114,5.716,1115,6.145,1116,6.444,1117,3.954]],["title/injectables/JwtAuthGuard.html",[184,0.995,1118,3.487]],["body/injectables/JwtAuthGuard.html",[0,0.242,3,0.26,4,0.217,5,0.161,7,1.874,24,0.008,51,0.336,61,0.245,80,0.006,81,0.007,82,0.006,106,1.549,158,5.314,184,1.764,185,2.696,1118,6.18,1119,6.244,1120,6.244,1121,7.053,1122,7.053]],["title/interfaces/JwtConstants.html",[162,3.105,378,0.822]],["body/interfaces/JwtConstants.html",[3,0.226,4,0.188,5,0.14,9,0.414,10,1.174,24,0.008,26,0.478,39,1.217,51,0.251,61,0.262,63,1.63,73,6.2,79,5.684,80,0.005,81,0.007,82,0.005,132,1.429,162,5.719,182,3.009,203,2.404,341,2.918,378,1.089,448,4.606,496,2.918,700,2.287,808,3.745,1041,5.344,1049,4.62,1050,4.966,1052,4.966,1053,4.966,1054,4.966,1055,4.966,1056,4.966,1123,4.966,1124,7.749,1125,6.679,1126,6.133,1127,6.133,1128,4.966,1129,4.114,1130,4.344,1131,3.917,1132,6.133,1133,6.133,1134,6.133,1135,4.966,1136,6.133,1137,6.133,1138,6.133,1139,5.43,1140,5.43]],["title/interfaces/JwtPayload.html",[378,0.822,1048,3.279]],["body/interfaces/JwtPayload.html",[1,3.319,3,0.209,4,0.174,5,0.13,7,1.908,9,0.383,10,1.118,12,1.096,16,1.303,24,0.008,26,0.49,39,1.25,51,0.232,61,0.25,63,2.202,80,0.005,81,0.006,82,0.005,97,2.829,203,2.222,211,4.015,341,3.943,367,2.223,378,1.275,700,2.114,1038,4.279,1039,4.59,1040,4.59,1041,4.015,1042,2.872,1043,4.44,1044,2.781,1045,3.763,1046,4.015,1047,4.015,1048,5.087,1049,5.411,1050,6.712,1051,6.358,1052,6.712,1053,6.712,1054,5.816,1055,6.712,1056,6.712]],["title/injectables/JwtStrategy.html",[150,3.279,184,0.995]],["body/injectables/JwtStrategy.html",[0,0.197,3,0.212,4,0.177,5,0.132,7,1.53,9,0.389,12,1.536,18,1.212,21,0.708,23,1.079,24,0.008,25,0.748,26,0.407,27,0.809,51,0.359,61,0.2,62,1.782,63,2.11,80,0.005,81,0.006,82,0.005,87,2.095,91,1.593,103,1.238,106,1.264,112,2.51,132,1.09,139,0.979,150,5.138,158,4.337,162,3.862,163,4.662,184,1.56,185,2.201,187,2.571,204,2.403,217,2.377,220,2.046,230,3.515,251,4.085,694,3.372,824,4.337,1045,3.801,1048,5.905,1110,5.464,1141,5.097,1142,5.757,1143,5.357,1144,5.757,1145,7.253,1146,5.757,1147,5.072,1148,5.757,1149,4.662,1150,5.097,1151,5.138,1152,5.757,1153,5.757,1154,5.757,1155,5.757,1156,5.757,1157,5.757,1158,5.757,1159,5.757,1160,5.757,1161,5.757,1162,5.757,1163,3.862,1164,5.757,1165,5.757,1166,5.757]],["title/injectables/LessonRepo.html",[184,0.995,1167,3.105]],["body/injectables/LessonRepo.html",[0,0.205,3,0.22,4,0.184,5,0.137,9,0.403,16,1.347,18,1.258,21,0.725,23,1.105,24,0.008,25,0.765,26,0.416,27,0.828,51,0.346,52,0.849,55,1.369,57,1.258,61,0.208,63,1.588,80,0.005,81,0.006,82,0.005,87,2.175,91,1.631,103,1.285,106,1.313,132,1.406,139,1.016,184,1.597,185,2.285,187,2.615,194,2.151,204,2.459,217,2.468,220,2.124,239,3.029,331,2.285,367,1.85,422,3.029,634,3.029,694,3.5,769,4.948,808,3.649,809,4.234,810,3.817,812,4.181,991,3.817,1167,4.981,1168,5.292,1169,7.425,1170,5.977,1171,7.425,1172,5.977,1173,6.574,1174,3.817,1175,5.977,1176,5.977,1177,4.503,1178,6.574,1179,5.977]],["title/classes/LessonTaskInfo.html",[0,0.159,1174,2.956]],["body/classes/LessonTaskInfo.html",[0,0.198,2,1.005,3,0.213,4,0.178,5,0.132,7,1.934,8,3.094,9,0.391,10,1.132,14,2.714,15,2.782,16,1.32,17,2.853,21,0.858,24,0.008,26,0.468,28,2.203,29,2.19,30,2.601,32,1.853,33,2.303,34,1.237,39,0.767,41,2.158,42,2.269,43,3.36,44,2.753,45,2.753,46,2.269,47,2.753,48,2.672,49,2.455,50,2.753,51,0.298,52,1.034,55,1.326,56,1.64,57,1.219,59,2.213,61,0.201,63,1.538,80,0.005,81,0.006,82,0.005,194,2.027,348,2.596,361,2.933,399,3.087,422,4.034,447,3.259,449,3.882,523,3.36,756,3.141,1174,4.648,1177,5.997,1180,7.047,1181,4.687,1182,4.687]],["title/injectables/Logger.html",[184,0.995,610,2.512]],["body/injectables/Logger.html",[0,0.21,3,0.226,4,0.188,5,0.14,7,2.005,24,0.008,32,1.562,51,0.309,61,0.213,64,2.345,75,2.75,80,0.005,81,0.007,82,0.005,91,1.347,106,1.347,184,1.622,185,2.345,213,3.917,218,4.418,596,3.009,610,4.837,616,4.282,624,5.061,651,3.592,683,2.918,713,4.114,732,4.094,948,4.114,952,4.344,955,3.823,1059,6.423,1062,5.481,1183,5.43,1184,8.525,1185,6.133,1186,6.133,1187,4.344,1188,4.62,1189,5.43,1190,4.62,1191,5.43,1192,4.114,1193,3.917,1194,6.679,1195,3.592,1196,4.62,1197,6.133,1198,6.133,1199,5.43,1200,4.344,1201,5.43,1202,3.745,1203,6.133,1204,6.133,1205,6.133]],["title/modules/LoggerModule.html",[142,1.401,292,2.826]],["body/modules/LoggerModule.html",[0,0.228,3,0.244,4,0.204,5,0.152,24,0.008,51,0.324,61,0.231,80,0.006,81,0.007,82,0.006,106,1.458,142,2.396,144,2.671,145,3.655,151,4.458,152,3.604,153,3.066,155,3.766,169,4.296,292,5.603,610,5.116,1206,5.879,1207,5.879,1208,5.879,1209,6.64,1210,6.64]],["title/modules/MongoMemoryDatabaseModule.html",[142,1.401,1211,3.487]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.163,3,0.175,4,0.146,5,0.109,12,0.918,18,0.999,21,0.624,23,0.706,24,0.008,25,0.489,26,0.434,27,0.529,34,0.806,51,0.331,55,1.465,56,1.345,61,0.269,63,1.261,71,3.183,80,0.004,81,0.006,82,0.004,87,1.727,91,1.042,103,1.375,106,1.042,132,1.465,139,1.315,142,2.342,144,1.908,155,2.257,156,2.486,169,2.575,187,2.341,204,2.118,220,2.569,240,3.842,460,2.952,589,2.897,596,3.137,600,3.47,608,4.289,609,3.153,624,3.183,718,2.19,722,2.128,729,2.897,733,4.289,793,2.404,905,3.03,963,3.183,1202,2.897,1211,5.448,1212,5.448,1213,5.801,1214,5.448,1215,3.574,1216,4.744,1217,6.394,1218,7.231,1219,4.744,1220,4.942,1221,7.152,1222,8.078,1223,4.744,1224,5.66,1225,6.266,1226,6.402,1227,3.842,1228,6.402,1229,7.53,1230,3.03,1231,3.842,1232,4.2,1233,5.66,1234,5.177,1235,5.448,1236,4.2,1237,4.619,1238,3.842,1239,3.183,1240,3.361,1241,3.574,1242,3.842,1243,3.361,1244,4.2,1245,3.574,1246,5.66,1247,4.2,1248,4.2,1249,4.2,1250,3.183,1251,4.2,1252,3.183,1253,4.2,1254,4.2,1255,4.2,1256,4.744,1257,3.361,1258,4.744,1259,4.744,1260,5.177,1261,3.361,1262,3.574,1263,3.361,1264,3.574,1265,4.744,1266,4.744,1267,4.744]],["title/classes/News.html",[0,0.159,454,1.726]],["body/classes/News.html",[0,0.225,2,0.574,3,0.122,4,0.216,5,0.076,7,1.869,8,2.655,9,0.223,10,0.769,12,0.639,14,1.843,15,1.89,16,1.192,17,1.938,18,0.696,21,0.863,23,0.735,24,0.008,25,0.677,26,0.489,27,0.913,28,2.129,29,2.16,30,2.584,32,1.508,33,1.874,34,1.196,39,1.148,41,1.233,42,1.296,43,2.643,44,1.572,45,1.572,46,1.296,47,1.572,48,1.526,49,1.402,50,1.572,51,0.313,52,1,54,2.643,55,0.757,56,0.937,57,0.696,61,0.244,62,1.023,64,2.264,66,4.672,70,1.233,76,2.445,80,0.003,81,0.004,82,0.003,90,3.048,91,1.086,103,0.711,139,0.562,194,1.791,195,3.432,196,3.741,198,2.445,215,1.622,219,2.217,235,2.817,248,2.817,265,2.895,284,2.217,319,1.89,322,2.787,330,2.282,337,1.233,350,2.39,355,2.687,358,2.842,367,1.53,378,0.587,383,1.843,445,2.784,452,1.861,453,2.217,454,3.342,455,3.686,456,3.33,457,4.655,458,4.408,459,4.197,460,2.734,461,3.724,462,5.396,465,3.316,466,3.818,467,4.194,468,3.316,471,3.501,472,4.408,473,3.501,474,3.316,475,3.501,478,3.566,480,3.335,481,3.615,485,3.157,487,3.501,489,3.501,491,3.848,492,2.341,493,2.784,494,1.861,495,2.341,496,1.572,497,3.157,498,2.341,499,2.341,500,2.341,501,2.341,502,2.341,503,2.111,504,2.341,505,2.341,506,3.501,507,2.817,508,2.905,509,2.734,510,2.734,511,2.817,512,3.615,513,3.214,514,2.341,515,3.501,516,2.341,517,2.341,518,4.194,519,1.936,520,1.936,1268,4.943,1269,3.305,1270,3.305,1271,3.305,1272,3.305,1273,3.305,1274,3.305,1275,3.305,1276,3.305,1277,3.305,1278,3.305,1279,3.305,1280,3.305]],["title/controllers/NewsController.html",[576,2.018,1281,3.487]],["body/controllers/NewsController.html",[0,0.134,3,0.144,4,0.12,5,0.089,9,0.264,12,1.376,16,1.013,21,0.735,23,1.12,24,0.008,25,0.776,26,0.422,27,0.839,29,1.876,34,0.664,39,1.112,51,0.349,52,0.794,61,0.136,80,0.003,81,0.005,82,0.003,87,1.421,91,1.227,103,1.619,106,0.858,132,1.589,139,1.28,170,1.916,187,2.883,202,2.657,204,2.82,217,1.613,218,3.271,220,2.675,350,1.808,354,3.199,383,2.083,454,3.175,545,4.773,548,3.956,570,1.916,576,1.703,692,3.416,708,2.494,728,4.781,732,3.538,765,4.344,908,3.145,943,3.163,1038,4.86,1147,2.494,1281,4.208,1282,3.458,1283,3.163,1284,5.04,1285,4.912,1286,6.52,1287,3.905,1288,4.912,1289,3.905,1290,5.521,1291,3.905,1292,5.585,1293,3.905,1294,7.83,1295,3.458,1296,5.04,1297,4.773,1298,3.905,1299,3.905,1300,5.585,1301,3.905,1302,4.945,1303,5.585,1304,4.167,1305,5.585,1306,3.567,1307,4.945,1308,3.905,1309,5.04,1310,5.585,1311,3.905,1312,4.912,1313,3.458,1314,3.163,1315,5.332,1316,3.905,1317,3.905,1318,2.62,1319,3.458,1320,4.164,1321,3.458,1322,2.62,1323,3.163,1324,2.766,1325,2.766,1326,2.942,1327,3.905,1328,3.905,1329,3.163,1330,3.905,1331,3.458,1332,3.458,1333,6.664,1334,3.458,1335,3.458,1336,6.299,1337,3.163,1338,4.523,1339,3.905,1340,3.905,1341,3.905,1342,3.905,1343,3.905,1344,2.766,1345,3.163,1346,3.905,1347,6.52,1348,3.905,1349,3.905,1350,3.905,1351,5.585,1352,3.905]],["title/classes/NewsFilterQuery.html",[0,0.159,1296,3.279]],["body/classes/NewsFilterQuery.html",[0,0.243,2,0.962,3,0.204,4,0.17,5,0.127,9,0.374,10,1.101,16,1.283,21,0.761,24,0.008,26,0.437,27,0.968,29,1.943,39,1.089,51,0.336,52,0.786,61,0.192,68,3.685,80,0.005,81,0.006,82,0.005,120,3.09,132,1.048,195,3.808,197,4.566,202,3.365,215,3.826,358,2.851,368,2.805,399,3.001,454,3.239,560,5.011,561,5.011,564,5.523,565,5.728,566,4.143,570,2.716,572,5.728,573,3.241,574,3.92,575,3.535,1037,4.98,1296,5.011,1353,6.654,1354,4.482,1355,5.535,1356,5.728,1357,6.263,1358,5.535,1359,5.535,1360,5.535,1361,5.535,1362,5.728,1363,7.074,1364,5.011,1365,5.535,1366,6.19,1367,7.074,1368,5.535,1369,7.074,1370,7.274,1371,5.728,1372,5.535,1373,5.535]],["title/classes/NewsMapper.html",[0,0.159,1326,3.487]],["body/classes/NewsMapper.html",[0,0.163,2,0.824,3,0.175,4,0.146,5,0.109,9,0.32,12,0.918,21,0.756,23,1.151,24,0.008,25,0.798,26,0.434,27,0.863,34,0.806,51,0.317,52,0.674,61,0.165,80,0.004,81,0.006,82,0.004,90,2.64,91,1.404,103,1.664,132,1.465,139,1.315,195,2.867,196,3.664,197,3.744,350,1.536,355,2.327,358,1.646,454,3.013,456,3.24,460,4.155,545,5.191,548,4.243,692,3.35,728,3.904,1026,4.851,1034,5.122,1036,5.191,1037,3.03,1296,5.481,1309,5.481,1325,5.481,1326,4.817,1374,4.2,1375,6.394,1376,6.394,1377,4.529,1378,6.394,1379,6.394,1380,4.744,1381,6.394,1382,4.744,1383,6.394,1384,4.744,1385,6.394,1386,4.744,1387,3.183,1388,3.574,1389,6.394,1390,3.574,1391,3.361,1392,4.2,1393,4.744,1394,4.744,1395,4.744,1396,4.744,1397,4.744,1398,4.2,1399,4.744,1400,4.744,1401,4.744,1402,4.744,1403,4.744,1404,4.744,1405,4.744,1406,4.2,1407,4.744,1408,4.744,1409,4.744,1410,4.744,1411,4.744,1412,4.744,1413,4.744,1414,3.842,1415,4.744,1416,3.842,1417,4.744,1418,4.744,1419,4.2,1420,6.394,1421,4.744,1422,4.744,1423,4.744,1424,4.744,1425,6.394,1426,6.394,1427,6.394,1428,4.744,1429,4.744]],["title/modules/NewsModule.html",[142,1.401,1430,3.487]],["body/modules/NewsModule.html",[0,0.199,3,0.214,4,0.178,5,0.133,24,0.008,51,0.36,61,0.202,80,0.005,81,0.006,82,0.005,106,1.276,142,2.208,144,2.336,145,3.367,151,4.107,152,3.152,153,2.681,155,3.47,156,3.822,169,3.958,170,3.579,171,5.898,246,2.943,292,5.369,354,2.85,951,3.896,1261,4.114,1281,6.3,1320,5.92,1321,5.142,1430,7.012,1431,5.142,1432,5.808,1433,5.142,1434,5.142,1435,5.616,1436,5.808,1437,5.142,1438,5.808,1439,5.808,1440,5.142,1441,5.808,1442,4.114,1443,3.896,1444,6.457,1445,5.808,1446,5.808,1447,5.808,1448,3.896]],["title/injectables/NewsRepo.html",[184,0.995,1435,2.956]],["body/injectables/NewsRepo.html",[0,0.15,3,0.16,4,0.134,5,0.1,9,0.294,16,1.095,18,0.918,21,0.792,23,1.207,24,0.008,25,0.836,26,0.455,27,0.905,32,1.11,33,1.38,34,0.741,51,0.34,52,0.62,55,0.999,57,0.918,61,0.152,63,1.159,80,0.004,81,0.005,82,0.004,87,1.587,91,1.326,103,1.687,106,0.958,132,1.485,139,1.27,184,1.298,185,1.667,187,2.929,194,1.902,204,2.886,217,1.801,218,4.054,220,2.883,239,2.21,350,2.419,358,1.513,399,2.936,454,3.418,455,3.163,459,3.855,550,3.399,609,3.018,634,2.21,689,4.903,692,3.163,722,2.707,732,3.276,763,5.079,765,5.255,769,4.375,771,2.785,772,3.285,812,3.399,991,2.785,1037,4.771,1284,4.275,1285,5.215,1306,3.855,1307,5.344,1337,4.888,1338,4.888,1435,3.855,1449,3.861,1450,6.036,1451,6.036,1452,4.888,1453,4.361,1454,6.036,1455,4.361,1456,4.361,1457,5.011,1458,4.361,1459,6.036,1460,4.361,1461,6.036,1462,4.361,1463,6.036,1464,5.344,1465,6.036,1466,4.275,1467,6.036,1468,4.361,1469,4.547,1470,4.361,1471,4.361,1472,4.361,1473,4.361,1474,4.361,1475,4.361,1476,6.036,1477,4.361,1478,4.361,1479,4.361,1480,4.361,1481,4.361,1482,4.361]],["title/classes/NewsResponse.html",[0,0.159,1325,3.279]],["body/classes/NewsResponse.html",[0,0.133,2,0.672,3,0.142,4,0.253,5,0.089,9,0.261,10,0.863,12,1.555,15,2.479,16,1.458,17,2.543,21,0.862,24,0.008,26,0.506,27,0.87,28,2.363,29,2.202,39,1.185,51,0.29,52,1.306,61,0.134,68,3.177,80,0.003,81,0.005,82,0.003,90,3.097,120,3.3,132,1.228,195,2.908,197,3.798,198,3.097,202,2.639,208,2.811,215,3.182,350,2.527,354,2.722,355,2.73,358,2.458,368,3.286,454,3.416,455,3.398,456,3.286,458,4.35,459,4.142,480,2.179,481,2.362,497,4.525,554,4.492,555,3.387,556,4.492,557,4.179,560,5.018,561,5.018,564,4.594,565,4.492,566,3.249,569,5.089,570,1.898,574,2.74,575,4.142,953,4.492,1193,3.543,1325,3.929,1366,5.337,1483,2.914,1484,6.781,1485,3.869,1486,6.272,1487,3.869,1488,5.312,1489,3.869,1490,3.869,1491,3.869,1492,4.492,1493,3.869,1494,4.594,1495,4.911,1496,3.869,1497,5.742,1498,3.869,1499,5.252,1500,3.869,1501,5.547,1502,3.869,1503,3.133,1504,3.869,1505,3.869,1506,3.869,1507,3.869,1508,3.869,1509,4.179,1510,3.869,1511,5.547,1512,3.869,1513,3.869]],["title/classes/NewsScope.html",[0,0.159,1469,3.487]],["body/classes/NewsScope.html",[0,0.169,2,0.855,3,0.181,4,0.151,5,0.113,9,0.332,10,1.02,21,0.799,23,1.096,24,0.008,25,0.759,26,0.44,27,0.821,28,1.49,32,1.253,33,1.558,34,0.837,51,0.321,52,0.699,55,1.127,56,1.395,61,0.171,80,0.006,81,0.006,82,0.004,91,1.439,103,1.584,132,1.395,139,1.39,195,2.207,200,2.772,358,1.708,399,3.125,409,2.494,454,2.444,456,2.494,609,3.667,626,4.941,634,2.494,689,3.486,692,4.569,696,4.357,788,3.837,793,3.32,1037,4.185,1457,5.268,1469,6.336,1514,6.811,1515,4.357,1516,7.366,1517,6.553,1518,6.553,1519,6.553,1520,5.801,1521,8.719,1522,4.922,1523,6.553,1524,4.922,1525,6.553,1526,4.922,1527,6.553,1528,4.922,1529,4.922,1530,4.922,1531,5.306,1532,4.922,1533,6.553,1534,4.922,1535,4.922,1536,4.396,1537,4.922,1538,4.922,1539,4.922,1540,6.553,1541,4.922,1542,4.922,1543,3.144,1544,4.922,1545,4.922,1546,6.553,1547,4.922,1548,4.922,1549,4.922]],["title/interfaces/NewsTargetFilter.html",[378,0.822,1457,3.105]],["body/interfaces/NewsTargetFilter.html",[3,0.249,4,0.208,5,0.155,9,0.457,10,1.245,24,0.008,26,0.449,51,0.328,52,0.961,57,1.424,61,0.235,80,0.006,81,0.007,82,0.006,194,2.243,195,3.951,196,4.465,358,2.347,378,1.201,695,7.135,700,2.522,1457,5.369,1514,5.477,1550,5.988]],["title/injectables/NewsUc.html",[184,0.995,1320,2.956]],["body/injectables/NewsUc.html",[0,0.091,3,0.097,4,0.081,5,0.061,9,0.179,12,1.131,16,1.399,18,0.557,21,0.753,23,1.148,24,0.008,25,0.795,26,0.441,27,0.86,28,1.56,32,0.674,33,1.631,34,0.45,39,0.683,49,2.186,51,0.3,52,0.376,57,0.557,61,0.092,80,0.002,81,0.004,82,0.002,91,0.915,103,1.766,106,0.581,120,0.963,132,1.601,139,1.311,177,4.316,184,0.896,185,1.011,187,2.851,194,2.325,195,3.459,196,2.963,197,4.14,198,3.35,202,1.259,203,3.48,204,2.721,215,1.298,217,1.093,218,4.81,220,3.085,322,1.767,330,1.924,350,0.857,354,2.529,358,2.344,367,1.968,383,2.731,385,1.298,399,2.186,454,3.333,455,1.386,456,2.111,460,2.38,507,1.259,508,1.298,509,1.222,510,1.222,566,1.55,574,1.874,609,3.581,610,3.837,623,2.343,634,1.341,657,3.689,666,3.689,689,5.007,695,3.374,722,1.869,728,4.601,729,2.544,732,3.975,756,1.436,763,3.57,765,3.884,771,1.69,772,1.993,793,1.341,891,1.993,908,2.347,970,1.55,1012,3.374,1026,3.922,1034,4.142,1036,4.742,1037,4.062,1043,2.347,1113,2.111,1193,1.69,1284,2.951,1320,2.661,1337,3.374,1364,3.651,1392,2.343,1398,2.343,1406,5.177,1419,3.689,1435,4.315,1437,2.343,1457,2.795,1551,2.143,1552,4.167,1553,4.167,1554,4.167,1555,4.167,1556,5.154,1557,2.646,1558,2.646,1559,4.167,1560,2.646,1561,4.167,1562,2.646,1563,4.167,1564,2.646,1565,4.167,1566,2.646,1567,4.167,1568,2.646,1569,2.646,1570,4.167,1571,2.646,1572,2.951,1573,2.646,1574,5.154,1575,2.646,1576,4.167,1577,2.646,1578,2.646,1579,2.646,1580,3.374,1581,4.735,1582,2.646,1583,2.343,1584,2.646,1585,5.847,1586,2.646,1587,2.646,1588,4.167,1589,2.646,1590,5.177,1591,2.646,1592,2.646,1593,2.646,1594,4.167,1595,2.646,1596,2.646,1597,4.167,1598,2.646,1599,2.646,1600,1.49,1601,5.154,1602,2.646,1603,4.167,1604,2.646,1605,2.646,1606,5.847,1607,2.646,1608,2.343,1609,2.143,1610,2.646,1611,2.646,1612,2.646,1613,2.646,1614,2.343,1615,4.167,1616,2.646,1617,2.646,1618,2.646,1619,4.167,1620,2.646,1621,2.646,1622,2.646,1623,2.646,1624,2.646]],["title/classes/PaginationQuery.html",[0,0.159,1297,3.105]],["body/classes/PaginationQuery.html",[0,0.256,2,1.05,3,0.222,4,0.186,5,0.138,9,0.408,10,1.163,21,0.73,24,0.008,26,0.419,27,0.946,29,1.863,32,1.903,33,2.366,51,0.306,61,0.21,80,0.005,81,0.007,82,0.005,97,2.875,120,2.721,570,2.965,573,3.539,760,5.567,761,5.184,787,4.893,788,4.378,793,3.788,794,4.28,968,6.054,1297,5.015,1366,6.115,1464,6.618,1625,5.35,1626,6.39,1627,6.043,1628,3.788,1629,6.618,1630,7.476,1631,7.476,1632,7.476,1633,6.043,1634,6.043,1635,6.618,1636,6.043,1637,8.117,1638,6.043,1639,6.043,1640,6.043]],["title/classes/PaginationResponse.html",[0,0.159,1318,3.105]],["body/classes/PaginationResponse.html",[0,0.2,2,1.011,3,0.214,4,0.179,5,0.133,9,0.393,10,1.136,18,1.225,21,0.842,23,0.866,24,0.008,25,0.6,26,0.483,27,0.961,29,2.086,51,0.238,61,0.202,80,0.005,81,0.006,82,0.005,97,3.034,569,5.333,570,2.855,729,4.458,760,5.702,761,5.702,804,4.712,806,4.712,816,5.988,854,6.98,955,4.368,1318,4.898,1641,5.151,1642,7.302,1643,5.818,1644,5.818,1645,5.818,1646,5.818,1647,5.818,1648,5.818,1649,5.818]],["title/injectables/ParseObjectIdPipe.html",[184,0.995,1315,3.279]],["body/injectables/ParseObjectIdPipe.html",[0,0.219,3,0.235,4,0.196,5,0.146,9,0.431,21,0.623,23,0.949,24,0.008,25,0.658,26,0.358,27,0.712,33,2.447,34,1.085,39,1.173,41,2.883,51,0.34,55,1.462,57,1.344,61,0.222,80,0.006,81,0.007,82,0.006,91,1.698,103,1.373,106,1.402,132,1.209,139,1.085,184,1.662,185,2.44,194,1.625,230,3.897,239,3.234,624,4.282,956,5.186,1315,5.476,1650,6.844,1651,4.353,1652,5.169,1653,7.731,1654,6.383,1655,7.731,1656,6.383,1657,7.731,1658,6.383,1659,6.383]],["title/classes/ResolvedUser.html",[0,0.159,1045,2.426]],["body/classes/ResolvedUser.html",[0,0.185,2,0.939,3,0.199,4,0.166,5,0.124,9,0.365,10,1.084,15,2.948,16,1.478,17,3.023,18,1.138,21,0.878,23,0.804,24,0.008,25,0.718,26,0.511,27,0.603,28,2.466,29,2.218,39,1.236,51,0.221,61,0.242,70,2.017,80,0.005,81,0.006,82,0.005,198,3.364,319,2.664,322,2.956,367,2.521,569,5.477,570,2.653,1042,4.127,1045,3.652,1095,5.202,1096,5.202,1660,4.379,1661,7.211,1662,6.969,1663,5.407,1664,5.407,1665,5.407,1666,5.407,1667,5.407,1668,7.211,1669,5.407,1670,5.407]],["title/classes/ResolvedUserMapper.html",[0,0.159,1671,3.487]],["body/classes/ResolvedUserMapper.html",[0,0.206,2,1.042,3,0.221,4,0.184,5,0.137,9,0.405,12,1.682,16,1.088,21,0.586,23,0.892,24,0.008,25,0.767,26,0.336,27,0.669,32,1.527,33,1.899,34,1.02,39,1.072,51,0.305,52,0.852,61,0.208,80,0.005,81,0.006,82,0.005,91,1.634,103,1.29,132,1.136,139,1.02,198,3.493,367,1.857,460,3.735,548,3.652,1042,4.287,1044,4.151,1045,4.433,1047,4.249,1095,3.831,1096,3.831,1377,5.271,1391,4.249,1414,4.858,1416,4.858,1671,5.607,1672,5.311,1673,7.442,1674,5.999,1675,5.999,1676,5.999,1677,5.999,1678,5.311,1679,5.999,1680,5.311,1681,4.858,1682,5.999,1683,5.999]],["title/classes/Role.html",[0,0.159,1044,2.271]],["body/classes/Role.html",[0,0.166,2,0.839,3,0.178,4,0.148,5,0.11,7,1.719,8,2.964,9,0.492,10,1.007,14,2.412,15,2.473,16,1.173,17,2.536,18,1.017,21,0.848,23,0.718,24,0.008,25,0.862,26,0.487,27,0.538,28,1.958,29,2.129,30,2.529,32,1.984,33,2.467,34,1.325,35,4.132,39,1.15,41,1.801,42,1.893,43,3.135,44,2.297,45,2.297,46,1.893,47,2.297,48,2.229,49,2.048,50,2.297,51,0.265,52,0.919,53,3.084,55,1.106,56,1.368,57,1.017,59,1.846,61,0.254,62,1.494,63,1.283,70,1.801,76,1.994,80,0.004,81,0.006,82,0.004,194,1.984,198,3.356,319,2.473,322,2.048,368,3.278,378,0.857,383,1.801,391,2.369,392,2.369,573,2.827,647,4.132,887,2.948,964,3.42,1042,4.541,1044,3.824,1079,5.871,1080,3.637,1081,3.637,1082,4.274,1083,3.637,1084,3.239,1085,3.91,1086,3.91,1087,4.274,1088,4.274,1089,4.274,1090,4.274,1091,4.873,1684,6.469,1685,4.274,1686,4.828,1687,4.828,1688,4.828]],["title/injectables/RoleRepo.html",[184,0.995,1689,3.105]],["body/injectables/RoleRepo.html",[0,0.184,3,0.197,4,0.165,5,0.123,9,0.362,10,1.079,16,1.393,18,1.129,21,0.821,23,1.208,24,0.008,25,0.888,26,0.455,27,0.906,39,1.018,51,0.332,52,0.762,55,1.229,57,1.129,61,0.186,80,0.005,81,0.006,82,0.005,87,1.952,91,1.522,103,1.652,106,1.178,132,1.454,139,1.178,184,1.491,185,2.05,187,2.906,194,2.231,198,2.215,204,2.853,217,2.215,220,2.729,239,2.718,769,4.755,793,2.718,812,3.904,991,3.425,1044,4.3,1689,4.65,1690,4.748,1691,8.408,1692,6.137,1693,6.932,1694,6.932,1695,6.932,1696,6.137,1697,5.363,1698,6.932,1699,5.363,1700,6.932,1701,5.363,1702,5.363,1703,6.932,1704,6.932,1705,5.363]],["title/injectables/RoleUC.html",[184,0.995,1706,3.105]],["body/injectables/RoleUC.html",[0,0.206,3,0.222,4,0.185,5,0.138,9,0.406,18,1.268,21,0.728,23,1.11,24,0.008,25,0.769,26,0.418,27,0.832,34,1.023,39,0.798,51,0.347,52,0.856,57,1.268,61,0.209,80,0.005,81,0.007,82,0.005,87,2.191,91,1.638,103,1.295,106,1.322,132,1.14,139,1.023,184,1.604,185,2.302,187,2.624,194,2.157,198,3.595,204,2.471,211,4.265,217,2.486,220,2.139,1010,3.391,1042,3.78,1081,4.536,1689,5.951,1706,5.003,1707,5.33,1708,7.459,1709,6.021,1710,6.021,1711,7.459,1712,6.021,1713,6.021,1714,6.021,1715,6.021,1716,6.021,1717,6.021]],["title/classes/SchoolInfo.html",[0,0.159,478,2.512]],["body/classes/SchoolInfo.html",[0,0.208,2,1.056,3,0.224,4,0.187,5,0.139,7,1.993,9,0.41,10,1.167,14,2.797,16,1.361,18,1.279,21,0.83,23,0.904,24,0.008,25,0.9,26,0.498,27,0.678,29,2.028,30,2.409,39,1.126,41,2.266,42,2.382,43,3.017,46,2.382,51,0.307,52,1.066,55,1.392,56,1.722,57,1.279,59,2.323,61,0.211,62,1.881,80,0.005,81,0.007,82,0.005,235,4.153,319,2.868,322,2.577,391,2.982,392,2.982,447,3.422,448,4.58,449,5.032,450,4.304,451,4.304,478,4.071,1031,4.076,1718,7.204]],["title/classes/SchoolInfoMapper.html",[0,0.159,1388,3.487]],["body/classes/SchoolInfoMapper.html",[0,0.223,2,1.131,3,0.239,4,0.2,5,0.149,9,0.439,21,0.636,23,0.968,24,0.008,25,0.671,26,0.365,27,0.726,34,1.106,51,0.32,52,0.925,61,0.226,80,0.006,81,0.007,82,0.006,91,1.718,103,1.4,132,1.233,139,1.106,460,3.872,478,4.83,548,3.838,1377,5.541,1387,4.366,1388,5.893,1391,4.61,1494,6.162,1719,6.925,1720,5.271,1721,7.822,1722,5.763,1723,6.509,1724,5.763,1725,6.509]],["title/classes/SchoolInfoResponse.html",[0,0.159,1494,3.279]],["body/classes/SchoolInfoResponse.html",[0,0.22,2,1.115,3,0.236,4,0.197,5,0.147,9,0.433,10,1.207,16,1.608,21,0.758,24,0.008,25,0.914,26,0.435,29,1.934,39,1.147,51,0.263,52,1.231,61,0.223,80,0.006,81,0.007,82,0.006,120,3.034,350,2.804,560,5.495,561,5.495,569,4.882,570,3.15,575,4.1,1484,5.199,1494,5.495,1503,5.199,1726,7.381,1727,5.199,1728,5.684,1729,5.684]],["title/classes/SchoolNews.html",[0,0.159,519,2.711]],["body/classes/SchoolNews.html",[0,0.224,2,0.568,3,0.12,4,0.215,5,0.075,7,1.86,8,2.551,9,0.221,10,0.763,12,0.632,14,1.828,15,1.874,16,1.067,17,1.922,21,0.856,23,0.486,24,0.008,25,0.606,26,0.485,27,0.894,28,2.119,29,2.156,30,2.579,32,1.498,33,1.862,34,1.19,39,1.146,41,1.219,42,1.282,43,3.527,44,1.555,45,1.555,46,1.282,47,1.555,48,1.509,49,1.387,50,1.555,51,0.312,52,0.995,54,2.366,55,0.749,56,0.927,57,0.688,61,0.243,62,1.012,64,2.249,66,4.275,70,1.219,76,2.429,80,0.003,81,0.004,82,0.003,90,3.036,91,1.077,103,0.703,139,0.556,194,1.783,195,3.419,196,3.725,198,2.429,215,1.604,219,2.193,235,2.332,248,2.798,265,2.871,284,2.193,319,1.25,322,2.495,330,2.263,337,1.219,350,2.38,355,2.676,358,2.834,367,1.517,378,0.58,383,1.828,445,2.761,452,1.841,453,2.193,454,3.452,455,3.669,456,3.312,457,4.629,458,4.384,459,4.174,460,2.716,461,3.693,462,5.38,464,2.647,465,3.289,466,3.8,467,4.167,468,3.289,469,2.647,470,2.647,471,3.473,472,4.384,473,3.473,474,3.289,475,3.473,476,2.647,477,2.647,478,3.8,479,2.647,480,3.313,481,3.592,482,2.647,483,2.647,484,2.647,485,3.131,486,2.647,487,3.473,488,2.647,489,3.473,490,2.647,491,3.827,492,2.315,493,2.761,494,1.841,495,2.315,496,1.555,497,2.088,498,2.315,499,2.315,500,2.315,501,2.315,502,2.315,503,2.088,504,2.315,505,2.315,506,3.473,507,2.798,508,2.886,509,2.716,510,2.716,511,2.798,512,3.592,513,3.193,514,2.315,515,3.473,516,2.315,517,2.315,518,4.167,519,2.871,520,1.914,1730,3.269]],["title/controllers/ServerController.html",[576,2.018,1731,3.487]],["body/controllers/ServerController.html",[0,0.229,3,0.246,4,0.205,5,0.153,9,0.451,21,0.652,24,0.008,29,1.665,32,2.023,39,1.053,51,0.273,61,0.232,80,0.006,81,0.007,82,0.006,91,1.745,103,1.437,106,1.467,110,3.178,139,1.136,170,3.278,576,3.464,580,7.769,582,5.628,583,4.163,584,5.628,585,4.312,595,5.033,596,3.278,1731,5.986,1732,5.915,1733,6.681]],["title/modules/ServerModule.html",[142,1.401,1734,3.279]],["body/modules/ServerModule.html",[0,0.172,1,3.88,3,0.184,4,0.154,5,0.115,12,1.437,24,0.008,26,0.28,34,0.851,39,0.663,51,0.371,55,1.518,56,1.418,61,0.174,63,1.33,65,2.716,69,2.716,71,3.357,80,0.004,81,0.006,82,0.004,106,1.099,132,1.406,139,0.851,142,2.005,143,5.985,144,2.013,145,3.059,149,5.668,151,3.731,152,2.716,153,2.31,156,3.472,170,3.251,287,5.985,331,1.913,384,3.472,445,3.731,452,3.731,454,2.471,466,3.596,478,3.596,493,3.731,507,2.381,508,2.456,509,2.31,510,2.31,511,2.381,519,3.88,520,3.88,523,2.665,530,4.045,674,4.43,751,4.444,838,5.865,839,5.865,840,5.865,919,4.052,920,4.052,921,4.052,1044,3.251,1174,4.231,1220,4.231,1225,4.052,1227,4.052,1235,3.77,1237,4.231,1731,5.595,1734,6.428,1735,4.43,1736,4.43,1737,5.985,1738,4.052,1739,6.625,1740,6.625,1741,5.004,1742,5.004,1743,3.357,1744,5.004,1745,5.004,1746,5.004,1747,5.004,1748,3.88,1749,5.004,1750,5.004,1751,5.365,1752,5.365,1753,5.365,1754,4.43,1755,3.357,1756,5.004,1757,5.004,1758,6.625,1759,5.004,1760,4.052,1761,3.545]],["title/classes/Submission.html",[0,0.159,1748,2.711]],["body/classes/Submission.html",[0,0.16,2,0.81,3,0.172,4,0.143,5,0.145,7,1.679,8,2.938,9,0.315,10,0.983,12,0.902,14,2.357,15,2.416,16,1.146,17,2.478,18,0.982,19,4.476,20,4.523,21,0.876,23,0.694,24,0.008,25,0.481,26,0.503,27,0.52,28,1.913,29,2.22,30,2.55,32,1.956,33,2.432,34,1.407,35,4.908,36,5.118,39,1.064,41,1.739,42,1.828,43,3.091,44,2.219,45,2.219,46,1.828,47,2.219,48,2.153,49,1.978,50,2.219,51,0.329,52,0.898,53,4.578,54,1.876,55,1.068,56,1.322,57,0.982,59,1.783,61,0.162,62,1.443,70,1.739,76,3.173,80,0.004,81,0.006,82,0.004,97,2.046,381,2.444,462,4.809,467,4.476,491,3.701,523,3.465,530,4.377,751,5.387,777,5.118,791,5.805,792,5.4,796,5.805,797,5.118,799,5.118,802,6.503,1748,3.701,1762,4.129,1763,5.443,1764,7.168,1765,4.664,1766,4.664,1767,4.664,1768,4.664,1769,4.664,1770,4.664,1771,4.664,1772,4.664,1773,4.664,1774,3.303,1775,5.595]],["title/injectables/SubmissionRepo.html",[184,0.995,1776,3.105]],["body/injectables/SubmissionRepo.html",[0,0.208,3,0.223,4,0.186,5,0.139,9,0.409,18,1.275,21,0.731,23,1.113,24,0.008,25,0.772,26,0.419,27,0.835,51,0.347,52,0.86,55,1.387,57,1.275,61,0.21,63,1.609,80,0.005,81,0.007,82,0.005,87,2.203,91,1.644,103,1.302,106,1.33,132,1.146,139,1.029,184,1.609,185,2.314,187,2.63,204,2.479,217,2.5,220,2.151,239,3.068,331,2.314,367,1.874,523,3.508,634,3.068,769,4.97,771,3.867,808,3.696,809,4.288,810,3.867,812,4.215,991,3.867,1338,6.061,1748,3.545,1774,5.301,1776,5.021,1777,5.36,1778,7.484,1779,6.054,1780,7.484,1781,6.054,1782,4.78,1783,6.054]],["title/classes/Task.html",[0,0.159,523,1.862]],["body/classes/Task.html",[0,0.159,2,0.808,3,0.171,4,0.143,5,0.106,7,1.676,8,2.936,9,0.483,10,1.114,14,2.352,15,2.411,16,1.144,17,2.473,18,0.979,21,0.869,23,0.692,24,0.008,25,0.853,26,0.494,27,0.973,28,2.428,29,2.199,30,2.689,32,1.606,33,1.996,34,1.072,39,1.017,41,1.734,42,1.823,43,3.087,44,2.212,45,2.212,46,1.823,47,2.212,48,2.147,49,1.973,50,2.212,51,0.293,52,0.896,55,1.065,56,1.318,57,0.979,59,1.778,61,0.162,62,1.439,70,1.734,80,0.004,81,0.005,82,0.004,194,2.154,319,2.411,322,1.973,367,2.483,385,4.282,391,2.282,392,2.282,396,2.524,397,2.723,399,3.036,422,4.065,491,2.723,496,2.212,523,2.879,609,3.346,779,5.782,782,5.796,783,4.752,1174,4.902,1784,3.766,1785,6.795,1786,6.308,1787,4.651,1788,4.651,1789,4.651,1790,4.651,1791,4.651,1792,4.651,1793,3.766,1794,4.651,1795,4.651,1796,4.651,1797,4.651,1798,4.651,1799,4.651,1800,4.651,1801,4.651,1802,4.651]],["title/controllers/TaskController.html",[576,2.018,1803,3.487]],["body/controllers/TaskController.html",[0,0.192,3,0.206,4,0.172,5,0.128,9,0.377,21,0.546,23,0.832,24,0.008,25,0.576,26,0.313,27,0.794,29,1.394,34,0.95,51,0.367,61,0.194,63,1.486,80,0.007,81,0.006,82,0.005,87,2.035,91,1.564,103,1.202,106,1.228,132,1.483,139,0.95,170,2.743,187,2.536,204,2.358,217,2.309,220,1.987,523,2.249,548,2.743,570,2.743,576,2.438,692,4.322,760,4.547,761,4.547,776,3.274,816,4.776,970,3.274,1038,4.476,1147,3.571,1283,4.528,1285,5.902,1290,5.036,1295,4.95,1297,6.066,1304,3.274,1314,4.528,1318,3.751,1319,4.95,1322,3.751,1323,4.528,1324,3.96,1329,4.528,1344,3.96,1651,3.149,1782,3.571,1803,5.364,1804,4.95,1805,7.12,1806,5.591,1807,5.591,1808,5.255,1809,5.591,1810,3.571,1811,4.212,1812,5.591,1813,4.95,1814,4.528,1815,3.571,1816,7.12,1817,5.591,1818,5.591,1819,5.591,1820,5.591]],["title/classes/TaskHelper.html",[0,0.159,1821,3.487]],["body/classes/TaskHelper.html",[0,0.171,2,0.865,3,0.183,4,0.153,5,0.114,9,0.336,10,1.028,12,0.964,21,0.724,23,0.741,24,0.008,25,0.514,26,0.279,27,0.556,28,2.243,32,1.268,33,1.577,34,1.26,51,0.323,52,0.708,61,0.173,63,1.324,80,0.004,81,0.006,82,0.004,91,1.451,97,1.613,103,1.42,132,1.63,139,1.435,375,2.444,420,2.805,432,4.225,460,4.085,523,3.303,650,2.172,788,3.868,793,2.524,794,3.528,887,3.042,997,3.753,1084,3.342,1113,3.347,1387,3.342,1748,5.12,1774,5.249,1782,4.219,1810,4.733,1821,4.976,1822,4.41,1823,7.41,1824,7.891,1825,7.41,1826,4.982,1827,4.982,1828,4.982,1829,4.982,1830,5.349,1831,3.753,1832,4.982,1833,6.605,1834,7.27,1835,4.982,1836,4.982,1837,4.41,1838,4.982,1839,4.982,1840,4.982,1841,4.982,1842,4.982,1843,4.982,1844,4.982,1845,4.982,1846,4.982,1847,4.982,1848,4.982,1849,4.41,1850,4.982,1851,4.41,1852,4.982,1853,6.605,1854,4.982,1855,4.034,1856,4.41,1857,4.982,1858,5.848,1859,4.982,1860,4.982,1861,4.982,1862,4.982,1863,4.982]],["title/classes/TaskMapper.html",[0,0.159,1831,3.487]],["body/classes/TaskMapper.html",[0,0.207,2,1.048,3,0.222,4,0.185,5,0.138,9,0.407,21,0.589,23,0.897,24,0.008,25,0.77,26,0.338,27,0.673,34,1.025,51,0.306,52,0.857,61,0.21,63,1.984,80,0.005,81,0.007,82,0.005,91,1.64,103,1.297,132,1.414,139,1.025,460,3.745,523,3.504,524,4.884,527,5.626,534,4.884,548,3.664,729,3.683,1377,5.289,1387,4.046,1391,4.272,1414,4.884,1416,4.884,1724,5.34,1810,5.413,1830,6.864,1831,5.626,1864,4.884,1865,7.467,1866,5.686,1867,6.032,1868,6.032,1869,6.032,1870,6.032,1871,6.032,1872,6.032,1873,6.032,1874,4.769,1875,6.032,1876,6.032,1877,6.032,1878,6.032]],["title/modules/TaskModule.html",[142,1.401,1737,3.279]],["body/modules/TaskModule.html",[0,0.209,3,0.224,4,0.187,5,0.139,12,1.178,24,0.008,51,0.358,61,0.212,80,0.005,81,0.007,82,0.005,106,1.337,142,2.273,144,2.449,145,3.467,151,4.229,152,3.304,153,2.81,155,3.573,156,3.935,170,3.685,576,2.654,811,5.681,1010,3.428,1143,5.431,1167,5.967,1737,6.651,1776,5.967,1803,6.136,1808,5.967,1879,5.389,1880,5.389,1881,5.389,1882,6.088,1883,3.888]],["title/injectables/TaskRepo.html",[184,0.995,811,2.956]],["body/injectables/TaskRepo.html",[0,0.183,3,0.135,4,0.113,5,0.158,9,0.248,12,1.338,15,2.043,17,2.095,18,0.774,21,0.522,23,0.795,24,0.008,25,0.649,26,0.52,27,0.596,28,2.455,32,2.015,34,0.908,39,0.916,51,0.314,52,0.522,55,1.224,56,1.041,57,0.774,61,0.186,63,0.976,80,0.003,81,0.005,82,0.003,87,1.337,91,1.174,97,2.239,103,0.79,106,0.807,120,1.337,132,1.31,139,0.625,184,1.149,185,1.405,187,2.039,194,1.953,204,1.77,217,1.517,220,1.305,239,1.862,331,1.405,337,1.993,367,2.51,377,1.994,385,3.763,396,1.994,399,2.672,422,2.708,496,3.933,523,2.534,609,2.33,627,5.601,634,1.862,757,5.744,758,2.975,759,5.951,760,4.023,761,4.023,762,3.253,763,3.263,769,4.051,770,3.253,771,2.347,772,2.768,773,3.253,774,3.786,775,7.69,776,4.749,777,4.328,778,7.534,779,5.211,780,3.253,781,3.253,782,2.975,783,5.537,784,3.253,785,3.253,786,3.253,787,4.328,788,2.152,789,3.253,790,3.253,791,2.975,792,2.768,793,1.862,794,2.603,795,2.768,796,2.975,797,2.975,798,2.768,799,2.975,800,3.253,801,6.124,802,2.975,803,3.253,804,2.975,805,3.253,806,2.975,807,3.253,808,2.243,809,2.603,810,2.347,811,3.413,812,3.01,813,5.577,814,6.124,815,4.732,816,3.585,817,3.253,818,3.253,819,2.975,820,2.603,821,2.603,822,3.253,823,3.253,824,2.768,825,2.975,826,3.253,827,3.253,828,3.253,829,3.253,991,2.347,1884,3.674,1885,3.674,1886,3.674]],["title/classes/TaskResponse.html",[0,0.159,1810,2.956]],["body/classes/TaskResponse.html",[0,0.188,2,0.95,3,0.201,4,0.168,5,0.125,9,0.369,10,1.093,15,2.964,16,1.407,17,3.04,21,0.871,24,0.008,25,0.799,26,0.505,27,0.994,28,2.621,29,2.223,39,1.181,51,0.224,61,0.19,80,0.005,81,0.006,82,0.005,97,2.51,110,3.34,120,1.991,385,3.445,448,3.34,523,2.824,548,3.445,550,3.954,569,5.483,570,2.684,779,5.842,1810,4.484,1834,4.843,1849,4.843,1851,4.843,1866,5.201,1887,4.843,1888,6.216,1889,4.287,1890,7.754,1891,7.754,1892,5.47,1893,5.47,1894,5.47,1895,5.47,1896,5.47,1897,5.47,1898,5.47,1899,5.47]],["title/injectables/TaskUC.html",[184,0.995,1808,3.105]],["body/injectables/TaskUC.html",[0,0.152,3,0.163,4,0.136,5,0.101,9,0.299,12,1.349,15,1.692,16,0.803,18,1.284,21,0.595,23,0.907,24,0.008,25,0.719,26,0.342,27,0.68,28,1.34,34,0.752,51,0.334,57,0.932,61,0.154,63,2.095,80,0.004,81,0.005,82,0.004,87,2.736,91,1.339,103,0.952,106,0.972,132,1.671,139,0.752,184,1.311,185,1.692,187,2.258,194,1.552,203,2.39,204,2.02,220,2.671,326,2.402,329,2.171,331,2.331,332,2.492,337,2.601,345,2.492,348,1.985,367,2.159,371,2.402,375,2.171,381,4.132,383,2.274,432,2.992,509,2.043,523,1.78,524,3.584,540,3.334,609,3.277,626,4.09,634,2.242,722,2.734,724,2.702,757,4.941,759,4.938,763,4.59,765,4.259,771,4.455,811,5.205,819,3.584,820,3.135,825,3.584,870,3.135,1010,3.434,1018,3.918,1025,3.918,1045,3.939,1113,3.09,1143,5.099,1167,5.602,1173,5.398,1178,5.398,1182,3.584,1304,3.571,1344,3.135,1362,3.584,1387,2.969,1748,2.592,1763,5.325,1774,4.941,1776,5.602,1782,2.826,1793,3.584,1808,4.09,1810,2.826,1814,5.649,1821,4.593,1837,3.918,1856,3.918,1858,5.398,1866,2.969,1874,2.826,1883,2.826,1900,3.918,1901,6.097,1902,4.425,1903,4.425,1904,6.097,1905,4.425,1906,2.969,1907,2.969,1908,4.425,1909,3.918,1910,4.425,1911,4.425,1912,4.425,1913,4.425,1914,4.425,1915,4.425,1916,4.425,1917,2.969,1918,4.425,1919,3.135,1920,4.425,1921,4.425,1922,4.425,1923,2.702,1924,2.969,1925,4.425,1926,5.255,1927,4.425,1928,3.584,1929,4.425,1930,4.425,1931,4.425,1932,3.334,1933,3.584]],["title/classes/TeamInfo.html",[0,0.159,493,2.607]],["body/classes/TeamInfo.html",[0,0.208,2,1.056,3,0.224,4,0.187,5,0.139,7,1.993,9,0.41,10,1.167,14,2.797,16,1.361,18,1.279,21,0.83,23,0.904,24,0.008,25,0.9,26,0.498,27,0.678,29,2.028,30,2.409,39,1.126,41,2.266,42,2.382,43,3.017,46,2.382,51,0.307,52,1.066,55,1.392,56,1.722,57,1.279,59,2.323,61,0.211,62,1.881,80,0.005,81,0.007,82,0.005,235,4.153,319,2.868,322,2.577,336,2.982,391,2.982,392,2.982,447,3.422,448,4.58,449,5.032,450,4.304,451,4.304,493,4.224,1934,7.204]],["title/classes/TeamNews.html",[0,0.159,520,2.711]],["body/classes/TeamNews.html",[0,0.224,2,0.568,3,0.12,4,0.215,5,0.075,7,1.86,8,2.551,9,0.221,10,0.763,12,0.632,14,1.828,15,1.874,16,1.067,17,1.922,21,0.856,23,0.486,24,0.008,25,0.606,26,0.485,27,0.894,28,2.119,29,2.156,30,2.579,32,1.498,33,1.862,34,1.19,39,1.146,41,1.219,42,1.282,43,3.527,44,1.555,45,1.555,46,1.282,47,1.555,48,1.509,49,1.387,50,1.555,51,0.312,52,0.995,54,2.366,55,0.749,56,0.927,57,0.688,61,0.243,62,1.012,64,2.249,66,4.275,70,1.219,76,2.429,80,0.003,81,0.004,82,0.003,90,3.036,91,1.077,103,0.703,139,0.556,194,1.783,195,3.419,196,3.725,198,2.429,215,1.604,219,2.193,235,2.332,248,2.798,265,2.871,284,2.193,319,1.25,322,2.495,330,2.263,337,1.219,350,2.38,355,2.676,358,2.834,367,1.517,378,0.58,383,1.828,445,2.761,452,1.841,453,2.193,454,3.452,455,3.669,456,3.312,457,4.629,458,4.384,459,4.174,460,2.716,461,3.693,462,5.38,464,2.647,465,3.289,466,3.8,467,4.167,468,3.289,469,2.647,470,2.647,471,3.473,472,4.384,473,3.473,474,3.289,475,3.473,476,2.647,477,2.647,478,3.547,479,2.647,480,3.313,481,3.592,482,2.647,483,2.647,484,2.647,485,3.131,486,2.647,487,3.473,488,2.647,489,3.473,490,2.647,491,3.827,492,2.315,493,3.313,494,1.841,495,2.315,496,1.555,497,2.088,498,2.315,499,2.315,500,2.315,501,2.315,502,2.315,503,2.088,504,2.315,505,2.315,506,3.473,507,2.798,508,2.886,509,2.716,510,2.716,511,2.798,512,3.592,513,3.193,514,2.315,515,3.473,516,2.315,517,2.315,518,4.167,519,1.914,520,2.871,1935,3.269]],["title/injectables/TimeoutInterceptor.html",[184,0.995,1116,3.487]],["body/injectables/TimeoutInterceptor.html",[0,0.177,3,0.19,4,0.158,5,0.118,9,0.348,10,1.051,21,0.811,23,1.005,24,0.008,25,0.696,26,0.422,27,0.892,32,1.312,33,1.631,51,0.327,61,0.179,80,0.004,81,0.006,82,0.004,91,1.483,97,2.758,103,1.452,106,1.132,120,1.875,139,1.359,163,4.173,184,1.452,185,1.97,409,2.611,460,3.479,507,2.451,508,2.529,509,3.692,510,2.379,511,2.451,512,3.146,537,5.089,576,2.945,586,5.089,591,5.47,598,4.531,609,3.285,611,5.98,612,5.98,613,6.025,614,7.08,616,2.7,617,6.671,620,4.173,622,4.562,624,3.457,710,3.666,711,3.423,737,4.173,868,4.173,1113,2.611,1114,6.418,1116,5.089,1263,4.784,1520,5.98,1936,4.562,1937,6.754,1938,4.784,1939,4.784,1940,4.531,1941,7.535,1942,7.535,1943,7.535,1944,5.153,1945,5.153,1946,5.677,1947,5.153,1948,5.153,1949,5.153,1950,5.153,1951,5.153,1952,6.754,1953,6.754,1954,5.153,1955,6.754,1956,5.153,1957,5.153,1958,5.153,1959,5.153,1960,5.153,1961,5.153,1962,5.153,1963,6.754,1964,5.153,1965,5.153]],["title/classes/UpdateNewsParams.html",[0,0.159,1309,3.279]],["body/classes/UpdateNewsParams.html",[0,0.284,2,0.986,3,0.209,4,0.174,5,0.13,9,0.383,10,1.291,21,0.77,24,0.008,26,0.442,27,0.802,28,2.176,29,1.967,39,1.099,51,0.294,52,1.242,61,0.197,80,0.005,81,0.006,82,0.005,90,3.534,120,3.019,355,3.114,454,3.35,456,3.998,547,4.278,548,3.528,550,4.049,552,5.027,554,5.822,555,4.39,556,5.822,557,5.417,570,2.786,571,6.365,572,6.389,573,3.325,948,4.823,1033,5.093,1129,4.823,1309,5.093,1366,6.249,1370,7.343,1966,7.343,1967,7.19,1968,7.19,1969,5.417,1970,6.365,1971,7.19,1972,5.678,1973,5.678,1974,5.678]],["title/classes/User.html",[0,0.159,12,0.895]],["body/classes/User.html",[0,0.162,2,0.821,3,0.174,4,0.145,5,0.108,7,1.694,8,2.948,9,0.561,10,0.992,12,1.233,14,2.377,15,2.437,16,1.156,17,2.499,18,0.995,21,0.864,23,0.703,24,0.008,25,0.796,26,0.491,27,0.899,28,1.93,29,2.182,30,2.592,32,1.837,33,2.284,34,1.227,35,3.017,39,1.172,41,1.762,42,1.852,43,3.107,44,2.247,45,2.247,46,1.852,47,2.247,48,2.181,49,2.004,50,2.247,51,0.295,52,0.906,53,3.017,54,1.9,55,1.082,56,1.339,57,0.995,59,1.806,61,0.222,62,1.462,70,1.762,76,2.632,80,0.004,81,0.006,82,0.004,194,2.116,319,2.437,322,2.004,350,2.611,367,1.973,378,0.839,503,3.017,647,4.072,1042,4.305,1043,2.66,1044,3.54,1091,3.559,1092,5.82,1093,3.825,1094,5.182,1095,4.934,1096,4.934,1097,4.182,1098,4.182,1099,4.182,1100,4.182,1101,3.825,1102,3.825,1103,3.825,1104,3.825,1105,4.182,1106,4.182,1685,4.182,1975,6.375,1976,4.724,1977,4.724,1978,4.724,1979,4.724,1980,6.375,1981,4.724,1982,4.724,1983,4.724]],["title/controllers/UserController.html",[576,2.018,1984,3.487]],["body/controllers/UserController.html",[0,0.214,3,0.23,4,0.192,5,0.143,9,0.421,12,1.207,21,0.609,23,0.928,24,0.008,25,0.643,26,0.35,27,0.696,29,1.555,51,0.366,61,0.217,80,0.005,81,0.007,82,0.005,87,2.27,91,1.674,103,1.341,106,1.37,139,1.06,170,3.061,187,2.665,204,2.525,217,2.576,570,3.061,576,2.72,1038,4.654,1045,3.269,1047,4.418,1147,3.984,1283,5.051,1290,5.027,1314,5.051,1322,4.184,1323,5.051,1324,4.418,1329,5.051,1883,3.984,1984,5.743,1985,5.522,1986,6.238,1987,7.623,1988,6.238,1989,5.258,1990,6.238,1991,6.238,1992,6.238,1993,6.238]],["title/injectables/UserFacade.html",[184,0.995,1143,2.826]],["body/injectables/UserFacade.html",[0,0.196,3,0.21,4,0.175,5,0.131,9,0.385,18,1.202,21,0.772,23,1.177,24,0.008,25,0.815,26,0.443,27,0.882,51,0.358,52,0.811,57,1.202,61,0.198,80,0.005,81,0.006,82,0.005,87,2.625,91,1.584,103,1.551,106,1.253,132,1.366,139,1.226,184,1.551,185,2.182,187,2.834,194,2.116,203,2.238,204,2.753,217,2.357,220,2.563,432,3.881,609,2.488,989,5.841,993,5.841,1005,5.963,1038,4.51,1045,4.144,1143,4.404,1147,3.645,1290,3.485,1324,4.043,1989,5.591,1994,5.053,1995,7.214,1996,5.707,1997,5.707,1998,5.707,1999,7.214,2000,5.707,2001,5.707,2002,5.707,2003,5.707,2004,5.707]],["title/classes/UserInfo.html",[0,0.159,466,2.512]],["body/classes/UserInfo.html",[0,0.201,2,1.02,3,0.216,4,0.18,5,0.134,7,1.951,9,0.396,10,1.143,14,2.738,16,1.332,18,1.236,21,0.844,23,0.873,24,0.008,25,0.605,26,0.501,27,0.655,29,2.093,30,2.559,39,1.185,41,2.189,42,2.301,43,2.953,46,2.301,51,0.301,52,1.043,55,1.345,56,1.664,57,1.236,59,2.244,61,0.204,62,1.817,80,0.005,81,0.006,82,0.005,235,4.111,319,2.807,322,2.49,447,3.306,448,4.483,449,3.938,450,4.158,451,4.158,466,3.985,1043,3.306,1095,5.362,1096,5.362,1101,4.754,1102,4.754,1103,4.754,1104,4.754,1181,5.946,2005,7.432]],["title/classes/UserInfoMapper.html",[0,0.159,1390,3.487]],["body/classes/UserInfoMapper.html",[0,0.222,2,1.124,3,0.238,4,0.199,5,0.148,9,0.437,21,0.632,23,0.963,24,0.008,25,0.667,26,0.363,27,0.722,34,1.1,51,0.319,52,0.92,61,0.225,80,0.006,81,0.007,82,0.006,91,1.712,103,1.391,132,1.225,139,1.1,460,3.862,466,4.822,548,3.825,1377,5.521,1387,4.341,1390,5.872,1391,4.583,1488,6.15,1720,5.24,1722,5.729,2006,6.901,2007,7.795,2008,6.471,2009,6.471,2010,6.471,2011,6.471,2012,6.471]],["title/classes/UserInfoResponse.html",[0,0.159,1488,3.279]],["body/classes/UserInfoResponse.html",[0,0.211,2,1.069,3,0.226,4,0.189,5,0.141,9,0.416,10,1.177,12,1.725,16,1.589,21,0.799,24,0.008,25,0.88,26,0.459,29,2.04,39,1.182,51,0.252,52,1.075,61,0.214,80,0.005,81,0.007,82,0.005,120,3.107,560,5.356,561,5.356,569,4.999,570,3.021,575,3.932,1095,5.227,1096,5.227,1484,6.123,1488,5.356,1503,4.985,1727,4.985,1728,5.45,1729,5.45,2013,7.557,2014,5.072,2015,6.695,2016,6.156]],["title/modules/UserModule.html",[142,1.401,149,3.105]],["body/modules/UserModule.html",[0,0.199,3,0.214,4,0.178,5,0.133,24,0.008,51,0.353,61,0.202,80,0.005,81,0.006,82,0.005,106,1.276,142,2.208,144,2.336,145,3.367,149,6.344,151,4.107,152,3.152,153,2.681,155,3.47,169,3.958,170,3.579,576,2.532,987,5.898,1005,5.898,1010,3.271,1143,5.659,1689,5.898,1706,5.898,1883,3.71,1984,6.007,1989,5.616,2017,5.142,2018,5.142,2019,5.142,2020,5.616,2021,5.808,2022,5.808]],["title/injectables/UserRepo.html",[184,0.995,2020,2.956]],["body/injectables/UserRepo.html",[0,0.213,3,0.229,4,0.191,5,0.142,9,0.419,12,1.59,16,1.38,18,1.308,21,0.743,23,1.131,24,0.008,25,0.784,26,0.426,27,0.848,51,0.351,52,0.883,55,1.423,57,1.308,61,0.216,80,0.005,81,0.007,82,0.005,87,2.262,91,1.67,103,1.336,106,1.365,132,1.177,139,1.056,184,1.635,185,2.376,187,2.661,194,2.181,204,2.519,217,2.566,220,2.208,239,3.149,769,5.015,812,4.283,991,3.969,1692,6.733,1696,6.733,2020,4.857,2023,5.501,2024,6.214,2025,6.214,2026,6.214]],["title/classes/UserTaskInfo.html",[0,0.159,530,2.826]],["body/classes/UserTaskInfo.html",[0,0.204,2,1.033,3,0.219,4,0.183,5,0.136,7,1.966,9,0.401,10,1.152,14,2.76,16,1.342,18,1.252,19,5.242,20,4.885,21,0.847,23,0.884,24,0.008,25,0.613,26,0.486,27,0.663,29,2.102,30,2.568,39,1.149,41,2.217,42,2.331,43,2.977,46,2.331,51,0.303,52,1.052,55,1.362,56,1.685,57,1.252,59,2.273,61,0.207,62,1.84,70,2.217,80,0.005,81,0.006,82,0.005,235,4.127,447,3.348,449,3.988,450,4.211,451,4.211,523,3.392,530,4.518,1043,3.348,1095,5.146,1096,5.146,1181,5.993,2027,7.465]],["title/injectables/UserUC.html",[184,0.995,1989,2.956]],["body/injectables/UserUC.html",[0,0.204,3,0.218,4,0.182,5,0.136,9,0.401,12,1.148,18,1.249,21,0.722,23,1.1,24,0.008,25,0.762,26,0.414,27,0.824,51,0.362,61,0.206,80,0.005,81,0.006,82,0.005,87,2.69,91,1.623,103,1.276,106,1.303,132,1.4,139,1.009,184,1.59,185,2.268,187,2.607,204,2.448,217,2.45,220,2.108,609,2.587,1010,3.342,1012,4.805,1038,4.574,1045,4.219,1047,4.203,1147,3.79,1290,3.623,1324,4.203,1671,4.47,1706,6.014,1989,4.721,2020,5.646,2028,5.253,2029,7.392,2030,5.934,2031,5.934,2032,7.392,2033,5.934,2034,4.805,2035,5.934,2036,5.253,2037,5.934,2038,5.934,2039,5.253,2040,5.934,2041,5.934]],["title/classes/ValidationErrorDetailResponse.html",[0,0.159,127,3.487]],["body/classes/ValidationErrorDetailResponse.html",[0,0.235,2,1.19,3,0.252,4,0.21,5,0.157,18,1.442,21,0.669,23,1.019,24,0.008,25,0.706,26,0.384,27,0.764,39,1.211,61,0.238,80,0.006,81,0.007,82,0.006,87,2.492,108,6.062,112,3.515,124,4.49,127,6.074,2042,7.137,2043,6.062,2044,6.848,2045,6.848,2046,6.528]],["title/modules/ValidationModule.html",[142,1.401,293,3.279]],["body/modules/ValidationModule.html",[0,0.235,3,0.252,4,0.211,5,0.157,24,0.008,51,0.351,61,0.238,80,0.006,81,0.007,82,0.006,106,1.507,142,2.443,144,2.76,155,3.264,293,5.717,307,7.146,589,4.19,600,3.724,639,5.557,940,6.081,2047,6.862,2048,6.862,2049,6.862]],["title/changelog.html",[2050,2.923,2051,2.748,2052,3.435]],["body/changelog.html",[0,0.08,1,2.21,2,0.747,3,0.026,4,0.022,5,0.109,9,0.048,12,1.399,13,1.074,16,0.424,20,0.401,21,0.228,24,0.002,25,0.192,27,0.208,28,0.834,32,0.595,33,0.42,34,0.996,51,0.076,54,0.94,60,2.069,64,1.814,65,0.386,68,0.595,69,1.268,71,0.89,72,0.63,73,0.504,74,0.847,75,0.319,80,0.001,81,0.002,82,0.002,88,1.293,89,0.401,97,0.429,103,0.401,110,2.726,111,1.882,112,2.555,114,1.32,115,0.847,124,2.254,139,0.121,142,0.564,145,0.612,152,0.72,153,0.612,169,0.386,182,0.914,187,0.23,198,1.432,200,0.401,202,0.338,203,0.52,204,0.439,205,0.477,208,0.36,211,1.32,218,0.417,220,0.253,230,0.434,241,0.36,245,0.454,246,2.405,249,0.576,251,2.281,253,3.056,255,0.939,256,0.651,267,0.401,268,0.504,269,0.777,270,1.683,295,0.454,299,0.576,301,2.886,303,2.531,327,0.747,331,2.959,334,0.386,336,1.146,337,1.168,339,0.747,340,1.397,341,0.886,349,0.747,350,2.267,352,1.273,353,4.043,354,1.537,355,0.483,361,0.36,363,0.72,365,2.335,367,0.22,371,0.386,372,2.335,375,1.851,378,0.126,380,1.763,381,0.695,383,1.604,426,0.373,427,1.111,455,0.976,474,0.477,480,1.049,485,0.454,494,1.552,496,0.338,507,0.886,508,0.651,511,0.631,513,0.386,523,0.534,535,1.552,539,0.576,549,1.404,550,0.747,555,1.912,566,1.368,582,3.859,583,2.376,584,0.504,585,1.699,595,0.536,596,2.111,600,0.72,608,0.477,616,0.373,626,4.698,634,0.944,635,0.36,645,0.939,647,0.454,649,1.427,650,0.578,651,0.777,652,0.477,678,1.174,683,3.613,692,1.444,694,0.777,709,0.417,710,0.386,711,1.912,712,2.118,714,2.101,718,1.446,722,1.048,724,2.304,728,0.434,732,0.386,734,0.454,736,0.576,750,0.504,755,1.912,756,2.198,765,0.81,774,0.504,776,1.091,783,0.999,788,1.091,792,0.999,793,0.672,794,0.504,798,3.051,810,1.76,841,0.576,844,1.368,845,0.477,849,0.576,869,0.576,870,0.939,872,0.89,874,0.504,876,0.847,887,0.434,891,0.999,901,1.567,903,0.939,908,2.281,922,0.536,923,1.404,932,0.576,944,1.912,946,0.576,947,1.892,948,1.849,951,2.327,952,1.32,953,3.056,955,2.18,964,2.218,968,0.576,970,0.417,997,2.359,999,0.504,1010,0.747,1031,3.315,1033,0.504,1042,1.397,1043,4.13,1044,0.651,1046,0.939,1049,0.536,1062,1.25,1083,0.536,1086,1.074,1094,1.25,1111,0.454,1113,1.587,1115,3.28,1117,0.454,1128,0.576,1129,1.25,1130,0.504,1131,1.76,1135,0.576,1147,1.19,1149,2.809,1151,1.32,1163,1.849,1182,1.509,1188,6.031,1190,0.536,1193,0.847,1195,4.922,1199,0.63,1202,2.118,1213,0.89,1220,0.454,1230,0.847,1237,0.454,1243,0.504,1245,0.536,1250,1.849,1252,0.89,1260,1.074,1261,1.655,1262,2.613,1263,0.504,1264,0.999,1284,1.655,1304,1.091,1306,1.19,1313,2.772,1322,0.477,1344,0.504,1356,0.576,1362,2.536,1443,0.477,1444,4.536,1448,0.89,1466,0.504,1492,1.509,1509,2.613,1536,0.89,1543,1.19,1572,0.939,1600,1.049,1608,0.63,1609,2.232,1626,4.59,1628,1.184,1629,0.63,1651,1.316,1743,2.101,1748,0.777,1755,1.849,1760,1.509,1761,0.504,1763,0.504,1774,1.32,1775,0.63,1782,0.847,1793,1.509,1811,0.999,1815,0.847,1855,0.576,1866,0.89,1888,0.63,1889,1.427,1906,0.89,1907,1.567,1917,1.849,1919,0.504,1923,0.434,1924,0.89,1928,1.074,1938,0.939,1939,0.939,1946,0.536,1969,2.359,2014,0.89,2015,1.65,2046,1.074,2052,2.772,2053,0.711,2054,1.655,2055,1.074,2056,0.63,2057,1.655,2058,0.711,2059,0.711,2060,1.863,2061,1.074,2062,3.748,2063,5.859,2064,7.787,2065,4.412,2066,0.711,2067,0.711,2068,7.739,2069,6.485,2070,1.892,2071,8.334,2072,0.711,2073,0.711,2074,1.074,2075,1.326,2076,0.711,2077,0.711,2078,1.863,2079,0.711,2080,0.63,2081,1.25,2082,0.63,2083,0.847,2084,0.63,2085,0.711,2086,2.336,2087,1.326,2088,0.711,2089,2.232,2090,0.711,2091,1.863,2092,1.326,2093,0.711,2094,1.326,2095,3.341,2096,0.711,2097,1.863,2098,0.576,2099,1.074,2100,0.711,2101,1.326,2102,0.711,2103,1.174,2104,1.074,2105,7.131,2106,0.711,2107,0.711,2108,2.359,2109,1.863,2110,0.711,2111,0.711,2112,0.711,2113,0.477,2114,0.711,2115,2.336,2116,0.711,2117,3.341,2118,0.711,2119,0.63,2120,1.863,2121,0.711,2122,3.671,2123,0.711,2124,1.174,2125,2.218,2126,1.174,2127,0.63,2128,0.711,2129,1.65,2130,0.711,2131,2.44,2132,4.014,2133,0.711,2134,4.942,2135,0.711,2136,0.711,2137,0.711,2138,4.302,2139,3.773,2140,0.711,2141,5.124,2142,0.711,2143,0.711,2144,3.131,2145,0.711,2146,2.756,2147,0.711,2148,2.069,2149,4.746,2150,0.711,2151,0.711,2152,1.863,2153,0.711,2154,2.069,2155,0.711,2156,2.069,2157,0.711,2158,1.863,2159,3.28,2160,1.174,2161,1.174,2162,1.326,2163,1.326,2164,2.069,2165,3.469,2166,1.326,2167,0.711,2168,0.63,2169,0.711,2170,0.711,2171,3.723,2172,0.711,2173,0.711,2174,0.711,2175,1.174,2176,2.069,2177,0.711,2178,1.174,2179,0.711,2180,0.711,2181,0.63,2182,0.711,2183,5.292,2184,3.071,2185,1.326,2186,1.326,2187,0.711,2188,0.536,2189,0.63,2190,0.711,2191,0.711,2192,0.711,2193,0.63,2194,0.711,2195,1.863,2196,0.711,2197,0.63,2198,2.756,2199,2.44,2200,0.711,2201,0.711,2202,0.711,2203,0.711,2204,1.863,2205,0.711,2206,0.711,2207,1.174,2208,0.711,2209,1.326,2210,0.711,2211,0.63,2212,1.326,2213,0.711,2214,1.65,2215,1.074,2216,0.711,2217,0.711,2218,1.326,2219,1.326,2220,0.711,2221,5.449,2222,2.613,2223,0.711,2224,1.25,2225,0.711,2226,0.711,2227,2.536,2228,0.711,2229,0.711,2230,2.336,2231,4.05,2232,0.711,2233,0.711,2234,0.711,2235,1.65,2236,1.174,2237,0.576,2238,0.711,2239,0.711,2240,0.711,2241,3.056,2242,1.326,2243,1.326,2244,1.326,2245,1.174,2246,1.326,2247,0.711,2248,1.509,2249,0.711,2250,0.711,2251,0.711,2252,2.304,2253,0.711,2254,1.326,2255,0.711,2256,0.711,2257,1.174,2258,0.711,2259,0.711,2260,1.65,2261,2.069,2262,0.711,2263,0.711,2264,1.074,2265,0.711,2266,4.942,2267,0.711,2268,0.711,2269,0.711,2270,0.711,2271,5.292,2272,3.131,2273,1.326,2274,0.711,2275,0.711,2276,0.711,2277,0.711,2278,0.711,2279,0.711,2280,1.174,2281,0.711,2282,0.711,2283,2.772,2284,0.711,2285,1.65,2286,0.711,2287,0.711,2288,1.174,2289,0.711,2290,0.711,2291,2.756,2292,1.174,2293,0.711,2294,1.863,2295,1.32,2296,0.711,2297,0.63,2298,0.711,2299,0.711,2300,1.326,2301,1.892,2302,0.711,2303,0.711,2304,1.174,2305,0.711,2306,0.711,2307,0.63,2308,0.999,2309,1.326,2310,2.076,2311,3.131,2312,0.711,2313,0.711,2314,0.711,2315,0.576,2316,1.326,2317,0.711,2318,1.326,2319,1.892,2320,1.326,2321,0.711,2322,0.711,2323,0.711,2324,0.711,2325,2.756,2326,0.63,2327,0.711,2328,1.174,2329,0.711,2330,0.63,2331,2.336,2332,1.074,2333,0.711,2334,1.326,2335,1.863,2336,2.101,2337,0.711,2338,0.711,2339,0.504,2340,0.711,2341,0.711,2342,1.326,2343,0.711,2344,1.76,2345,0.576,2346,0.711,2347,1.863,2348,0.711,2349,0.711,2350,1.863,2351,0.711,2352,0.711,2353,1.326,2354,1.863,2355,0.711,2356,0.711,2357,0.711,2358,0.711,2359,1.326,2360,0.711,2361,1.863,2362,2.069,2363,0.711,2364,0.576,2365,0.711,2366,1.32,2367,1.326,2368,1.76,2369,0.711,2370,0.711,2371,0.711,2372,0.711,2373,1.863,2374,1.892,2375,0.711,2376,0.63,2377,0.711,2378,1.863,2379,2.772,2380,0.711,2381,0.711,2382,0.711,2383,1.863,2384,0.711,2385,0.711,2386,0.711,2387,1.326,2388,0.711,2389,1.65,2390,1.326,2391,0.711,2392,0.711,2393,0.711,2394,0.711,2395,0.711,2396,0.536,2397,0.999,2398,0.536,2399,0.711,2400,0.711,2401,0.63,2402,1.174,2403,0.711,2404,0.711,2405,5.124,2406,0.711,2407,1.863,2408,0.711,2409,0.711,2410,0.711,2411,2.336,2412,0.711,2413,1.326,2414,1.326,2415,0.711,2416,0.711,2417,0.711,2418,1.326,2419,0.999,2420,0.711,2421,0.711,2422,0.711,2423,0.63,2424,0.63,2425,0.711,2426,0.711,2427,0.63,2428,1.326,2429,0.63,2430,0.711,2431,0.711,2432,0.711,2433,0.711,2434,0.711,2435,0.711,2436,0.711,2437,0.711,2438,2.772,2439,0.711,2440,0.711,2441,0.711,2442,0.711,2443,0.711,2444,0.711,2445,0.711,2446,1.326,2447,0.711,2448,0.711,2449,1.863,2450,0.63,2451,1.326,2452,0.711,2453,1.567,2454,0.711,2455,1.326,2456,0.63,2457,0.711,2458,0.63,2459,0.711,2460,1.326,2461,0.711,2462,0.711,2463,0.576,2464,0.711,2465,2.756,2466,0.711,2467,0.711,2468,0.576,2469,0.711,2470,0.711,2471,0.63,2472,0.711,2473,0.711,2474,0.711,2475,0.711,2476,0.711,2477,0.711,2478,1.863,2479,0.711,2480,0.536,2481,0.711,2482,0.711,2483,0.711,2484,0.711,2485,1.091,2486,0.847,2487,1.863,2488,1.326,2489,0.711,2490,1.863,2491,0.711,2492,2.069,2493,0.711,2494,0.711,2495,2.756,2496,3.131,2497,0.711,2498,0.711,2499,0.711,2500,3.131,2501,0.711,2502,1.326,2503,0.711,2504,0.711,2505,1.326,2506,0.576,2507,1.326,2508,0.63,2509,1.509,2510,0.711,2511,0.999,2512,0.711,2513,0.576,2514,0.711,2515,8.169,2516,3.469,2517,0.711,2518,0.711,2519,0.576,2520,0.711,2521,0.711,2522,0.711,2523,0.711,2524,0.711,2525,3.131,2526,0.711,2527,1.404,2528,0.711,2529,0.711,2530,0.711,2531,0.711,2532,0.711,2533,2.336,2534,2.336,2535,1.65,2536,2.756,2537,1.326,2538,1.326,2539,3.341,2540,1.76,2541,3.469,2542,1.174,2543,1.326,2544,1.32,2545,1.326,2546,1.074,2547,1.074,2548,1.326,2549,0.711,2550,0.711,2551,3.071,2552,0.576,2553,0.477,2554,2.756,2555,1.074,2556,0.711,2557,0.576,2558,0.504,2559,0.536,2560,0.711,2561,0.711,2562,0.63,2563,1.174,2564,0.711,2565,1.326,2566,0.711,2567,0.711,2568,1.174,2569,0.711,2570,0.711,2571,1.326,2572,0.711,2573,0.711,2574,1.326,2575,0.711,2576,0.711,2577,0.711,2578,0.63,2579,1.655,2580,0.711,2581,0.711,2582,1.174,2583,0.711,2584,1.863,2585,2.232,2586,0.711,2587,0.63,2588,1.326,2589,0.711,2590,0.711,2591,0.63,2592,0.711,2593,3.586,2594,1.326,2595,0.711,2596,0.711,2597,0.711,2598,0.711,2599,0.711,2600,1.174,2601,1.174,2602,2.336,2603,1.892,2604,0.711,2605,1.863,2606,0.711,2607,0.711,2608,1.509,2609,0.711,2610,0.711,2611,0.711,2612,1.863,2613,0.576,2614,0.711,2615,0.711,2616,0.711,2617,0.711,2618,1.326,2619,0.711,2620,1.074,2621,0.63,2622,1.326,2623,0.711,2624,0.711,2625,0.711,2626,0.711,2627,1.326,2628,0.711,2629,1.326,2630,0.711,2631,0.711,2632,0.711,2633,0.711,2634,1.863,2635,1.863,2636,1.76,2637,0.504,2638,2.232,2639,0.711,2640,1.863,2641,1.326,2642,0.477,2643,0.63,2644,0.711,2645,0.711,2646,0.63,2647,1.326,2648,1.32,2649,1.863,2650,1.174,2651,0.711,2652,0.711,2653,0.63,2654,0.711,2655,0.711,2656,0.711,2657,0.711,2658,0.711,2659,0.711,2660,0.999,2661,0.711,2662,0.711,2663,0.711,2664,0.711,2665,0.711,2666,0.711,2667,1.326,2668,0.63,2669,0.576,2670,0.63,2671,0.711,2672,0.63,2673,0.711,2674,0.576,2675,1.174,2676,0.711,2677,1.509,2678,0.711,2679,0.711,2680,0.711,2681,1.326,2682,0.711,2683,0.711,2684,0.711,2685,0.711,2686,0.711,2687,1.074,2688,0.711,2689,0.711,2690,0.711,2691,0.711,2692,0.711,2693,2.336,2694,0.63,2695,0.711,2696,1.326,2697,0.711,2698,0.711,2699,1.326,2700,1.326,2701,1.326,2702,1.863,2703,1.863,2704,2.069,2705,1.326,2706,1.509,2707,1.074,2708,0.63,2709,0.504,2710,0.711,2711,0.576,2712,0.63,2713,0.711,2714,0.939,2715,0.711,2716,1.65,2717,0.711,2718,0.711,2719,0.711,2720,0.711,2721,0.63,2722,1.509,2723,0.711,2724,1.326,2725,1.074,2726,1.863,2727,1.174,2728,0.711,2729,0.711,2730,0.711,2731,1.326,2732,1.174,2733,1.326,2734,0.711,2735,0.711,2736,0.711,2737,0.711,2738,0.711,2739,0.711,2740,0.711,2741,0.711,2742,0.711,2743,0.63,2744,0.63,2745,0.711,2746,0.711,2747,1.863,2748,0.711,2749,1.326,2750,0.711,2751,1.174,2752,0.711,2753,1.326,2754,0.711,2755,1.326,2756,0.711,2757,1.074,2758,0.63,2759,0.711,2760,0.63,2761,0.711,2762,0.711,2763,0.63,2764,1.863,2765,1.326,2766,0.89,2767,1.174,2768,1.326,2769,1.326,2770,0.939,2771,0.711,2772,1.326,2773,0.63,2774,0.711,2775,1.326,2776,1.174,2777,0.711,2778,0.711,2779,0.711,2780,0.63,2781,0.711,2782,0.711,2783,1.326,2784,0.711,2785,0.711,2786,2.772,2787,1.074,2788,0.711,2789,3.773,2790,0.711,2791,0.63,2792,0.63,2793,0.711,2794,0.711,2795,0.711,2796,0.711,2797,0.711,2798,0.711,2799,0.711,2800,0.711,2801,0.711,2802,0.711,2803,0.711,2804,1.174,2805,0.711,2806,0.711,2807,0.711,2808,0.711,2809,1.074,2810,0.711,2811,0.711,2812,0.711,2813,0.711,2814,0.711,2815,0.711,2816,0.711,2817,0.711,2818,2.069,2819,0.711,2820,0.711,2821,0.576,2822,0.711,2823,0.576,2824,0.711,2825,0.711,2826,0.63,2827,0.711,2828,0.536,2829,0.711,2830,0.711,2831,0.63,2832,0.711,2833,0.711,2834,0.711,2835,0.711,2836,0.711,2837,0.711,2838,0.711,2839,1.863,2840,0.711,2841,0.576,2842,0.711,2843,0.711,2844,0.711,2845,0.711,2846,1.863,2847,0.711,2848,1.326,2849,1.863,2850,1.326,2851,1.326,2852,1.326,2853,1.326,2854,0.711,2855,1.326,2856,1.326,2857,0.711,2858,0.711,2859,0.711,2860,0.711,2861,0.711,2862,0.63,2863,0.711,2864,1.326,2865,0.711,2866,0.711,2867,0.536,2868,0.711,2869,0.576,2870,0.711,2871,1.326,2872,0.711,2873,0.63,2874,0.711,2875,0.711,2876,0.711,2877,0.711,2878,0.576,2879,0.711,2880,0.711,2881,1.863,2882,1.863,2883,0.711,2884,0.63,2885,0.711,2886,0.711,2887,1.174,2888,0.711,2889,0.711,2890,0.711,2891,0.711,2892,0.63,2893,0.711,2894,0.711,2895,1.326,2896,0.63,2897,0.711,2898,0.63,2899,0.711,2900,0.711,2901,0.711,2902,0.711,2903,0.711,2904,0.711,2905,0.711,2906,0.711,2907,0.711,2908,1.326,2909,1.326,2910,0.711,2911,0.63,2912,0.711,2913,0.711,2914,0.711,2915,1.326,2916,0.711,2917,0.711,2918,1.326,2919,0.711,2920,1.65,2921,1.326,2922,0.711,2923,0.711,2924,1.326,2925,2.336,2926,0.711,2927,0.711,2928,0.711,2929,0.711,2930,0.576,2931,0.711,2932,0.999,2933,0.63,2934,1.326,2935,0.711,2936,0.711,2937,1.326,2938,0.711,2939,0.711,2940,0.711,2941,0.711,2942,0.711,2943,1.326,2944,0.711,2945,0.711,2946,0.711,2947,0.711,2948,0.711,2949,0.711,2950,0.711,2951,1.863,2952,0.711,2953,0.711,2954,0.711,2955,0.711,2956,0.711,2957,0.711,2958,0.711,2959,1.326,2960,1.326,2961,0.711,2962,0.711,2963,0.711,2964,2.336,2965,4.746,2966,1.326,2967,1.074,2968,1.174,2969,1.326,2970,2.336,2971,1.174,2972,1.326,2973,0.711,2974,1.326,2975,1.174,2976,1.326,2977,1.326,2978,1.326,2979,1.174,2980,1.326,2981,2.336,2982,1.326,2983,2.336,2984,1.326,2985,1.326,2986,1.174,2987,1.174,2988,1.863,2989,1.326,2990,0.711,2991,0.711,2992,0.999,2993,0.536,2994,1.326,2995,0.711,2996,2.756,2997,1.326,2998,0.711,2999,0.576,3000,0.711,3001,2.336,3002,0.711,3003,0.711,3004,0.711,3005,0.711,3006,0.711,3007,0.504,3008,0.63,3009,0.711,3010,0.711,3011,0.711,3012,1.326,3013,1.326,3014,1.326,3015,0.711,3016,0.711,3017,0.711,3018,0.711,3019,0.711,3020,1.326,3021,1.326,3022,0.711,3023,0.711,3024,0.711,3025,0.536,3026,0.711,3027,0.711,3028,0.711,3029,1.326,3030,0.711,3031,1.863,3032,1.65,3033,0.711,3034,0.711,3035,0.576,3036,1.326,3037,1.326,3038,0.711,3039,0.536,3040,0.711,3041,0.711,3042,1.863,3043,1.326,3044,1.326,3045,0.711,3046,1.326,3047,0.711,3048,0.711,3049,0.711,3050,2.336,3051,0.711,3052,0.711,3053,0.711,3054,0.711,3055,0.711,3056,0.711,3057,0.711,3058,1.326,3059,0.711,3060,0.711,3061,0.711,3062,0.63,3063,1.326,3064,0.711,3065,1.326,3066,0.711,3067,0.711,3068,0.576,3069,0.711,3070,1.326,3071,2.336,3072,0.711,3073,0.63,3074,0.711,3075,1.326,3076,1.326,3077,0.711,3078,0.711,3079,0.63,3080,1.326,3081,0.711,3082,0.711,3083,0.576,3084,1.326,3085,0.711,3086,0.711,3087,0.711,3088,1.326,3089,1.326,3090,0.711,3091,0.711,3092,1.326,3093,0.711,3094,0.711,3095,0.711,3096,0.711,3097,1.326,3098,0.711,3099,0.711,3100,0.576,3101,0.711,3102,2.336,3103,0.576,3104,0.711,3105,0.711,3106,1.326,3107,0.63,3108,0.536,3109,1.326,3110,0.711,3111,2.756,3112,1.326,3113,0.536,3114,0.536,3115,0.711,3116,0.711,3117,0.576,3118,0.711,3119,0.711,3120,0.711,3121,0.711,3122,0.711,3123,0.711,3124,0.711,3125,0.711,3126,0.711,3127,0.711,3128,0.711,3129,0.711,3130,1.174,3131,0.711,3132,0.711,3133,0.711,3134,0.711,3135,0.711,3136,0.576,3137,0.711,3138,0.711,3139,0.63,3140,0.711,3141,0.711,3142,0.711,3143,0.711,3144,0.711,3145,0.576,3146,0.504,3147,0.711,3148,0.711,3149,0.63,3150,1.863,3151,0.711,3152,0.63,3153,0.63,3154,0.711,3155,0.63,3156,0.711,3157,0.711,3158,0.711,3159,0.711,3160,0.711,3161,2.336,3162,0.711,3163,0.711,3164,0.63,3165,0.711,3166,1.65,3167,0.711,3168,0.711,3169,0.711,3170,0.711,3171,0.63,3172,0.711,3173,0.711,3174,1.326,3175,0.711,3176,0.711,3177,0.711,3178,0.576,3179,1.326,3180,0.711,3181,0.711,3182,0.711,3183,0.711,3184,1.863,3185,1.326,3186,1.326,3187,0.711,3188,0.63,3189,0.711,3190,1.326,3191,0.63,3192,1.863,3193,0.711,3194,0.711,3195,0.711,3196,0.711,3197,0.711,3198,1.326,3199,1.326,3200,1.326,3201,1.326,3202,1.65,3203,1.326,3204,0.711,3205,1.326,3206,0.711,3207,1.326,3208,0.477,3209,0.63,3210,1.863,3211,0.711,3212,0.63,3213,0.711,3214,0.711,3215,0.711,3216,2.756,3217,0.711,3218,0.63,3219,0.711,3220,0.711,3221,0.711,3222,0.63,3223,0.711,3224,1.326,3225,1.174,3226,0.711,3227,0.63,3228,0.536,3229,0.711,3230,0.711,3231,0.711,3232,0.711,3233,1.326,3234,0.711,3235,0.711,3236,0.711,3237,0.711,3238,0.63,3239,0.711,3240,0.711,3241,0.576,3242,0.711,3243,0.711,3244,0.536,3245,0.711,3246,0.711,3247,1.326,3248,0.63]],["title/coverage.html",[2486,4.016]],["body/coverage.html",[0,0.316,1,1.403,5,0.055,6,2.121,8,0.831,12,0.745,24,0.008,26,0.134,34,0.407,66,1.463,80,0.002,81,0.003,82,0.002,83,1.53,84,2.121,85,2.121,86,1.607,104,1.403,111,1.3,112,2.41,117,1.94,118,2.121,119,2.121,127,1.805,150,1.697,162,2.583,177,1.463,178,1.53,184,1.848,186,2.121,215,1.175,235,1.14,236,3.118,264,2.121,273,1.697,314,1.3,315,3.981,320,1.349,358,0.831,378,1.496,379,1.349,384,1.255,400,1.349,419,1.349,421,1.3,432,1.175,445,1.349,446,2.121,447,4.108,452,1.349,453,4.062,454,0.893,466,1.3,478,1.3,493,1.349,519,1.403,520,1.403,521,1.94,522,3.118,523,2.602,527,2.9,530,1.463,545,1.607,546,3.118,547,3.636,564,3.419,576,2.64,577,1.805,578,3.909,579,3.909,590,1.94,597,1.94,603,1.94,604,2.121,605,2.121,610,1.3,636,1.697,640,2.121,644,1.94,654,3.408,655,3.118,662,1.463,699,1.697,701,2.121,702,2.121,719,1.805,720,2.9,721,2.727,751,1.607,752,2.121,757,1.697,758,3.118,763,1.463,793,4.832,795,5.325,811,1.53,836,1.805,837,3.909,843,1.94,846,5.763,847,5.419,850,1.94,865,1.94,867,1.94,873,1.94,877,1.94,887,3.698,915,1.805,916,1.94,929,1.94,940,1.805,941,2.121,942,2.121,987,1.607,988,2.121,1005,1.607,1006,2.121,1026,1.607,1027,3.419,1036,1.607,1038,1.3,1039,3.118,1040,3.118,1044,1.175,1045,1.255,1048,1.697,1057,2.121,1058,2.121,1059,1.805,1060,2.121,1078,2.121,1079,1.805,1080,2.9,1092,1.805,1093,3.118,1116,1.805,1118,1.805,1119,2.121,1120,2.121,1123,3.909,1141,2.121,1143,1.463,1167,1.607,1168,2.121,1174,1.53,1180,2.121,1183,2.121,1212,1.805,1213,2.583,1214,1.805,1215,1.805,1231,1.94,1281,1.805,1282,2.121,1290,1.463,1296,1.697,1297,1.607,1309,1.697,1315,1.697,1318,1.607,1320,1.53,1322,1.607,1325,1.697,1326,1.805,1353,3.118,1354,3.118,1371,1.94,1374,2.121,1388,1.805,1390,1.805,1435,1.53,1449,2.121,1457,1.607,1469,1.805,1483,3.636,1488,1.697,1494,1.697,1499,1.94,1514,3.118,1515,2.121,1531,1.94,1550,2.121,1551,1.94,1625,2.121,1641,2.121,1650,2.121,1651,1.349,1652,1.94,1660,1.94,1671,1.805,1672,2.121,1689,1.607,1690,2.121,1706,1.607,1707,2.121,1718,2.121,1719,2.121,1720,3.118,1726,2.121,1727,3.118,1731,1.805,1732,2.121,1738,3.909,1743,2.583,1748,1.403,1751,1.94,1752,1.94,1753,1.94,1762,2.121,1776,1.607,1777,2.121,1784,1.94,1803,1.805,1804,2.121,1808,1.607,1810,1.53,1821,1.805,1822,2.121,1831,1.805,1864,3.118,1887,2.121,1900,2.121,1934,2.121,1936,2.121,1946,1.805,1966,2.121,1984,1.805,1985,2.121,1989,1.53,1994,2.121,2005,2.121,2006,2.121,2013,2.121,2020,1.53,2023,2.121,2027,2.121,2028,2.121,2042,2.121,2043,2.121,2070,1.94,2089,3.909,2108,2.9,2122,1.94,2129,2.121,2241,1.94,2285,3.408,2304,2.121,2328,2.121,2453,1.607,2486,1.53,3100,7.403,3249,1.94,3250,7.792,3251,9.128,3252,7.069,3253,4.273,3254,2.121,3255,1.94,3256,2.121,3257,5.528,3258,5.528,3259,5.528,3260,5.528,3261,7.069,3262,2.121,3263,2.121,3264,4.273,3265,4.273,3266,2.121,3267,2.121,3268,6.798,3269,2.121,3270,2.121,3271,8.292,3272,3.909,3273,1.94,3274,2.396,3275,2.396,3276,2.396,3277,2.396,3278,2.121,3279,2.396,3280,6.468,3281,3.85,3282,2.396,3283,3.85,3284,6.468,3285,4.827,3286,2.396,3287,5.528,3288,2.396,3289,2.396,3290,2.396,3291,3.85,3292,3.85,3293,2.396,3294,4.827,3295,2.121,3296,2.121,3297,2.396,3298,3.408,3299,3.408,3300,2.121,3301,2.121,3302,2.121,3303,2.396,3304,1.94,3305,2.121,3306,2.121,3307,2.121,3308,4.273,3309,2.396]],["title/dependencies.html",[145,2.567,2821,3.142]],["body/dependencies.html",[0,0.198,4,0.126,5,0.132,16,0.742,24,0.008,26,0.229,55,1.532,56,1.159,69,2.22,80,0.004,81,0.005,82,0.004,106,0.898,110,1.946,145,1.888,158,3.081,160,3.621,182,3.281,187,1.868,204,2.406,239,2.072,270,4.083,295,2.612,297,2.612,465,3.871,481,2.497,507,2.745,570,2.007,573,3.916,589,2.497,620,3.312,683,1.946,711,2.924,734,4.64,735,3.312,862,3.621,1094,2.744,1131,2.612,1150,5.921,1151,2.897,1227,3.312,1230,2.612,1304,2.395,1312,3.081,1755,5.597,1811,4.348,2083,3.686,2124,3.621,2215,4.673,2245,3.621,2339,2.897,2401,3.621,2402,3.621,2456,3.621,2578,3.621,2600,3.621,2601,3.621,2642,2.744,2643,3.621,2646,3.621,2653,3.621,2694,3.621,2709,2.897,2714,4.088,2727,3.621,2933,3.621,3188,3.621,3227,3.621,3310,5.771,3311,8.17,3312,4.09,3313,4.09,3314,4.09,3315,4.09,3316,4.09,3317,5.771,3318,5.771,3319,4.09,3320,5.771,3321,4.09,3322,4.09,3323,4.09,3324,4.09,3325,4.09,3326,4.09,3327,4.09,3328,4.09,3329,4.09,3330,5.771,3331,4.09,3332,4.09,3333,4.09,3334,4.09,3335,4.09,3336,4.09,3337,5.771,3338,4.09,3339,4.09,3340,5.771,3341,4.09,3342,4.09,3343,7.661,3344,4.09,3345,4.09,3346,4.09,3347,4.09,3348,4.09,3349,4.09,3350,4.09,3351,4.09,3352,4.09,3353,4.09,3354,5.771,3355,4.09,3356,3.081,3357,4.09,3358,4.09,3359,5.771,3360,4.09,3361,5.771,3362,5.771,3363,4.09,3364,4.09,3365,4.09,3366,3.312,3367,4.09,3368,4.09,3369,4.09,3370,4.09,3371,4.09,3372,5.771,3373,4.09,3374,4.09,3375,4.09,3376,4.09,3377,4.09,3378,4.09,3379,4.09,3380,4.09,3381,4.09,3382,4.09,3383,4.09,3384,4.09,3385,4.09,3386,4.09,3387,4.09,3388,4.09,3389,4.09,3390,5.771,3391,5.109,3392,4.09,3393,4.09,3394,4.09,3395,4.09,3396,4.09,3397,3.621,3398,4.09,3399,4.09,3400,5.771,3401,4.09,3402,4.09,3403,4.09,3404,4.09,3405,4.09,3406,4.09,3407,4.09,3408,4.09,3409,4.09,3410,4.09,3411,4.09,3412,4.09,3413,5.771,3414,4.09,3415,4.09,3416,4.09,3417,4.09,3418,4.09,3419,5.771,3420,4.09,3421,3.621,3422,3.312,3423,4.09,3424,4.09,3425,4.09,3426,4.09,3427,4.09,3428,4.09,3429,4.09,3430,4.09,3431,4.09,3432,4.09,3433,4.09,3434,4.09,3435,4.09,3436,4.09,3437,4.09,3438,4.09,3439,4.09,3440,3.312,3441,4.09,3442,4.09,3443,4.09,3444,4.09,3445,4.09,3446,4.09,3447,4.09,3448,4.09,3449,4.09,3450,4.09,3451,4.09,3452,4.09,3453,4.09]],["title/miscellaneous/enumerations.html",[3454,2.369,3455,4.922]],["body/miscellaneous/enumerations.html",[0,0.208,2,1.054,9,0.409,12,1.173,16,1.475,24,0.008,33,2.813,37,3.178,54,3.014,68,2.72,80,0.005,81,0.007,82,0.005,203,2.378,208,3.797,241,3.073,315,3.416,326,4.067,327,4.782,328,3.552,329,3.677,330,2.8,331,2.319,332,4.22,333,3.552,334,4.067,335,3.292,336,2.976,337,3.167,338,3.552,339,3.416,340,3.073,341,2.885,342,3.552,343,3.416,344,3.552,345,3.416,346,4.22,347,3.416,348,2.72,349,3.416,350,1.964,351,3.416,352,2.8,353,3.416,354,2.976,355,2.207,356,3.416,357,3.552,358,2.105,359,2.8,360,3.178,361,3.073,362,3.292,363,3.292,364,3.416,369,4.22,370,3.552,371,3.292,372,4.067,373,3.552,374,3.552,375,3.677,376,3.552,377,3.292,1304,4.388,1543,3.874,1926,5.645,3454,3.703,3455,5.37,3456,6.065,3457,6.065,3458,6.065]],["title/miscellaneous/functions.html",[3454,2.369,3459,3.938]],["body/miscellaneous/functions.html",[9,0.433,23,1.24,24,0.008,25,0.859,26,0.36,27,0.93,33,2.032,39,1.028,80,0.006,81,0.007,82,0.006,103,1.793,104,4.543,112,3.635,399,2.723,496,3.054,694,3.76,729,3.92,788,3.76,793,3.253,846,4.837,847,6.134,888,5.199,890,5.199,895,5.199,915,5.844,956,4.307,1371,6.751,3149,5.684,3262,6.868,3263,6.868,3269,5.684,3270,7.381,3301,5.684,3302,6.868,3454,3.92,3459,4.548,3460,6.42,3461,7.381,3462,6.42,3463,5.199,3464,6.42,3465,6.42]],["title/index.html",[9,0.262,2050,2.923,2051,2.748]],["body/index.html",[5,0.145,16,0.851,24,0.007,25,0.654,32,1.194,34,0.797,64,1.793,65,3.902,75,2.103,80,0.004,81,0.006,82,0.004,88,2.969,89,2.641,90,1.937,91,1.03,97,2.494,115,2.996,120,1.707,123,3.146,182,2.301,245,4.919,246,4.203,250,4.052,251,3.573,270,2.864,335,2.546,337,1.749,352,4.148,359,2.929,513,2.546,550,2.641,555,2.864,583,4.216,596,3.113,635,3.215,652,3.146,683,2.231,711,3.215,712,2.864,722,2.103,724,2.864,756,2.546,795,3.534,845,3.146,901,3.146,908,4.775,944,4.39,963,3.146,970,3.715,1113,2.377,1117,2.996,1128,3.798,1195,3.715,1230,2.996,1234,3.798,1304,2.747,1600,2.641,1635,4.152,1811,3.534,1874,2.996,1907,3.146,1919,3.322,1940,3.146,2014,3.146,2054,3.322,2055,5.822,2057,4.494,2071,4.152,2083,4.052,2098,3.798,2113,5.167,2126,4.152,2127,4.152,2171,4.779,2222,3.534,2252,4.39,2260,4.152,2297,7.507,2301,3.798,2310,3.534,2336,3.146,2427,4.152,2453,4.256,2485,2.747,2486,2.996,2506,5.137,2637,3.322,2642,3.146,2672,6.365,2674,5.137,2677,3.798,2712,4.152,2898,4.152,2992,4.779,2993,3.534,3035,3.798,3145,3.798,3146,3.322,3222,4.152,3244,3.534,3440,3.798,3466,3.534,3467,6.344,3468,6.716,3469,4.69,3470,4.152,3471,4.69,3472,3.322,3473,3.322,3474,3.322,3475,4.69,3476,4.69,3477,3.322,3478,4.69,3479,4.152,3480,4.494,3481,4.152,3482,4.69,3483,3.798,3484,4.69,3485,6.365,3486,5.802,3487,4.152,3488,6.344,3489,6.344,3490,8.047,3491,7.702,3492,4.69,3493,4.69,3494,6.344,3495,4.152,3496,4.69,3497,4.152,3498,6.344,3499,4.69,3500,4.152,3501,6.344,3502,6.344,3503,3.534,3504,4.152,3505,4.69,3506,4.69,3507,3.534,3508,4.69,3509,4.69,3510,4.69,3511,2.996,3512,4.69,3513,4.69,3514,3.798,3515,4.69,3516,3.534,3517,3.798,3518,4.69,3519,4.152,3520,4.69,3521,3.798,3522,3.798,3523,4.779,3524,4.69,3525,4.69,3526,4.69,3527,4.152]],["title/license.html",[2050,2.923,2051,2.748,3528,3.435]],["body/license.html",[0,0.033,4,0.256,5,0.04,12,1.181,21,0.095,24,0.002,28,0.294,30,0.288,34,0.78,51,0.04,52,0.251,64,2.615,65,1.626,71,0.652,75,0.436,79,0.732,80,0.002,81,0.002,82,0.002,88,3.266,91,0.213,97,0.572,115,0.621,123,1.186,139,0.165,153,0.449,198,2.121,200,1.687,202,1.425,208,0.896,212,2.154,213,3.684,241,2.161,256,4.393,267,0.547,269,1.036,297,0.621,302,0.732,329,0.868,330,0.449,331,1.145,348,2.303,350,0.315,352,1.969,355,0.354,356,0.547,359,0.449,360,0.509,361,1.763,362,1.888,378,0.757,383,1.915,409,0.492,426,2.235,472,0.652,509,0.449,510,0.449,535,3.141,540,0.732,550,1.37,555,1.829,557,0.732,566,0.569,584,5.328,585,2.491,596,2.634,600,2.116,609,0.424,616,0.509,645,0.688,649,1.829,650,2.591,652,3.078,683,0.841,700,0.907,708,1.554,712,2.38,718,1.383,722,0.793,732,0.527,734,1.129,755,1.829,756,0.96,760,1.129,776,1.755,788,2.037,820,1.253,876,1.129,922,1.332,948,0.652,951,0.652,955,1.233,959,0.732,964,2.122,966,1.253,970,1.036,999,0.688,1043,3.023,1084,2.615,1085,2.817,1109,3.951,1131,1.554,1187,0.688,1192,0.652,1195,1.425,1196,0.732,1220,0.621,1239,0.652,1240,3.021,1242,0.787,1243,2.761,1245,1.833,1262,2.257,1264,4.202,1306,1.129,1312,0.732,1345,0.787,1356,4.517,1364,2.122,1443,0.652,1466,0.688,1572,0.688,1600,2.195,1609,0.787,1626,1.833,1651,3.852,1761,0.688,1813,2.154,1815,1.554,1855,1.97,1866,0.652,1874,1.914,1907,0.652,1917,3.078,1919,1.253,1923,2.38,1924,0.652,1928,0.787,1932,0.732,1933,2.426,1939,1.723,1940,2.01,1970,4.318,2014,0.652,2036,0.86,2056,0.86,2057,1.723,2062,2.122,2064,1.566,2070,0.787,2081,0.652,2099,0.787,2104,0.787,2108,1.332,2117,1.566,2122,1.432,2160,1.566,2171,0.732,2176,0.86,2188,0.732,2193,0.86,2211,1.566,2215,1.432,2224,0.652,2241,0.787,2248,0.787,2252,2.38,2261,0.86,2264,0.787,2280,0.86,2295,2.122,2301,6.3,2308,2.621,2310,1.332,2319,0.787,2330,1.566,2332,0.787,2345,1.432,2364,2.817,2366,0.688,2374,0.787,2376,0.86,2379,0.86,2396,0.732,2397,2.621,2419,1.332,2423,0.86,2458,0.86,2486,1.129,2508,1.566,2513,1.432,2519,0.787,2540,3.213,2547,2.426,2555,0.787,2557,6.137,2558,3.637,2559,1.833,2562,6.364,2579,2.464,2621,0.86,2636,3.457,2648,4.976,2660,0.732,2669,0.787,2687,0.787,2704,0.86,2706,1.432,2707,1.432,2711,3.716,2743,0.86,2766,2.01,2767,0.86,2804,0.86,2809,0.787,2828,1.332,2831,0.86,2841,0.787,2867,1.332,2887,0.86,2930,1.432,2967,1.432,2992,2.257,2993,1.833,2999,1.432,3007,2.122,3035,1.432,3039,1.833,3073,1.566,3108,1.833,3114,0.732,3117,3.157,3136,4.346,3139,0.86,3146,0.688,3152,5.654,3153,1.566,3155,1.566,3164,0.86,3202,0.86,3209,1.566,3212,0.86,3228,4.044,3238,2.154,3278,0.86,3366,0.787,3468,0.787,3474,2.464,3477,0.688,3480,0.688,3481,2.652,3483,1.97,3500,0.86,3503,1.833,3511,3.428,3523,1.833,3528,7.979,3529,6.387,3530,6.251,3531,0.972,3532,2.433,3533,7.462,3534,5.062,3535,5.356,3536,3.479,3537,0.972,3538,0.972,3539,1.768,3540,3.479,3541,2.433,3542,2.433,3543,5.578,3544,0.972,3545,0.972,3546,1.566,3547,3.479,3548,3.454,3549,1.768,3550,1.768,3551,5.262,3552,4.589,3553,0.972,3554,0.972,3555,3.898,3556,1.566,3557,0.86,3558,0.86,3559,4.752,3560,8.091,3561,2.433,3562,2.154,3563,0.972,3564,0.972,3565,2.996,3566,4.877,3567,0.972,3568,4.877,3569,0.972,3570,3.479,3571,2.996,3572,0.787,3573,5.404,3574,0.86,3575,0.86,3576,5.135,3577,5.367,3578,3.479,3579,5.578,3580,0.972,3581,1.768,3582,0.972,3583,0.972,3584,2.154,3585,0.972,3586,0.972,3587,0.972,3588,0.972,3589,0.972,3590,0.972,3591,2.996,3592,0.972,3593,2.433,3594,0.972,3595,0.972,3596,5.369,3597,1.833,3598,0.972,3599,0.972,3600,1.97,3601,2.433,3602,0.972,3603,0.732,3604,1.768,3605,1.768,3606,2.433,3607,7.191,3608,0.972,3609,4.671,3610,3.479,3611,3.479,3612,3.898,3613,0.787,3614,2.433,3615,4.995,3616,1.768,3617,0.972,3618,0.972,3619,0.972,3620,2.433,3621,0.972,3622,0.972,3623,1.768,3624,3.898,3625,0.972,3626,1.768,3627,0.972,3628,0.972,3629,2.996,3630,0.86,3631,1.768,3632,8.057,3633,2.433,3634,4.877,3635,1.332,3636,0.972,3637,1.768,3638,2.433,3639,4.877,3640,5.135,3641,0.972,3642,2.996,3643,1.768,3644,2.996,3645,2.652,3646,0.972,3647,2.433,3648,7.262,3649,1.566,3650,0.972,3651,4.589,3652,0.972,3653,2.154,3654,2.615,3655,0.972,3656,6.104,3657,2.154,3658,1.768,3659,3.776,3660,5.367,3661,3.898,3662,0.972,3663,1.768,3664,4.265,3665,0.972,3666,5.769,3667,1.768,3668,0.972,3669,0.972,3670,0.972,3671,2.433,3672,0.972,3673,0.972,3674,0.972,3675,0.787,3676,2.433,3677,2.652,3678,0.972,3679,0.972,3680,0.972,3681,1.566,3682,5.135,3683,0.86,3684,0.787,3685,2.154,3686,2.433,3687,1.833,3688,2.433,3689,0.972,3690,3.08,3691,0.86,3692,1.186,3693,2.154,3694,0.972,3695,0.972,3696,0.972,3697,0.972,3698,1.566,3699,0.972,3700,6.492,3701,2.154,3702,0.688,3703,1.768,3704,2.996,3705,0.86,3706,0.972,3707,1.768,3708,2.817,3709,0.972,3710,0.972,3711,1.768,3712,0.972,3713,1.432,3714,0.972,3715,2.817,3716,0.972,3717,0.787,3718,4.265,3719,2.426,3720,0.972,3721,3.08,3722,0.972,3723,1.768,3724,0.972,3725,0.972,3726,0.972,3727,0.972,3728,0.972,3729,2.433,3730,0.972,3731,1.768,3732,1.768,3733,1.768,3734,0.972,3735,5.769,3736,1.566,3737,0.972,3738,0.972,3739,0.86,3740,0.972,3741,0.688,3742,0.972,3743,0.972,3744,2.433,3745,0.86,3746,0.972,3747,5.404,3748,0.732,3749,0.972,3750,0.972,3751,3.479,3752,3.451,3753,0.972,3754,0.972,3755,2.433,3756,0.972,3757,0.972,3758,2.996,3759,0.972,3760,0.972,3761,0.972,3762,0.972,3763,0.972,3764,0.972,3765,1.768,3766,0.972,3767,2.433,3768,0.972,3769,0.972,3770,1.768,3771,0.972,3772,0.972,3773,0.972,3774,0.972,3775,0.972,3776,1.768,3777,1.253,3778,4.318,3779,0.972,3780,3.898,3781,0.972,3782,0.972,3783,1.566,3784,2.433,3785,2.996,3786,2.996,3787,2.996,3788,0.972,3789,3.08,3790,3.08,3791,0.972,3792,2.433,3793,0.972,3794,1.768,3795,0.972,3796,1.566,3797,3.479,3798,1.768,3799,2.996,3800,2.996,3801,0.972,3802,2.433,3803,3.479,3804,0.972,3805,0.972,3806,3.454,3807,2.433,3808,2.433,3809,1.768,3810,0.688,3811,0.972,3812,0.86,3813,0.972,3814,0.972,3815,2.154,3816,0.972,3817,0.972,3818,0.972,3819,0.972,3820,0.972,3821,2.433,3822,0.972,3823,0.86,3824,2.154,3825,1.768,3826,3.898,3827,6.056,3828,2.433,3829,1.768,3830,1.768,3831,1.768,3832,0.86,3833,0.972,3834,0.972,3835,0.972,3836,3.451,3837,1.768,3838,0.972,3839,0.972,3840,0.972,3841,0.972,3842,1.768,3843,0.972,3844,1.768,3845,0.972,3846,0.972,3847,3.25,3848,0.972,3849,4.752,3850,0.972,3851,0.972,3852,0.972,3853,0.972,3854,1.768,3855,0.972,3856,2.996,3857,1.768,3858,0.86,3859,0.972,3860,0.972,3861,0.972,3862,0.972,3863,1.768,3864,0.972,3865,0.972,3866,0.787,3867,2.652,3868,0.972,3869,1.768,3870,0.972,3871,0.972,3872,2.154,3873,0.972,3874,0.972,3875,0.972,3876,0.972,3877,2.996,3878,0.972,3879,0.972,3880,0.86,3881,0.86,3882,0.86,3883,0.972,3884,0.972,3885,0.972,3886,3.479,3887,0.972,3888,0.972,3889,2.996,3890,0.972,3891,0.787,3892,0.972,3893,0.972,3894,0.972,3895,0.972,3896,0.972,3897,2.996,3898,0.972,3899,0.972,3900,2.433,3901,0.972,3902,0.787,3903,2.433,3904,0.972,3905,0.972,3906,0.972,3907,0.972,3908,0.972,3909,0.972,3910,0.972,3911,0.86,3912,1.566,3913,0.972,3914,0.688,3915,1.768,3916,0.86,3917,0.972,3918,2.996,3919,0.972,3920,0.972,3921,1.768,3922,2.433,3923,2.433,3924,0.787,3925,1.768,3926,0.972,3927,2.433,3928,4.265,3929,0.972,3930,0.972,3931,1.768,3932,0.972,3933,0.972,3934,0.972,3935,0.972,3936,2.996,3937,2.433,3938,0.972,3939,3.479,3940,0.972,3941,0.972,3942,0.972,3943,0.972,3944,0.86,3945,0.972,3946,1.768,3947,1.768,3948,1.566,3949,2.433,3950,0.86,3951,0.972,3952,1.432,3953,2.433,3954,0.972,3955,1.566,3956,0.972,3957,1.768,3958,0.972,3959,0.972,3960,1.768,3961,7.025,3962,2.433,3963,0.972,3964,3.479,3965,5.135,3966,2.433,3967,0.972,3968,0.86,3969,0.972,3970,0.972,3971,2.996,3972,0.972,3973,2.433,3974,0.972,3975,0.972,3976,0.972,3977,0.972,3978,0.972,3979,0.972,3980,0.972,3981,2.996,3982,1.768,3983,0.972,3984,0.972,3985,2.433,3986,0.972,3987,1.768,3988,2.433,3989,1.768,3990,0.972,3991,0.972,3992,0.972,3993,1.768,3994,2.433,3995,0.972,3996,0.86,3997,0.972,3998,0.972,3999,1.768,4000,0.972,4001,0.86,4002,0.972,4003,0.972,4004,0.972,4005,0.972,4006,2.433,4007,1.768,4008,0.86,4009,0.972,4010,0.972,4011,2.996,4012,0.972,4013,2.433,4014,0.972,4015,0.972,4016,1.768,4017,0.972,4018,0.972,4019,0.972,4020,2.433,4021,1.768,4022,1.768,4023,0.972,4024,1.768,4025,4.265,4026,1.566,4027,2.433,4028,2.996,4029,0.86,4030,0.972,4031,1.768,4032,0.972,4033,2.433,4034,0.972,4035,0.972,4036,0.972,4037,0.972,4038,0.972,4039,0.972,4040,2.433,4041,1.768,4042,0.972,4043,1.768,4044,0.86,4045,0.972,4046,0.972,4047,1.768,4048,1.768,4049,0.972,4050,1.566,4051,0.972,4052,0.972,4053,0.787,4054,0.972,4055,2.433,4056,0.972,4057,0.972,4058,0.972,4059,0.972,4060,1.768,4061,2.433,4062,0.972,4063,0.972,4064,0.972,4065,0.972,4066,0.787,4067,1.768,4068,0.972,4069,0.972,4070,0.972,4071,0.972,4072,0.972,4073,0.972,4074,0.972,4075,0.972,4076,0.732,4077,0.972,4078,0.972,4079,0.972,4080,2.996,4081,0.972,4082,0.972,4083,1.768,4084,0.972,4085,0.972,4086,0.972,4087,0.972,4088,0.972,4089,0.972,4090,0.972,4091,0.972,4092,0.972,4093,0.972,4094,0.86,4095,1.768,4096,0.972,4097,0.972,4098,0.972,4099,0.972,4100,1.768,4101,0.972,4102,0.972,4103,0.86,4104,0.86,4105,0.652,4106,0.972,4107,1.768,4108,1.768,4109,0.972,4110,0.972,4111,0.86,4112,0.972,4113,0.972,4114,2.433,4115,1.566,4116,0.972,4117,1.768,4118,1.768,4119,1.768,4120,0.972,4121,0.86,4122,0.86,4123,0.972,4124,0.86,4125,0.972,4126,0.972,4127,1.768,4128,0.972,4129,2.433,4130,0.972,4131,0.972,4132,0.972,4133,0.972,4134,0.972,4135,0.972,4136,0.972,4137,0.972,4138,0.972,4139,0.972,4140,0.86,4141,0.972,4142,0.787,4143,0.972,4144,0.972,4145,0.86,4146,0.972,4147,0.972,4148,0.972,4149,0.972,4150,0.972,4151,0.972,4152,0.972,4153,0.972,4154,0.972,4155,0.972,4156,0.732,4157,0.86,4158,1.768,4159,1.566,4160,0.972,4161,0.972,4162,0.972,4163,0.972,4164,0.972,4165,0.972,4166,0.972,4167,0.972,4168,0.86,4169,0.787,4170,0.972,4171,0.972,4172,0.787,4173,0.972,4174,0.972,4175,0.972,4176,0.972,4177,0.972]],["title/modules.html",[144,2.529]],["body/modules.html",[24,0.007,80,0.006,81,0.007,82,0.006,143,4.62,144,2.623,149,4.375,171,4.375,176,4.375,287,4.62,290,4.62,291,4.62,292,3.982,293,4.62,1131,5.928,1211,4.913,1430,4.913,1734,4.62,1737,4.62,3511,5.56,4178,9.281,4179,9.281,4180,8.353,4181,8.706]],["title/overview.html",[4182,5.092]],["body/overview.html",[2,0.817,24,0.008,80,0.004,81,0.006,82,0.004,143,6.011,144,1.892,145,2.935,146,4.164,147,4.164,148,4.164,149,6.219,150,5.1,151,3.58,152,2.553,153,2.172,170,2.308,171,5.931,172,4.164,173,4.164,174,4.164,175,4.164,176,5.568,177,5.182,178,4.598,185,1.798,287,6.319,288,4.164,289,4.164,290,5.1,291,5.1,292,5.182,293,5.1,610,4.606,662,5.182,700,1.754,704,4.164,705,4.164,706,4.164,811,4.598,987,4.83,1005,4.83,1143,5.27,1167,4.83,1206,4.164,1207,4.164,1208,4.164,1320,5.42,1430,6.721,1431,4.164,1433,4.164,1434,4.164,1435,4.598,1689,4.83,1706,4.83,1734,6.263,1735,4.164,1736,4.164,1737,6.407,1776,4.83,1808,4.83,1879,4.164,1880,4.164,1881,4.164,1989,4.598,2017,4.164,2018,4.164,2019,4.164,2020,4.598,2089,3.809,2188,3.544,2248,3.809,2264,3.809,4182,3.809,4183,4.704]],["title/todo.html",[63,1.031,2050,2.923,2051,2.748]],["body/todo.html",[0,0.152,5,0.101,10,0.688,12,0.855,16,1.105,24,0.008,25,0.628,26,0.341,32,1.551,39,0.585,52,1.158,57,0.93,63,1.174,64,2.872,65,4.277,69,2.399,80,0.005,81,0.005,82,0.004,88,1.825,110,2.898,111,2.399,112,2.656,114,3.13,124,2.316,142,2.274,153,2.812,156,2.316,169,2.399,182,2.989,187,2.257,202,2.102,242,5.645,245,3.891,246,4.23,251,3.926,266,4.315,295,3.891,301,4.086,305,2.588,306,3.13,309,3.329,329,2.169,359,2.04,454,1.648,455,2.316,508,2.989,513,2.399,548,2.989,550,3.43,576,1.927,583,4.374,596,2.169,610,2.399,616,3.192,633,2.698,634,2.239,651,3.567,700,1.648,709,4.082,711,3.087,718,2.04,722,3.126,733,2.965,750,3.13,755,4.587,756,4.531,808,2.698,812,2.489,844,2.588,845,2.965,847,3.13,872,2.965,875,2.823,905,4.798,906,4.086,944,2.698,945,6.382,951,2.965,1010,2.489,1062,4.086,1114,3.329,1131,2.823,1187,3.13,1202,2.698,1220,4.452,1224,6.171,1237,2.823,1239,2.965,1240,3.13,1252,2.965,1257,3.13,1261,4.938,1262,3.329,1306,2.823,1443,2.965,1509,3.329,1600,2.489,1651,2.489,1755,4.676,1883,2.823,1923,2.698,1932,3.329,2057,4.315,2062,3.13,2081,2.965,2082,3.913,2083,2.823,2084,3.913,2095,3.913,2105,3.913,2113,2.965,2132,3.913,2221,6.084,2222,3.329,2227,3.579,2344,2.823,2453,2.965,2468,3.579,2535,3.913,2539,3.913,2547,3.579,2585,3.579,2620,3.579,2636,3.329,2637,3.13,2725,4.933,2809,3.579,2821,3.579,2823,3.579,3146,3.13,3178,3.579,3208,4.086,3241,3.579,3244,3.329,3391,3.913,3421,3.913,3422,3.579,3497,3.913,3507,3.329,3516,3.329,3702,3.13,3739,3.913,3783,3.913,3866,3.579,4111,5.393,4156,4.589,4184,3.579,4185,4.419,4186,3.913,4187,3.913,4188,3.329,4189,3.579,4190,4.419,4191,4.419,4192,3.913,4193,5.393,4194,4.419,4195,4.938,4196,4.419,4197,4.419,4198,4.419,4199,4.419,4200,3.913,4201,4.419,4202,3.579,4203,4.419,4204,4.419,4205,4.419,4206,3.913,4207,3.913,4208,4.419,4209,4.419,4210,4.419,4211,4.419,4212,4.419,4213,3.13,4214,3.913,4215,4.419,4216,4.419,4217,3.913,4218,3.913,4219,3.913,4220,4.419,4221,3.913,4222,4.419,4223,4.419,4224,4.419,4225,4.419,4226,6.171,4227,4.419,4228,4.419,4229,4.419,4230,4.419,4231,4.419,4232,4.419,4233,3.579,4234,4.419,4235,6.092,4236,3.913,4237,4.419]],["title/miscellaneous/typealiases.html",[3454,2.369,4238,5.559]],["body/miscellaneous/typealiases.html",[9,0.364,12,1.044,16,0.979,20,3.92,24,0.008,26,0.511,39,0.715,52,0.989,71,3.621,80,0.005,81,0.006,82,0.005,97,1.748,194,1.773,196,3.528,202,2.568,248,3.312,347,3.04,358,2.416,378,0.958,383,2.596,448,5.359,454,3.036,718,2.492,720,4.067,721,5.458,722,2.421,726,5.637,738,5.637,739,5.637,771,4.921,816,3.621,854,6.24,963,3.621,1027,3.824,1029,5.637,1030,6.592,1032,5.637,1033,3.824,1034,4.931,1080,4.067,1081,5.245,1083,4.067,1212,4.067,1213,5.461,1214,4.067,1215,5.245,1220,3.448,1235,4.067,1237,3.448,1250,3.621,1251,4.779,1252,3.621,1253,6.163,1254,4.779,1255,4.779,1483,4.067,1497,6.163,1551,4.372,1580,4.372,1581,4.372,1660,4.372,1661,6.163,1668,6.163,1784,4.372,1785,6.163,1830,5.637,2235,4.779,2237,4.372,3272,4.372,3273,5.637,3304,4.372,3454,3.296,3858,4.779,4239,5.398,4240,5.398,4241,5.398,4242,6.962,4243,6.962,4244,7.207,4245,4.779,4246,5.398,4247,5.398,4248,5.398,4249,6.962,4250,6.962,4251,6.163,4252,6.962,4253,4.779,4254,4.779,4255,5.398,4256,5.398,4257,6.962,4258,5.398,4259,5.398,4260,3.621,4261,5.398,4262,5.398,4263,5.398,4264,5.398,4265,5.398]],["title/miscellaneous/variables.html",[2125,3.938,3454,2.369]],["body/miscellaneous/variables.html",[1,1.219,9,0.141,10,0.324,12,1.448,14,0.776,24,0.008,25,0.354,26,0.463,29,0.519,30,0.616,32,2.301,33,2.855,34,1.215,39,0.849,49,0.883,61,0.152,63,0.553,64,0.796,73,1.475,80,0.003,81,0.003,82,0.002,83,2.193,86,2.304,88,1.418,90,1.81,97,1.112,103,0.448,104,2.567,110,2.085,111,1.13,112,3.902,113,1.568,121,2.193,122,3.105,124,1.091,132,1.616,139,1.368,155,1.634,162,2.94,170,1.021,182,2.151,187,0.674,198,1.81,200,1.172,203,0.816,204,0.69,214,1.843,215,1.685,220,0.74,230,2.097,246,1.74,250,1.33,267,1.934,271,3.549,273,1.475,305,1.219,306,1.475,331,1.676,336,1.021,337,0.776,350,1.112,352,2.024,367,1.357,384,1.091,409,1.74,427,0.99,445,1.172,447,1.934,448,1.271,452,1.172,454,0.776,466,1.13,478,1.13,480,1.172,481,1.271,493,1.172,494,1.172,496,1.634,507,0.99,508,1.021,509,0.961,510,0.961,511,0.99,519,1.219,520,1.219,522,1.686,523,1.763,527,3.831,530,1.271,534,2.781,546,1.686,547,2.587,550,1.934,564,4.29,569,1.219,574,3.105,576,0.908,577,1.568,578,1.686,579,3.549,582,1.475,583,1.799,586,1.568,590,2.781,591,2.781,592,1.843,593,1.843,596,1.685,597,2.781,598,2.304,599,1.686,600,2.379,601,1.686,602,1.568,610,3.477,613,1.568,616,1.799,633,3.105,635,1.74,651,1.219,692,1.799,694,2.011,699,2.432,709,1.219,710,1.13,711,1.74,718,0.961,722,0.934,733,1.396,750,1.475,751,1.396,755,1.271,776,1.219,793,1.055,836,1.568,837,1.686,841,1.686,843,3.549,844,1.219,845,1.396,846,1.568,847,4.743,849,1.686,850,2.781,865,2.781,866,1.843,867,2.781,868,4.905,869,1.686,870,1.475,871,1.843,872,2.94,873,2.781,874,1.475,875,2.799,876,1.33,877,2.781,878,1.843,879,3.04,880,1.843,881,1.686,882,1.843,883,1.843,884,1.843,885,1.843,886,1.843,888,1.686,890,1.686,891,4.239,895,1.686,901,1.396,902,3.04,903,1.475,904,1.843,905,1.33,906,2.94,907,3.04,908,2.468,909,1.686,910,3.04,911,1.843,912,2.781,913,1.843,914,1.843,915,1.568,916,2.781,917,1.843,918,1.843,919,1.686,920,1.686,921,1.686,922,1.568,923,1.568,924,1.843,925,1.843,926,1.843,927,1.843,928,4.982,929,2.781,930,4.982,931,1.843,932,1.686,933,1.843,944,1.271,947,2.781,956,1.396,959,1.568,1027,1.475,1031,1.396,1038,2.379,1041,2.432,1042,3.069,1044,2.496,1045,1.799,1046,1.475,1084,1.396,1094,1.396,1109,1.475,1113,1.055,1123,1.686,1124,1.843,1125,1.843,1129,1.396,1135,1.686,1139,1.843,1140,1.843,1149,1.686,1151,3.986,1163,4.063,1174,1.33,1192,1.396,1195,1.219,1202,1.271,1212,1.568,1213,2.94,1214,1.568,1215,2.587,1220,2.193,1221,3.04,1225,2.781,1226,3.04,1229,4.982,1231,2.781,1232,1.843,1233,3.04,1234,1.686,1235,2.587,1236,1.843,1237,1.33,1238,1.686,1239,1.396,1240,1.475,1241,1.568,1242,1.686,1243,1.475,1244,1.843,1245,1.568,1246,3.04,1247,1.843,1248,1.843,1249,1.843,1290,3.698,1322,2.304,1353,1.686,1354,2.781,1442,1.475,1483,1.568,1492,1.686,1499,2.781,1531,2.781,1543,1.33,1626,1.568,1651,1.172,1678,1.843,1680,1.843,1681,1.686,1738,1.686,1743,4.298,1748,1.219,1751,2.781,1752,2.781,1753,2.781,1760,1.686,1761,2.432,1814,1.686,1864,1.686,1889,2.097,1938,1.475,1946,2.587,2039,1.843,2081,1.396,2083,2.193,2113,3.412,2125,1.475,2131,1.843,2168,1.843,2175,3.04,2227,2.781,2336,1.396,2397,1.568,2486,1.33,2553,1.396,2620,1.686,2642,1.396,2669,1.686,2677,1.686,2708,1.843,2709,3.105,2744,3.04,2787,1.686,2892,3.04,2896,1.843,3241,1.686,3249,1.686,3253,1.843,3254,3.04,3255,2.781,3256,3.04,3264,1.843,3265,4.503,3266,3.04,3267,3.88,3272,1.686,3273,4.118,3295,1.843,3296,3.04,3298,1.843,3299,1.843,3300,3.04,3304,1.686,3305,3.04,3306,1.843,3307,3.04,3308,4.503,3356,1.568,3454,1.271,3459,2.432,3461,5.672,3463,1.686,3466,2.587,3519,1.843,3702,1.475,4189,1.686,4202,3.549,4207,1.843,4213,1.475,4217,3.04,4226,3.04,4244,1.843,4245,1.843,4251,1.843,4253,3.04,4254,3.88,4266,6.407,4267,3.434,4268,2.082,4269,2.082,4270,4.383,4271,2.082,4272,4.383,4273,2.082,4274,4.383,4275,2.082,4276,3.434,4277,2.082,4278,2.082,4279,2.082,4280,3.04,4281,2.082,4282,2.082,4283,2.082,4284,2.082,4285,2.082,4286,2.082,4287,2.082,4288,2.082,4289,1.843,4290,2.082,4291,2.082,4292,2.082,4293,2.082,4294,2.082,4295,2.781,4296,1.843,4297,1.843,4298,1.843,4299,2.082,4300,2.082,4301,2.082,4302,3.04,4303,2.082,4304,2.082,4305,2.082,4306,2.082,4307,2.082,4308,1.843,4309,2.082,4310,4.383,4311,2.082,4312,2.082,4313,2.082,4314,2.082,4315,2.082,4316,2.082,4317,2.082,4318,2.082,4319,2.082,4320,2.082,4321,2.082,4322,2.082,4323,2.082,4324,2.082,4325,2.082,4326,2.082,4327,2.082,4328,2.082,4329,2.082,4330,2.082,4331,2.082,4332,2.082,4333,2.082,4334,2.082,4335,1.843,4336,2.082,4337,2.082,4338,2.082,4339,2.082,4340,3.434,4341,3.434,4342,2.082,4343,2.082,4344,2.082,4345,2.082,4346,3.434,4347,3.434]],["title/additional-documentation/nestjs-application.html",[75,1.498,635,1.692,650,1.456,1628,1.692]],["body/additional-documentation/nestjs-application.html",[7,1.2,24,0.007,32,1.15,63,1.2,64,2.695,68,2.026,75,3.834,80,0.004,81,0.005,82,0.005,88,3.386,142,1.367,144,1.817,182,2.216,200,2.543,213,2.885,246,4.255,251,3.482,269,2.645,343,2.543,352,3.947,355,1.644,359,3.255,460,2.855,507,2.941,511,2.941,583,3.24,596,3.034,602,3.403,635,4.156,650,1.969,651,2.645,652,4.148,653,3.657,683,2.149,700,1.684,709,2.645,712,3.775,718,2.085,722,2.773,734,2.885,755,2.758,756,2.451,872,4.73,901,3.03,905,4.503,912,3.657,955,2.289,959,3.403,1061,3.999,1108,3.657,1109,4.38,1117,2.885,1129,5.086,1188,3.403,1190,3.403,1192,3.03,1195,2.645,1241,3.403,1364,4.38,1442,4.994,1443,4.73,1448,3.03,1452,3.657,1509,3.403,1628,3.133,1761,3.199,1917,4.148,2080,3.999,2083,2.885,2098,5.007,2104,5.709,2113,5.086,2221,3.657,2224,3.03,2292,3.999,2295,3.199,2319,3.657,2344,2.885,2453,5.632,2468,3.657,2480,3.403,2485,2.645,2486,3.949,2509,5.709,2642,3.03,2826,5.474,2932,3.403,2971,5.474,2987,3.999,3255,5.709,3356,3.403,3466,3.403,3468,3.657,3470,3.999,3472,3.199,3486,5.312,3511,2.885,3534,3.657,3687,3.403,3691,3.999,3692,3.03,3701,3.999,3702,4.994,3747,3.999,3777,3.199,3847,3.199,3914,3.199,4001,3.999,4008,3.999,4142,3.657,4180,3.999,4200,3.999,4213,3.199,4214,6.242,4218,5.474,4219,5.474,4260,4.148,4280,3.999,4295,5.007,4296,3.999,4297,3.999,4298,3.999,4335,3.999,4348,4.517,4349,3.657,4350,4.517,4351,4.517,4352,3.657,4353,4.517,4354,7.051,4355,3.999,4356,4.517,4357,4.517,4358,4.517,4359,7.942,4360,4.517,4361,4.517,4362,3.999,4363,4.517,4364,4.517,4365,4.517,4366,4.517,4367,6.183,4368,4.517,4369,4.517,4370,4.517,4371,4.517,4372,4.517,4373,4.517,4374,4.517,4375,4.517,4376,4.517,4377,4.517,4378,4.517,4379,4.517,4380,4.517,4381,3.403,4382,4.517,4383,4.517,4384,3.999,4385,4.517,4386,6.183,4387,3.999,4388,4.517,4389,6.183,4390,4.517,4391,5.007,4392,3.999,4393,3.999,4394,4.517,4395,7.051,4396,6.183,4397,4.517,4398,4.517,4399,4.517,4400,3.999,4401,4.517,4402,3.657,4403,3.999,4404,4.517,4405,4.517,4406,4.517,4407,4.517,4408,4.517,4409,4.517]],["title/additional-documentation/nestjs-application/software-architecture.html",[650,1.456,1628,1.692,3535,2.516,4410,2.24]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.548,4,0.072,5,0.072,12,1.334,16,0.934,21,0.466,23,0.469,24,0.004,25,0.243,32,0.341,33,0.998,34,0.536,52,0.448,62,0.729,63,0.356,64,2.811,65,1.712,68,2.14,69,0.727,73,0.948,75,3.253,79,1.009,80,0.002,81,0.002,82,0.001,88,2.95,89,0.754,97,0.433,110,3.398,111,2.349,112,2.714,114,0.948,115,2.015,121,1.505,122,1.438,124,1.99,139,0.228,145,1.998,153,1.088,156,0.702,169,0.727,198,0.973,200,1.776,202,3.75,205,0.898,213,2.426,223,1.084,230,0.817,245,4.954,246,0.678,248,0.637,251,1.327,255,0.948,256,1.548,265,0.784,267,4.921,268,0.948,269,2.224,270,4.026,297,3.497,298,1.908,301,3.455,302,1.009,303,4.028,305,0.784,331,0.901,337,0.499,340,2.774,341,0.637,348,1.941,351,0.754,355,0.857,358,0.817,360,0.702,363,0.727,365,0.727,375,1.156,378,1.066,381,1.234,383,0.879,425,0.784,427,1.501,480,1.776,494,0.754,496,0.637,497,0.855,510,0.618,513,1.279,535,3.083,537,1.009,539,4.863,549,1.009,555,1.438,566,1.38,575,0.855,583,1.653,584,0.948,585,4.088,600,3.125,607,4.524,608,3.673,616,3.801,626,0.898,633,0.817,649,3.145,650,1.375,652,4.028,683,3.583,692,1.99,700,0.879,709,1.847,710,2.795,711,4.125,712,2.643,714,1.58,718,1.754,724,1.926,732,0.727,740,2.234,756,0.727,761,0.855,765,0.817,776,1.38,810,0.855,820,0.948,844,3.371,874,0.948,875,3.975,876,0.855,881,1.084,903,0.948,906,0.898,908,2.139,944,1.438,955,4.168,956,0.898,970,1.38,999,1.669,1031,0.898,1042,1.194,1043,2.9,1044,0.657,1046,0.948,1062,2.116,1068,3.865,1084,2.116,1110,1.009,1111,2.426,1113,1.925,1114,1.009,1115,4.662,1117,0.855,1130,3.381,1163,0.898,1177,1.009,1187,2.234,1188,1.009,1192,1.58,1193,0.855,1195,0.784,1196,2.862,1200,1.669,1230,0.855,1238,1.084,1239,0.898,1240,3.066,1243,2.234,1261,3.066,1263,0.948,1264,3.261,1302,2.086,1304,0.784,1448,0.898,1466,0.948,1536,0.898,1543,0.855,1572,0.948,1600,0.754,1628,0.678,1651,0.754,1763,0.948,1782,2.015,1815,2.426,1874,3.289,1889,2.914,1906,5.809,1907,2.116,1917,1.58,1919,1.669,1923,2.914,1924,2.904,1926,1.009,1932,1.009,1933,1.084,1938,0.948,1940,0.898,1969,1.775,2054,1.669,2055,1.908,2061,1.084,2062,2.234,2065,2.555,2074,2.555,2081,0.898,2083,2.015,2103,2.086,2108,1.009,2119,1.185,2125,0.948,2148,1.185,2156,1.185,2159,1.908,2161,1.185,2164,1.185,2197,1.185,2199,2.793,2222,1.009,2224,0.898,2236,1.185,2237,1.908,2252,2.319,2288,2.086,2295,3.648,2308,6.539,2310,1.009,2315,1.908,2336,1.58,2339,2.234,2344,2.426,2362,1.185,2366,2.691,2368,5.844,2389,1.185,2396,1.775,2419,1.009,2429,2.086,2453,1.58,2463,3.505,2480,1.009,2485,0.784,2492,2.793,2506,1.084,2511,1.009,2513,1.084,2527,3.261,2540,2.862,2544,0.948,2551,3.363,2558,3.381,2559,1.009,2563,1.185,2579,4.884,2582,1.185,2585,1.084,2587,1.185,2593,1.185,2603,1.908,2608,2.555,2636,2.377,2637,0.948,2638,1.084,2642,2.116,2648,3.381,2674,1.084,2707,1.084,2714,0.948,2721,3.832,2722,1.084,2732,2.086,2763,2.793,2766,2.904,2770,0.948,2780,2.086,2786,2.793,2818,1.185,2823,1.084,2828,1.009,2841,1.084,2867,2.862,2869,1.084,2878,1.084,2930,1.084,2932,1.009,2968,1.185,2975,1.185,2986,2.086,3007,2.234,3008,3.832,3025,1.775,3039,1.775,3068,1.084,3100,1.084,3103,1.084,3107,3.363,3108,1.009,3114,2.377,3117,1.084,3130,1.185,3136,1.908,3166,1.185,3178,4.17,3191,1.185,3208,0.898,3218,1.185,3228,1.775,3248,2.086,3440,1.908,3466,2.377,3472,1.669,3473,1.669,3474,2.234,3477,2.691,3480,0.948,3483,1.908,3485,1.185,3486,1.009,3503,1.009,3507,1.009,3511,1.505,3523,1.775,3534,1.908,3535,1.009,3546,2.086,3548,1.084,3551,1.185,3556,1.185,3559,1.185,3562,1.185,3573,1.185,3584,1.185,3596,1.908,3597,3.596,3600,3.865,3603,1.775,3615,2.862,3630,1.185,3635,4.524,3654,0.898,3657,1.185,3659,2.086,3675,1.084,3677,2.793,3681,1.185,3683,1.185,3690,1.185,3692,2.116,3700,1.185,3708,5.34,3713,1.084,3715,1.084,3717,1.908,3719,1.084,3721,1.185,3741,0.948,3748,2.862,3752,1.185,3777,0.948,3778,1.185,3796,1.185,3806,1.084,3810,0.948,3824,1.185,3827,1.185,3832,1.185,3836,2.086,3847,0.948,3849,1.185,3867,1.185,3880,2.086,3881,3.832,3891,2.555,3902,1.084,3911,3.363,3912,1.185,3914,0.948,3916,1.185,3924,1.084,3944,1.185,3948,1.185,3950,1.185,3952,4.662,3955,1.185,3968,1.185,3996,4.225,4026,1.185,4044,1.185,4053,4.17,4076,4.836,4103,1.185,4104,1.185,4105,4.028,4115,1.185,4145,2.086,4157,1.185,4172,1.084,4182,1.084,4184,1.908,4187,1.185,4188,3.596,4193,1.185,4221,2.086,4236,1.185,4352,1.084,4381,1.009,4392,1.185,4410,5.288,4411,1.339,4412,1.339,4413,5.51,4414,5.757,4415,2.356,4416,3.155,4417,2.793,4418,4.433,4419,2.356,4420,2.793,4421,5.15,4422,1.339,4423,1.339,4424,2.862,4425,3.363,4426,1.339,4427,1.339,4428,1.339,4429,1.339,4430,1.339,4431,2.356,4432,2.356,4433,1.339,4434,1.339,4435,4.329,4436,1.339,4437,1.339,4438,3.155,4439,2.356,4440,1.339,4441,1.339,4442,1.339,4443,1.339,4444,6.722,4445,1.339,4446,1.339,4447,1.339,4448,1.339,4449,2.356,4450,4.773,4451,1.339,4452,1.339,4453,2.356,4454,2.356,4455,3.798,4456,3.155,4457,3.798,4458,1.339,4459,3.363,4460,3.363,4461,1.339,4462,1.339,4463,1.339,4464,1.339,4465,1.339,4466,1.339,4467,3.076,4468,2.356,4469,1.084,4470,2.793,4471,1.339,4472,1.339,4473,1.339,4474,7.144,4475,1.339,4476,6.728,4477,1.339,4478,2.086,4479,1.339,4480,2.356,4481,1.084,4482,4.078,4483,5.757,4484,1.339,4485,2.793,4486,2.086,4487,2.356,4488,1.339,4489,1.339,4490,1.339,4491,1.339,4492,1.339,4493,3.363,4494,2.356,4495,1.339,4496,1.185,4497,1.339,4498,1.339,4499,1.339,4500,1.185,4501,1.339,4502,2.555,4503,1.339,4504,1.339,4505,1.339,4506,1.339,4507,1.339,4508,1.339,4509,1.339,4510,1.185,4511,2.356,4512,1.339,4513,3.155,4514,1.339,4515,1.339,4516,1.339,4517,3.076,4518,2.356,4519,1.339,4520,2.356,4521,3.155,4522,1.339,4523,1.339,4524,1.339,4525,2.086,4526,2.356,4527,3.155,4528,1.339,4529,1.339,4530,1.339,4531,1.339,4532,1.339,4533,1.339,4534,1.185,4535,1.339,4536,2.356,4537,1.339,4538,1.339,4539,5.757,4540,1.339,4541,1.185,4542,1.084,4543,1.339,4544,1.339,4545,1.339,4546,1.009,4547,1.339,4548,1.339,4549,1.339,4550,1.339,4551,3.155,4552,1.339,4553,2.356,4554,3.155,4555,1.339,4556,1.339,4557,1.339,4558,1.339,4559,2.356,4560,1.339,4561,1.339,4562,1.339,4563,2.086,4564,1.339,4565,1.185,4566,1.339,4567,1.339,4568,2.356,4569,1.339,4570,1.185,4571,1.339,4572,2.356,4573,1.339,4574,1.339,4575,1.185,4576,1.339,4577,1.339,4578,1.185,4579,1.339,4580,1.339,4581,2.356,4582,1.339,4583,1.339,4584,1.339,4585,1.339,4586,1.339,4587,1.185,4588,1.339,4589,1.339,4590,1.339,4591,1.185,4592,1.185,4593,3.155,4594,1.339,4595,1.339,4596,1.339,4597,1.339,4598,1.339,4599,1.339,4600,2.356,4601,1.339,4602,1.185,4603,1.339,4604,3.155,4605,1.339,4606,1.339,4607,2.356,4608,1.339,4609,2.356,4610,1.339,4611,1.339,4612,1.339,4613,1.339,4614,1.339,4615,1.339,4616,1.339,4617,2.356,4618,1.339,4619,1.339,4620,1.339,4621,1.339,4622,1.339,4623,1.339,4624,1.339,4625,1.339,4626,7.687,4627,1.339,4628,1.339,4629,4.329,4630,1.185,4631,1.339,4632,1.339,4633,2.356,4634,1.339,4635,1.339,4636,1.339,4637,1.339,4638,1.339,4639,1.339,4640,1.339,4641,1.185,4642,1.339,4643,1.339,4644,1.339,4645,1.185,4646,1.339,4647,1.339,4648,1.339,4649,1.339,4650,2.356,4651,1.339,4652,1.339,4653,2.377,4654,1.339,4655,1.339,4656,1.084,4657,1.339,4658,1.339,4659,1.339,4660,4.329,4661,1.339,4662,1.339,4663,1.339,4664,1.339,4665,1.339,4666,1.339,4667,1.339,4668,1.339,4669,1.339,4670,1.339,4671,1.339,4672,1.339,4673,1.339,4674,2.356,4675,1.339,4676,1.339,4677,2.356,4678,1.339,4679,1.339,4680,1.339,4681,2.356,4682,1.339,4683,1.339,4684,1.339,4685,1.339,4686,1.339,4687,1.185,4688,2.356,4689,1.339,4690,2.356,4691,1.339,4692,1.339,4693,1.339,4694,1.185,4695,2.356]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[88,1.211,650,1.278,1628,1.486,4410,1.967,4482,2.077]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.263,2,0.418,3,0.088,4,0.074,5,0.175,10,0.753,12,1.174,16,0.436,18,0.506,20,1.354,21,0.691,24,0.008,25,0.73,26,0.216,29,1.512,30,0.712,32,0.612,34,0.656,51,0.158,52,0.967,61,0.225,64,3.268,65,2.096,68,1.732,69,3.964,74,2.466,75,1.078,80,0.005,81,0.003,82,0.002,88,1.594,110,3.082,111,2.626,122,1.468,123,3.716,124,1.26,132,1.049,139,0.822,142,2.553,144,3.08,145,1.11,155,1.837,156,2.023,169,3.516,170,2.977,171,1.613,176,3.246,177,2.358,178,3.538,182,2.977,184,0.517,187,1.25,200,1.354,202,2.635,204,1.279,205,1.613,217,0.993,220,1.372,246,2.452,248,3.082,250,3.538,257,1.811,258,1.947,265,2.261,266,1.703,267,3.12,269,2.834,295,3.09,305,2.261,331,0.919,335,1.305,340,2.452,341,1.144,348,2.721,350,1.566,355,1.405,359,1.11,366,1.354,378,0.427,454,1.804,480,2.174,511,1.144,513,1.305,523,0.967,535,3.648,540,1.811,545,1.613,548,3.341,550,1.354,566,1.408,573,2.834,576,3.086,583,2.023,585,3.695,596,1.18,598,1.613,607,3.645,633,1.468,635,3.074,649,3.705,650,2.11,651,1.408,653,1.947,655,1.947,660,2.129,662,3.956,683,3.711,692,1.26,700,1.44,708,1.536,709,3.553,710,3.516,713,3.246,714,1.613,715,1.613,716,1.613,718,2.558,721,1.703,722,1.078,724,1.468,728,1.468,733,2.59,740,1.703,755,2.954,774,2.735,776,1.408,798,1.811,821,2.735,824,1.811,844,1.408,861,2.129,872,1.613,875,1.536,906,3.246,908,3.12,943,3.918,945,3.127,955,3.701,956,1.613,963,1.613,966,1.703,970,2.261,997,1.811,1010,2.725,1038,2.096,1110,1.811,1111,2.466,1118,1.811,1130,1.703,1151,1.703,1163,2.59,1177,2.909,1195,2.834,1200,2.735,1202,1.468,1239,2.59,1252,1.613,1288,1.811,1290,2.358,1297,1.613,1306,3.875,1312,1.811,1315,1.703,1331,2.129,1332,2.129,1333,2.129,1334,2.129,1335,2.129,1336,2.129,1345,1.947,1364,3.427,1442,1.703,1495,2.129,1536,1.613,1600,2.174,1651,2.174,1652,1.947,1743,1.613,1755,1.613,1815,1.536,1874,1.536,1883,1.536,1889,1.468,1906,4.748,1917,2.59,1923,1.468,1924,3.246,1939,1.703,2014,1.613,2020,1.536,2034,4.913,2061,3.918,2065,1.947,2081,4.346,2125,1.703,2159,4.486,2181,2.129,2252,2.358,2307,2.129,2339,2.735,2344,1.536,2366,2.735,2368,1.811,2397,1.811,2398,2.909,2485,2.261,2511,1.811,2540,1.811,2544,1.703,2546,1.947,2552,1.947,2553,2.59,2558,1.703,2559,1.811,2579,1.703,2603,3.918,2613,1.947,2660,2.909,2668,2.129,2670,2.129,2709,4.297,2751,2.129,2757,1.947,2760,2.129,2766,1.613,2770,1.703,2773,2.129,2791,2.129,2792,2.129,2873,2.129,2920,2.129,2992,1.811,3025,1.811,3079,2.129,3083,1.947,3103,1.947,3113,1.811,3208,1.613,3463,1.947,3473,5.173,3479,2.129,3480,1.703,3486,4.173,3495,2.129,3503,1.811,3504,2.129,3511,1.536,3517,1.947,3522,1.947,3523,4.173,3527,2.129,3558,2.129,3572,1.947,3574,2.129,3603,1.811,3613,3.918,3615,1.811,3635,1.811,3649,2.129,3654,1.613,3675,1.947,3684,1.947,3685,2.129,3687,1.811,3692,1.613,3705,2.129,3713,1.947,3719,1.947,3741,1.703,3748,1.811,3777,2.735,3789,2.129,3810,1.703,3847,1.703,3902,1.947,3914,1.703,3952,3.127,4029,4.284,4066,3.127,4076,2.909,4105,1.613,4124,2.129,4172,1.947,4188,4.173,4189,3.918,4195,5.173,4202,3.918,4233,3.918,4260,3.246,4289,2.129,4302,2.129,4308,2.129,4352,1.947,4355,2.129,4391,3.127,4410,3.246,4413,2.129,4424,1.811,4444,3.918,4460,2.129,4476,6.574,4478,2.129,4481,3.127,4482,4.297,4496,2.129,4500,2.129,4502,1.947,4510,2.129,4517,1.947,4525,2.129,4534,3.418,4541,4.284,4546,2.909,4575,2.129,4578,3.418,4592,4.284,4602,3.418,4641,3.418,4645,2.129,4653,1.811,4696,1.947,4697,2.129,4698,2.404,4699,4.839,4700,2.404,4701,6.027,4702,2.404,4703,3.861,4704,5.54,4705,2.404,4706,2.404,4707,2.404,4708,2.404,4709,2.404,4710,2.404,4711,2.404,4712,3.861,4713,2.404,4714,2.404,4715,2.404,4716,2.129,4717,3.861,4718,4.839,4719,2.404,4720,2.404,4721,2.404,4722,2.404,4723,2.404,4724,2.404,4725,2.129,4726,3.861,4727,2.404,4728,1.947,4729,2.404,4730,2.404,4731,2.404,4732,2.404,4733,2.404,4734,2.404,4735,2.404,4736,2.404,4737,3.861,4738,3.861,4739,2.404,4740,2.404,4741,3.861,4742,2.404,4743,2.404,4744,2.404,4745,2.404,4746,2.404,4747,2.404,4748,2.404,4749,2.404,4750,2.404,4751,2.404,4752,2.404,4753,2.404,4754,2.404,4755,2.404,4756,2.404,4757,2.404,4758,2.404,4759,2.404,4760,2.404,4761,2.404,4762,2.404,4763,1.811,4764,2.404,4765,2.404,4766,2.404,4767,2.404,4768,2.404,4769,2.129,4770,2.404,4771,2.404,4772,2.404,4773,2.404,4774,2.404,4775,2.404,4776,2.404,4777,2.129,4778,2.404,4779,2.404,4780,1.947,4781,2.404,4782,2.129,4783,2.404,4784,2.404,4785,2.404,4786,2.404,4787,2.404,4788,2.404,4789,2.404,4790,2.404,4791,2.129,4792,2.404]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[650,1.278,1628,1.486,4195,2.077,4424,2.209,4793,2.596]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[12,1.635,21,0.369,24,0.008,29,0.942,34,1.191,39,0.501,52,0.775,63,1.004,64,3.272,65,3.474,69,4.203,74,2.414,75,3.473,80,0.003,81,0.005,82,0.003,88,2.253,109,3.061,112,1.648,115,3.484,123,2.535,132,1.033,139,0.927,153,1.745,187,1.224,194,1.389,204,1.252,220,2.641,223,4.418,230,2.308,248,2.595,251,3.072,267,4.496,268,4.534,269,2.213,270,2.308,295,2.414,298,4.418,301,2.535,302,2.848,303,2.535,322,1.603,329,1.855,348,2.447,350,2.072,352,1.745,367,1.688,378,0.671,383,1.41,426,1.981,455,1.981,468,3.659,523,1.52,535,3.605,549,4.822,566,4.104,585,2.051,608,2.535,616,1.981,626,2.535,633,2.308,635,2.764,649,4.99,683,1.798,692,2.859,710,4.519,715,2.535,716,2.535,718,2.519,774,3.864,793,1.915,874,2.677,875,2.414,887,2.308,901,2.535,908,3.072,955,3.766,963,2.535,966,2.677,1094,3.659,1109,2.677,1113,1.915,1129,2.535,1193,4.088,1195,3.195,1250,2.535,1257,2.677,1288,2.848,1448,2.535,1543,2.414,1572,2.677,1583,3.346,1614,3.346,1681,3.061,1755,2.535,1782,2.414,1815,2.414,1874,2.414,1906,2.535,2054,2.677,2057,2.677,2154,5.667,2184,3.346,2252,2.308,2344,3.484,2366,4.534,2396,2.848,2398,2.848,2519,3.061,2527,2.848,2553,2.535,2557,4.418,2613,3.061,2648,2.677,2675,3.346,2714,2.677,2766,2.535,2770,5.264,2867,2.848,2878,3.061,3007,3.864,3068,3.061,3083,4.418,3108,2.848,3208,3.659,3228,2.848,3366,3.061,3459,2.677,3473,2.677,3474,3.864,3477,3.864,3480,2.677,3514,3.061,3516,2.848,3572,4.418,3597,5.834,3603,2.848,3609,3.061,3615,2.848,3654,2.535,3692,3.659,3741,3.864,3810,2.677,3847,3.864,3914,2.677,4053,3.061,4076,2.848,4094,3.346,4105,2.535,4142,3.061,4156,2.848,4168,4.83,4169,3.061,4184,3.061,4195,6.275,4260,2.535,4349,3.061,4381,2.848,4391,3.061,4410,4.702,4420,3.346,4424,4.11,4425,3.346,4467,3.061,4469,3.061,4476,5.599,4517,3.061,4546,4.11,4565,3.346,4570,3.346,4591,3.346,4630,3.346,4656,3.061,4696,3.061,4701,4.83,4716,4.83,4763,2.848,4777,3.346,4780,3.061,4782,3.346,4793,3.346,4794,3.78,4795,3.78,4796,3.78,4797,3.78,4798,3.78,4799,3.78,4800,3.78,4801,3.78,4802,5.455,4803,3.78,4804,3.78,4805,3.78,4806,3.78,4807,3.78,4808,3.78,4809,3.78,4810,3.78,4811,3.78,4812,3.78,4813,3.78,4814,3.78,4815,3.78,4816,3.78,4817,3.346,4818,3.78,4819,3.78,4820,3.78,4821,3.346,4822,3.78,4823,3.78,4824,3.346,4825,3.78,4826,3.78,4827,3.78,4828,3.78,4829,3.78,4830,3.78,4831,4.83,4832,3.78,4833,3.78,4834,3.78,4835,3.78,4836,3.78,4837,3.78,4838,3.78,4839,3.78,4840,3.78,4841,3.78,4842,3.78,4843,3.78,4844,3.78,4845,3.78,4846,3.78,4847,3.78,4848,3.78,4849,3.78,4850,3.78,4851,3.78,4852,3.78,4853,3.78,4854,3.78,4855,3.78,4856,3.78,4857,3.78,4858,3.78,4859,3.78,4860,3.78,4861,3.346,4862,5.455,4863,3.78,4864,3.061,4865,3.78,4866,3.346,4867,3.78,4868,3.78,4869,3.78,4870,3.78,4871,3.061]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[297,1.872,650,1.278,1628,1.486,4105,1.967,4418,2.374]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.212,18,0.954,24,0.008,25,0.467,26,0.425,32,2.024,39,1.15,51,0.289,61,0.157,64,2.902,75,2.031,80,0.004,81,0.005,82,0.005,88,2.916,89,2.55,90,1.87,94,5.017,97,2.006,109,3.667,110,2.947,111,3.832,112,3.466,115,2.893,121,2.893,122,2.765,124,4.165,142,2.406,156,3.246,184,0.974,187,1.466,200,2.55,213,4.509,243,3.667,246,2.295,248,3.359,250,2.893,265,2.652,267,4.477,268,3.208,269,3.628,270,2.765,292,3.783,295,2.893,297,3.957,301,3.038,303,5.092,309,3.412,331,1.731,359,2.091,362,2.458,378,1.1,535,3.489,555,3.783,596,2.222,609,1.975,610,4.643,616,4.547,632,4.01,633,3.783,634,2.295,635,3.139,636,3.208,644,3.667,645,4.388,649,2.765,650,2.701,651,4.135,683,2.947,711,2.295,713,3.038,821,3.208,844,2.652,875,4.509,876,5.464,905,3.957,909,3.667,955,2.295,970,3.628,1062,4.156,1067,4.01,1068,3.667,1070,4.01,1074,4.01,1076,4.01,1077,4.01,1111,2.893,1113,3.139,1130,3.208,1187,3.208,1189,4.01,1192,3.038,1200,4.388,1202,3.783,1344,4.388,1440,4.01,1590,4.01,1600,2.55,1909,4.01,2046,3.667,2171,3.412,2252,2.765,2336,3.038,2485,2.652,2511,3.412,2544,3.208,2776,4.01,2828,3.412,2979,5.484,3472,3.208,3698,4.01,3823,4.01,4066,3.667,4105,3.038,4387,4.01,4418,5.017,4542,3.667,4587,4.01,4725,4.01,4728,3.667,4763,3.412,4769,4.01,4780,3.667,4791,4.01,4871,3.667,4872,4.529,4873,7.591,4874,4.529,4875,4.529,4876,7.591,4877,4.01,4878,4.529,4879,4.529,4880,7.061,4881,4.529,4882,4.529,4883,4.529,4884,6.195,4885,4.529,4886,4.529,4887,4.529,4888,4.529,4889,4.01,4890,4.529,4891,6.195,4892,4.529,4893,4.529,4894,4.529,4895,4.529,4896,4.529,4897,4.529,4898,4.529,4899,4.529,4900,4.529,4901,4.529,4902,4.529,4903,4.529]],["title/additional-documentation/nestjs-application/testing.html",[650,1.692,1117,2.478,1628,1.966]],["body/additional-documentation/nestjs-application/testing.html",[0,0.12,1,1.246,2,0.37,12,0.861,13,1.723,21,0.435,23,0.316,24,0.008,25,0.459,32,1.312,51,0.143,52,0.302,55,0.487,64,3.057,69,2.415,74,2.233,75,2.553,80,0.004,81,0.003,82,0.002,88,2.528,103,0.457,110,1.012,112,0.928,121,2.842,122,3.476,132,1.279,139,0.594,142,2.234,144,1.406,145,2.055,153,0.982,155,2.117,156,2.332,170,1.044,177,2.135,187,1.441,188,1.884,189,1.884,195,0.954,198,0.879,200,4.056,202,1.012,203,0.834,205,1.427,209,1.884,220,2.622,246,4.49,248,1.012,251,2.506,255,1.507,257,1.603,266,1.507,267,2.506,269,1.246,292,1.299,299,1.723,329,1.715,337,0.793,348,0.954,352,0.982,364,1.198,365,1.155,367,0.658,426,2.332,452,1.198,454,1.922,485,1.359,496,1.012,509,0.982,510,0.982,513,1.897,535,2.902,537,1.603,548,1.044,575,1.359,576,2.247,583,4.6,585,3.09,587,5.419,596,1.044,599,4.61,600,3.09,601,4.173,602,4.289,607,1.603,608,2.985,613,1.603,616,1.115,635,1.078,645,1.507,647,2.233,648,3.095,649,3.737,651,1.246,683,2.452,689,1.507,694,1.246,708,1.359,710,1.155,711,2.255,718,2.379,724,2.135,732,1.897,740,1.507,750,1.507,765,2.135,769,2.047,788,3.018,808,1.299,812,2.506,816,1.427,821,1.507,844,4.322,845,1.427,870,1.507,876,1.359,887,3.949,903,1.507,905,3.909,906,3.457,908,3.447,923,1.603,944,1.299,946,1.723,951,1.427,952,2.476,955,3.74,966,1.507,1010,4.388,1041,1.507,1042,1.078,1108,1.723,1111,2.233,1113,1.772,1117,5.26,1163,2.345,1190,1.603,1191,1.884,1193,1.359,1194,1.884,1196,3.882,1200,1.507,1202,2.717,1211,2.634,1213,2.345,1228,1.884,1230,1.359,1241,1.603,1250,1.427,1252,1.427,1257,4.335,1260,2.831,1263,1.507,1284,1.507,1285,2.634,1288,2.634,1304,1.246,1306,1.359,1318,1.427,1320,1.359,1357,1.884,1435,2.842,1442,4.033,1443,2.345,1448,3.457,1452,1.723,1486,1.884,1536,3.457,1543,2.842,1580,1.723,1581,1.723,1600,1.198,1651,1.198,1734,2.476,1754,1.884,1763,1.507,1815,1.359,1866,1.427,1883,1.359,1889,2.135,1906,4.693,1907,2.985,1923,1.299,1924,3.457,1926,1.603,1938,4.033,1939,1.507,1940,1.427,2014,1.427,2034,1.723,2051,1.507,2062,1.507,2178,3.095,2188,1.603,2189,1.884,2207,1.884,2214,5.04,2224,1.427,2252,1.299,2257,5.726,2283,1.884,2308,1.603,2326,1.884,2332,1.723,2336,2.345,2344,2.233,2345,1.723,2364,4.173,2368,1.603,2374,1.723,2398,1.603,2419,1.603,2438,1.884,2450,1.884,2463,1.723,2471,1.884,2485,4.563,2527,2.634,2542,1.884,2544,4.335,2546,1.723,2552,1.723,2553,1.427,2555,1.723,2558,4.335,2568,1.884,2579,2.476,2591,1.884,2608,1.723,2637,2.476,2638,1.723,2648,1.507,2660,4.611,2687,3.604,2706,1.723,2711,2.831,2714,1.507,2716,1.884,2725,1.723,2758,1.884,2770,2.476,2787,3.604,2869,1.723,2911,3.94,2932,1.603,2967,1.723,2993,2.634,2999,1.723,3007,4.033,3025,1.603,3032,5.419,3039,2.634,3113,1.603,3114,1.603,3145,1.723,3171,1.884,3208,1.427,3225,1.884,3249,1.723,3356,2.634,3397,1.884,3422,1.723,3459,4.033,3473,3.65,3474,2.476,3477,2.476,3507,3.353,3511,2.233,3514,2.831,3516,1.603,3517,1.723,3522,1.723,3535,1.603,3548,1.723,3557,1.884,3575,1.884,3596,1.723,3597,3.353,3600,1.723,3607,3.095,3609,2.831,3635,1.603,3645,1.884,3653,1.884,3654,1.427,3684,1.723,3687,2.634,3692,3.457,3693,1.884,3708,2.831,3715,1.723,3717,1.723,3736,1.884,3741,1.507,3745,1.884,3748,1.603,3777,1.507,3790,1.884,3806,1.723,3810,1.507,3815,1.884,3866,1.723,3872,1.884,3882,5.419,3891,1.723,3924,1.723,4050,1.884,4121,1.884,4122,1.884,4140,4.563,4156,1.603,4188,3.353,4192,1.884,4195,1.507,4206,1.884,4213,2.476,4233,1.723,4260,1.427,4349,1.723,4362,1.884,4381,5.089,4384,1.884,4393,1.884,4417,1.884,4444,1.723,4459,1.884,4467,1.723,4470,3.095,4476,5.426,4481,1.723,4482,4.033,4485,1.884,4486,1.884,4502,1.723,4542,1.723,4546,3.882,4653,1.603,4656,3.604,4694,3.095,4696,4.173,4697,1.884,4728,1.723,4763,4.289,4817,1.884,4821,1.884,4824,1.884,4831,1.884,4861,5.04,4866,1.884,4871,2.831,4877,1.884,4889,1.884,4904,3.496,4905,2.128,4906,2.128,4907,2.128,4908,2.128,4909,2.128,4910,2.128,4911,2.128,4912,2.128,4913,2.128,4914,2.128,4915,2.128,4916,2.128,4917,2.128,4918,2.128,4919,2.128,4920,3.496,4921,2.128,4922,2.128,4923,2.128,4924,2.128,4925,2.128,4926,2.128,4927,2.128,4928,2.128,4929,2.128,4930,2.128,4931,2.128,4932,2.128,4933,2.128,4934,2.128,4935,2.128,4936,2.128,4937,2.128,4938,2.128,4939,2.128,4940,2.128,4941,2.128,4942,2.128,4943,2.128,4944,2.128,4945,2.128,4946,2.128,4947,2.128,4948,2.128,4949,2.128,4950,2.128,4951,2.128,4952,3.496,4953,2.128,4954,3.496,4955,2.128,4956,2.128,4957,2.128,4958,3.496,4959,2.128,4960,2.128,4961,2.128,4962,4.45,4963,3.496,4964,3.496,4965,2.128,4966,2.128,4967,5.154,4968,2.128,4969,2.128,4970,2.128,4971,2.128,4972,2.128,4973,2.128,4974,3.496,4975,2.128,4976,3.496,4977,2.128,4978,3.496,4979,2.128,4980,2.128,4981,2.128,4982,2.128,4983,2.128,4984,3.496,4985,3.496,4986,2.128,4987,3.496,4988,2.128,4989,2.128,4990,2.128,4991,2.128,4992,3.496,4993,2.128,4994,2.128,4995,2.128,4996,2.128,4997,2.128,4998,2.128,4999,3.496,5000,3.496,5001,2.128,5002,2.128,5003,2.128,5004,2.128,5005,2.128,5006,2.128,5007,2.128,5008,2.128,5009,2.128,5010,2.128,5011,2.128,5012,2.128,5013,2.128,5014,2.128,5015,3.496,5016,2.128,5017,2.128,5018,2.128,5019,2.128,5020,2.128,5021,2.128,5022,2.128,5023,2.128,5024,2.128,5025,2.128,5026,2.128,5027,2.128,5028,2.128,5029,2.128,5030,2.128,5031,2.128,5032,2.128,5033,2.128,5034,2.128,5035,2.128,5036,2.128,5037,2.128,5038,2.128,5039,2.128,5040,2.128,5041,2.128,5042,2.128,5043,2.128,5044,2.128,5045,2.128,5046,2.128,5047,2.128]],["title/additional-documentation/nestjs-application/decisions.html",[650,1.692,1628,1.966,4864,3.142]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.291,16,1.086,24,0.007,29,1.493,52,0.851,54,2.409,55,1.372,64,3.09,69,4.034,80,0.005,81,0.006,82,0.005,110,2.848,245,3.824,256,2.938,270,3.656,360,3.138,511,3.536,535,3.372,595,4.511,596,2.938,600,3.25,635,3.034,711,3.034,715,4.987,716,4.017,732,3.25,844,3.507,948,4.017,952,4.241,955,3.034,1131,5.163,1201,5.301,1230,5.163,1237,3.824,1257,4.241,1536,4.987,1600,3.372,1889,4.539,1923,3.656,2054,4.241,2074,6.02,2224,4.017,2315,4.849,2339,4.241,2424,5.301,2480,6.09,2485,3.507,2509,4.849,2650,5.301,2709,4.241,2722,4.849,2766,4.017,2862,5.301,2884,6.581,3062,5.301,3113,4.511,3472,4.241,3654,4.017,4169,4.849,4410,4.017,4469,6.02,4482,4.241,4493,5.301,4653,4.511,4687,5.301,4864,6.02,5048,5.988,5049,5.988,5050,5.988,5051,5.988,5052,5.988,5053,5.988,5054,5.988,5055,5.988,5056,5.988,5057,7.434,5058,5.988,5059,5.988,5060,5.988,5061,5.988,5062,5.988,5063,5.988,5064,5.988,5065,5.988,5066,5.988,5067,5.988,5068,5.988,5069,5.988,5070,5.988,5071,5.988]],["title/additional-documentation/nestjs-application/vscode.html",[650,1.692,1628,1.966,4402,3.142]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.18,24,0.007,65,4.261,74,4.182,75,3.521,80,0.006,81,0.007,82,0.006,246,3.978,297,4.182,359,3.023,535,3.687,583,3.431,635,3.978,722,3.521,755,4.793,999,4.638,1250,4.392,1466,4.638,1889,3.998,1940,4.392,1969,4.933,2099,5.302,2113,4.392,2295,4.638,2485,3.835,2553,4.392,2757,6.357,3487,6.95,3613,5.302,3702,4.638,3812,5.797,4159,7.444,4186,5.797,4213,5.561,4260,4.392,4295,5.302,4400,5.797,4402,6.357,4403,5.797,5072,6.548,5073,6.548,5074,6.548,5075,6.548,5076,6.548,5077,6.548,5078,6.548,5079,6.548,5080,6.548,5081,6.548]],["title/additional-documentation/nestjs-application/git.html",[650,1.692,1628,1.966,3521,3.142]],["body/additional-documentation/nestjs-application/git.html",[24,0.007,80,0.006,81,0.007,82,0.006,305,4.184,331,2.731,510,3.299,1111,4.564,1113,3.621,1743,4.793,3146,5.061,3244,6.226,3521,7.061,4563,6.326,5082,7.145,5083,7.145,5084,7.145,5085,7.145,5086,7.145]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":793,"title":{},"body":{"classes/FilterOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/RoleRepo.html":{},"classes/TaskHelper.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":3384,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":3423,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":3434,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":3346,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":3336,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":3345,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":3412,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":3445,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":3437,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":3405,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3396,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":3330,"title":{},"body":{"dependencies.html":{}}}],["0.7.6",{"_index":3399,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":3395,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":3388,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":3251,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3303,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3287,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3293,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3292,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":3282,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3261,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3271,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3250,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3284,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3268,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3280,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3291,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3294,"title":{},"body":{"coverage.html":{}}}],["0000d224816abba584714c9c",{"_index":5022,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":5024,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":2146,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":2141,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2271,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":2138,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":2069,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2134,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2405,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2266,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":788,"title":{},"body":{"classes/FilterOptions.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/TaskHelper.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":3413,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3426,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":3371,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":3358,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":3408,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":4974,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":3368,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3453,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":3424,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":3341,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":4976,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":3337,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["1.22.2",{"_index":3374,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":3316,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":3349,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":3252,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3260,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3258,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":3283,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":3288,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3281,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":3297,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":3290,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1626,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":795,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{},"coverage.html":{},"index.html":{}}}],["11",{"_index":2122,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["12",{"_index":2516,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":3415,"title":{},"body":{"dependencies.html":{}}}],["1289",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2264,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["1316",{"_index":2871,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":2682,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":2129,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["1499",{"_index":2170,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":2117,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":2200,"title":{},"body":{"changelog.html":{}}}],["1589",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2108,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":3369,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2291,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":2538,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":2347,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":2248,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["1996",{"_index":3764,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":5065,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":5064,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":2364,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.0.3",{"_index":3407,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":3372,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":3386,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":3409,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":3433,"title":{},"body":{"dependencies.html":{}}}],["2.306.0",{"_index":3335,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":3333,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":3353,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":3289,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2241,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":3532,"title":{},"body":{"license.html":{}}}],["2020",{"_index":2515,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":2068,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2101,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2089,"title":{},"body":{"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["22.10.0",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":3203,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2803,"title":{},"body":{"changelog.html":{}}}],["23.0.0",{"_index":3097,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":3092,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":3080,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":3076,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":3070,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":3065,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":3050,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":3046,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":3043,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":3037,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":3029,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":3001,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2094,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":2994,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":2989,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":2964,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":2963,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":2962,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":2957,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":2956,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":2952,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":2945,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":2941,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":2934,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":2925,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":2921,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":2918,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":2915,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":2909,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":2906,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":2895,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["2466",{"_index":2096,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2285,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":2891,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":2888,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":2854,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":2848,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":2886,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":2877,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":2875,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":2874,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":2870,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":2863,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":2824,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":2819,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":2810,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":2532,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":2566,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":2560,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":2549,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":2530,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":2528,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":2523,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":2520,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":2514,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":2510,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":2505,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":2504,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":2474,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":2473,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":2421,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":2420,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":2417,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":2415,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":2412,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":2408,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":2404,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":2469,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":2414,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":2447,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":2445,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":2436,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":2434,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":2431,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":2425,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":2371,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":2369,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":2300,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":2294,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":2321,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":2317,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":2363,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":2360,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":2355,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":2351,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":2346,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":2333,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":2327,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":2328,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26.0",{"_index":2296,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":2302,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":2299,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":2265,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":2263,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":2258,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":2255,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":2250,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":2247,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":2240,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":2298,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":2290,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":2284,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":2282,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":2279,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":2277,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":2270,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":2269,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":2228,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":2145,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":2140,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":2137,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":2133,"title":{},"body":{"changelog.html":{}}}],["26.3.1",{"_index":2128,"title":{},"body":{"changelog.html":{}}}],["26.4.0",{"_index":2121,"title":{},"body":{"changelog.html":{}}}],["26.4.1",{"_index":2116,"title":{},"body":{"changelog.html":{}}}],["26.4.2",{"_index":2112,"title":{},"body":{"changelog.html":{}}}],["26.4.3",{"_index":2110,"title":{},"body":{"changelog.html":{}}}],["26.4.4",{"_index":2107,"title":{},"body":{"changelog.html":{}}}],["26.4.5",{"_index":2100,"title":{},"body":{"changelog.html":{}}}],["26.4.6",{"_index":2093,"title":{},"body":{"changelog.html":{}}}],["26.4.7",{"_index":2088,"title":{},"body":{"changelog.html":{}}}],["26.4.8",{"_index":2085,"title":{},"body":{"changelog.html":{}}}],["26.5.0",{"_index":2067,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":2901,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":3047,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2070,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["29",{"_index":2086,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":4209,"title":{},"body":{"todo.html":{}}}],["3",{"_index":426,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":3419,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":3428,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":5015,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":3416,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":3451,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":3429,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":3279,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2280,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030",{"_index":4277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":2272,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":3257,"title":{},"body":{"coverage.html":{}}}],["3395",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":3211,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2993,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":3343,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":3441,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":3364,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":3381,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":3318,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":3347,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":3311,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":3317,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3365,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":3324,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":3476,"title":{},"body":{"index.html":{}}}],["4/18",{"_index":3285,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":3275,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":3277,"title":{},"body":{"coverage.html":{}}}],["4008",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":3127,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":4221,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":4901,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":909,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":3134,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":3180,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":3044,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":3051,"title":{},"body":{"changelog.html":{}}}],["4215",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":3022,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":3006,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":2400,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":3077,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":2577,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":2612,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":3093,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":3081,"title":{},"body":{"changelog.html":{}}}],["49",{"_index":4183,"title":{},"body":{"overview.html":{}}}],["4957",{"_index":3054,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":3059,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":2188,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":3332,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":3450,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":3367,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":3411,"title":{},"body":{"dependencies.html":{}}}],["5.12.3",{"_index":3389,"title":{},"body":{"dependencies.html":{}}}],["5/19",{"_index":3286,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":3259,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":4892,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":3066,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":2212,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":2843,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":3012,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":2965,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":2455,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":3017,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":2953,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":3019,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":2904,"title":{},"body":{"changelog.html":{}}}],["5686",{"_index":3015,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":3276,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":3038,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":3002,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":3030,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":2973,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":2990,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":2998,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":2995,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":2928,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":5023,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":2189,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":3351,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":3328,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":3326,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":2245,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":3430,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":3417,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3278,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["60000",{"_index":1702,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["6060",{"_index":2654,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":2936,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":2931,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":2078,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":2958,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":2946,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":2942,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":2926,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":2919,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":2922,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":2696,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":3274,"title":{},"body":{"coverage.html":{}}}],["6637",{"_index":2910,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":2899,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":2849,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":2303,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":2589,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":2889,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":2916,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":2907,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":2592,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":2829,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":2840,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":2881,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":2186,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":2864,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":2876,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["6b",{"_index":3843,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3861,"title":{},"body":{"license.html":{}}}],["7",{"_index":1855,"title":{},"body":{"classes/TaskHelper.html":{},"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":3354,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":3322,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":3321,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":3363,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":3320,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":3319,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":2208,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":2631,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":2860,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":2820,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":2852,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":2604,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":2595,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":2596,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":2609,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":2647,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":2655,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":2602,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":2632,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":2799,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":2692,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":2627,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":2625,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":2607,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":2550,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":2491,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":2390,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":2481,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":2475,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":2570,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":2158,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":2623,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":2155,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":2196,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2935,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":3448,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":2246,"title":{},"body":{"changelog.html":{}}}],["8.5.1",{"_index":3376,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":4310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8020",{"_index":2494,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":2382,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":2482,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":2484,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":2561,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":4363,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["8101",{"_index":2533,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":2524,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":2489,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":2470,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":2507,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":2388,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":2517,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":2322,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":2399,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":2477,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":2498,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":2499,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":2521,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":2147,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":2497,"title":{},"body":{"changelog.html":{}}}],["8300",{"_index":2403,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":2446,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":2461,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":2467,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":2377,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":2501,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":2151,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":2448,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":2464,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":2394,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":2375,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":2153,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":2359,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":2452,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":2413,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":2440,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":2416,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":2334,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":2432,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":2435,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":2418,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":2206,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":2426,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":2422,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":2406,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":2372,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":2391,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":2409,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":2191,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":2356,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":2352,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":2312,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":2273,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":2220,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":2232,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":2242,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":2278,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":2324,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":2218,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":2318,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":2286,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":2281,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":2162,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":2238,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":2135,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":2267,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":2249,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":2229,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":2256,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":2251,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":2166,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":2123,"title":{},"body":{"changelog.html":{}}}],["9029",{"_index":2118,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":2182,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["9134",{"_index":2130,"title":{},"body":{"changelog.html":{}}}],["9139",{"_index":2111,"title":{},"body":{"changelog.html":{}}}],["9148",{"_index":2090,"title":{},"body":{"changelog.html":{}}}],["9156",{"_index":2102,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":4370,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["9431",{"_index":2072,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":1632,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":3494,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":561,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":861,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":884,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":897,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":4698,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":885,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":899,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":4379,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":14,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":1516,"title":{},"body":{"classes/NewsScope.html":{}}}],["_timeout",{"_index":1941,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.createdat",{"_index":1840,"title":{},"body":{"classes/TaskHelper.html":{}}}],["a.m",{"_index":3525,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":4946,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":3902,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":3523,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":3788,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":4150,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":265,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":4617,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":534,"title":{},"body":{"classes/CourseTaskInfo.html":{},"classes/TaskMapper.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":3982,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":3981,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":4200,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["accepts",{"_index":3149,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":585,"title":{},"body":{"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accessable",{"_index":4684,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":475,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["accessible",{"_index":2707,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":2721,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":1520,"title":{},"body":{"classes/NewsScope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":3828,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":4154,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":3602,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3787,"title":{},"body":{"license.html":{}}}],["according",{"_index":4145,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":1041,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":60,"title":{},"body":{"classes/Account.html":{},"changelog.html":{}}}],["achieve",{"_index":4157,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":3727,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":4031,"title":{},"body":{"license.html":{}}}],["act",{"_index":4945,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["actions",{"_index":2099,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["activated",{"_index":1164,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activation",{"_index":2996,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":1162,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":3647,"title":{},"body":{"license.html":{}}}],["activity",{"_index":4072,"title":{},"body":{"license.html":{}}}],["actors",{"_index":4802,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":4053,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":3881,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":3627,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":4474,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":331,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"injectables/LessonRepo.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":4331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1195,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adding",{"_index":2156,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":650,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"classes/TaskHelper.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4769,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":4360,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":1517,"title":{},"body":{"classes/NewsScope.html":{}}}],["addquery(query",{"_index":1523,"title":{},"body":{"classes/NewsScope.html":{}}}],["address",{"_index":4104,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":3010,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":3622,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":2732,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":2492,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adduser",{"_index":2223,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":4828,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":2058,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":2365,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2593,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":3063,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2943,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":2905,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":3762,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3908,"title":{},"body":{"license.html":{}}}],["advised",{"_index":4141,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3909,"title":{},"body":{"license.html":{}}}],["affero",{"_index":3530,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":4012,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3724,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":4983,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":4985,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach",{"_index":4939,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":5030,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":4937,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":2987,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":3777,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":4595,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":3815,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":2980,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":4492,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":3023,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":4471,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":4687,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":4176,"title":{},"body":{"license.html":{}}}],["agree",{"_index":4089,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":4128,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":4799,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":4040,"title":{},"body":{"license.html":{}}}],["aims",{"_index":4411,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":3327,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":2262,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":2686,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":1137,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":4239,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":4464,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":2872,"title":{},"body":{"changelog.html":{}}}],["alleging",{"_index":4019,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1250,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":1815,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":1969,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alone",{"_index":4935,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":3790,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":1466,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":3585,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3839,"title":{},"body":{"license.html":{}}}],["always",{"_index":4493,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":2237,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqplib",{"_index":3329,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":4387,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":3444,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":3983,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":3578,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":4706,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":4690,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":4460,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["answered",{"_index":1910,"title":{},"body":{"injectables/TaskUC.html":{}}}],["anti",{"_index":3750,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":2738,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2832,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":3800,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1933,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":4754,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":110,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"controllers/ServerController.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api_path",{"_index":3254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_validation_error",{"_index":109,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":4281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":569,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty({description",{"_index":1484,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({enum",{"_index":1505,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":1503,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":1366,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional({description",{"_index":1501,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apipropertyoptional({type",{"_index":1498,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":4435,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":1314,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{}}}],["apitags('news",{"_index":1328,"title":{},"body":{"controllers/NewsController.html":{}}}],["apitags('task",{"_index":1817,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('user",{"_index":1990,"title":{},"body":{"controllers/UserController.html":{}}}],["apivalidationerror",{"_index":83,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":972,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":135,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":117,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["app",{"_index":906,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":5032,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":5027,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":309,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":308,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":306,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":307,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":2410,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":4237,"title":{},"body":{"todo.html":{}}}],["applicable",{"_index":3639,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":4372,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":75,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/Account.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["application).service(path",{"_index":745,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["applications",{"_index":3472,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":4768,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":4109,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1109,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":4282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":5036,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":4450,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":3659,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":3782,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":4149,"title":{},"body":{"license.html":{}}}],["apps",{"_index":4318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":4305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":4254,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":4266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":4240,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course",{"_index":4268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":4272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../createcurrenttestuser.ts",{"_index":4271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":4276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":4273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":4241,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":4243,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":3461,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../group.entity.ts",{"_index":3457,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../main.ts",{"_index":3460,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":4245,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":4275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":4253,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":4244,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.uc.ts",{"_index":4248,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../permissiontypes.ts",{"_index":3456,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../resolveduser.ts",{"_index":4249,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../role.entity.ts",{"_index":4246,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":4274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../server.module.ts",{"_index":4270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../sorting.ts",{"_index":4251,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../status.type.ts",{"_index":4247,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../string",{"_index":3462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../swagger.ts",{"_index":4267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.entity.ts",{"_index":4255,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../task.mapper.ts",{"_index":4269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../value",{"_index":4256,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":4355,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":4394,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":4312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":4399,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":4322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":837,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/constants.ts",{"_index":3253,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":294,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":118,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":640,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":642,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":2042,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":631,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":846,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":1057,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":701,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":3264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":1107,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":1060,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":1071,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":1069,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":1075,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":1066,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":1073,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":1209,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":1183,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":941,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":2047,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":3269,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":1123,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":3272,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":1119,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":1039,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":1141,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:19",{"_index":1146,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:9",{"_index":1144,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":179,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":186,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":207,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:37",{"_index":199,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:57",{"_index":210,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":192,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":654,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":1212,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":720,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":707,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":546,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":1353,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1483,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:15",{"_index":1491,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:20",{"_index":1507,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:25",{"_index":1485,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:30",{"_index":1490,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:37",{"_index":1500,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:42",{"_index":1502,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:49",{"_index":1506,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:55",{"_index":1504,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:60",{"_index":1496,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:65",{"_index":1489,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:70",{"_index":1510,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:75",{"_index":1487,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:80",{"_index":1508,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:85",{"_index":1493,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":1726,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":1966,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":2013,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":1282,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:19",{"_index":1289,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:30",{"_index":1298,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:46",{"_index":1301,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:57",{"_index":1311,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:68",{"_index":1293,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/entity/course",{"_index":446,"title":{},"body":{"classes/CourseInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts",{"_index":453,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:30",{"_index":1278,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:34",{"_index":1269,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:38",{"_index":1271,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:41",{"_index":1272,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:44",{"_index":1274,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:47",{"_index":1275,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:51",{"_index":1276,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:55",{"_index":1277,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:58",{"_index":1273,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:61",{"_index":1270,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:64",{"_index":1279,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:66",{"_index":1268,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:76",{"_index":1280,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.types.ts",{"_index":1027,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/entity/school",{"_index":1718,"title":{},"body":{"classes/SchoolInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/team",{"_index":1934,"title":{},"body":{"classes/TeamInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/user",{"_index":2005,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1374,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:28",{"_index":1382,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:42",{"_index":1380,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:55",{"_index":1386,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:7",{"_index":1384,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":1719,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":2006,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1436,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1514,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1449,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:10",{"_index":1453,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:13",{"_index":1468,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:24",{"_index":1458,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:39",{"_index":1462,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:44",{"_index":1455,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:48",{"_index":1460,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1551,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:102",{"_index":1577,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:126",{"_index":1562,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:13",{"_index":1558,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:137",{"_index":1569,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:157",{"_index":1575,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:175",{"_index":1568,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:185",{"_index":1571,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:25",{"_index":1560,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:52",{"_index":1564,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:78",{"_index":1566,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":1887,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:11",{"_index":1895,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:14",{"_index":1892,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:17",{"_index":1894,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":1896,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":1893,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":1899,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:29",{"_index":1898,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":1897,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":1804,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:21",{"_index":1806,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/entity/course",{"_index":522,"title":{},"body":{"classes/CourseTaskInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/entity/file",{"_index":752,"title":{},"body":{"classes/FileTaskInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/lesson",{"_index":1180,"title":{},"body":{"classes/LessonTaskInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/status.type.ts",{"_index":4262,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts",{"_index":1762,"title":{},"body":{"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:15",{"_index":1772,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:18",{"_index":1770,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:22",{"_index":1766,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:25",{"_index":1771,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:29",{"_index":1767,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:32",{"_index":1768,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:35",{"_index":1769,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:8",{"_index":1765,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts",{"_index":1784,"title":{},"body":{"classes/Task.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:18",{"_index":1790,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:21",{"_index":1788,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:24",{"_index":1791,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:27",{"_index":1787,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:30",{"_index":1789,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:33",{"_index":1786,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/user",{"_index":2027,"title":{},"body":{"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":1864,"title":{},"body":{"classes/TaskMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:9",{"_index":1867,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/lesson.repo.ts",{"_index":1168,"title":{},"body":{"injectables/LessonRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/lesson.repo.ts:12",{"_index":1172,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/modules/task/repo/lesson.repo.ts:9",{"_index":1170,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts",{"_index":1777,"title":{},"body":{"injectables/SubmissionRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:11",{"_index":1781,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:8",{"_index":1779,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":758,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:54",{"_index":767,"title":{},"body":{"classes/FilterOptions.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:56",{"_index":768,"title":{},"body":{"classes/FilterOptions.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:58",{"_index":766,"title":{},"body":{"classes/FilterOptions.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:60",{"_index":764,"title":{},"body":{"classes/FilterOptions.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:72",{"_index":1884,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:75",{"_index":1886,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":1882,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":1900,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:19",{"_index":1905,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:9",{"_index":1903,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/taskhelper.ts",{"_index":1822,"title":{},"body":{"classes/TaskHelper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/uc/taskhelper.ts:36",{"_index":1827,"title":{},"body":{"classes/TaskHelper.html":{}}}],["apps/server/src/modules/task/uc/taskhelper.ts:42",{"_index":1829,"title":{},"body":{"classes/TaskHelper.html":{}}}],["apps/server/src/modules/task/uc/taskhelper.ts:7",{"_index":1826,"title":{},"body":{"classes/TaskHelper.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts",{"_index":1985,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts:16",{"_index":1988,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts",{"_index":6,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:14",{"_index":40,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:21",{"_index":38,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:24",{"_index":31,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:6",{"_index":22,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts",{"_index":315,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:111",{"_index":543,"title":{},"body":{"classes/CoursegroupEntity.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:115",{"_index":541,"title":{},"body":{"classes/CoursegroupEntity.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:135",{"_index":324,"title":{},"body":{"classes/CourseEntity.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:138",{"_index":325,"title":{},"body":{"classes/CourseEntity.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:141",{"_index":321,"title":{},"body":{"classes/CourseEntity.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:153",{"_index":832,"title":{},"body":{"classes/FilteredCourseGroups.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:155",{"_index":833,"title":{},"body":{"classes/FilteredCourseGroups.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:157",{"_index":834,"title":{},"body":{"classes/FilteredCourseGroups.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:159",{"_index":831,"title":{},"body":{"classes/FilteredCourseGroups.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:168",{"_index":835,"title":{},"body":{"classes/FilteredCourseGroups.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:36",{"_index":976,"title":{},"body":{"classes/GroupEntity.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:40",{"_index":979,"title":{},"body":{"classes/GroupEntity.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:44",{"_index":978,"title":{},"body":{"classes/GroupEntity.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:47",{"_index":974,"title":{},"body":{"classes/GroupEntity.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:50",{"_index":977,"title":{},"body":{"classes/GroupEntity.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:52",{"_index":973,"title":{},"body":{"classes/GroupEntity.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:66",{"_index":980,"title":{},"body":{"classes/GroupEntity.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:72",{"_index":982,"title":{},"body":{"classes/GroupEntityCollection.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:78",{"_index":983,"title":{},"body":{"classes/GroupEntityCollection.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:88",{"_index":986,"title":{},"body":{"classes/GroupEntityCollection.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:92",{"_index":985,"title":{},"body":{"classes/GroupEntityCollection.html":{}}}],["apps/server/src/modules/user/entity/group.entity.ts:96",{"_index":984,"title":{},"body":{"classes/GroupEntityCollection.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts",{"_index":1080,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:20",{"_index":1687,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:24",{"_index":1688,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:34",{"_index":1684,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts",{"_index":1093,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:18",{"_index":1977,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:21",{"_index":1978,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:24",{"_index":1979,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:30",{"_index":1982,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:36",{"_index":1975,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts",{"_index":1672,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts:5",{"_index":1674,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/repo/group.repo.ts",{"_index":988,"title":{},"body":{"injectables/GroupRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/group.repo.ts:12",{"_index":996,"title":{},"body":{"injectables/GroupRepo.html":{}}}],["apps/server/src/modules/user/repo/group.repo.ts:29",{"_index":994,"title":{},"body":{"injectables/GroupRepo.html":{}}}],["apps/server/src/modules/user/repo/group.repo.ts:9",{"_index":992,"title":{},"body":{"injectables/GroupRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts",{"_index":1690,"title":{},"body":{"injectables/RoleRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:12",{"_index":1699,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:17",{"_index":1697,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:22",{"_index":1701,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:8",{"_index":1695,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts",{"_index":2023,"title":{},"body":{"injectables/UserRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:10",{"_index":2025,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:7",{"_index":2024,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/uc/group.uc.ts",{"_index":1006,"title":{},"body":{"injectables/GroupUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/group.uc.ts:10",{"_index":1009,"title":{},"body":{"injectables/GroupUC.html":{}}}],["apps/server/src/modules/user/uc/group.uc.ts:7",{"_index":1008,"title":{},"body":{"injectables/GroupUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts",{"_index":1707,"title":{},"body":{"injectables/RoleUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:10",{"_index":1712,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:7",{"_index":1710,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts",{"_index":2028,"title":{},"body":{"injectables/UserUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:12",{"_index":2033,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:9",{"_index":2031,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/user.facade.ts",{"_index":1994,"title":{},"body":{"injectables/UserFacade.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/user.facade.ts:12",{"_index":2000,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:17",{"_index":1998,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:9",{"_index":1997,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.module.ts",{"_index":2021,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/server/src/modules/user/utils/createcurrenttestuser.ts",{"_index":3295,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/server.controller.ts",{"_index":1732,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":1733,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":1738,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/$1",{"_index":4321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":84,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":264,"title":{},"body":{"classes/BusinessError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":275,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":277,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":276,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":274,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:26",{"_index":278,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":3298,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":604,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":578,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":1936,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":1947,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":1945,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":1944,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":1949,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":1951,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":1625,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":1633,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":1636,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":1641,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:12",{"_index":1644,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:15",{"_index":1647,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:18",{"_index":1646,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:21",{"_index":1645,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":1643,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":1650,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":3299,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":3301,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":236,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":238,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":260,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":262,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":261,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":263,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":237,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/resolveduser.ts",{"_index":1660,"title":{},"body":{"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/entity/resolveduser.ts:15",{"_index":1664,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/shared/domain/entity/resolveduser.ts:18",{"_index":1666,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/shared/domain/entity/resolveduser.ts:21",{"_index":1665,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/shared/domain/entity/resolveduser.ts:24",{"_index":1663,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/shared/domain/entity/resolveduser.ts:27",{"_index":1670,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/shared/domain/entity/resolveduser.ts:30",{"_index":1669,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/shared/domain/entity/resolveduser.ts:33",{"_index":1667,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/shared/domain/entity/resolveduser.ts:36",{"_index":1662,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/shared/domain/interface/pagination.interface.ts",{"_index":1078,"title":{},"body":{"interfaces/IPagination.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/interface/sorting.ts",{"_index":3304,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":4258,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":4261,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/permissiontypes.ts",{"_index":3458,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":4263,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":3306,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["arc",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":4410,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":4766,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":4171,"title":{},"body":{"license.html":{}}}],["archived",{"_index":789,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["archives",{"_index":4816,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":4942,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":4830,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":3331,"title":{},"body":{"dependencies.html":{}}}],["argument",{"_index":4960,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":856,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":4443,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":4132,"title":{},"body":{"license.html":{}}}],["around",{"_index":4184,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":4050,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":4061,"title":{},"body":{"license.html":{}}}],["array",{"_index":1086,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{}}}],["array.isarray(constraint",{"_index":138,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":681,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["arrays",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":3759,"title":{},"body":{"license.html":{}}}],["asc",{"_index":4346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asking",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":4588,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":4457,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":3575,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":4001,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":3036,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":4740,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assignment",{"_index":2378,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":3709,"title":{},"body":{"license.html":{}}}],["assume",{"_index":4124,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":4781,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":4153,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3948,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":187,"title":{},"body":{"injectables/AuthorizationService.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FilterOptions.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["asynclocalstorage",{"_index":4667,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":4562,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":4159,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attempt",{"_index":3959,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":2614,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2500,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":2350,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":3932,"title":{},"body":{"license.html":{}}}],["aud",{"_index":1050,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":1049,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":4660,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth.guard.ts",{"_index":1120,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":183,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":655,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":663,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":671,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":673,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":667,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":665,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":669,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":1127,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":1140,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":1139,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["authenticate",{"_index":1322,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":1329,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{}}}],["authenticated",{"_index":1046,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":4672,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":1163,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authentication/decorator/auth.decorator",{"_index":1323,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{}}}],["authentication/interface/jwt",{"_index":1324,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{}}}],["authguard",{"_index":1121,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":1122,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":143,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3931,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":3891,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":181,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorization/authorization.module",{"_index":1439,"title":{},"body":{"modules/NewsModule.html":{}}}],["authorization/authorization.service",{"_index":1578,"title":{},"body":{"injectables/NewsUc.html":{}}}],["authorizationmodule",{"_index":171,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":177,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":3924,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":4026,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":4065,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3937,"title":{},"body":{"license.html":{}}}],["auto",{"_index":4377,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["automated",{"_index":4904,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":2176,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":2992,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":2253,"title":{},"body":{"changelog.html":{}}}],["availability",{"_index":4910,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":3511,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["availabledate",{"_index":780,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["avoid",{"_index":2438,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoiding",{"_index":4427,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":220,"title":{},"body":{"injectables/AuthorizationService.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FilterOptions.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":4989,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":3554,"title":{},"body":{"license.html":{}}}],["aws",{"_index":3227,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":2646,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":1084,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/TaskHelper.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["b.createdat",{"_index":1841,"title":{},"body":{"classes/TaskHelper.html":{}}}],["backend",{"_index":2126,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["background",{"_index":4473,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":1447,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":4841,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":1656,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":1659,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["base",{"_index":266,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base64",{"_index":3447,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":712,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":235,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":451,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["baseentity:7",{"_index":450,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["baseentitywithtimestamps",{"_index":8,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":44,"title":{},"body":{"classes/Account.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:22",{"_index":47,"title":{},"body":{"classes/Account.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:25",{"_index":45,"title":{},"body":{"classes/Account.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:28",{"_index":50,"title":{},"body":{"classes/Account.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["basic",{"_index":3717,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":4627,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":4626,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":4633,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":2402,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bcryptjs",{"_index":3338,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":4333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":4334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":3587,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":3598,"title":{},"body":{"license.html":{}}}],["before",{"_index":513,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":4973,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":4962,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":4373,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":3495,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":3737,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":5010,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":299,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":537,"title":{},"body":{"classes/CourseTaskInfo.html":{},"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":2706,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":4059,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":4453,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":4538,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":3745,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":3581,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":4615,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":4260,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":4156,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":1239,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":2459,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":2411,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1924,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":3817,"title":{},"body":{"license.html":{}}}],["bind",{"_index":2977,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":2699,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":2951,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":2947,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":4636,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["blackbox",{"_index":4914,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":4922,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["bob",{"_index":4815,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":1312,"title":{},"body":{"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":3439,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":399,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsScope.html":{},"classes/LessonTaskInfo.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":3302,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boolish",{"_index":3464,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":3270,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bootstraps",{"_index":4961,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["both",{"_index":1928,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["box",{"_index":4953,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":2297,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":2175,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brb",{"_index":2092,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":4810,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["bring",{"_index":998,"title":{},"body":{"injectables/GroupRepo.html":{}}}],["brings",{"_index":4613,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":4180,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":4178,"title":{},"body":{"modules.html":{}}}],["btw",{"_index":258,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":4647,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":2856,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":4520,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":872,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["building",{"_index":2226,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":4362,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":2148,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":2244,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":4549,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":4190,"title":{},"body":{"todo.html":{}}}],["business",{"_index":267,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":107,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror",{"_index":86,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":98,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:12",{"_index":101,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:14",{"_index":100,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:16",{"_index":99,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:26",{"_index":102,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businessexception",{"_index":4891,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":2927,"title":{},"body":{"changelog.html":{}}}],["bytargets",{"_index":1518,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1525,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1519,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1527,"title":{},"body":{"classes/NewsScope.html":{}}}],["c",{"_index":1085,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"license.html":{}}}],["cache",{"_index":1691,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["caches",{"_index":4518,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":2862,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["calculatedatefilterforopentask",{"_index":1824,"title":{},"body":{"classes/TaskHelper.html":{}}}],["calculating",{"_index":3513,"title":{},"body":{"index.html":{}}}],["calendar",{"_index":4678,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":608,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":1265,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["called",{"_index":3007,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":4600,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":614,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":904,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":2527,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":4739,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":4505,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":5018,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":3052,"title":{},"body":{"changelog.html":{}}}],["capitalization",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":4582,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":2553,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":4640,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":4866,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":4896,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":3794,"title":{},"body":{"license.html":{}}}],["case",{"_index":649,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":3597,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":849,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["catch(error",{"_index":853,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":4649,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":1956,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":1959,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":4651,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":4451,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":4477,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":2330,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":2827,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":1197,"title":{},"body":{"injectables/Logger.html":{}}}],["cease",{"_index":3963,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":1028,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":2908,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":3921,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":3974,"title":{},"body":{"license.html":{}}}],["chain",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["chalk",{"_index":3342,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":4623,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":2062,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":1188,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":2052,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":2054,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":2319,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":2119,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":2842,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":4682,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":3899,"title":{},"body":{"license.html":{}}}],["charge",{"_index":3566,"title":{},"body":{"license.html":{}}}],["chat",{"_index":2288,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":4529,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":251,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checked",{"_index":4590,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":188,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":193,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":946,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":3505,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":3519,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":2932,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkusernotexistbyemail(email",{"_index":4856,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["children",{"_index":2564,"title":{},"body":{"changelog.html":{}}}],["childs",{"_index":344,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{}}}],["choose",{"_index":2999,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":4113,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":4596,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":3418,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":2342,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":2172,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":3743,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3751,"title":{},"body":{"license.html":{}}}],["civil",{"_index":4152,"title":{},"body":{"license.html":{}}}],["claim",{"_index":4016,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4028,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":703,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":1112,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":2770,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":2725,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clear",{"_index":3850,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":4871,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":4395,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":2427,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["client",{"_index":270,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":4542,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":1235,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clipboard",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":3520,"title":{},"body":{"index.html":{}}}],["close",{"_index":1260,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closed",{"_index":4987,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":4148,"title":{},"body":{"license.html":{}}}],["closer",{"_index":357,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{}}}],["closing",{"_index":2542,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":3466,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":2084,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["cloud.org",{"_index":3222,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2643,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":3393,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":3379,"title":{},"body":{"dependencies.html":{}}}],["clouds",{"_index":2961,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2502,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":172,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":173,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":175,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":174,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":288,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":289,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":704,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":705,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":706,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":1206,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":1207,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":1208,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1431,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1434,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1432,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1433,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":1735,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":1736,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":1879,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":1881,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":1880,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2017,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2019,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":2018,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluttered",{"_index":4642,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":2898,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":88,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":2911,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":958,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":4439,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":3042,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":360,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":4304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":54,"title":{},"body":{"classes/Account.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":35,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/User.html":{}}}],["collections",{"_index":2115,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":524,"title":{},"body":{"classes/CourseTaskInfo.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{}}}],["columnnames",{"_index":3014,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":540,"title":{},"body":{"classes/CourseTaskInfo.html":{},"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":1813,"title":{},"body":{"controllers/TaskController.html":{},"license.html":{}}}],["come",{"_index":3592,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3801,"title":{},"body":{"license.html":{}}}],["command",{"_index":4834,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commands",{"_index":3669,"title":{},"body":{"license.html":{}}}],["comment",{"_index":791,"title":{},"body":{"classes/FilterOptions.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{}}}],["commentschema",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":3884,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2674,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":4041,"title":{},"body":{"license.html":{}}}],["committing",{"_index":3518,"title":{},"body":{"index.html":{}}}],["common",{"_index":3366,"title":{},"body":{"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":2641,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":4484,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":3713,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":3550,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":4742,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":869,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":4632,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":5060,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":3809,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3816,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":4075,"title":{},"body":{"license.html":{}}}],["compile",{"_index":602,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":3697,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":3504,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completely",{"_index":4568,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":1200,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":3997,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":4461,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":3734,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":4389,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":2308,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":4524,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4444,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":2205,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":3348,"title":{},"body":{"dependencies.html":{}}}],["computedtasks",{"_index":1858,"title":{},"body":{"classes/TaskHelper.html":{},"injectables/TaskUC.html":{}}}],["computedtasksbysubmissions",{"_index":1825,"title":{},"body":{"classes/TaskHelper.html":{}}}],["computedtasksbysubmissions(tasks",{"_index":1828,"title":{},"body":{"classes/TaskHelper.html":{}}}],["computer",{"_index":3642,"title":{},"body":{"license.html":{}}}],["computesubmissionstatus",{"_index":1823,"title":{},"body":{"classes/TaskHelper.html":{}}}],["concept",{"_index":2159,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":4701,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":4105,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":4762,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrently",{"_index":3350,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":4926,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":4069,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":3609,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":4531,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":1743,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":4290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":2629,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":2222,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('request_timeout",{"_index":4345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurations",{"_index":4401,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":2855,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":296,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":3009,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":4700,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":2986,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connection",{"_index":1262,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["connections",{"_index":2161,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":4619,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":2818,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":2325,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":2948,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":3078,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":3985,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":4131,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3950,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":4863,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":2443,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":2513,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":4785,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":4392,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["conspicuously",{"_index":3781,"title":{},"body":{"license.html":{}}}],["const",{"_index":132,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/CourseEntity.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":3726,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":136,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":4522,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/User.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject(request",{"_index":742,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(apivalidationerror",{"_index":125,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(data",{"_index":1642,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":991,"title":{},"body":{"injectables/GroupRepo.html":{},"injectables/LessonRepo.html":{},"injectables/NewsRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":191,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":661,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":2044,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(grouprepo",{"_index":1007,"title":{},"body":{"injectables/GroupUC.html":{}}}],["constructor(groups",{"_index":401,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["constructor(newsrepo",{"_index":1557,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(pagination",{"_index":762,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["constructor(partial",{"_index":19,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/Submission.html":{},"classes/UserTaskInfo.html":{}}}],["constructor(private",{"_index":217,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FilterOptions.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":319,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{}}}],["constructor(readonly",{"_index":108,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":747,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(rolerepo",{"_index":1709,"title":{},"body":{"injectables/RoleUC.html":{}}}],["constructor(taskrepo",{"_index":1902,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":641,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":272,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(userfacade",{"_index":1142,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(userrepo",{"_index":2030,"title":{},"body":{"injectables/UserUC.html":{}}}],["constructor(useruc",{"_index":1996,"title":{},"body":{"injectables/UserFacade.html":{}}}],["constructor(validationerrors",{"_index":93,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":4079,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3867,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":4566,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contact",{"_index":2193,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":4076,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":4432,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":3500,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":3952,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":355,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contents",{"_index":4038,"title":{},"body":{"license.html":{}}}],["context",{"_index":616,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":5020,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":2508,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":3893,"title":{},"body":{"license.html":{}}}],["contract",{"_index":4431,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":3947,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4085,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3557,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":4025,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":4027,"title":{},"body":{"license.html":{}}}],["control",{"_index":3117,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":4030,"title":{},"body":{"license.html":{}}}],["controller",{"_index":576,"title":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{}},"body":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('news",{"_index":1330,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('task",{"_index":1818,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('user",{"_index":1991,"title":{},"body":{"controllers/UserController.html":{}}}],["controller.ts",{"_index":4712,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/auth.controller",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/dto",{"_index":1387,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"classes/UserInfoMapper.html":{}}}],["controller/news.controller",{"_index":1438,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":3662,"title":{},"body":{"license.html":{}}}],["convention",{"_index":4918,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":4481,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["converted",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":3648,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":4063,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3900,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3656,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3946,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":3549,"title":{},"body":{"license.html":{}}}],["copies",{"_index":3543,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2562,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":3610,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":3545,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3533,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3619,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3740,"title":{},"body":{"license.html":{}}}],["core",{"_index":295,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":5086,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":1744,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":4897,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":1440,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":4875,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":287,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2544,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":4126,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":3032,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":3700,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":3352,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":3837,"title":{},"body":{"license.html":{}}}],["count",{"_index":1338,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{}}}],["counted",{"_index":771,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1476,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["counterclaim",{"_index":4017,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":4264,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":2488,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":2573,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":3646,"title":{},"body":{"license.html":{}}}],["country",{"_index":4055,"title":{},"body":{"license.html":{}}}],["counts",{"_index":4259,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":4614,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":4441,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":337,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CoursegroupEntity.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course_default_color",{"_index":527,"title":{},"body":{"classes/CourseTaskInfo.html":{},"classes/TaskMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courseentities",{"_index":1751,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courseentity",{"_index":314,"title":{"classes/CourseEntity.html":{}},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"coverage.html":{}}}],["coursegroup",{"_index":377,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"injectables/TaskRepo.html":{},"miscellaneous/enumerations.html":{}}}],["coursegroupentity",{"_index":421,"title":{"classes/CoursegroupEntity.html":{}},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"coverage.html":{}}}],["coursegroupgroups",{"_index":1011,"title":{},"body":{"injectables/GroupUC.html":{}}}],["coursegroupgroups.foreach",{"_index":1016,"title":{},"body":{"injectables/GroupUC.html":{}}}],["coursegroupid",{"_index":801,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["coursegroups",{"_index":420,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"classes/TaskHelper.html":{}}}],["coursegroups.foreach",{"_index":1019,"title":{},"body":{"injectables/GroupUC.html":{}}}],["coursegroupsofuser",{"_index":1003,"title":{},"body":{"injectables/GroupRepo.html":{}}}],["coursegroupstudents",{"_index":376,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{}}}],["courseid",{"_index":422,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{}}}],["courseid'})@index",{"_index":542,"title":{},"body":{"classes/CoursegroupEntity.html":{}}}],["courseids",{"_index":1173,"title":{},"body":{"injectables/LessonRepo.html":{},"injectables/TaskUC.html":{}}}],["courseinfo",{"_index":445,"title":{"classes/CourseInfo.html":{}},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursename",{"_index":1890,"title":{},"body":{"classes/TaskResponse.html":{}}}],["coursenews",{"_index":452,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":514,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courses",{"_index":427,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coursesofuser",{"_index":1000,"title":{},"body":{"injectables/GroupRepo.html":{}}}],["coursestudents",{"_index":374,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{}}}],["coursesubstitutionteachers",{"_index":370,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{}}}],["coursetaskinfo",{"_index":521,"title":{"classes/CourseTaskInfo.html":{}},"body":{"classes/CourseTaskInfo.html":{},"coverage.html":{}}}],["courseteachers",{"_index":373,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{}}}],["coursgroups",{"_index":338,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{}}}],["court",{"_index":4084,"title":{},"body":{"license.html":{}}}],["courts",{"_index":4147,"title":{},"body":{"license.html":{}}}],["couseid",{"_index":1916,"title":{},"body":{"injectables/TaskUC.html":{}}}],["covenant",{"_index":4045,"title":{},"body":{"license.html":{}}}],["cover",{"_index":3514,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":2486,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":4306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":4307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":4309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":3632,"title":{},"body":{"license.html":{}}}],["covers",{"_index":5008,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":2202,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":908,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":1331,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":1287,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":1559,"title":{},"body":{"injectables/NewsUc.html":{}}}],["createcurrenttestuser",{"_index":3296,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":1193,"title":{},"body":{"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":15,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["createerrorresponse",{"_index":850,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":858,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":3262,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":888,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":3263,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":895,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":877,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":911,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":894,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":915,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":890,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":461,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":489,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createmikroormmodule",{"_index":1231,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createmikroormmodule(options",{"_index":1259,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["createnestapplication",{"_index":5016,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":4773,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":545,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":4287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":874,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createtestmodule",{"_index":597,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":549,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":2340,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":953,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":455,"title":{},"body":{"classes/CourseNews.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":468,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":4621,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":3674,"title":{},"body":{"license.html":{}}}],["critical",{"_index":4579,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":297,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":4658,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":4764,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":4833,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":3355,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2786,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":3121,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":933,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":935,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":4288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":244,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":3977,"title":{},"body":{"license.html":{}}}],["current",{"_index":1492,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":1241,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":3018,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":1290,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":1334,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.userid",{"_index":1333,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":651,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":4893,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":3830,"title":{},"body":{"license.html":{}}}],["customary",{"_index":4097,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3834,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":300,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":1204,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":4418,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycles",{"_index":4458,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":3807,"title":{},"body":{"license.html":{}}}],["damages",{"_index":4129,"title":{},"body":{"license.html":{}}}],["dash",{"_index":2712,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["data",{"_index":955,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data/rules",{"_index":4547,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":4539,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":844,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":1756,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":1215,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:49",{"_index":1219,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:59",{"_index":1223,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":1214,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":5061,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":4497,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":4511,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["date",{"_index":28,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/GroupEntity.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskHelper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":627,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["date.now()@email.de",{"_index":4342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dated",{"_index":4639,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datefilter",{"_index":1920,"title":{},"body":{"injectables/TaskUC.html":{}}}],["days",{"_index":2211,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":1261,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":4618,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":838,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["db_url",{"_index":839,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["db_username",{"_index":840,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["dbname",{"_index":1255,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["dbs",{"_index":4606,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":3021,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":4794,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":2275,"title":{},"body":{"changelog.html":{}}}],["deata",{"_index":3074,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":1061,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application.html":{}}}],["debug(message",{"_index":1065,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":1076,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":3487,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":4386,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["december",{"_index":3763,"title":{},"body":{"license.html":{}}}],["decide",{"_index":4111,"title":{},"body":{"license.html":{},"todo.html":{}}}],["decision",{"_index":4643,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":4864,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declare",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["declining",{"_index":3938,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":965,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":3463,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":29,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":4412,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":4556,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":4567,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dedicated",{"_index":4504,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":3753,"title":{},"body":{"license.html":{}}}],["default",{"_index":32,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskHelper.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defaultmessage",{"_index":113,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1629,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":1943,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":4123,"title":{},"body":{"license.html":{}}}],["defending",{"_index":3582,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":4081,"title":{},"body":{"license.html":{}}}],["define",{"_index":248,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":4352,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":257,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":123,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":3613,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":590,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":594,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":577,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1284,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":1292,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1561,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(news",{"_index":1454,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["delete(newsid",{"_index":1291,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2568,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedid",{"_index":1351,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":4638,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":2389,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":2149,"title":{},"body":{"changelog.html":{}}}],["delivered",{"_index":4908,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":4594,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":3905,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":4042,"title":{},"body":{"license.html":{}}}],["depend",{"_index":4831,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependecy",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":145,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":4349,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deploy",{"_index":2177,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":2174,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":736,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{}}}],["deprecates",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":4051,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":2460,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":4347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["describe",{"_index":4656,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":4931,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":4932,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":5038,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":4452,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":120,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FilterOptions.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SchoolInfoResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"index.html":{}}}],["descriptive",{"_index":4433,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":4424,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":3845,"title":{},"body":{"license.html":{}}}],["designed",{"_index":3548,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":4644,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":4422,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":4681,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":4103,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":131,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":2043,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":2045,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":3478,"title":{},"body":{"index.html":{}}}],["details",{"_index":115,"title":{},"body":{"classes/ApiValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":871,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2879,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":4316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":4315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":2582,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":3876,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":5072,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":4367,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":3468,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":4919,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["developers",{"_index":3571,"title":{},"body":{"license.html":{}}}],["development",{"_index":2637,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":2219,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":3526,"title":{},"body":{"index.html":{}}}],["di",{"_index":4723,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":1739,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":4597,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":3390,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":4228,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":4102,"title":{},"body":{"license.html":{}}}],["different",{"_index":1923,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":3929,"title":{},"body":{"license.html":{}}}],["digits",{"_index":2190,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":4663,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":3738,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3851,"title":{},"body":{"license.html":{}}}],["directly",{"_index":3635,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["directory",{"_index":4196,"title":{},"body":{"todo.html":{}}}],["disable",{"_index":508,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":3774,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4114,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3926,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":4797,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":4805,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":242,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":495,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":518,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":4067,"title":{},"body":{"license.html":{}}}],["display",{"_index":3808,"title":{},"body":{"license.html":{}}}],["displayat",{"_index":456,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":1891,"title":{},"body":{"classes/TaskResponse.html":{}}}],["displayed",{"_index":557,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":3658,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":2933,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":4356,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":4943,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":4106,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3541,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":4163,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":4070,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3611,"title":{},"body":{"license.html":{}}}],["divide",{"_index":4480,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":4454,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":2479,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":2204,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":4217,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["docu",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":550,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":2453,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":4326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":2056,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":2209,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":1244,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["doing",{"_index":4513,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["doku",{"_index":1812,"title":{},"body":{"controllers/TaskController.html":{}}}],["domain",{"_index":4195,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domains",{"_index":3357,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":255,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":3507,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dos",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["doubtful",{"_index":3878,"title":{},"body":{"license.html":{}}}],["down",{"_index":4912,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":3993,"title":{},"body":{"license.html":{}}}],["driven",{"_index":4793,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":1254,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["dropdown",{"_index":2194,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":4821,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":548,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":4704,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1395,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":1872,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":1414,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":1409,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1397,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":1875,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":1870,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":2009,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.id",{"_index":1391,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":2011,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":1724,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":1418,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.school",{"_index":1407,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.source",{"_index":1399,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":1401,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.status",{"_index":1878,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.target",{"_index":1421,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1403,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1405,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1393,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1423,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1416,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":1412,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/error.response",{"_index":864,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dtolist",{"_index":1341,"title":{},"body":{"controllers/NewsController.html":{}}}],["dtos",{"_index":945,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dtos/entities",{"_index":4336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":3041,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":779,"title":{},"body":{"classes/FilterOptions.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{}}}],["duedategreaterthen",{"_index":759,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["duplicate",{"_index":2471,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["duplicated",{"_index":2407,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":254,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":2323,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":3829,"title":{},"body":{"license.html":{}}}],["duration",{"_index":606,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":603,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":2585,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":3875,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":3710,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":1221,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":922,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":245,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":924,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.value",{"_index":925,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1442,"title":{},"body":{"modules/NewsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":2558,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":3631,"title":{},"body":{"license.html":{}}}],["easier",{"_index":4416,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":723,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":474,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":2313,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":339,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["edu",{"_index":2495,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2937,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":4144,"title":{},"body":{"license.html":{}}}],["effected",{"_index":3771,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3754,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":4161,"title":{},"body":{"license.html":{}}}],["effects",{"_index":4515,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":4911,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":4010,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":4166,"title":{},"body":{"license.html":{}}}],["elements",{"_index":1464,"title":{},"body":{"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{}}}],["eligible",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":812,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/GroupRepo.html":{},"injectables/LessonRepo.html":{},"injectables/NewsRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":5056,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":5031,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":1094,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":3011,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":2185,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":4806,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":5068,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":3825,"title":{},"body":{"license.html":{}}}],["employer",{"_index":4173,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1543,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":1531,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":4823,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":951,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":947,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":961,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":3300,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":3650,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":4487,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":4526,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":4456,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":4499,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":3590,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2660,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":5077,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":5085,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":4909,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":2608,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enforce",{"_index":4043,"title":{},"body":{"license.html":{}}}],["enforced",{"_index":4795,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":3776,"title":{},"body":{"license.html":{}}}],["enough",{"_index":4544,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":4548,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":200,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4575,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entered",{"_index":4077,"title":{},"body":{"license.html":{}}}],["entire",{"_index":3799,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":4092,"title":{},"body":{"license.html":{}}}],["entites",{"_index":4545,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":69,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entitiyids",{"_index":232,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":52,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.ts",{"_index":4703,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entityid",{"_index":194,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CoursegroupEntity.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":769,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/GroupRepo.html":{},"injectables/LessonRepo.html":{},"injectables/NewsRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":1758,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":225,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":229,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":252,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":4661,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":1303,"title":{},"body":{"controllers/NewsController.html":{}}}],["enum",{"_index":368,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{}}}],["enumeration",{"_index":3099,"title":{},"body":{"changelog.html":{}}}],["enumerations",{"_index":3455,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":565,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":2124,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":4203,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":2638,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":2216,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":3729,"title":{},"body":{"license.html":{}}}],["err",{"_index":1960,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":112,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":1067,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":638,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":847,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:114",{"_index":852,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:117",{"_index":857,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:125",{"_index":859,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":889,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":702,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":130,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts",{"_index":119,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":128,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":126,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":928,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":918,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":310,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":4603,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":290,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":917,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":104,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":900,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":286,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":886,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":124,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["errros",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":3359,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":507,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":512,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{}}}],["eslint/restrict",{"_index":919,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["especially",{"_index":4470,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":3693,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":4446,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2970,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":3178,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":4898,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":4899,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":3035,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2804,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":2154,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":2512,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":3539,"title":{},"body":{"license.html":{}}}],["everything",{"_index":2546,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":4659,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":3630,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":3708,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exceeds",{"_index":2914,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":2547,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":633,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exception.constructor.name.replace('exception",{"_index":883,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":878,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":880,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":913,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":971,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":848,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":882,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":876,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchangeable",{"_index":4430,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["excluded",{"_index":3865,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":2376,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":2743,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":4035,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3732,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":4086,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3686,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1443,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":4655,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1448,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":4359,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":3641,"title":{},"body":{"license.html":{}}}],["execution",{"_index":1938,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":613,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":4011,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3772,"title":{},"body":{"license.html":{}}}],["exist",{"_index":824,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["existing",{"_index":1129,"title":{},"body":{"interfaces/JwtConstants.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":4857,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":2675,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exp",{"_index":1052,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":4506,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["expect(data.length).tobe(0",{"_index":5042,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":5005,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":5041,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":3882,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":5004,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":2767,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":4798,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expiration",{"_index":1051,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expiresin",{"_index":1138,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":737,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":3723,"title":{},"body":{"license.html":{}}}],["export",{"_index":61,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":4718,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":2773,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":4193,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":4494,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":4564,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":734,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":4116,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":921,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":3958,"title":{},"body":{"license.html":{}}}],["extend",{"_index":948,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":4066,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":4286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"interfaces/FeathersError.html":{},"classes/FileTaskInfo.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":3812,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":3661,"title":{},"body":{"license.html":{}}}],["external",{"_index":2368,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":1125,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":457,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":2314,"title":{},"body":{"changelog.html":{}}}],["externaluseridentifier",{"_index":1098,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["externaluseridentifier'})@unique",{"_index":1976,"title":{},"body":{"classes/User.html":{}}}],["extract",{"_index":4551,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":969,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["extractjwt",{"_index":1148,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1156,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":4669,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":3944,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":560,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":539,"title":{},"body":{"classes/CourseTaskInfo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":4928,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":4098,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3733,"title":{},"body":{"license.html":{}}}],["factory",{"_index":4903,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":2332,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":114,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":5078,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":2374,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":4139,"title":{},"body":{"license.html":{}}}],["fair",{"_index":3728,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":2618,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":694,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":3870,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":3499,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":3628,"title":{},"body":{"license.html":{}}}],["fast",{"_index":4817,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":3432,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":3879,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":182,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":4573,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":675,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["feathers/feathers.module",{"_index":180,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersauthprovider",{"_index":178,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":699,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":866,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersjs/authentication",{"_index":3310,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":3312,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":3313,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":735,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":3314,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":3315,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":176,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":719,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":726,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":662,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":739,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":2171,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":3498,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":2691,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":4391,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":3792,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":3135,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":4405,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":4832,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":2649,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":2046,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":76,"title":{},"body":{"classes/Account.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["fields",{"_index":4192,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":4449,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["fileids",{"_index":777,"title":{},"body":{"classes/FilterOptions.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{}}}],["filename",{"_index":4380,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["files",{"_index":755,"title":{},"body":{"classes/FileTaskInfo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":2213,"title":{},"body":{"changelog.html":{}}}],["filetaskinfo",{"_index":751,"title":{"classes/FileTaskInfo.html":{}},"body":{"classes/FileTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":634,"title":{},"body":{"modules/ErrorModule.html":{},"classes/FilterOptions.html":{},"injectables/GroupRepo.html":{},"injectables/LessonRepo.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter.query.ts",{"_index":1354,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":1360,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":1358,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":1365,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1550,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":637,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["filteredcoursegroups",{"_index":432,"title":{"classes/FilteredCourseGroups.html":{}},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"classes/TaskHelper.html":{},"injectables/TaskUC.html":{},"injectables/UserFacade.html":{},"coverage.html":{}}}],["filteredcoursegroups.getgroupsbyparentid(taskid",{"_index":1927,"title":{},"body":{"injectables/TaskUC.html":{}}}],["filteredcoursegroups['course",{"_index":1856,"title":{},"body":{"classes/TaskHelper.html":{},"injectables/TaskUC.html":{}}}],["filteroptions",{"_index":757,"title":{"classes/FilterOptions.html":{}},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["filteroptions(pagination",{"_index":1921,"title":{},"body":{"injectables/TaskUC.html":{}}}],["filterquery",{"_index":1521,"title":{},"body":{"classes/NewsScope.html":{}}}],["filters",{"_index":1363,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["final",{"_index":4865,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":3969,"title":{},"body":{"license.html":{}}}],["find",{"_index":722,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":725,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":1285,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":1295,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["findall(targets",{"_index":1456,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallforuser",{"_index":1552,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1563,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallopen",{"_index":1901,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopen(user",{"_index":1904,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallspy",{"_index":5001,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findbyid",{"_index":1692,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyid(id",{"_index":1696,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyname",{"_index":1693,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":1698,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["finding",{"_index":1035,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":1450,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1459,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewstarget",{"_index":1032,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["findone",{"_index":1286,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":1299,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":2472,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1451,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1461,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1553,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1565,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":1757,"title":{},"body":{"modules/ServerModule.html":{}}}],["finduser(userid",{"_index":4610,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":1909,"title":{},"body":{"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":2014,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstname",{"_index":1095,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{}}}],["fit",{"_index":4534,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":4119,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2221,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":4378,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":2064,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":2539,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixtures",{"_index":4969,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":1362,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/TaskUC.html":{},"changelog.html":{}}}],["flow",{"_index":3714,"title":{},"body":{"license.html":{}}}],["fly",{"_index":2225,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":4838,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":5007,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":3486,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":4699,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":3108,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":2295,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":4398,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forbid",{"_index":3770,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":4777,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":4283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbiddenoptions",{"_index":1253,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["forbidnonwhitelisted",{"_index":967,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":2621,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcefullsync",{"_index":2619,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":5067,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":5043,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":3136,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":645,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":3020,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":2826,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":3820,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":1216,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":1217,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":2087,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":1761,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["foundation",{"_index":3536,"title":{},"body":{"license.html":{}}}],["foundgroups",{"_index":415,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["framework",{"_index":4414,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":4662,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":4569,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":3534,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":3555,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":3370,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":4787,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":4786,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":2127,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fulfilled",{"_index":4576,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":3757,"title":{},"body":{"license.html":{}}}],["full",{"_index":2224,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["function",{"_index":887,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/TaskHelper.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":298,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":4459,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":3894,"title":{},"body":{"license.html":{}}}],["functions",{"_index":3459,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":3847,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":330,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["g",{"_index":4396,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":2233,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":2648,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generalerror",{"_index":2433,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":3706,"title":{},"body":{"license.html":{}}}],["generate",{"_index":2555,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generated",{"_index":4335,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":2311,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":4525,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":1300,"title":{},"body":{"controllers/NewsController.html":{}}}],["get('dashboard",{"_index":1805,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('me",{"_index":1987,"title":{},"body":{"controllers/UserController.html":{}}}],["get(id",{"_index":730,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getcoursegroupsbyuserid",{"_index":989,"title":{},"body":{"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"injectables/UserFacade.html":{}}}],["getcoursegroupsbyuserid(userid",{"_index":993,"title":{},"body":{"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"injectables/UserFacade.html":{}}}],["getcoursesbyuserid",{"_index":990,"title":{},"body":{"injectables/GroupRepo.html":{}}}],["getcoursesbyuserid(userid",{"_index":995,"title":{},"body":{"injectables/GroupRepo.html":{}}}],["getentitypermissions",{"_index":189,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":206,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getexistingparentids",{"_index":403,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["getgroupsbyparentid",{"_index":830,"title":{},"body":{"classes/FilteredCourseGroups.html":{},"classes/GroupEntityCollection.html":{}}}],["getgroupsbyparentid(parentid",{"_index":414,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["gethello",{"_index":580,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{}}}],["getnewspermissions",{"_index":1554,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1567,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnumberofgroups",{"_index":412,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["getopentaskbycourselistandlessonlist",{"_index":813,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["getopentaskbycourselistandlessonlist(lessonidsandcourseids",{"_index":1885,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["getpermittedentities",{"_index":190,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":209,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":656,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":664,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":657,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":666,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpublishedlessonsidsbycourseids",{"_index":1169,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["getpublishedlessonsidsbycourseids(courseids",{"_index":1171,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["getquery",{"_index":1529,"title":{},"body":{"classes/NewsScope.html":{}}}],["getrequiredpermissions",{"_index":1555,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1570,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":92,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{}}}],["getservice",{"_index":746,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":743,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getsubmissionsbytaskslist",{"_index":1778,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["getsubmissionsbytaskslist(tasks",{"_index":1780,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["gettargetfilters",{"_index":1556,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1573,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettimeout",{"_index":1948,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":2050,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":658,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":668,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions",{"_index":659,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":670,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusertargetpermissions",{"_index":660,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":672,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserwithpermissions",{"_index":2029,"title":{},"body":{"injectables/UserUC.html":{}}}],["getuserwithpermissions(currentuser",{"_index":2032,"title":{},"body":{"injectables/UserUC.html":{}}}],["git",{"_index":3521,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":3378,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":3402,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":3392,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":2098,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":3789,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1939,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":708,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":3795,"title":{},"body":{"license.html":{}}}],["global",{"_index":305,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":836,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":636,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":937,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":1108,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":841,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":940,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":3529,"title":{},"body":{"license.html":{}}}],["go",{"_index":3485,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":3516,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":3603,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":4813,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["good",{"_index":5058,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":3918,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3604,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":792,"title":{},"body":{"classes/FilterOptions.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["gradecomment",{"_index":796,"title":{},"body":{"classes/FilterOptions.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{}}}],["graded",{"_index":1851,"title":{},"body":{"classes/TaskHelper.html":{},"classes/TaskResponse.html":{}}}],["gradedusers",{"_index":1836,"title":{},"body":{"classes/TaskHelper.html":{}}}],["gradedusers.add(submission.student.id",{"_index":1847,"title":{},"body":{"classes/TaskHelper.html":{}}}],["gradedusers.size",{"_index":1852,"title":{},"body":{"classes/TaskHelper.html":{}}}],["gradefileids",{"_index":802,"title":{},"body":{"classes/FilterOptions.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{}}}],["grant",{"_index":3939,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3718,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3988,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4181,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":3846,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":4155,"title":{},"body":{"license.html":{}}}],["group",{"_index":327,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["group.hasparent",{"_index":406,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["group.parent",{"_index":417,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["group.permission",{"_index":1925,"title":{},"body":{"injectables/TaskUC.html":{}}}],["groupentity",{"_index":384,"title":{"classes/GroupEntity.html":{}},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["groupentity(props",{"_index":411,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["groupentitycollection",{"_index":400,"title":{"classes/GroupEntityCollection.html":{}},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"coverage.html":{}}}],["grouping",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["grouprepo",{"_index":987,"title":{"injectables/GroupRepo.html":{}},"body":{"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["groups",{"_index":332,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["groupuc",{"_index":1005,"title":{"injectables/GroupUC.html":{}},"body":{"injectables/GroupUC.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["gt",{"_index":1547,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":826,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["guarantee",{"_index":1345,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":4289,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":4726,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":4674,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guide",{"_index":5044,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":4527,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":1968,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":2511,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":268,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":2823,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":903,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":301,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["happen",{"_index":4442,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":4761,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":4994,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":4465,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hash",{"_index":72,"title":{},"body":{"classes/Account.html":{},"changelog.html":{}}}],["hasparent",{"_index":398,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["haspermissions",{"_index":227,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["having",{"_index":3731,"title":{},"body":{"license.html":{}}}],["header",{"_index":1135,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":4598,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":4591,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":3589,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":4498,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["help",{"_index":4958,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":2192,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":2476,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":870,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helpers",{"_index":2668,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hence",{"_index":4586,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":250,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hereafter",{"_index":4032,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":4691,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":1177,"title":{},"body":{"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":4839,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":4429,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hierarchical",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":4438,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":4782,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":2450,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":4512,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":3391,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":3394,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":345,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["holder",{"_index":3965,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3925,"title":{},"body":{"license.html":{}}}],["holding",{"_index":2337,"title":{},"body":{"changelog.html":{}}}],["homework",{"_index":798,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":797,"title":{},"body":{"classes/FilterOptions.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{}}}],["homeworks",{"_index":1793,"title":{},"body":{"classes/Task.html":{},"injectables/TaskUC.html":{},"changelog.html":{}}}],["homeworkschema",{"_index":773,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["homogeneitysolve",{"_index":4445,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":2551,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":4587,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":2714,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":4164,"title":{},"body":{"license.html":{}}}],["host",{"_index":855,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":934,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":3853,"title":{},"body":{"license.html":{}}}],["hot",{"_index":4218,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":2846,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":2293,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":3871,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2642,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":465,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["http",{"_index":121,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":3538,"title":{},"body":{"license.html":{}}}],["http://localhost:3030/docs",{"_index":3471,"title":{},"body":{"index.html":{}}}],["http://www.gnu.org/licenses",{"_index":4177,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":271,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":4890,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":4727,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":5046,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/mikro",{"_index":4826,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":2082,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["https://jestjs.io",{"_index":4407,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":4836,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":4765,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":4408,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":4406,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":4558,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":4198,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":4560,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["httpstatus",{"_index":105,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["httpstatus.bad_request",{"_index":116,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["httpstatus.conflict",{"_index":281,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":4894,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["i.e",{"_index":4580,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":1053,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":5081,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icoursegroupproperties",{"_index":419,"title":{"interfaces/ICoursegroupProperties.html":{}},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"coverage.html":{}}}],["icourseproperties",{"_index":320,"title":{"interfaces/ICourseProperties.html":{}},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"coverage.html":{}}}],["icreatenews",{"_index":1026,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":1038,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":16,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":1652,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":1654,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":4242,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["identifiable",{"_index":4057,"title":{},"body":{"license.html":{}}}],["identified",{"_index":4900,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifier",{"_index":644,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identify",{"_index":4925,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":5057,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":349,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["ids",{"_index":211,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/RoleUC.html":{},"changelog.html":{}}}],["ierrortype",{"_index":273,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":4850,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":4859,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":4852,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["iframe",{"_index":2462,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":2896,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":1157,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["igroupproperties",{"_index":379,"title":{"interfaces/IGroupProperties.html":{}},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"coverage.html":{}}}],["ilogger",{"_index":1059,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":3095,"title":{},"body":{"changelog.html":{}}}],["immediately",{"_index":717,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":2349,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":2657,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":4468,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":1187,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":3692,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":4728,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":1130,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":624,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":4778,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":5055,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":4080,"title":{},"body":{"license.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":740,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importer",{"_index":2923,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":3086,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":4023,"title":{},"body":{"license.html":{}}}],["imports",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":3949,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":4083,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1542,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3583,"title":{},"body":{"license.html":{}}}],["improves",{"_index":4905,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":4705,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":4133,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":4136,"title":{},"body":{"license.html":{}}}],["inc",{"_index":3537,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":4130,"title":{},"body":{"license.html":{}}}],["include",{"_index":241,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["included",{"_index":3688,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3645,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":2711,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":3819,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":954,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":3206,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":3588,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":4099,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3874,"title":{},"body":{"license.html":{}}}],["increase",{"_index":2260,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":4553,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":3945,"title":{},"body":{"license.html":{}}}],["independant",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":4868,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":3810,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":4599,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index({name",{"_index":1980,"title":{},"body":{"classes/User.html":{}}}],["index.ts",{"_index":4189,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":2132,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":3991,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":3956,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2345,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":3625,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3885,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":4337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":66,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":1036,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":4844,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info.entity",{"_index":491,"title":{},"body":{"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["info.entity.ts",{"_index":447,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["info.entity.ts:10",{"_index":1181,"title":{},"body":{"classes/LessonTaskInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["info.entity.ts:13",{"_index":754,"title":{},"body":{"classes/FileTaskInfo.html":{}}}],["info.entity.ts:16",{"_index":529,"title":{},"body":{"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{}}}],["info.entity.ts:19",{"_index":528,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:23",{"_index":531,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:27",{"_index":533,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:30",{"_index":532,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:6",{"_index":753,"title":{},"body":{"classes/FileTaskInfo.html":{}}}],["info.entity.ts:7",{"_index":449,"title":{},"body":{"classes/CourseInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["info.entity.ts:9",{"_index":526,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.mapper",{"_index":1389,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":1720,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":1722,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1511,"title":{},"body":{"classes/NewsResponse.html":{}}}],["info.response.ts",{"_index":1727,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":1729,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":2016,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":1728,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":3858,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":652,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["informations",{"_index":346,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{}}}],["infrastructure",{"_index":4716,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":3989,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4020,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3638,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":243,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inherited",{"_index":43,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["inital",{"_index":2167,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":4877,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":1194,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":4668,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":4014,"title":{},"body":{"license.html":{}}}],["initpermissions",{"_index":4340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":733,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject(mikroorm",{"_index":1256,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":1258,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":184,"title":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FilterOptions.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":185,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["injected",{"_index":713,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":1190,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":4625,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["inner",{"_index":4915,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":1111,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":2900,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":5045,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":3701,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":3889,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3903,"title":{},"body":{"license.html":{}}}],["instance",{"_index":952,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":868,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":3225,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instead",{"_index":2344,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":3479,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":3784,"title":{},"body":{"license.html":{}}}],["integration",{"_index":2214,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":3558,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":3775,"title":{},"body":{"license.html":{}}}],["interact",{"_index":4168,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":4094,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":3653,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":4488,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":3657,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":4657,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":611,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":612,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":598,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":313,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":291,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":3831,"title":{},"body":{"license.html":{}}}],["interest",{"_index":4007,"title":{},"body":{"license.html":{}}}],["interface",{"_index":378,"title":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{}},"body":{"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CoursegroupEntity.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":1153,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":700,"title":{},"body":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":3895,"title":{},"body":{"license.html":{}}}],["internal",{"_index":480,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":4842,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internally",{"_index":1251,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["internalservererrorexception",{"_index":860,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":893,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":3048,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":2929,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":4143,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3699,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3712,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":4811,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":714,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":3103,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":3068,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":4348,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":4185,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":2478,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":3805,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":4688,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":4693,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":4634,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":4495,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":4609,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":4812,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":763,"title":{"interfaces/IPagination.html":{}},"body":{"classes/FilterOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["ipermissionsandroles",{"_index":1081,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"miscellaneous/typealiases.html":{}}}],["iprimarykey",{"_index":1740,"title":{},"body":{"modules/ServerModule.html":{}}}],["iroleproperties",{"_index":1079,"title":{"interfaces/IRoleProperties.html":{}},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{}}}],["irrevocable",{"_index":3720,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":1367,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":867,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":907,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":571,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@apiproperty({description",{"_index":553,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["iserv",{"_index":2331,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":2230,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":865,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":902,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isin",{"_index":1368,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":1373,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":1637,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":1634,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":1627,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":1369,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["iso",{"_index":77,"title":{},"body":{"classes/Account.html":{}}}],["isolated",{"_index":4694,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":4934,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":1370,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":1361,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":1972,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":1355,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":1971,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":1359,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":1602,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":1055,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":572,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":551,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":563,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":559,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["issue",{"_index":2139,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":2978,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":1054,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":2509,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["istechnicalerror",{"_index":873,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":910,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":1205,"title":{},"body":{"injectables/Logger.html":{}}}],["isubmissionstatus",{"_index":1830,"title":{},"body":{"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"miscellaneous/typealiases.html":{}}}],["it's",{"_index":4517,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["it(\"should",{"_index":4933,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":5000,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["item",{"_index":3672,"title":{},"body":{"license.html":{}}}],["items",{"_index":1083,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["iterations",{"_index":1908,"title":{},"body":{"injectables/TaskUC.html":{}}}],["itself",{"_index":3906,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":1034,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["iuserproperties",{"_index":1092,"title":{"interfaces/IUserProperties.html":{}},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"coverage.html":{}}}],["jest",{"_index":4213,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":3308,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jest.spyon(repo",{"_index":5002,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":4324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":3492,"title":{},"body":{"index.html":{}}}],["job",{"_index":4629,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":3008,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["join",{"_index":2424,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["jose",{"_index":3373,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":3356,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":2620,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(e.constraints",{"_index":926,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":3375,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":1056,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["jwauthguard",{"_index":5014,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":1151,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtauthguard",{"_index":1118,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":162,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":1160,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":1159,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":1155,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":1124,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":1048,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":150,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kafka",{"_index":4571,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":2057,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":4357,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":3694,"title":{},"body":{"license.html":{}}}],["key",{"_index":1609,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{}}}],["keyof",{"_index":4265,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":79,"title":{},"body":{"classes/Account.html":{},"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":3649,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":3546,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":3221,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":1932,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["knowingly",{"_index":4047,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":4054,"title":{},"body":{"license.html":{}}}],["known",{"_index":2398,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":4650,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":2386,"title":{},"body":{"changelog.html":{}}}],["kurse",{"_index":1794,"title":{},"body":{"classes/Task.html":{}}}],["label",{"_index":3502,"title":{},"body":{"index.html":{}}}],["language",{"_index":2930,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":4554,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":3813,"title":{},"body":{"license.html":{}}}],["last",{"_index":2015,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastname",{"_index":1096,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{}}}],["lasttriedfailedlogin",{"_index":11,"title":{},"body":{"classes/Account.html":{}}}],["later",{"_index":362,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["latest",{"_index":3339,"title":{},"body":{"dependencies.html":{}}}],["launch",{"_index":4400,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["law",{"_index":3640,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3616,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":4018,"title":{},"body":{"license.html":{}}}],["layer",{"_index":4476,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":4645,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":4436,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":4188,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":2105,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":2667,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":2580,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":3377,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":3380,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":3003,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":3031,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":2878,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":4170,"title":{},"body":{"license.html":{}}}],["lean",{"_index":3397,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["learn",{"_index":538,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["learning",{"_index":333,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{}}}],["leave",{"_index":4234,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":1937,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":709,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/nest",{"_index":4225,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":4344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":3577,"title":{},"body":{"license.html":{}}}],["lern",{"_index":2198,"title":{},"body":{"changelog.html":{}}}],["lerning",{"_index":342,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{}}}],["lernstore",{"_index":2487,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":3166,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":783,"title":{},"body":{"classes/FilterOptions.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["lessonid",{"_index":782,"title":{},"body":{"classes/FilterOptions.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{}}}],["lessonidsandcourseids",{"_index":814,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["lessonrepo",{"_index":1167,"title":{"injectables/LessonRepo.html":{}},"body":{"injectables/LessonRepo.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["lessons",{"_index":1182,"title":{},"body":{"classes/LessonTaskInfo.html":{},"injectables/TaskUC.html":{},"changelog.html":{}}}],["lessontaskinfo",{"_index":1174,"title":{"classes/LessonTaskInfo.html":{}},"body":{"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["letter",{"_index":4737,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":3594,"title":{},"body":{"license.html":{}}}],["level",{"_index":3025,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":4930,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":3928,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3637,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3685,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":3866,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":3528,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3620,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3621,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3623,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3552,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3992,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3936,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":3986,"title":{},"body":{"license.html":{}}}],["limit",{"_index":760,"title":{},"body":{"classes/FilterOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["limitation",{"_index":4127,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4117,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3927,"title":{},"body":{"license.html":{}}}],["limits",{"_index":2201,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":510,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":4311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":2310,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":356,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["links",{"_index":2354,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":4214,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":208,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["listener",{"_index":2805,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":448,"title":{},"body":{"classes/CourseInfo.html":{},"interfaces/JwtConstants.html":{},"classes/SchoolInfo.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":4015,"title":{},"body":{"license.html":{}}}],["living",{"_index":4809,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":4537,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2628,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":4201,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":4713,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":4822,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":4951,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":2276,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":2215,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localization",{"_index":4561,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":3469,"title":{},"body":{"index.html":{}}}],["localstrategy",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["locate",{"_index":4775,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":4541,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":2670,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":2624,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":2268,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":862,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":1062,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log(message",{"_index":1070,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":4215,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":4679,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logger",{"_index":610,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":851,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":618,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":930,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":927,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":914,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.interface",{"_index":1185,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":1210,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":311,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger/logger.service",{"_index":863,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["loggermodule",{"_index":292,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":4884,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":303,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":605,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":619,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":615,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":1906,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":4516,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":4565,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":2920,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":4746,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":4187,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":3503,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["longer",{"_index":2525,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1128,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"index.html":{}}}],["loop",{"_index":2837,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":4134,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4137,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2969,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":4440,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":4738,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1548,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":2466,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":4665,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":5066,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":3822,"title":{},"body":{"license.html":{}}}],["made",{"_index":3584,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":2887,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["mails",{"_index":2839,"title":{},"body":{"changelog.html":{}}}],["main",{"_index":4592,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":4207,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["mainly",{"_index":4608,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":2841,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":2763,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":2103,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":3690,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":1264,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":3748,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":1970,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":4995,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["manage",{"_index":4486,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":2315,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":351,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":4824,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":4540,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":4191,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":3053,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":4033,"title":{},"body":{"license.html":{}}}],["manual",{"_index":2173,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":1919,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":53,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/User.html":{}}}],["manytomany('role",{"_index":1087,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["manytomany({fieldname",{"_index":36,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{},"classes/Submission.html":{}}}],["manytoone",{"_index":462,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{}}}],["manytoone({fieldname",{"_index":467,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":2339,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapcreatenewstodomain",{"_index":1375,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1379,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":4720,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":4721,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapnewsscopetodomain",{"_index":1376,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1381,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":4602,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper",{"_index":2034,"title":{},"body":{"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":4719,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/news.mapper",{"_index":1327,"title":{},"body":{"controllers/NewsController.html":{}}}],["mapper/task.mapper",{"_index":1832,"title":{},"body":{"classes/TaskHelper.html":{}}}],["mappers",{"_index":5013,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mapping",{"_index":4482,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":4510,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoresponse",{"_index":1377,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(news",{"_index":1383,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":1721,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(task",{"_index":1865,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(user",{"_index":1673,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["maptoresponse(userinfo",{"_index":2007,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1378,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1385,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":4078,"title":{},"body":{"license.html":{}}}],["marked",{"_index":3934,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3943,"title":{},"body":{"license.html":{}}}],["masks",{"_index":3618,"title":{},"body":{"license.html":{}}}],["master",{"_index":2506,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":653,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matches",{"_index":4991,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":81,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":3735,"title":{},"body":{"license.html":{}}}],["materially",{"_index":3907,"title":{},"body":{"license.html":{}}}],["materials",{"_index":2157,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":2164,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":4543,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":4611,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":794,"title":{},"body":{"classes/FilterOptions.html":{},"classes/PaginationQuery.html":{},"classes/TaskHelper.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["max(100",{"_index":1640,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":1631,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maxsubmissions",{"_index":1834,"title":{},"body":{"classes/TaskHelper.html":{},"classes/TaskResponse.html":{}}}],["maxteammembers",{"_index":786,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["maybe",{"_index":1238,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":4220,"title":{},"body":{"todo.html":{}}}],["me(@currentuser",{"_index":1992,"title":{},"body":{"controllers/UserController.html":{}}}],["me(currentuser",{"_index":1986,"title":{},"body":{"controllers/UserController.html":{}}}],["meaning",{"_index":3951,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":3524,"title":{},"body":{"index.html":{}}}],["means",{"_index":3615,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":3756,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3767,"title":{},"body":{"license.html":{}}}],["mechanisms",{"_index":4692,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":3780,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3793,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3673,"title":{},"body":{"license.html":{}}}],["member",{"_index":678,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"changelog.html":{}}}],["members",{"_index":2367,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":2890,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":1213,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":3670,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":4118,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3652,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3527,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":2292,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["merges",{"_index":2847,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":4003,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":2554,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":89,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":4572,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":2165,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":2169,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":3722,"title":{},"body":{"license.html":{}}}],["meta",{"_index":5050,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":3422,"title":{},"body":{"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["method",{"_index":724,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":91,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalErrorFilter.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"index.html":{},"license.html":{}}}],["metic",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":2601,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":4552,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":4489,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":2873,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":3382,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":3130,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1444,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":2254,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":1446,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":55,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":1224,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":4212,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":1246,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":1248,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":1249,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":1225,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":1754,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":1232,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":1247,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":1226,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":1952,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["min",{"_index":787,"title":{},"body":{"classes/FilterOptions.html":{},"classes/PaginationQuery.html":{},"injectables/TaskRepo.html":{}}}],["min(0",{"_index":1638,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(1",{"_index":1639,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":4622,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":1630,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":2217,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":4744,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":5071,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":3454,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":3933,"title":{},"body":{"license.html":{}}}],["missing",{"_index":2131,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1541,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":4472,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":3383,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":2677,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mocha's",{"_index":4938,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":4967,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":4954,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":4956,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":2104,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":566,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["models",{"_index":1614,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":3612,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3676,"title":{},"body":{"license.html":{}}}],["modified",{"_index":3152,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":2611,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":3798,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":2393,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":3579,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3643,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":2617,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":4351,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":142,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"injectables/GroupRepo.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":5026,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":5029,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":5028,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":4998,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":4997,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":4308,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":4950,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":4752,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":4747,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":4291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":4319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":1228,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":4966,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":4965,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":144,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":1741,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":4758,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":4756,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":4757,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/news/entity",{"_index":1747,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/entity",{"_index":1749,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":1745,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/entity",{"_index":1750,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/user.module",{"_index":1746,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":3385,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":1237,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongod",{"_index":1234,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mongod.geturi",{"_index":1236,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongodb",{"_index":1230,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongomemorydatabasemodule",{"_index":1211,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":4979,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":1229,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":1755,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":4583,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":3404,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":2252,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":3975,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":4907,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mounted",{"_index":5011,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["move",{"_index":997,"title":{},"body":{"injectables/GroupRepo.html":{},"classes/TaskHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":591,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":879,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":2975,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":4475,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":340,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":4507,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":4509,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n21",{"_index":2960,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":25,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalErrorFilter.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["named",{"_index":3522,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["names",{"_index":1306,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":4233,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":3406,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":2239,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":3425,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":3811,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":3071,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":818,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["necessary",{"_index":2867,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":1874,"title":{},"body":{"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":820,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":2463,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":905,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":4224,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":4354,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":4358,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:doc:serve",{"_index":4361,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":4390,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":4375,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":4376,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":4353,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":4364,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":4368,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":4366,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":4371,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":4296,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":4388,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":4383,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":4385,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":4298,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":4297,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":4382,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":3062,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestinterceptor",{"_index":586,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":635,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":4397,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":106,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FilterOptions.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":589,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":3323,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":570,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":588,"title":{},"body":{"controllers/DelayController.html":{}}}],["nestjs/testing.test",{"_index":4955,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestlogger",{"_index":1184,"title":{},"body":{"injectables/Logger.html":{}}}],["network",{"_index":3551,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":4612,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":205,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":34,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["newest",{"_index":1837,"title":{},"body":{"classes/TaskHelper.html":{},"injectables/TaskUC.html":{}}}],["newly",{"_index":4804,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":454,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":1396,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createdat",{"_index":1415,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1587,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1398,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1392,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":547,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":1974,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":568,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":552,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:27",{"_index":558,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:28",{"_index":1973,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:35",{"_index":567,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:42",{"_index":562,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1419,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1400,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":1402,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1606,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.target?.id",{"_index":1404,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.targetmodel",{"_index":1406,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1394,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.types",{"_index":492,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news.updatedat",{"_index":1417,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1411,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news/entity",{"_index":216,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{}}}],["news:101",{"_index":463,"title":{},"body":{"classes/CourseNews.html":{}}}],["news:107",{"_index":1935,"title":{},"body":{"classes/TeamNews.html":{}}}],["news:30",{"_index":486,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:34",{"_index":464,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:38",{"_index":470,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:41",{"_index":476,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:44",{"_index":482,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:47",{"_index":483,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":484,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":479,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":469,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":488,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":477,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:76",{"_index":490,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:95",{"_index":1730,"title":{},"body":{"classes/SchoolNews.html":{}}}],["news[key",{"_index":1611,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":4772,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":4776,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":1445,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":1586,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1581,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":1499,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1513,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1580,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":1281,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":1594,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsfilterquery",{"_index":1296,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsid",{"_index":1294,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist",{"_index":1337,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{}}}],["newslist.length",{"_index":1599,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":1342,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist.map(async",{"_index":1596,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":1326,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":1335,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":1340,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":1336,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":1350,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1430,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1435,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":1325,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"coverage.html":{}}}],["newsscope",{"_index":1469,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"coverage.html":{}}}],["newstarget",{"_index":1029,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":1457,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetmodel",{"_index":215,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newstargetmodel.course",{"_index":506,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":219,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":515,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodelvalue",{"_index":196,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newsuc",{"_index":1320,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":1604,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":1592,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":509,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":1957,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":628,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":2634,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":3241,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":3467,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":4666,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":3401,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":3403,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":2636,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":3841,"title":{},"body":{"license.html":{}}}],["none",{"_index":3004,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":1619,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":2396,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":3869,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":4343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":3266,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":2053,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":240,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["notfound",{"_index":4601,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":674,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{}}}],["notfoundexception(`the",{"_index":1759,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":3987,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3664,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3660,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":3976,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3972,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3922,"title":{},"body":{"license.html":{}}}],["november",{"_index":3531,"title":{},"body":{"license.html":{}}}],["now",{"_index":626,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":630,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":2113,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":385,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{}}}],["number",{"_index":97,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IGroupProperties.html":{},"interfaces/IPagination.html":{},"interfaces/JwtPayload.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/Submission.html":{},"classes/TaskHelper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":4108,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":347,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":3027,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":2722,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":3475,"title":{},"body":{"index.html":{}}}],["o",{"_index":4685,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":2694,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":2456,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["obj",{"_index":1480,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["object",{"_index":1651,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign",{"_index":67,"title":{},"body":{"classes/Account.html":{}}}],["object.assign(this",{"_index":70,"title":{},"body":{"classes/Account.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserTaskInfo.html":{}}}],["object.entries(params",{"_index":1610,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.values(constraint",{"_index":141,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":574,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":41,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["objectid().tohexstring",{"_index":4341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectid.isvalid(value",{"_index":1658,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":4763,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":4090,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3855,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3758,"title":{},"body":{"license.html":{}}}],["observable",{"_index":617,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":4533,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":3840,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":881,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":3984,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":2519,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["of.ts",{"_index":4257,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":3576,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3860,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3844,"title":{},"body":{"license.html":{}}}],["official",{"_index":3678,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":2387,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":2187,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":2289,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":827,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["ok",{"_index":2949,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":4835,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":4917,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":2362,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":3139,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["omit",{"_index":1218,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["once",{"_index":4419,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1600,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onerror",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":4743,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["oneweekago",{"_index":1853,"title":{},"body":{"classes/TaskHelper.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":1854,"title":{},"body":{"classes/TaskHelper.html":{}}}],["onload",{"_index":2822,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":1222,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":4523,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":259,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":2758,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":2709,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":4369,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":4140,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":3848,"title":{},"body":{"license.html":{}}}],["operates",{"_index":4906,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":3695,"title":{},"body":{"license.html":{}}}],["operation",{"_index":3209,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":2616,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":810,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/GroupRepo.html":{},"injectables/LessonRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3599,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":4096,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":5052,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":2095,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":366,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":5059,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":1245,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":4895,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":4886,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":1220,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["orchestration",{"_index":2381,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":2483,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":2419,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":828,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["ordering",{"_index":3028,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":2665,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":3999,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":3626,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":4421,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":2423,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":3155,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":1257,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":5033,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":4409,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":56,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"dependencies.html":{}}}],["orm/entitymanager",{"_index":4970,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":4827,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":239,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FilterOptions.html":{},"injectables/GroupRepo.html":{},"injectables/LessonRepo.html":{},"injectables/NewsRepo.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":1227,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["os",{"_index":3484,"title":{},"body":{"index.html":{}}}],["others",{"_index":966,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":1243,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ours",{"_index":4734,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":4927,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outgoing",{"_index":4607,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2828,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":3741,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":2074,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":5009,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":4501,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":4888,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":2787,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":5017,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":5025,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":632,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":304,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":4959,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":4182,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":2326,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":4029,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":4462,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":1495,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":4755,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["package",{"_index":2821,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":3804,"title":{},"body":{"license.html":{}}}],["packages",{"_index":4199,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":3689,"title":{},"body":{"license.html":{}}}],["page",{"_index":1628,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":1635,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":693,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":765,"title":{},"body":{"classes/FilterOptions.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.limit",{"_index":807,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["pagination.query",{"_index":4709,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination.skip",{"_index":805,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["pagination].query.ts",{"_index":4774,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":1297,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":1318,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["paginationresponse(dtolist",{"_index":1343,"title":{},"body":{"controllers/NewsController.html":{}}}],["paginationresponse(tasks",{"_index":1820,"title":{},"body":{"controllers/TaskController.html":{}}}],["paging",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":3410,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":4167,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3962,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":4039,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":2283,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":2136,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":218,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["param('id",{"_index":1347,"title":{},"body":{"controllers/NewsController.html":{}}}],["param.ts",{"_index":4708,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parameter",{"_index":1344,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalErrorFilter.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":728,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":1426,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1427,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1584,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1429,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1428,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1425,"title":{},"body":{"classes/NewsMapper.html":{}}}],["param|query].ts",{"_index":4707,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":380,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"changelog.html":{}}}],["parentid",{"_index":418,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["parentids",{"_index":404,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["parentids.push(group.parent",{"_index":407,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["parents",{"_index":2563,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":2751,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":4771,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":1315,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":3340,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":4635,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":348,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"classes/LessonTaskInfo.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":20,"title":{},"body":{"classes/Account.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/Submission.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":1967,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":3682,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3651,"title":{},"body":{"license.html":{}}}],["parts",{"_index":3715,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":3849,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":4005,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":4735,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":963,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":1814,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["passing",{"_index":1918,"title":{},"body":{"injectables/TaskUC.html":{}}}],["passport",{"_index":1150,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1152,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1154,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":71,"title":{},"body":{"classes/Account.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["passwordrecovery",{"_index":2370,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":471,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":1313,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":1310,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":2924,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":3961,"title":{},"body":{"license.html":{}}}],["patents",{"_index":4024,"title":{},"body":{"license.html":{}}}],["path",{"_index":750,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":4320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2708,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":575,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":1147,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"changelog.html":{}}}],["payload.ts",{"_index":1040,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payload.user",{"_index":1166,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":4071,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3856,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3859,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":2430,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":3517,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":2261,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":3707,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3971,"title":{},"body":{"license.html":{}}}],["permission",{"_index":383,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":1624,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":198,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":228,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":1623,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":3116,"title":{},"body":{"changelog.html":{}}}],["permissionstypes",{"_index":326,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["permissionstypes.empty",{"_index":395,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["permissionstypes.read",{"_index":1018,"title":{},"body":{"injectables/GroupUC.html":{},"injectables/TaskUC.html":{}}}],["permissionstypes.write",{"_index":1025,"title":{},"body":{"injectables/GroupUC.html":{},"injectables/TaskUC.html":{}}}],["permissive",{"_index":3786,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3818,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3593,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":3540,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":3898,"title":{},"body":{"license.html":{}}}],["persist",{"_index":2613,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist/make",{"_index":4789,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persisted",{"_index":3083,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":4792,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":2197,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":4885,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":4920,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":2160,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":4088,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":4803,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":3826,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3838,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2531,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":3569,"title":{},"body":{"license.html":{}}}],["pin",{"_index":2184,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":2384,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":943,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":2048,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":2097,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":4725,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":1655,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":361,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"classes/LessonTaskInfo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["plain",{"_index":4779,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["platform",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":4563,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":3361,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":4009,"title":{},"body":{"license.html":{}}}],["point",{"_index":554,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":4162,"title":{},"body":{"license.html":{}}}],["policy",{"_index":3079,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":2578,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":2884,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":1307,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["populates",{"_index":3033,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":3255,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":3863,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":3835,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3802,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":4142,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":1907,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1288,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["potential",{"_index":2274,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":4205,"title":{},"body":{"todo.html":{}}}],["power",{"_index":3769,"title":{},"body":{"license.html":{}}}],["pr",{"_index":3490,"title":{},"body":{"index.html":{}}}],["practical",{"_index":3553,"title":{},"body":{"license.html":{}}}],["practice",{"_index":4044,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":5047,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":4211,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":3544,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3608,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4861,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":4006,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":4889,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":4936,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":3675,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":1283,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UserController.html":{}}}],["preload",{"_index":2938,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":5070,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":5069,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":2985,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":1198,"title":{},"body":{"injectables/Logger.html":{}}}],["present",{"_index":2669,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":4478,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":3668,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3930,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":2897,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":253,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":2704,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":4008,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":3565,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":4073,"title":{},"body":{"license.html":{}}}],["primary",{"_index":2548,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":42,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["primaryrolesearchoperation",{"_index":1082,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["primaryrolesearchoperation'})@unique",{"_index":1686,"title":{},"body":{"classes/Role.html":{}}}],["principle",{"_index":4968,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":4420,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":4837,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":3973,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":2163,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":5054,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":609,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FilterOptions.html":{},"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["problem",{"_index":3145,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":999,"title":{},"body":{"injectables/GroupRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedure",{"_index":3482,"title":{},"body":{"index.html":{}}}],["procedures",{"_index":3890,"title":{},"body":{"license.html":{}}}],["process",{"_index":2869,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":4683,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":4630,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":4521,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":4062,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3698,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":4882,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":3827,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":2468,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":4074,"title":{},"body":{"license.html":{}}}],["program",{"_index":3560,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3779,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":4174,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3683,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":3570,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":3739,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":3765,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":4068,"title":{},"body":{"license.html":{}}}],["project",{"_index":2055,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":3414,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":2600,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":3671,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3663,"title":{},"body":{"license.html":{}}}],["promise",{"_index":204,"title":{},"body":{"injectables/AuthorizationService.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FilterOptions.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["promise((resolve",{"_index":592,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1012,"title":{},"body":{"injectables/GroupUC.html":{},"injectables/NewsUc.html":{},"injectables/UserUC.html":{}}}],["promise.all(ids.map((id",{"_index":1713,"title":{},"body":{"injectables/RoleUC.html":{}}}],["promise.resolve(currentuser.user",{"_index":1993,"title":{},"body":{"controllers/UserController.html":{}}}],["promises",{"_index":4988,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":3360,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":3634,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3990,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3644,"title":{},"body":{"license.html":{}}}],["proper",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":2541,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskHelper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":5051,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["property",{"_index":30,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalErrorFilter.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property()@index",{"_index":975,"title":{},"body":{"classes/GroupEntity.html":{}}}],["property()@index({name",{"_index":1685,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["property({fieldname",{"_index":323,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{}}}],["property({onupdate",{"_index":48,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["propertydecorator",{"_index":3465,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":322,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CoursegroupEntity.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.content",{"_index":500,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.courseid",{"_index":1800,"title":{},"body":{"classes/Task.html":{}}}],["props.creator",{"_index":504,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.displayat",{"_index":502,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.duedate",{"_index":1796,"title":{},"body":{"classes/Task.html":{}}}],["props.email",{"_index":1106,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.firstname",{"_index":1102,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"classes/UserInfo.html":{}}}],["props.lastname",{"_index":1104,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"classes/UserInfo.html":{}}}],["props.lesson",{"_index":1802,"title":{},"body":{"classes/Task.html":{}}}],["props.name",{"_index":392,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{}}}],["props.parent",{"_index":387,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["props.permission",{"_index":394,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["props.permissions",{"_index":1089,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.private",{"_index":1798,"title":{},"body":{"classes/Task.html":{}}}],["props.roles",{"_index":1091,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["props.school",{"_index":503,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["props.schoolid",{"_index":397,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"classes/Task.html":{}}}],["props.studentids",{"_index":424,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["props.substitutionids",{"_index":431,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["props.target",{"_index":505,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.teacherids",{"_index":429,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["props.title",{"_index":498,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.type",{"_index":390,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["props.userids",{"_index":389,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["protect",{"_index":3572,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":1942,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":3749,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3791,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":4413,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":3911,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":4122,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":600,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":213,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":1202,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":1196,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":302,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":3923,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3967,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":4110,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":4112,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":2383,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":584,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":3935,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3601,"title":{},"body":{"license.html":{}}}],["publicsubmissions",{"_index":784,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["publicteachers",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["publisedlessons",{"_index":1915,"title":{},"body":{"injectables/TaskUC.html":{}}}],["publish",{"_index":3783,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1364,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["publishedat",{"_index":1474,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["publishedlessons",{"_index":1175,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["publishedlessons.map",{"_index":1179,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["publishedlessonsids",{"_index":1178,"title":{},"body":{"injectables/LessonRepo.html":{},"injectables/TaskUC.html":{}}}],["pull",{"_index":2672,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pulled",{"_index":4557,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":3704,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3872,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":4060,"title":{},"body":{"license.html":{}}}],["push",{"_index":981,"title":{},"body":{"classes/GroupEntityCollection.html":{}}}],["push(props",{"_index":408,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["put",{"_index":3208,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":4791,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":2606,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":2653,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":3980,"title":{},"body":{"license.html":{}}}],["quality",{"_index":4121,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":1536,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":1540,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":4616,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":692,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"controllers/TaskController.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.targetid",{"_index":1422,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1420,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1424,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":4770,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["queryorder",{"_index":770,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["queryorder.asc",{"_index":829,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["querys",{"_index":1816,"title":{},"body":{"controllers/TaskController.html":{}}}],["querystring",{"_index":2652,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["raise",{"_index":2868,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":2203,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":4584,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":3067,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":3362,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":1304,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":3823,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":4049,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3914,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":2700,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":87,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/FilterOptions.html":{},"classes/GlobalErrorFilter.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/IErrorType.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":2545,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":2437,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":4819,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":364,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["really",{"_index":819,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["reason",{"_index":4058,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3836,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":3978,"title":{},"body":{"license.html":{}}}],["receive",{"_index":3568,"title":{},"body":{"license.html":{}}}],["received",{"_index":3806,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":3994,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":4064,"title":{},"body":{"license.html":{}}}],["recent",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":3897,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":4056,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3624,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3679,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":5083,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":5076,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":5074,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":2966,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":738,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":2353,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["redis",{"_index":3420,"title":{},"body":{"dependencies.html":{}}}],["redistribute",{"_index":4158,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":2236,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":2587,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":4428,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ref",{"_index":778,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["refactoring",{"_index":2207,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":4555,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":2590,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":4801,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":497,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["referenced",{"_index":485,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["references",{"_index":3113,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":3564,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3614,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":3421,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":4808,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":4091,"title":{},"body":{"license.html":{}}}],["regard",{"_index":3919,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3803,"title":{},"body":{"license.html":{}}}],["regards",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":3716,"title":{},"body":{"license.html":{}}}],["regex",{"_index":2744,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":2180,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":4843,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":2183,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":2801,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":2526,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":3204,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":2522,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":4996,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":3966,"title":{},"body":{"license.html":{}}}],["rejections",{"_index":2806,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":68,"title":{},"body":{"classes/Account.html":{},"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":4825,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":5063,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":2480,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":3742,"title":{},"body":{"license.html":{}}}],["release",{"_index":2178,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":3605,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":3595,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":3796,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":3606,"title":{},"body":{"license.html":{}}}],["relies",{"_index":4783,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":4219,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":4048,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3854,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3562,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":4093,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":4095,"title":{},"body":{"license.html":{}}}],["removal",{"_index":3920,"title":{},"body":{"license.html":{}}}],["remove",{"_index":756,"title":{},"body":{"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"classes/LessonTaskInfo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remove/move",{"_index":536,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["removed",{"_index":2063,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":2109,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":3016,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":4135,"title":{},"body":{"license.html":{}}}],["repair",{"_index":2458,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":2490,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":363,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":1252,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":2630,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":4874,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":4208,"title":{},"body":{"todo.html":{}}}],["repo",{"_index":1010,"title":{},"body":{"injectables/GroupUC.html":{},"injectables/RoleUC.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":4972,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":4715,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1579,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1437,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["report",{"_index":2971,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":4902,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":4491,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":4384,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":4546,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":3473,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":3887,"title":{},"body":{"license.html":{}}}],["req",{"_index":5019,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":5021,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":2395,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":711,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":5039,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request/response",{"_index":4578,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":4585,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":1946,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":1760,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":1115,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":1953,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":2397,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":1126,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":842,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":4325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":4323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":776,"title":{},"body":{"classes/FilterOptions.html":{},"classes/GlobalValidationPipe.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":1603,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":3797,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3474,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":959,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":3629,"title":{},"body":{"license.html":{}}}],["reset",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{}}}],["resolve",{"_index":2441,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":2036,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{}}}],["resolved.permissions",{"_index":2040,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolved.roles",{"_index":2041,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolveduser",{"_index":1045,"title":{"classes/ResolvedUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvedusermapper",{"_index":1671,"title":{"classes/ResolvedUserMapper.html":{}},"body":{"classes/ResolvedUserMapper.html":{},"injectables/UserUC.html":{},"coverage.html":{}}}],["resolvedusermapper.maptoresponse(user",{"_index":2039,"title":{},"body":{"injectables/UserUC.html":{},"miscellaneous/variables.html":{}}}],["resolveduserproperties",{"_index":1661,"title":{},"body":{"classes/ResolvedUser.html":{},"miscellaneous/typealiases.html":{}}}],["resolvepermissionsbyidlist",{"_index":1708,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsbyidlist(ids",{"_index":1711,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsfromsubrolesbyid",{"_index":1694,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolvepermissionsfromsubrolesbyid(id",{"_index":1700,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolves",{"_index":1463,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resolveuser",{"_index":1995,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resolveuser(currentuser",{"_index":1999,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resources",{"_index":4984,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":3773,"title":{},"body":{"license.html":{}}}],["respond",{"_index":4229,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":5012,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":122,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":5040,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":939,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":4711,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":4710,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":4519,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":4767,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":4455,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":3996,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":4788,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":2168,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressourceids",{"_index":825,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["ressources",{"_index":343,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":4230,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":607,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":4652,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":4574,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":2392,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1607,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":3766,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3953,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":3073,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["restructure",{"_index":2079,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":80,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["result.query.ts",{"_index":3307,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":3064,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":3591,"title":{},"body":{"license.html":{}}}],["results",{"_index":82,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":3901,"title":{},"body":{"license.html":{}}}],["retention",{"_index":4637,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":1302,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":4677,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":4646,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":139,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CoursegroupEntity.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":2950,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":1888,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":103,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalErrorFilter.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":4426,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":4724,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":4532,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":2243,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":2358,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":3506,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":4146,"title":{},"body":{"license.html":{}}}],["revised",{"_index":4100,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":2106,"title":{},"body":{"changelog.html":{}}}],["rich",{"_index":4807,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":3238,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":3573,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":3427,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":4120,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":2287,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":2780,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":4528,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":1044,"title":{"classes/Role.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtPayload.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"modules/ServerModule.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":1097,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["role.id",{"_index":1680,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["role.name",{"_index":1679,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role.permissions",{"_index":1716,"title":{},"body":{"injectables/RoleUC.html":{}}}],["role.uc",{"_index":2035,"title":{},"body":{"injectables/UserUC.html":{}}}],["role/permissions",{"_index":4577,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleidbasedsearches",{"_index":1099,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["roleidbasedsearches'})@property",{"_index":1981,"title":{},"body":{"classes/User.html":{}}}],["roleids",{"_index":2892,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["roleinfo",{"_index":1668,"title":{},"body":{"classes/ResolvedUser.html":{},"miscellaneous/typealiases.html":{}}}],["rolerepo",{"_index":1689,"title":{"injectables/RoleRepo.html":{}},"body":{"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["roles",{"_index":1042,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtPayload.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles.foreach((role",{"_index":1715,"title":{},"body":{"injectables/RoleUC.html":{}}}],["roles.map((role",{"_index":1678,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["roleuc",{"_index":1706,"title":{"injectables/RoleUC.html":{}},"body":{"injectables/RoleUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["rollback",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":3904,"title":{},"body":{"license.html":{}}}],["room",{"_index":334,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["rooms",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":249,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["rootdir",{"_index":4292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":4317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":2457,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":4993,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":582,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["route_praefix",{"_index":3256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":2227,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routes.test.js",{"_index":2835,"title":{},"body":{"changelog.html":{}}}],["royalty",{"_index":4013,"title":{},"body":{"license.html":{}}}],["rss",{"_index":481,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":4829,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":2366,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":352,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":4949,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":1940,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3696,"title":{},"body":{"license.html":{}}}],["runtime",{"_index":4957,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":620,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":622,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":3224,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":2451,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":4160,"title":{},"body":{"license.html":{}}}],["sale",{"_index":4022,"title":{},"body":{"license.html":{}}}],["same",{"_index":2766,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":679,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":4780,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["samplecontroller",{"_index":4963,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":4741,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sampleservice",{"_index":4964,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":4879,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":2534,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":2401,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":4197,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":224,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":212,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":1452,"title":{},"body":{"injectables/NewsRepo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["save(news",{"_index":1467,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["saying",{"_index":3852,"title":{},"body":{"license.html":{}}}],["sc",{"_index":2071,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":4550,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":774,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":4714,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schema.types.objectid",{"_index":775,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["schemas",{"_index":2181,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":4332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":350,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CoursegroupEntity.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":2338,"title":{},"body":{"changelog.html":{}}}],["school_edit",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["schoolid",{"_index":367,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CoursegroupEntity.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtPayload.html":{},"injectables/LessonRepo.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolNews.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":478,"title":{"classes/SchoolInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolinfo.id",{"_index":1723,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":1725,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1388,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1408,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1494,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":519,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolnews(props",{"_index":517,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":1031,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/SchoolInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolyear",{"_index":3000,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":556,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":2083,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":595,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":2955,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":732,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.bytargets(targets",{"_index":1471,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1472,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.request",{"_index":741,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.sortby",{"_index":1475,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.target",{"_index":1616,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.transient",{"_index":1186,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1515,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{}}}],["scope.ts:17",{"_index":1526,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:32",{"_index":1528,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:38",{"_index":1524,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:7",{"_index":1522,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:9",{"_index":1530,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope?.target",{"_index":1613,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1591,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":687,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopes",{"_index":1305,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":2144,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":3702,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":3334,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":365,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":2493,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["searchuserforschool",{"_index":1100,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["searchuserforschool'})@property({fieldname",{"_index":1983,"title":{},"body":{"classes/User.html":{}}}],["second",{"_index":4887,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":3636,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":3580,"title":{},"body":{"license.html":{}}}],["secret",{"_index":73,"title":{},"body":{"classes/Account.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":1158,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":2894,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":3747,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":3821,"title":{},"body":{"license.html":{}}}],["secure",{"_index":2465,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":2845,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":2065,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":65,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":2605,"title":{},"body":{"changelog.html":{}}}],["seeddata",{"_index":4940,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seems",{"_index":4222,"title":{},"body":{"todo.html":{}}}],["select",{"_index":822,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["selected",{"_index":4204,"title":{},"body":{"todo.html":{}}}],["selection",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":3248,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":4037,"title":{},"body":{"license.html":{}}}],["selling",{"_index":4021,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2059,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":3617,"title":{},"body":{"license.html":{}}}],["send",{"_index":2195,"title":{},"body":{"changelog.html":{}}}],["sending",{"_index":3133,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":4851,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":4500,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":4680,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":648,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":2535,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":3325,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":3862,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1192,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["separated",{"_index":3497,"title":{},"body":{"index.html":{},"todo.html":{}}}],["separately",{"_index":2559,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":4620,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":4867,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":4425,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":4941,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seperatly",{"_index":328,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{}}}],["serialization",{"_index":4194,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":2650,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":46,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["serve",{"_index":3431,"title":{},"body":{"dependencies.html":{}}}],["served",{"_index":3470,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":596,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.controller",{"_index":1742,"title":{},"body":{"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":4223,"title":{},"body":{"todo.html":{}}}],["servercontroller",{"_index":1731,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":3267,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":4873,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":1734,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":3164,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":3691,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":683,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":690,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":5003,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":4760,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":686,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":676,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":721,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":731,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":727,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":748,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":749,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":4717,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":710,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":4125,"title":{},"body":{"license.html":{}}}],["session",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":1113,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"classes/TaskHelper.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["set(permissions",{"_index":1717,"title":{},"body":{"injectables/RoleUC.html":{}}}],["setcontext",{"_index":1203,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":4328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":2591,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":1950,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":593,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":4285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":2757,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":4327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":944,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setversion('3.0",{"_index":4330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":3752,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":3556,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":2081,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":129,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":1317,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/dto/pagination.query",{"_index":1807,"title":{},"body":{"controllers/TaskController.html":{}}}],["shared/controller/dto/pagination.response",{"_index":1319,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["shared/controller/pipe",{"_index":1316,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/transformer",{"_index":1372,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":4729,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":57,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"todo.html":{}}}],["shared/domain/entity",{"_index":1047,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{},"injectables/UserUC.html":{}}}],["shared/domain/types",{"_index":772,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["shared/pipes",{"_index":4753,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":1532,"title":{},"body":{"classes/NewsScope.html":{}}}],["shared/utils",{"_index":4730,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":4750,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":4733,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":2444,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":2496,"title":{},"body":{"changelog.html":{}}}],["shd",{"_index":809,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/GroupRepo.html":{},"injectables/LessonRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{}}}],["sheets",{"_index":2912,"title":{},"body":{"changelog.html":{}}}],["shortid",{"_index":3400,"title":{},"body":{"dependencies.html":{}}}],["shouldnt",{"_index":2944,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":2449,"title":{},"body":{"changelog.html":{}}}],["show_version",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":2429,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":4514,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":4175,"title":{},"body":{"license.html":{}}}],["signature",{"_index":4664,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":3888,"title":{},"body":{"license.html":{}}}],["similar",{"_index":3483,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":4502,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":4236,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":4641,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simulates",{"_index":5034,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":4087,"title":{},"body":{"license.html":{}}}],["single",{"_index":970,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":4503,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":2913,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":761,"title":{},"body":{"classes/FilterOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":968,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":4227,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":2716,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":5080,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":896,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":3435,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":3218,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":3535,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":3873,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3730,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3744,"title":{},"body":{"license.html":{}}}],["solid",{"_index":5048,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":4469,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":4172,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":2626,"title":{},"body":{"changelog.html":{}}}],["solving",{"_index":2076,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":4880,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":4883,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sort",{"_index":1473,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["sorted",{"_index":3026,"title":{},"body":{"changelog.html":{}}}],["sortedgroupcollections",{"_index":1015,"title":{},"body":{"injectables/GroupUC.html":{}}}],["sortedgroupcollections[studenttype].push",{"_index":1023,"title":{},"body":{"injectables/GroupUC.html":{}}}],["sortedgroupcollections[teachertype].push",{"_index":1024,"title":{},"body":{"injectables/GroupUC.html":{}}}],["sortedgroupcollections[type].push",{"_index":1017,"title":{},"body":{"injectables/GroupUC.html":{}}}],["sortedsubmissions",{"_index":1838,"title":{},"body":{"classes/TaskHelper.html":{}}}],["sortedsubmissions.foreach((submission",{"_index":1842,"title":{},"body":{"classes/TaskHelper.html":{}}}],["sorting",{"_index":2316,"title":{},"body":{"changelog.html":{}}}],["sortorder",{"_index":3305,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sortordermap",{"_index":4250,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sortordervalue",{"_index":4252,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":4702,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":458,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":2080,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1497,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":4437,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":4654,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":4671,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":3833,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3563,"title":{},"body":{"license.html":{}}}],["spec",{"_index":4280,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["spec.ts",{"_index":4295,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":4300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3912,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":202,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":3547,"title":{},"body":{"license.html":{}}}],["specification",{"_index":2603,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":4790,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":3681,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":4107,"title":{},"body":{"license.html":{}}}],["specify",{"_index":1242,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":2335,"title":{},"body":{"changelog.html":{}}}],["spirit",{"_index":4101,"title":{},"body":{"license.html":{}}}],["split",{"_index":425,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spy",{"_index":4999,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":4990,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":4604,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":5062,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":4624,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":4302,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":4293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/core/error/dto/error.response",{"_index":279,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":280,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger/logger.service",{"_index":623,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/NewsUc.html":{}}}],["src/modules/database",{"_index":4977,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sso",{"_index":78,"title":{},"body":{"classes/Account.html":{}}}],["stabilisation",{"_index":2940,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":4434,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":912,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":2179,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3677,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":3680,"title":{},"body":{"license.html":{}}}],["start",{"_index":359,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":2051,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":2991,"title":{},"body":{"changelog.html":{}}}],["starts",{"_index":4365,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":898,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":2776,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":2687,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":3721,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":3955,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":3249,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["states",{"_index":2575,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":460,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["statically",{"_index":4374,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":3785,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":2981,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":2972,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1866,"title":{},"body":{"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stay",{"_index":4463,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":4862,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":3574,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":4913,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":4796,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":1263,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":2518,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":2379,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":2199,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":4536,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":4673,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["story",{"_index":4992,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":3273,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":4278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":1149,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt.strategy",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["strictly",{"_index":4423,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":39,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":1199,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["stringtoboolean",{"_index":1371,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":3438,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":715,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":5082,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":4696,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":4697,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":1201,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["student",{"_index":1763,"title":{},"body":{"classes/Submission.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["student_create",{"_index":2811,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":2959,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["studentfiles",{"_index":1764,"title":{},"body":{"classes/Submission.html":{}}}],["studentid",{"_index":799,"title":{},"body":{"classes/FilterOptions.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{}}}],["studentids",{"_index":316,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["students",{"_index":375,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"classes/TaskHelper.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students'].getnumberofgroups",{"_index":1857,"title":{},"body":{"classes/TaskHelper.html":{}}}],["students/teacher",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["studenttype",{"_index":1020,"title":{},"body":{"injectables/GroupUC.html":{}}}],["studio",{"_index":3489,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":335,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":4448,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["styling",{"_index":2305,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":341,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IGroupProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sub.task",{"_index":1861,"title":{},"body":{"classes/TaskHelper.html":{}}}],["subdividing",{"_index":4002,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":3061,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":3995,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":4034,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3746,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1748,"title":{"classes/Submission.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskHelper.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["submission.grade",{"_index":1844,"title":{},"body":{"classes/TaskHelper.html":{}}}],["submission.gradecomment",{"_index":1845,"title":{},"body":{"classes/TaskHelper.html":{}}}],["submission.gradefileids",{"_index":1846,"title":{},"body":{"classes/TaskHelper.html":{}}}],["submissionrepo",{"_index":1776,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["submissions",{"_index":1774,"title":{},"body":{"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskHelper.html":{},"injectables/TaskUC.html":{},"changelog.html":{}}}],["submissions.filter((sub",{"_index":1860,"title":{},"body":{"classes/TaskHelper.html":{}}}],["submissionschema",{"_index":790,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["submitted",{"_index":1849,"title":{},"body":{"classes/TaskHelper.html":{},"classes/TaskResponse.html":{}}}],["submittedusers",{"_index":1835,"title":{},"body":{"classes/TaskHelper.html":{}}}],["submittedusers.add(submission.student.id",{"_index":1848,"title":{},"body":{"classes/TaskHelper.html":{}}}],["submittedusers.has(submission.student.id",{"_index":1843,"title":{},"body":{"classes/TaskHelper.html":{}}}],["submittedusers.size",{"_index":1850,"title":{},"body":{"classes/TaskHelper.html":{}}}],["subprograms",{"_index":3711,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":3842,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3883,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":4000,"title":{},"body":{"license.html":{}}}],["substitionteachertype",{"_index":1022,"title":{},"body":{"injectables/GroupUC.html":{}}}],["substitution",{"_index":371,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["substitutionids",{"_index":317,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["substitutionteacher",{"_index":382,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["substitutionteacherids",{"_index":1002,"title":{},"body":{"injectables/GroupRepo.html":{}}}],["substitutionteachers",{"_index":525,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["succesful",{"_index":2982,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":2615,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":2979,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["such",{"_index":3596,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":4046,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3892,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":201,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":4235,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":4186,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["summarize",{"_index":2678,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":62,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":133,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":2385,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":4952,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":3915,"title":{},"body":{"license.html":{}}}],["support",{"_index":1131,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":1134,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":4479,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":4350,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":3153,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["supportuserid",{"_index":1132,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":3561,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":4082,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3954,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":4138,"title":{},"body":{"license.html":{}}}],["svg",{"_index":4179,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1811,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["swaggermodule.createdocument(app",{"_index":4338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":4339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symmetric",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":2662,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":353,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["synced",{"_index":3034,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":2584,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":2663,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["syncindex",{"_index":2114,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":2143,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":2983,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1608,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":2579,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system/school",{"_index":2583,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":3107,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":854,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/PaginationResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":5079,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":2304,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":59,"title":{},"body":{"classes/Account.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["tables",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3309,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":3480,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["taken",{"_index":3024,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":2552,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":4284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tangible",{"_index":3868,"title":{},"body":{"license.html":{}}}],["tap",{"_index":621,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":358,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":697,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.targetids",{"_index":1539,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":1621,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1537,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1538,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":564,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetid",{"_index":197,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":695,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetmodel",{"_index":195,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":1574,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":1617,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":685,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":689,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":1620,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":696,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":523,"title":{"classes/Task.html":{}},"body":{"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/LessonTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.course?.name",{"_index":1873,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.createdat",{"_index":1876,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.duedate",{"_index":1871,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":1773,"title":{},"body":{"classes/Submission.html":{}}}],["task.id",{"_index":1868,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.name",{"_index":1869,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.updatedat",{"_index":1877,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task/open",{"_index":2073,"title":{},"body":{"changelog.html":{}}}],["task_dashboard_view_v3",{"_index":2075,"title":{},"body":{"changelog.html":{}}}],["taskcontroller",{"_index":1803,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskentities",{"_index":1752,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskhelper",{"_index":1821,"title":{"classes/TaskHelper.html":{}},"body":{"classes/TaskHelper.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["taskhelper.calculatedatefilterforopentask",{"_index":1913,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskhelper.computedtasksbysubmissions(tasks",{"_index":1930,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskmapper",{"_index":1831,"title":{"classes/TaskMapper.html":{}},"body":{"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"coverage.html":{}}}],["taskmapper.maptoresponse(task",{"_index":1862,"title":{},"body":{"classes/TaskHelper.html":{}}}],["taskmodule",{"_index":1737,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskproperties",{"_index":1785,"title":{},"body":{"classes/Task.html":{},"miscellaneous/typealiases.html":{}}}],["taskrepo",{"_index":811,"title":{"injectables/TaskRepo.html":{}},"body":{"classes/FilterOptions.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskrepo_getopentaskbycourselistandlessonlist",{"_index":1792,"title":{},"body":{"classes/Task.html":{}}}],["taskresponse",{"_index":1810,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["tasks",{"_index":1782,"title":{},"body":{"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":1859,"title":{},"body":{"classes/TaskHelper.html":{}}}],["tasksubmissions",{"_index":1833,"title":{},"body":{"classes/TaskHelper.html":{}}}],["tasksubmissions].sort((a",{"_index":1839,"title":{},"body":{"classes/TaskHelper.html":{}}}],["taskuc",{"_index":1808,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["teacher",{"_index":381,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"classes/Submission.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["teacherid",{"_index":781,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["teacherids",{"_index":318,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["teachers",{"_index":372,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["teachers'].getexistingparentids",{"_index":1912,"title":{},"body":{"injectables/TaskUC.html":{}}}],["teachertype",{"_index":1021,"title":{},"body":{"injectables/GroupUC.html":{}}}],["team",{"_index":494,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teaminfo",{"_index":493,"title":{"classes/TeamInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teammembers",{"_index":800,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["teamnews",{"_index":520,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamnews(props",{"_index":516,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teams",{"_index":336,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsScope.html":{},"classes/TeamInfo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["teamsubmissions",{"_index":785,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["teardown",{"_index":4206,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":4404,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":4675,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":875,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":4466,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":3755,"title":{},"body":{"license.html":{}}}],["technology",{"_index":4415,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":4393,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":3665,"title":{},"body":{"license.html":{}}}],["template",{"_index":920,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":3719,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":3960,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3979,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3970,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3957,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2557,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":583,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":599,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":579,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":581,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":4294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/services",{"_index":3509,"title":{},"body":{"index.html":{}}}],["testable",{"_index":4818,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testcase",{"_index":4923,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":4944,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":4381,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":4314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":1117,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":587,"title":{},"body":{"controllers/DelayController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":4978,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":4986,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":4982,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":4981,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":4980,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":4301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":4299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":246,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":2307,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":4748,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":4731,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":4749,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":247,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":4530,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":2903,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":3600,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":2831,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["think",{"_index":821,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":3778,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._queries",{"_index":1534,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.length",{"_index":1533,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.push(query",{"_index":1549,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries[0",{"_index":1535,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._timeout",{"_index":1963,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.addquery",{"_index":1546,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1544,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":1545,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.aud",{"_index":1133,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":1605,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":4845,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1585,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":1622,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":1618,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.cache",{"_index":1704,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.code",{"_index":282,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.computesubmissionstatus(tasksubmissions",{"_index":1863,"title":{},"body":{"classes/TaskHelper.html":{}}}],["this.content",{"_index":499,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.courseid",{"_index":1799,"title":{},"body":{"classes/Task.html":{}}}],["this.createerrorresponse(error",{"_index":938,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.data",{"_index":1648,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.displayat",{"_index":501,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.duedate",{"_index":1795,"title":{},"body":{"classes/Task.html":{}}}],["this.duedategreaterthen",{"_index":803,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["this.em.find(courseentity",{"_index":1001,"title":{},"body":{"injectables/GroupRepo.html":{}}}],["this.em.find(coursegroupentity",{"_index":1004,"title":{},"body":{"injectables/GroupRepo.html":{}}}],["this.em.find(lessontaskinfo",{"_index":1176,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["this.em.findandcount",{"_index":817,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["this.em.findandcount(news",{"_index":1481,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":1783,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1478,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":1703,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.em.findoneorfail(user",{"_index":2026,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.persistandflush(news",{"_index":1470,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(obj",{"_index":1482,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.removeandflush(news",{"_index":1479,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.email",{"_index":1105,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":233,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":234,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":221,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":222,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":698,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":684,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":688,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":4759,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.findbyid(id",{"_index":1705,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1477,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.firstname",{"_index":1101,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"classes/UserInfo.html":{}}}],["this.getentitypermissions(userid",{"_index":226,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":1597,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":1593,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":1615,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":677,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.grouprepo.getcoursegroupsbyuserid(userid",{"_index":1014,"title":{},"body":{"injectables/GroupUC.html":{}}}],["this.grouprepo.getcoursesbyuserid(userid",{"_index":1013,"title":{},"body":{"injectables/GroupUC.html":{}}}],["this.groups",{"_index":402,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this.groups.filter((group",{"_index":416,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this.groups.foreach((group",{"_index":405,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this.groups.length",{"_index":413,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this.groups.push(new",{"_index":410,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this.groupuc.getcoursegroupsbyuserid(userid",{"_index":2004,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.lastname",{"_index":1103,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"classes/UserInfo.html":{}}}],["this.lessonid",{"_index":1801,"title":{},"body":{"classes/Task.html":{}}}],["this.lessonrepo.getpublishedlessonsidsbycourseids(courseids",{"_index":1914,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.limit",{"_index":806,"title":{},"body":{"classes/FilterOptions.html":{},"classes/PaginationResponse.html":{},"injectables/TaskRepo.html":{}}}],["this.logger.log(`create",{"_index":1583,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":4881,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1589,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":1598,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1590,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":4854,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1582,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":4878,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":625,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":629,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":285,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":1267,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":391,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{}}}],["this.newsrepo.delete(news",{"_index":1612,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findall(targets",{"_index":1595,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":1601,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.save(news",{"_index":1588,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":1332,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":1352,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":1339,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":1348,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":1349,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.orm.close",{"_index":1266,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.parent",{"_index":386,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this.permission",{"_index":393,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this.permissions",{"_index":1088,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.private",{"_index":1797,"title":{},"body":{"classes/Task.html":{}}}],["this.request.app",{"_index":744,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.rolerepo.resolvepermissionsfromsubrolesbyid(id",{"_index":1714,"title":{},"body":{"injectables/RoleUC.html":{}}}],["this.roles",{"_index":1090,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.roleuc.resolvepermissionsbyidlist(currentuser.roles",{"_index":2038,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.schoolid",{"_index":396,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{}}}],["this.skip",{"_index":804,"title":{},"body":{"classes/FilterOptions.html":{},"classes/PaginationResponse.html":{},"injectables/TaskRepo.html":{}}}],["this.studentids",{"_index":423,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this.submissionrepo.getsubmissionsbytaskslist(tasks",{"_index":1929,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.substitutionids",{"_index":430,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this.taskrepo.getopentaskbycourselistandlessonlist(ressourceids",{"_index":1922,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findallopen(currentuser.user",{"_index":1819,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.teacherids",{"_index":428,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this.title",{"_index":284,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.total",{"_index":1649,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":283,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":4853,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userfacade.getcoursegroupsbyuserid(userid",{"_index":1911,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.userfacade.resolveuser(payload",{"_index":1165,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userids",{"_index":388,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":4858,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyid(currentuser.userid",{"_index":2037,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.userrepo.save(user",{"_index":4849,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":4847,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.useruc.getuserwithpermissions(currentuser",{"_index":2003,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.validationerrors",{"_index":134,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["this[usergrouptypes.coursegroupstudents",{"_index":440,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this[usergrouptypes.coursegroupstudents].getgroupsbyparentid(parentid",{"_index":444,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this[usergrouptypes.coursestudents",{"_index":437,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this[usergrouptypes.coursestudents].getgroupsbyparentid(parentid",{"_index":441,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this[usergrouptypes.coursesubstitutionteachers",{"_index":439,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this[usergrouptypes.coursesubstitutionteachers].getgroupsbyparentid(parentid",{"_index":443,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this[usergrouptypes.courseteachers",{"_index":438,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["this[usergrouptypes.courseteachers].getgroupsbyparentid(parentid",{"_index":442,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["those",{"_index":3228,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":3917,"title":{},"body":{"license.html":{}}}],["thr",{"_index":2428,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":2967,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":3654,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":230,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["throwerror",{"_index":1954,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":1962,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":1961,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["throws",{"_index":223,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":2939,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":3736,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":3491,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":3493,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":4535,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":555,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":1114,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timeout(milliseconds",{"_index":1965,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":1958,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":2974,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":1955,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":1116,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":1964,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":2439,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":2968,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":1486,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":3442,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":90,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["todo",{"_index":63,"title":{"todo.html":{}},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IGroupProperties.html":{},"interfaces/IRoleProperties.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/Role.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":1357,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["toggle",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":2152,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":4948,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":3705,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":2306,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":4872,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":816,"title":{},"body":{"classes/FilterOptions.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":1068,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":4670,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":4695,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":3941,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3940,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3942,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2540,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":4653,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":3655,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3896,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3998,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":4820,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":956,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":1653,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":960,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":3344,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":957,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":1189,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":5084,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":4581,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":3857,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":4784,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":4686,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":2571,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":2210,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":3916,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":3761,"title":{},"body":{"license.html":{}}}],["tries",{"_index":3171,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":4593,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":4689,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":3191,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":496,"title":{},"body":{"classes/CourseNews.html":{},"classes/FilterOptions.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtConstants.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":901,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":4202,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":2954,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":2882,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":3114,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":1136,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":26,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/CourseEntity.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGroupProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskHelper.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["type.interface.ts",{"_index":1058,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":4238,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":5049,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1512,"title":{},"body":{"classes/NewsResponse.html":{}}}],["typeorm",{"_index":5053,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":2061,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":3265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typesafety",{"_index":1346,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":511,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":3880,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":4628,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":716,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":4303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":1883,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":4722,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/group.uc",{"_index":2002,"title":{},"body":{"injectables/UserFacade.html":{}}}],["uc/news.uc",{"_index":1321,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.uc",{"_index":1809,"title":{},"body":{"controllers/TaskController.html":{}}}],["uc/user.uc",{"_index":2001,"title":{},"body":{"injectables/UserFacade.html":{}}}],["ui",{"_index":3440,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":4648,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":643,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":214,"title":{},"body":{"injectables/AuthorizationService.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":231,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":2988,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":2844,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":3045,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":4814,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":4589,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":49,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3607,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":4417,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":4924,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":932,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":2858,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":4447,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":647,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unit",{"_index":2485,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["unit.test.js",{"_index":3512,"title":{},"body":{"index.html":{}}}],["universal",{"_index":3443,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":891,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":892,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":3886,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":5006,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":3725,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3633,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":3212,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":3913,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":1037,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":2066,"title":{},"body":{"changelog.html":{}}}],["unskip",{"_index":1441,"title":{},"body":{"modules/NewsModule.html":{}}}],["untestable",{"_index":4869,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":3968,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["up",{"_index":2336,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":354,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["update(id",{"_index":1576,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":1308,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":1509,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":17,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["updatenewsparams",{"_index":1309,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":459,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":487,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":3202,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":2917,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":1033,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1465,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":3436,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":1775,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{}}}],["upon",{"_index":4800,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":4736,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":646,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":3387,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":845,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":2320,"title":{},"body":{"changelog.html":{}}}],["urlsafe",{"_index":3446,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":2791,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":64,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":4483,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":639,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":535,"title":{},"body":{"classes/CourseTaskInfo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedglobals",{"_index":843,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":1233,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":4165,"title":{},"body":{"license.html":{}}}],["useguards(jwtauthguard",{"_index":4279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":12,"title":{"classes/User.html":{}},"body":{"classes/Account.html":{},"modules/AuthModule.html":{},"injectables/AuthorizationService.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/FilterOptions.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IGroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TaskHelper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":4848,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.createdat",{"_index":1682,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.entity",{"_index":58,"title":{},"body":{"classes/Account.html":{}}}],["user.facade",{"_index":2022,"title":{},"body":{"modules/UserModule.html":{}}}],["user.firstname",{"_index":1675,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.id",{"_index":1681,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.lastname",{"_index":1676,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.ldapdn",{"_index":3056,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":3055,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":682,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":4751,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.school.tostring",{"_index":1677,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.schoolid.tostring",{"_index":680,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.test.js",{"_index":3510,"title":{},"body":{"index.html":{}}}],["user.uc.ts",{"_index":4745,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.updatedat",{"_index":1683,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user/class",{"_index":4490,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":4840,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":4846,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":4860,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usercontroller",{"_index":1984,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userentities",{"_index":1753,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userfacade",{"_index":1143,"title":{"injectables/UserFacade.html":{}},"body":{"injectables/JwtStrategy.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["usergrouptypes",{"_index":369,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{}}}],["usergrouptypes.coursegroupstudents",{"_index":436,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["usergrouptypes.coursestudents",{"_index":433,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["usergrouptypes.coursesubstitutionteachers",{"_index":435,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["usergrouptypes.courseteachers",{"_index":434,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{}}}],["userid",{"_index":203,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupRepo.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IGroupProperties.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"injectables/UserFacade.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":691,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["userids",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/CourseEntity.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"injectables/GroupUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"miscellaneous/enumerations.html":{}}}],["userids'})@index",{"_index":544,"title":{},"body":{"classes/CoursegroupEntity.html":{}}}],["userinfo",{"_index":466,"title":{"classes/UserInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinfo.firstname",{"_index":2010,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.id",{"_index":2008,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.lastname",{"_index":2012,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfomapper",{"_index":1390,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1410,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1413,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1488,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["usermodule",{"_index":149,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":13,"title":{},"body":{"classes/Account.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":2020,"title":{"injectables/UserRepo.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":1043,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":4855,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["userstasks",{"_index":815,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["usertaskinfo",{"_index":530,"title":{"classes/UserTaskInfo.html":{}},"body":{"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useruc",{"_index":1989,"title":{"injectables/UserUC.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":3039,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":601,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":718,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":4485,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["util",{"_index":2792,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":4947,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":2760,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":3188,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v1",{"_index":4329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":2150,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":4226,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/index",{"_index":4231,"title":{},"body":{"todo.html":{}}}],["v3/user/me",{"_index":2077,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":964,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":1110,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":1145,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":4496,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":2853,"title":{},"body":{"changelog.html":{}}}],["validation",{"_index":111,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.error.ts",{"_index":85,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":95,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":2049,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":942,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":950,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":312,"title":{},"body":{"modules/CoreModule.html":{}}}],["validationerror",{"_index":94,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":137,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":127,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":140,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":96,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":293,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":949,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":573,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/Role.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":4732,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":1657,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/CoursegroupEntity.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GroupEntity.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["valueof",{"_index":1030,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["values",{"_index":2235,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["variable",{"_index":3100,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":2125,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["verbatim",{"_index":3542,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":1063,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":1072,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":1077,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":5037,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":5035,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":2257,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":4971,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":2503,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":2301,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["versioning",{"_index":2060,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":2656,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":3559,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":4467,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":1889,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1572,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":473,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":3910,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3964,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":3398,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":4210,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":472,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":3488,"title":{},"body":{"index.html":{}}}],["void",{"_index":409,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GlobalErrorFilter.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"classes/NewsScope.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":3814,"title":{},"body":{"license.html":{}}}],["vor",{"_index":2361,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":808,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/GroupRepo.html":{},"interfaces/JwtConstants.html":{},"injectables/LessonRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":4402,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":5075,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":4232,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":4403,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":5073,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":3449,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":3768,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4151,"title":{},"body":{"license.html":{}}}],["want",{"_index":329,"title":{},"body":{"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":4508,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":1064,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":1074,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":3667,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3666,"title":{},"body":{"license.html":{}}}],["watch",{"_index":4216,"title":{},"body":{"todo.html":{}}}],["way",{"_index":1240,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":3824,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":4169,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weight",{"_index":2234,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":3477,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":4921,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":4004,"title":{},"body":{"license.html":{}}}],["whereas",{"_index":4631,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":1191,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":3877,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":962,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["whitelisted",{"_index":1161,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":3013,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":3687,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":3864,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3684,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":3586,"title":{},"body":{"license.html":{}}}],["wil",{"_index":3005,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":2809,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":3244,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":2727,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":3501,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":3760,"title":{},"body":{"license.html":{}}}],["wise",{"_index":3515,"title":{},"body":{"index.html":{}}}],["wish",{"_index":3567,"title":{},"body":{"license.html":{}}}],["within",{"_index":269,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":1917,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["words",{"_index":3496,"title":{},"body":{"index.html":{}}}],["work",{"_index":256,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseEntity.html":{},"classes/CoursegroupEntity.html":{},"classes/FilteredCourseGroups.html":{},"classes/GroupEntity.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGroupProperties.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":3703,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":1931,"title":{},"body":{"injectables/TaskUC.html":{}}}],["workflows",{"_index":4870,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":3146,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":4916,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":1356,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{},"license.html":{}}}],["world",{"_index":4570,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":4036,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":4975,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["wrapped",{"_index":4929,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["wraps",{"_index":4559,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":1926,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writeerrorlog",{"_index":929,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":936,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writes",{"_index":4676,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":916,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":931,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":4115,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["written",{"_index":3481,"title":{},"body":{"index.html":{},"license.html":{}}}],["wrong",{"_index":923,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wtf",{"_index":823,"title":{},"body":{"classes/FilterOptions.html":{},"injectables/TaskRepo.html":{}}}],["x",{"_index":4313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3452,"title":{},"body":{"dependencies.html":{}}}],["xss",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":4605,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["year",{"_index":2091,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":3832,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":729,"title":{},"body":{"interfaces/FeathersService.html":{},"classes/GroupEntityCollection.html":{},"interfaces/ILogger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/TaskMapper.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":3508,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":4052,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":4876,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["yyyy",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":2902,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/account.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lasttriedFailedLogin\n                            \n                            \n                                user\n                            \n                            \n                                username\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lasttriedFailedLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'userIds', type: User})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToMany, Property, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { User } from './user.entity';\n\n@Entity({ tableName: 'accounts' })\nexport class Account extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\t// TODO not use partial see INewsProperties, use Object.assign for related entities only.\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tusername: string;\n\t/*\n\t@Property()\n\tpassword: string; // hash and secret inside the application\n\t*/\n\n\t@ManyToMany({ fieldName: 'userIds', type: User })\n\tuser = new Collection(this);\n\n\t@Property()\n\tlasttriedFailedLogin: Date; // iso date\n\n\t// sso keys\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidationErrorDetailResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\nimport { UserModule } from '../user';\n// import { AuthController } from './controller/auth.controller';\n// import { LocalStrategy } from './strategy/local.strategy';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants), UserModule],\n\tproviders: [JwtStrategy],\n\texports: [],\n\tcontrollers: [\n\t\t/* AuthController */\n\t],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:37\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedEntities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:57\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel, NewsTargetModelValue } from '../news/entity';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\tconstructor({ type, title, defaultMessage }: IErrorType, code: HttpStatus = HttpStatus.CONFLICT) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseEntity.html":{"url":"classes/CourseEntity.html","title":"class - CourseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/group.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                studentIds\n                            \n                            \n                                substitutionIds\n                            \n                            \n                                teacherIds\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:141\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        studentIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'substitutionIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teacherIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'teacherIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId, PermissionsTypes } from '@shared/domain';\n\n/**\n * Why \"group\" also the id list of userIds seperatly?\n * If we want to have a group collection in future,\n * we can add the id of this groups to the learning room (that include the stuff from teams, classes, course, coursgroups, editor, multiple sub groups...)\n * The lerning room ressources and childs hold all the related informations but not the userId numbers.\n * This are the part of the IDM group, class, school, user management.\n * If we run a sync we only want to update this id list and not the content that is linked with it.\n *\n * To get closer to this target we must start to collect this informations on this place and later replace this with a real group collection.\n */\n\n//  TODO: For search optimization we should work with schoolId.\n\nexport enum UserGroupTypes {\n\tCourseSubstitutionTeachers = 'course-substitution-teachers',\n\tCourseTeachers = 'course-teachers',\n\tCourseStudents = 'course-students',\n\tCoursegroupStudents = 'coursegroup-students',\n}\n\ninterface IGroupProperties {\n\tparent?: EntityId;\n\ttype: UserGroupTypes; // TODO: Enum course-teacher, course-substitutionTeacher, course-students, coursegroup-students\n\tuserIds: EntityId[];\n\tname?: string;\n\tpermission?: PermissionsTypes;\n\tschoolId?: EntityId;\n}\n\nexport class GroupEntity extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index()\n\tparent: EntityId | null;\n\n\t@Property()\n\t@Index()\n\tuserIds: EntityId[];\n\n\t@Property()\n\t@Index()\n\ttype: UserGroupTypes;\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tschoolId: EntityId | null;\n\n\tpermission?: PermissionsTypes;\n\n\tconstructor(props: IGroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent || null;\n\t\tthis.userIds = props.userIds;\n\t\tthis.type = props.type;\n\t\tthis.name = props.name || '';\n\t\tthis.permission = props.permission || PermissionsTypes.Empty;\n\t\tthis.schoolId = props.schoolId || null;\n\n\t\tObject.assign(this, {});\n\t}\n\n\thasParent(): boolean {\n\t\treturn this.parent !== null;\n\t}\n}\n\nclass GroupEntityCollection {\n\tgroups: GroupEntity[];\n\n\tconstructor(groups?: GroupEntity[]) {\n\t\tthis.groups = groups || [];\n\t}\n\n\tgetExistingParentIds(): EntityId[] {\n\t\tconst parentIds: EntityId[] = [];\n\t\tthis.groups.forEach((group) => {\n\t\t\tif (group.hasParent()) {\n\t\t\t\tparentIds.push(group.parent as EntityId);\n\t\t\t}\n\t\t});\n\t\treturn parentIds;\n\t}\n\n\tpush(props: IGroupProperties): void {\n\t\tthis.groups.push(new GroupEntity(props));\n\t}\n\n\tgetNumberOfGroups(): number {\n\t\treturn this.groups.length;\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst foundGroups = this.groups.filter((group) => group.parent === parentId);\n\t\treturn foundGroups;\n\t}\n}\n\ninterface ICoursegroupProperties {\n\tparent: EntityId;\n\tstudentIds: EntityId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CoursegroupEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'courseId' })\n\t@Index()\n\tparent: EntityId;\n\n\t@Property({ fieldName: 'userIds' })\n\t@Index()\n\tstudentIds: EntityId[];\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent;\n\t\tthis.studentIds = props.studentIds;\n\t\tObject.assign(this, {});\n\t}\n}\n\n// TODO: must split later in 3 groups\ninterface ICourseProperties {\n\tstudentIds?: EntityId[];\n\tteacherIds?: EntityId[];\n\tsubstitutionIds?: EntityId[];\n}\n\n@Entity({ tableName: 'courses' })\nexport class CourseEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: EntityId[];\n\n\t@Property({ fieldName: 'teacherIds' })\n\tteacherIds: EntityId[];\n\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionIds: EntityId[];\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionIds = props.substitutionIds || [];\n\t\tObject.assign(this, {});\n\t}\n}\n\nexport class FilteredCourseGroups {\n\t[UserGroupTypes.CourseStudents]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseSubstitutionTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CoursegroupStudents]: GroupEntityCollection;\n\n\tconstructor() {\n\t\tthis[UserGroupTypes.CourseStudents] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseSubstitutionTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CoursegroupStudents] = new GroupEntityCollection();\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst CourseStudents = this[UserGroupTypes.CourseStudents].getGroupsByParentId(parentId);\n\t\tconst CourseTeachers = this[UserGroupTypes.CourseTeachers].getGroupsByParentId(parentId);\n\t\tconst CourseSubstitutionTeachers = this[UserGroupTypes.CourseSubstitutionTeachers].getGroupsByParentId(parentId);\n\t\tconst CoursegroupStudents = this[UserGroupTypes.CoursegroupStudents].getGroupsByParentId(parentId);\n\t\treturn [...CourseStudents, ...CourseTeachers, ...CourseSubstitutionTeachers, ...CoursegroupStudents];\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseInfo.html":{"url":"classes/CourseInfo.html","title":"class - CourseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/course-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'courses' })\nexport class CourseInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:101\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:34\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:38\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModelValue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:30\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseTaskInfo.html":{"url":"classes/CourseTaskInfo.html","title":"class - CourseTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                name\n                            \n                            \n                                students\n                            \n                            \n                                substitutionTeachers\n                            \n                            \n                                teachers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : COURSE_DEFAULT_COLOR\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'userIds', type: UserTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionTeachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'substitutionIds', type: UserTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'teacherIds', type: UserTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\nexport const COURSE_DEFAULT_COLOR = '#ACACAC';\n\n// TODO: This file is not used and should remove/move behind the learn room facade to get informations\n@Entity({ tableName: 'courses' })\nexport class CourseTaskInfo extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcolor: string = COURSE_DEFAULT_COLOR;\n\n\t// TODO: @Property() ?\n\t@ManyToMany({ fieldName: 'userIds', type: UserTaskInfo })\n\tstudents = new Collection(this);\n\n\t// TODO: combine teachers and substitutionTeachers\n\t@ManyToMany({ fieldName: 'teacherIds', type: UserTaskInfo })\n\tteachers = new Collection(this);\n\n\t@ManyToMany({ fieldName: 'substitutionIds', type: UserTaskInfo })\n\tsubstitutionTeachers = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoursegroupEntity.html":{"url":"classes/CoursegroupEntity.html","title":"class - CoursegroupEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoursegroupEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/group.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                parent\n                            \n                            \n                                studentIds\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICoursegroupProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:115\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICoursegroupProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'courseId'})@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'userIds'})@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId, PermissionsTypes } from '@shared/domain';\n\n/**\n * Why \"group\" also the id list of userIds seperatly?\n * If we want to have a group collection in future,\n * we can add the id of this groups to the learning room (that include the stuff from teams, classes, course, coursgroups, editor, multiple sub groups...)\n * The lerning room ressources and childs hold all the related informations but not the userId numbers.\n * This are the part of the IDM group, class, school, user management.\n * If we run a sync we only want to update this id list and not the content that is linked with it.\n *\n * To get closer to this target we must start to collect this informations on this place and later replace this with a real group collection.\n */\n\n//  TODO: For search optimization we should work with schoolId.\n\nexport enum UserGroupTypes {\n\tCourseSubstitutionTeachers = 'course-substitution-teachers',\n\tCourseTeachers = 'course-teachers',\n\tCourseStudents = 'course-students',\n\tCoursegroupStudents = 'coursegroup-students',\n}\n\ninterface IGroupProperties {\n\tparent?: EntityId;\n\ttype: UserGroupTypes; // TODO: Enum course-teacher, course-substitutionTeacher, course-students, coursegroup-students\n\tuserIds: EntityId[];\n\tname?: string;\n\tpermission?: PermissionsTypes;\n\tschoolId?: EntityId;\n}\n\nexport class GroupEntity extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index()\n\tparent: EntityId | null;\n\n\t@Property()\n\t@Index()\n\tuserIds: EntityId[];\n\n\t@Property()\n\t@Index()\n\ttype: UserGroupTypes;\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tschoolId: EntityId | null;\n\n\tpermission?: PermissionsTypes;\n\n\tconstructor(props: IGroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent || null;\n\t\tthis.userIds = props.userIds;\n\t\tthis.type = props.type;\n\t\tthis.name = props.name || '';\n\t\tthis.permission = props.permission || PermissionsTypes.Empty;\n\t\tthis.schoolId = props.schoolId || null;\n\n\t\tObject.assign(this, {});\n\t}\n\n\thasParent(): boolean {\n\t\treturn this.parent !== null;\n\t}\n}\n\nclass GroupEntityCollection {\n\tgroups: GroupEntity[];\n\n\tconstructor(groups?: GroupEntity[]) {\n\t\tthis.groups = groups || [];\n\t}\n\n\tgetExistingParentIds(): EntityId[] {\n\t\tconst parentIds: EntityId[] = [];\n\t\tthis.groups.forEach((group) => {\n\t\t\tif (group.hasParent()) {\n\t\t\t\tparentIds.push(group.parent as EntityId);\n\t\t\t}\n\t\t});\n\t\treturn parentIds;\n\t}\n\n\tpush(props: IGroupProperties): void {\n\t\tthis.groups.push(new GroupEntity(props));\n\t}\n\n\tgetNumberOfGroups(): number {\n\t\treturn this.groups.length;\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst foundGroups = this.groups.filter((group) => group.parent === parentId);\n\t\treturn foundGroups;\n\t}\n}\n\ninterface ICoursegroupProperties {\n\tparent: EntityId;\n\tstudentIds: EntityId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CoursegroupEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'courseId' })\n\t@Index()\n\tparent: EntityId;\n\n\t@Property({ fieldName: 'userIds' })\n\t@Index()\n\tstudentIds: EntityId[];\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent;\n\t\tthis.studentIds = props.studentIds;\n\t\tObject.assign(this, {});\n\t}\n}\n\n// TODO: must split later in 3 groups\ninterface ICourseProperties {\n\tstudentIds?: EntityId[];\n\tteacherIds?: EntityId[];\n\tsubstitutionIds?: EntityId[];\n}\n\n@Entity({ tableName: 'courses' })\nexport class CourseEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: EntityId[];\n\n\t@Property({ fieldName: 'teacherIds' })\n\tteacherIds: EntityId[];\n\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionIds: EntityId[];\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionIds = props.substitutionIds || [];\n\t\tObject.assign(this, {});\n\t}\n}\n\nexport class FilteredCourseGroups {\n\t[UserGroupTypes.CourseStudents]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseSubstitutionTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CoursegroupStudents]: GroupEntityCollection;\n\n\tconstructor() {\n\t\tthis[UserGroupTypes.CourseStudents] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseSubstitutionTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CoursegroupStudents] = new GroupEntityCollection();\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst CourseStudents = this[UserGroupTypes.CourseStudents].getGroupsByParentId(parentId);\n\t\tconst CourseTeachers = this[UserGroupTypes.CourseTeachers].getGroupsByParentId(parentId);\n\t\tconst CourseSubstitutionTeachers = this[UserGroupTypes.CourseSubstitutionTeachers].getGroupsByParentId(parentId);\n\t\tconst CoursegroupStudents = this[UserGroupTypes.CoursegroupStudents].getGroupsByParentId(parentId);\n\t\treturn [...CourseStudents, ...CourseTeachers, ...CourseSubstitutionTeachers, ...CoursegroupStudents];\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDate, IsString } from 'class-validator';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DurationLoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserSchoolPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserTargetPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModelValue } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            className\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service find method\n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service get method\n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getService\n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTaskInfo.html":{"url":"classes/FileTaskInfo.html","title":"class - FileTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/file-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creator\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\n@Entity({ tableName: 'files' })\nexport class FileTaskInfo extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: UserTaskInfo;\n}\n\n// TODO: should remove from this place ..it is not part of task\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterOptions.html":{"url":"classes/FilterOptions.html","title":"class - FilterOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dueDateGreaterThen\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                schoolId\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pagination: IPagination, dueDateGreaterThen: Date, schoolId: EntityId)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pagination\n                                                  \n                                                        \n                                                                        IPagination\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dueDateGreaterThen\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schoolId\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dueDateGreaterThen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { QueryOrder } from '@mikro-orm/core';\nimport { Counted } from '@shared/domain/types';\nimport { Task } from '../entity';\n\n/*\nconst homeworkSchema = new Schema({\n\tschoolId: { type: Schema.Types.ObjectId, required: true },\n\tcreatedAt: { type: Date, default: Date.now },\n\tfileIds: [{ type: Schema.Types.ObjectId, ref: 'file' }],\n\tupdatedAt: { type: Date, default: Date.now },\n\tname: { type: String, required: true },\n\tdescription: { type: String },\n\tdueDate: { type: Date },\n\tavailableDate: { type: Date, required: true },\n\tteacherId: { type: Schema.Types.ObjectId, required: true, ref: 'user' },\n\tcourseId: {\n\t\ttype: Schema.Types.ObjectId,\n\t\tdefault: null,\n\t\tref: 'course',\n\t},\n\tlessonId: { type: Schema.Types.ObjectId, default: null, ref: 'lesson' },\n\tprivate: { type: Boolean },\n\tpublicSubmissions: { type: Boolean },\n\tteamSubmissions: { type: Boolean },\n\tmaxTeamMembers: { type: Number, default: null, min: 1 },\n\tarchived: [{ type: Schema.Types.ObjectId, ref: 'user' }],\n});\n\nconst submissionSchema = new Schema({\n\tschoolId: { type: Schema.Types.ObjectId, required: true },\n\tcreatedAt: { type: Date, default: Date.now },\n\tupdatedAt: { type: Date, default: Date.now },\n\tcomment: { type: String },\n\tgrade: { type: Number, min: 0, max: 100 },\n\tgradeComment: { type: String },\n\thomeworkId: {\n\t\ttype: Schema.Types.ObjectId,\n\t\trequired: true,\n\t\tref: 'homework',\n\t},\n\tstudentId: { type: Schema.Types.ObjectId, required: true, ref: 'user' },\n\tteamMembers: [{ type: Schema.Types.ObjectId, required: true, ref: 'user' }],\n\tcourseGroupId: { type: Schema.Types.ObjectId, ref: 'courseGroup' },\n\tfileIds: [{ type: Schema.Types.ObjectId, ref: 'file' }],\n\tgradeFileIds: [{ type: Schema.Types.ObjectId, ref: 'file' }],\n});\n\n*/\n\nexport class FilterOptions {\n\tlimit?: number;\n\n\tskip?: number;\n\n\tdueDateGreaterThen: Date;\n\n\tschoolId: EntityId;\n\n\tconstructor(pagination: IPagination, dueDateGreaterThen: Date, schoolId: EntityId) {\n\t\tthis.dueDateGreaterThen = dueDateGreaterThen;\n\t\tthis.skip = pagination.skip;\n\t\tthis.limit = pagination.limit;\n\t\tthis.schoolId = schoolId;\n\t}\n}\n\n// TODO: add schoolId as filter vs shd operations?\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync getOpenTaskByCourseListAndLessonList(\n\t\tlessonIdsAndCourseIds: EntityId[],\n\t\tfilterOptions: FilterOptions\n\t): Promise> {\n\t\tconst { limit, skip, dueDateGreaterThen, schoolId } = filterOptions;\n\t\tconst [usersTasks, total] = await this.em.findAndCount(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t$and: [\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ courseId: { $in: lessonIdsAndCourseIds } },\n\t\t\t\t\t{ schoolId },\n\t\t\t\t\t// Is lesson really needed ?? I think every lesson should select by a course\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: lessonIdsAndCourseIds } }] },\n\t\t\t\t\t// WTF courseGroupId do not exist in task ...\n\t\t\t\t\t// { $or: [{ courseGroupId: null }, { courseGroupId: { $in: ressourceIds } }] },\n\t\t\t\t\t{ $or: [{ dueDate: { $gte: dueDateGreaterThen } }, { dueDate: null }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t{ limit, offset: skip, orderBy: { dueDate: QueryOrder.ASC } }\n\t\t);\n\n\t\treturn [usersTasks, total];\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilteredCourseGroups.html":{"url":"classes/FilteredCourseGroups.html","title":"class - FilteredCourseGroups","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilteredCourseGroups\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/group.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                \n                            \n                            \n                                \n                            \n                            \n                                \n                            \n                            \n                                \n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGroupsByParentId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:159\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntityCollection\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:153\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntityCollection\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntityCollection\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:157\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntityCollection\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:159\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupsByParentId\n                        \n                    \n                \n            \n            \n                \ngetGroupsByParentId(parentId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/entity/group.entity.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GroupEntity[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId, PermissionsTypes } from '@shared/domain';\n\n/**\n * Why \"group\" also the id list of userIds seperatly?\n * If we want to have a group collection in future,\n * we can add the id of this groups to the learning room (that include the stuff from teams, classes, course, coursgroups, editor, multiple sub groups...)\n * The lerning room ressources and childs hold all the related informations but not the userId numbers.\n * This are the part of the IDM group, class, school, user management.\n * If we run a sync we only want to update this id list and not the content that is linked with it.\n *\n * To get closer to this target we must start to collect this informations on this place and later replace this with a real group collection.\n */\n\n//  TODO: For search optimization we should work with schoolId.\n\nexport enum UserGroupTypes {\n\tCourseSubstitutionTeachers = 'course-substitution-teachers',\n\tCourseTeachers = 'course-teachers',\n\tCourseStudents = 'course-students',\n\tCoursegroupStudents = 'coursegroup-students',\n}\n\ninterface IGroupProperties {\n\tparent?: EntityId;\n\ttype: UserGroupTypes; // TODO: Enum course-teacher, course-substitutionTeacher, course-students, coursegroup-students\n\tuserIds: EntityId[];\n\tname?: string;\n\tpermission?: PermissionsTypes;\n\tschoolId?: EntityId;\n}\n\nexport class GroupEntity extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index()\n\tparent: EntityId | null;\n\n\t@Property()\n\t@Index()\n\tuserIds: EntityId[];\n\n\t@Property()\n\t@Index()\n\ttype: UserGroupTypes;\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tschoolId: EntityId | null;\n\n\tpermission?: PermissionsTypes;\n\n\tconstructor(props: IGroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent || null;\n\t\tthis.userIds = props.userIds;\n\t\tthis.type = props.type;\n\t\tthis.name = props.name || '';\n\t\tthis.permission = props.permission || PermissionsTypes.Empty;\n\t\tthis.schoolId = props.schoolId || null;\n\n\t\tObject.assign(this, {});\n\t}\n\n\thasParent(): boolean {\n\t\treturn this.parent !== null;\n\t}\n}\n\nclass GroupEntityCollection {\n\tgroups: GroupEntity[];\n\n\tconstructor(groups?: GroupEntity[]) {\n\t\tthis.groups = groups || [];\n\t}\n\n\tgetExistingParentIds(): EntityId[] {\n\t\tconst parentIds: EntityId[] = [];\n\t\tthis.groups.forEach((group) => {\n\t\t\tif (group.hasParent()) {\n\t\t\t\tparentIds.push(group.parent as EntityId);\n\t\t\t}\n\t\t});\n\t\treturn parentIds;\n\t}\n\n\tpush(props: IGroupProperties): void {\n\t\tthis.groups.push(new GroupEntity(props));\n\t}\n\n\tgetNumberOfGroups(): number {\n\t\treturn this.groups.length;\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst foundGroups = this.groups.filter((group) => group.parent === parentId);\n\t\treturn foundGroups;\n\t}\n}\n\ninterface ICoursegroupProperties {\n\tparent: EntityId;\n\tstudentIds: EntityId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CoursegroupEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'courseId' })\n\t@Index()\n\tparent: EntityId;\n\n\t@Property({ fieldName: 'userIds' })\n\t@Index()\n\tstudentIds: EntityId[];\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent;\n\t\tthis.studentIds = props.studentIds;\n\t\tObject.assign(this, {});\n\t}\n}\n\n// TODO: must split later in 3 groups\ninterface ICourseProperties {\n\tstudentIds?: EntityId[];\n\tteacherIds?: EntityId[];\n\tsubstitutionIds?: EntityId[];\n}\n\n@Entity({ tableName: 'courses' })\nexport class CourseEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: EntityId[];\n\n\t@Property({ fieldName: 'teacherIds' })\n\tteacherIds: EntityId[];\n\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionIds: EntityId[];\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionIds = props.substitutionIds || [];\n\t\tObject.assign(this, {});\n\t}\n}\n\nexport class FilteredCourseGroups {\n\t[UserGroupTypes.CourseStudents]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseSubstitutionTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CoursegroupStudents]: GroupEntityCollection;\n\n\tconstructor() {\n\t\tthis[UserGroupTypes.CourseStudents] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseSubstitutionTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CoursegroupStudents] = new GroupEntityCollection();\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst CourseStudents = this[UserGroupTypes.CourseStudents].getGroupsByParentId(parentId);\n\t\tconst CourseTeachers = this[UserGroupTypes.CourseTeachers].getGroupsByParentId(parentId);\n\t\tconst CourseSubstitutionTeachers = this[UserGroupTypes.CourseSubstitutionTeachers].getGroupsByParentId(parentId);\n\t\tconst CoursegroupStudents = this[UserGroupTypes.CoursegroupStudents].getGroupsByParentId(parentId);\n\t\treturn [...CourseStudents, ...CourseTeachers, ...CourseSubstitutionTeachers, ...CoursegroupStudents];\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            DB_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DB_URL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DB_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('Error')\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/filter/global-error.filter.ts:114\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger } from '../../logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupEntity.html":{"url":"classes/GroupEntity.html","title":"class - GroupEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/group.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                    Optional\n                                permission\n                            \n                            \n                                schoolId\n                            \n                            \n                                type\n                            \n                            \n                                userIds\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasParent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IGroupProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IGroupProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        permission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PermissionsTypes\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserGroupTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hasParent\n                        \n                    \n                \n            \n            \n                \nhasParent()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/entity/group.entity.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId, PermissionsTypes } from '@shared/domain';\n\n/**\n * Why \"group\" also the id list of userIds seperatly?\n * If we want to have a group collection in future,\n * we can add the id of this groups to the learning room (that include the stuff from teams, classes, course, coursgroups, editor, multiple sub groups...)\n * The lerning room ressources and childs hold all the related informations but not the userId numbers.\n * This are the part of the IDM group, class, school, user management.\n * If we run a sync we only want to update this id list and not the content that is linked with it.\n *\n * To get closer to this target we must start to collect this informations on this place and later replace this with a real group collection.\n */\n\n//  TODO: For search optimization we should work with schoolId.\n\nexport enum UserGroupTypes {\n\tCourseSubstitutionTeachers = 'course-substitution-teachers',\n\tCourseTeachers = 'course-teachers',\n\tCourseStudents = 'course-students',\n\tCoursegroupStudents = 'coursegroup-students',\n}\n\ninterface IGroupProperties {\n\tparent?: EntityId;\n\ttype: UserGroupTypes; // TODO: Enum course-teacher, course-substitutionTeacher, course-students, coursegroup-students\n\tuserIds: EntityId[];\n\tname?: string;\n\tpermission?: PermissionsTypes;\n\tschoolId?: EntityId;\n}\n\nexport class GroupEntity extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index()\n\tparent: EntityId | null;\n\n\t@Property()\n\t@Index()\n\tuserIds: EntityId[];\n\n\t@Property()\n\t@Index()\n\ttype: UserGroupTypes;\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tschoolId: EntityId | null;\n\n\tpermission?: PermissionsTypes;\n\n\tconstructor(props: IGroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent || null;\n\t\tthis.userIds = props.userIds;\n\t\tthis.type = props.type;\n\t\tthis.name = props.name || '';\n\t\tthis.permission = props.permission || PermissionsTypes.Empty;\n\t\tthis.schoolId = props.schoolId || null;\n\n\t\tObject.assign(this, {});\n\t}\n\n\thasParent(): boolean {\n\t\treturn this.parent !== null;\n\t}\n}\n\nclass GroupEntityCollection {\n\tgroups: GroupEntity[];\n\n\tconstructor(groups?: GroupEntity[]) {\n\t\tthis.groups = groups || [];\n\t}\n\n\tgetExistingParentIds(): EntityId[] {\n\t\tconst parentIds: EntityId[] = [];\n\t\tthis.groups.forEach((group) => {\n\t\t\tif (group.hasParent()) {\n\t\t\t\tparentIds.push(group.parent as EntityId);\n\t\t\t}\n\t\t});\n\t\treturn parentIds;\n\t}\n\n\tpush(props: IGroupProperties): void {\n\t\tthis.groups.push(new GroupEntity(props));\n\t}\n\n\tgetNumberOfGroups(): number {\n\t\treturn this.groups.length;\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst foundGroups = this.groups.filter((group) => group.parent === parentId);\n\t\treturn foundGroups;\n\t}\n}\n\ninterface ICoursegroupProperties {\n\tparent: EntityId;\n\tstudentIds: EntityId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CoursegroupEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'courseId' })\n\t@Index()\n\tparent: EntityId;\n\n\t@Property({ fieldName: 'userIds' })\n\t@Index()\n\tstudentIds: EntityId[];\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent;\n\t\tthis.studentIds = props.studentIds;\n\t\tObject.assign(this, {});\n\t}\n}\n\n// TODO: must split later in 3 groups\ninterface ICourseProperties {\n\tstudentIds?: EntityId[];\n\tteacherIds?: EntityId[];\n\tsubstitutionIds?: EntityId[];\n}\n\n@Entity({ tableName: 'courses' })\nexport class CourseEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: EntityId[];\n\n\t@Property({ fieldName: 'teacherIds' })\n\tteacherIds: EntityId[];\n\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionIds: EntityId[];\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionIds = props.substitutionIds || [];\n\t\tObject.assign(this, {});\n\t}\n}\n\nexport class FilteredCourseGroups {\n\t[UserGroupTypes.CourseStudents]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseSubstitutionTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CoursegroupStudents]: GroupEntityCollection;\n\n\tconstructor() {\n\t\tthis[UserGroupTypes.CourseStudents] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseSubstitutionTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CoursegroupStudents] = new GroupEntityCollection();\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst CourseStudents = this[UserGroupTypes.CourseStudents].getGroupsByParentId(parentId);\n\t\tconst CourseTeachers = this[UserGroupTypes.CourseTeachers].getGroupsByParentId(parentId);\n\t\tconst CourseSubstitutionTeachers = this[UserGroupTypes.CourseSubstitutionTeachers].getGroupsByParentId(parentId);\n\t\tconst CoursegroupStudents = this[UserGroupTypes.CoursegroupStudents].getGroupsByParentId(parentId);\n\t\treturn [...CourseStudents, ...CourseTeachers, ...CourseSubstitutionTeachers, ...CoursegroupStudents];\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupEntityCollection.html":{"url":"classes/GroupEntityCollection.html","title":"class - GroupEntityCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupEntityCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/group.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                groups\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExistingParentIds\n                            \n                            \n                                getGroupsByParentId\n                            \n                            \n                                getNumberOfGroups\n                            \n                            \n                                push\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groups?: GroupEntity[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groups\n                                                  \n                                                        \n                                                                        GroupEntity[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/group.entity.ts:72\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExistingParentIds\n                        \n                    \n                \n            \n            \n                \ngetExistingParentIds()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/entity/group.entity.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupsByParentId\n                        \n                    \n                \n            \n            \n                \ngetGroupsByParentId(parentId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/entity/group.entity.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GroupEntity[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfGroups\n                        \n                    \n                \n            \n            \n                \ngetNumberOfGroups()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/entity/group.entity.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        push\n                        \n                    \n                \n            \n            \n                \npush(props: IGroupProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/entity/group.entity.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                IGroupProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId, PermissionsTypes } from '@shared/domain';\n\n/**\n * Why \"group\" also the id list of userIds seperatly?\n * If we want to have a group collection in future,\n * we can add the id of this groups to the learning room (that include the stuff from teams, classes, course, coursgroups, editor, multiple sub groups...)\n * The lerning room ressources and childs hold all the related informations but not the userId numbers.\n * This are the part of the IDM group, class, school, user management.\n * If we run a sync we only want to update this id list and not the content that is linked with it.\n *\n * To get closer to this target we must start to collect this informations on this place and later replace this with a real group collection.\n */\n\n//  TODO: For search optimization we should work with schoolId.\n\nexport enum UserGroupTypes {\n\tCourseSubstitutionTeachers = 'course-substitution-teachers',\n\tCourseTeachers = 'course-teachers',\n\tCourseStudents = 'course-students',\n\tCoursegroupStudents = 'coursegroup-students',\n}\n\ninterface IGroupProperties {\n\tparent?: EntityId;\n\ttype: UserGroupTypes; // TODO: Enum course-teacher, course-substitutionTeacher, course-students, coursegroup-students\n\tuserIds: EntityId[];\n\tname?: string;\n\tpermission?: PermissionsTypes;\n\tschoolId?: EntityId;\n}\n\nexport class GroupEntity extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index()\n\tparent: EntityId | null;\n\n\t@Property()\n\t@Index()\n\tuserIds: EntityId[];\n\n\t@Property()\n\t@Index()\n\ttype: UserGroupTypes;\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tschoolId: EntityId | null;\n\n\tpermission?: PermissionsTypes;\n\n\tconstructor(props: IGroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent || null;\n\t\tthis.userIds = props.userIds;\n\t\tthis.type = props.type;\n\t\tthis.name = props.name || '';\n\t\tthis.permission = props.permission || PermissionsTypes.Empty;\n\t\tthis.schoolId = props.schoolId || null;\n\n\t\tObject.assign(this, {});\n\t}\n\n\thasParent(): boolean {\n\t\treturn this.parent !== null;\n\t}\n}\n\nclass GroupEntityCollection {\n\tgroups: GroupEntity[];\n\n\tconstructor(groups?: GroupEntity[]) {\n\t\tthis.groups = groups || [];\n\t}\n\n\tgetExistingParentIds(): EntityId[] {\n\t\tconst parentIds: EntityId[] = [];\n\t\tthis.groups.forEach((group) => {\n\t\t\tif (group.hasParent()) {\n\t\t\t\tparentIds.push(group.parent as EntityId);\n\t\t\t}\n\t\t});\n\t\treturn parentIds;\n\t}\n\n\tpush(props: IGroupProperties): void {\n\t\tthis.groups.push(new GroupEntity(props));\n\t}\n\n\tgetNumberOfGroups(): number {\n\t\treturn this.groups.length;\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst foundGroups = this.groups.filter((group) => group.parent === parentId);\n\t\treturn foundGroups;\n\t}\n}\n\ninterface ICoursegroupProperties {\n\tparent: EntityId;\n\tstudentIds: EntityId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CoursegroupEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'courseId' })\n\t@Index()\n\tparent: EntityId;\n\n\t@Property({ fieldName: 'userIds' })\n\t@Index()\n\tstudentIds: EntityId[];\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent;\n\t\tthis.studentIds = props.studentIds;\n\t\tObject.assign(this, {});\n\t}\n}\n\n// TODO: must split later in 3 groups\ninterface ICourseProperties {\n\tstudentIds?: EntityId[];\n\tteacherIds?: EntityId[];\n\tsubstitutionIds?: EntityId[];\n}\n\n@Entity({ tableName: 'courses' })\nexport class CourseEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: EntityId[];\n\n\t@Property({ fieldName: 'teacherIds' })\n\tteacherIds: EntityId[];\n\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionIds: EntityId[];\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionIds = props.substitutionIds || [];\n\t\tObject.assign(this, {});\n\t}\n}\n\nexport class FilteredCourseGroups {\n\t[UserGroupTypes.CourseStudents]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseSubstitutionTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CoursegroupStudents]: GroupEntityCollection;\n\n\tconstructor() {\n\t\tthis[UserGroupTypes.CourseStudents] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseSubstitutionTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CoursegroupStudents] = new GroupEntityCollection();\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst CourseStudents = this[UserGroupTypes.CourseStudents].getGroupsByParentId(parentId);\n\t\tconst CourseTeachers = this[UserGroupTypes.CourseTeachers].getGroupsByParentId(parentId);\n\t\tconst CourseSubstitutionTeachers = this[UserGroupTypes.CourseSubstitutionTeachers].getGroupsByParentId(parentId);\n\t\tconst CoursegroupStudents = this[UserGroupTypes.CoursegroupStudents].getGroupsByParentId(parentId);\n\t\treturn [...CourseStudents, ...CourseTeachers, ...CourseSubstitutionTeachers, ...CoursegroupStudents];\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupRepo.html":{"url":"injectables/GroupRepo.html","title":"injectable - GroupRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GroupRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/group.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCourseGroupsByUserId\n                            \n                            \n                                    Async\n                                getCoursesByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/group.repo.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCourseGroupsByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCourseGroupsByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/group.repo.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCoursesByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCoursesByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/group.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { CourseEntity, CoursegroupEntity } from '../entity';\n\n// TODO: add schoolId as filter vs shd operations?\n// TODO: move to user module but this bring optimization problems\n@Injectable()\nexport class GroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync getCoursesByUserId(userId: EntityId): Promise {\n\t\tconst coursesOfUser = await this.em.find(CourseEntity, {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\tstudentIds: userId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tteacherIds: userId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tsubstitutionTeacherIds: userId,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\treturn coursesOfUser;\n\t}\n\n\tasync getCourseGroupsByUserId(userId: EntityId): Promise {\n\t\tconst courseGroupsOfUser = await this.em.find(CoursegroupEntity, { studentIds: userId });\n\t\treturn courseGroupsOfUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupUC.html":{"url":"injectables/GroupUC.html","title":"injectable - GroupUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GroupUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/group.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCourseGroupsByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupRepo: GroupRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/group.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupRepo\n                                                  \n                                                        \n                                                                        GroupRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCourseGroupsByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCourseGroupsByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/group.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, PermissionsTypes } from '@shared/domain';\nimport { GroupRepo } from '../repo';\nimport { UserGroupTypes, FilteredCourseGroups } from '../entity';\n\n@Injectable()\nexport class GroupUC {\n\tconstructor(private readonly groupRepo: GroupRepo) {}\n\n\tasync getCourseGroupsByUserId(userId: EntityId): Promise {\n\t\tconst [courseGroups, coursegroupGroups] = await Promise.all([\n\t\t\tthis.groupRepo.getCoursesByUserId(userId),\n\t\t\tthis.groupRepo.getCourseGroupsByUserId(userId),\n\t\t]);\n\n\t\tconst sortedGroupcollections = new FilteredCourseGroups();\n\n\t\tcoursegroupGroups.forEach(({ studentIds, parent }) => {\n\t\t\tconst type = UserGroupTypes.CoursegroupStudents;\n\t\t\tsortedGroupcollections[type].push({\n\t\t\t\tuserIds: studentIds,\n\t\t\t\ttype,\n\t\t\t\tparent,\n\t\t\t\tpermission: PermissionsTypes.Read,\n\t\t\t});\n\t\t});\n\n\t\tcourseGroups.forEach(({ teacherIds, studentIds, substitutionIds, id }) => {\n\t\t\tconst studentType = UserGroupTypes.CourseStudents;\n\t\t\tconst teacherType = UserGroupTypes.CourseTeachers;\n\t\t\tconst substitionTeacherType = UserGroupTypes.CourseSubstitutionTeachers;\n\n\t\t\tsortedGroupcollections[studentType].push({\n\t\t\t\tuserIds: studentIds,\n\t\t\t\ttype: studentType,\n\t\t\t\tparent: id,\n\t\t\t\tpermission: PermissionsTypes.Read,\n\t\t\t});\n\n\t\t\tsortedGroupcollections[teacherType].push({\n\t\t\t\tuserIds: teacherIds,\n\t\t\t\ttype: teacherType,\n\t\t\t\tparent: id,\n\t\t\t\tpermission: PermissionsTypes.Write,\n\t\t\t});\n\n\t\t\tsortedGroupcollections[studentType].push({\n\t\t\t\tuserIds: substitutionIds,\n\t\t\t\ttype: substitionTeacherType,\n\t\t\t\tparent: id,\n\t\t\t\tpermission: PermissionsTypes.Write,\n\t\t\t});\n\t\t});\n\n\t\treturn sortedGroupcollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseProperties.html":{"url":"interfaces/ICourseProperties.html","title":"interface - ICourseProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/group.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            studentIds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            substitutionIds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teacherIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        studentIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        substitutionIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        substitutionIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teacherIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teacherIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId, PermissionsTypes } from '@shared/domain';\n\n/**\n * Why \"group\" also the id list of userIds seperatly?\n * If we want to have a group collection in future,\n * we can add the id of this groups to the learning room (that include the stuff from teams, classes, course, coursgroups, editor, multiple sub groups...)\n * The lerning room ressources and childs hold all the related informations but not the userId numbers.\n * This are the part of the IDM group, class, school, user management.\n * If we run a sync we only want to update this id list and not the content that is linked with it.\n *\n * To get closer to this target we must start to collect this informations on this place and later replace this with a real group collection.\n */\n\n//  TODO: For search optimization we should work with schoolId.\n\nexport enum UserGroupTypes {\n\tCourseSubstitutionTeachers = 'course-substitution-teachers',\n\tCourseTeachers = 'course-teachers',\n\tCourseStudents = 'course-students',\n\tCoursegroupStudents = 'coursegroup-students',\n}\n\ninterface IGroupProperties {\n\tparent?: EntityId;\n\ttype: UserGroupTypes; // TODO: Enum course-teacher, course-substitutionTeacher, course-students, coursegroup-students\n\tuserIds: EntityId[];\n\tname?: string;\n\tpermission?: PermissionsTypes;\n\tschoolId?: EntityId;\n}\n\nexport class GroupEntity extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index()\n\tparent: EntityId | null;\n\n\t@Property()\n\t@Index()\n\tuserIds: EntityId[];\n\n\t@Property()\n\t@Index()\n\ttype: UserGroupTypes;\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tschoolId: EntityId | null;\n\n\tpermission?: PermissionsTypes;\n\n\tconstructor(props: IGroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent || null;\n\t\tthis.userIds = props.userIds;\n\t\tthis.type = props.type;\n\t\tthis.name = props.name || '';\n\t\tthis.permission = props.permission || PermissionsTypes.Empty;\n\t\tthis.schoolId = props.schoolId || null;\n\n\t\tObject.assign(this, {});\n\t}\n\n\thasParent(): boolean {\n\t\treturn this.parent !== null;\n\t}\n}\n\nclass GroupEntityCollection {\n\tgroups: GroupEntity[];\n\n\tconstructor(groups?: GroupEntity[]) {\n\t\tthis.groups = groups || [];\n\t}\n\n\tgetExistingParentIds(): EntityId[] {\n\t\tconst parentIds: EntityId[] = [];\n\t\tthis.groups.forEach((group) => {\n\t\t\tif (group.hasParent()) {\n\t\t\t\tparentIds.push(group.parent as EntityId);\n\t\t\t}\n\t\t});\n\t\treturn parentIds;\n\t}\n\n\tpush(props: IGroupProperties): void {\n\t\tthis.groups.push(new GroupEntity(props));\n\t}\n\n\tgetNumberOfGroups(): number {\n\t\treturn this.groups.length;\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst foundGroups = this.groups.filter((group) => group.parent === parentId);\n\t\treturn foundGroups;\n\t}\n}\n\ninterface ICoursegroupProperties {\n\tparent: EntityId;\n\tstudentIds: EntityId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CoursegroupEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'courseId' })\n\t@Index()\n\tparent: EntityId;\n\n\t@Property({ fieldName: 'userIds' })\n\t@Index()\n\tstudentIds: EntityId[];\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent;\n\t\tthis.studentIds = props.studentIds;\n\t\tObject.assign(this, {});\n\t}\n}\n\n// TODO: must split later in 3 groups\ninterface ICourseProperties {\n\tstudentIds?: EntityId[];\n\tteacherIds?: EntityId[];\n\tsubstitutionIds?: EntityId[];\n}\n\n@Entity({ tableName: 'courses' })\nexport class CourseEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: EntityId[];\n\n\t@Property({ fieldName: 'teacherIds' })\n\tteacherIds: EntityId[];\n\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionIds: EntityId[];\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionIds = props.substitutionIds || [];\n\t\tObject.assign(this, {});\n\t}\n}\n\nexport class FilteredCourseGroups {\n\t[UserGroupTypes.CourseStudents]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseSubstitutionTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CoursegroupStudents]: GroupEntityCollection;\n\n\tconstructor() {\n\t\tthis[UserGroupTypes.CourseStudents] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseSubstitutionTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CoursegroupStudents] = new GroupEntityCollection();\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst CourseStudents = this[UserGroupTypes.CourseStudents].getGroupsByParentId(parentId);\n\t\tconst CourseTeachers = this[UserGroupTypes.CourseTeachers].getGroupsByParentId(parentId);\n\t\tconst CourseSubstitutionTeachers = this[UserGroupTypes.CourseSubstitutionTeachers].getGroupsByParentId(parentId);\n\t\tconst CoursegroupStudents = this[UserGroupTypes.CoursegroupStudents].getGroupsByParentId(parentId);\n\t\treturn [...CourseStudents, ...CourseTeachers, ...CourseSubstitutionTeachers, ...CoursegroupStudents];\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICoursegroupProperties.html":{"url":"interfaces/ICoursegroupProperties.html","title":"interface - ICoursegroupProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICoursegroupProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/group.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            parent\n                                        \n                                \n                                \n                                        \n                                            studentIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId, PermissionsTypes } from '@shared/domain';\n\n/**\n * Why \"group\" also the id list of userIds seperatly?\n * If we want to have a group collection in future,\n * we can add the id of this groups to the learning room (that include the stuff from teams, classes, course, coursgroups, editor, multiple sub groups...)\n * The lerning room ressources and childs hold all the related informations but not the userId numbers.\n * This are the part of the IDM group, class, school, user management.\n * If we run a sync we only want to update this id list and not the content that is linked with it.\n *\n * To get closer to this target we must start to collect this informations on this place and later replace this with a real group collection.\n */\n\n//  TODO: For search optimization we should work with schoolId.\n\nexport enum UserGroupTypes {\n\tCourseSubstitutionTeachers = 'course-substitution-teachers',\n\tCourseTeachers = 'course-teachers',\n\tCourseStudents = 'course-students',\n\tCoursegroupStudents = 'coursegroup-students',\n}\n\ninterface IGroupProperties {\n\tparent?: EntityId;\n\ttype: UserGroupTypes; // TODO: Enum course-teacher, course-substitutionTeacher, course-students, coursegroup-students\n\tuserIds: EntityId[];\n\tname?: string;\n\tpermission?: PermissionsTypes;\n\tschoolId?: EntityId;\n}\n\nexport class GroupEntity extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index()\n\tparent: EntityId | null;\n\n\t@Property()\n\t@Index()\n\tuserIds: EntityId[];\n\n\t@Property()\n\t@Index()\n\ttype: UserGroupTypes;\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tschoolId: EntityId | null;\n\n\tpermission?: PermissionsTypes;\n\n\tconstructor(props: IGroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent || null;\n\t\tthis.userIds = props.userIds;\n\t\tthis.type = props.type;\n\t\tthis.name = props.name || '';\n\t\tthis.permission = props.permission || PermissionsTypes.Empty;\n\t\tthis.schoolId = props.schoolId || null;\n\n\t\tObject.assign(this, {});\n\t}\n\n\thasParent(): boolean {\n\t\treturn this.parent !== null;\n\t}\n}\n\nclass GroupEntityCollection {\n\tgroups: GroupEntity[];\n\n\tconstructor(groups?: GroupEntity[]) {\n\t\tthis.groups = groups || [];\n\t}\n\n\tgetExistingParentIds(): EntityId[] {\n\t\tconst parentIds: EntityId[] = [];\n\t\tthis.groups.forEach((group) => {\n\t\t\tif (group.hasParent()) {\n\t\t\t\tparentIds.push(group.parent as EntityId);\n\t\t\t}\n\t\t});\n\t\treturn parentIds;\n\t}\n\n\tpush(props: IGroupProperties): void {\n\t\tthis.groups.push(new GroupEntity(props));\n\t}\n\n\tgetNumberOfGroups(): number {\n\t\treturn this.groups.length;\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst foundGroups = this.groups.filter((group) => group.parent === parentId);\n\t\treturn foundGroups;\n\t}\n}\n\ninterface ICoursegroupProperties {\n\tparent: EntityId;\n\tstudentIds: EntityId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CoursegroupEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'courseId' })\n\t@Index()\n\tparent: EntityId;\n\n\t@Property({ fieldName: 'userIds' })\n\t@Index()\n\tstudentIds: EntityId[];\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent;\n\t\tthis.studentIds = props.studentIds;\n\t\tObject.assign(this, {});\n\t}\n}\n\n// TODO: must split later in 3 groups\ninterface ICourseProperties {\n\tstudentIds?: EntityId[];\n\tteacherIds?: EntityId[];\n\tsubstitutionIds?: EntityId[];\n}\n\n@Entity({ tableName: 'courses' })\nexport class CourseEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: EntityId[];\n\n\t@Property({ fieldName: 'teacherIds' })\n\tteacherIds: EntityId[];\n\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionIds: EntityId[];\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionIds = props.substitutionIds || [];\n\t\tObject.assign(this, {});\n\t}\n}\n\nexport class FilteredCourseGroups {\n\t[UserGroupTypes.CourseStudents]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseSubstitutionTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CoursegroupStudents]: GroupEntityCollection;\n\n\tconstructor() {\n\t\tthis[UserGroupTypes.CourseStudents] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseSubstitutionTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CoursegroupStudents] = new GroupEntityCollection();\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst CourseStudents = this[UserGroupTypes.CourseStudents].getGroupsByParentId(parentId);\n\t\tconst CourseTeachers = this[UserGroupTypes.CourseTeachers].getGroupsByParentId(parentId);\n\t\tconst CourseSubstitutionTeachers = this[UserGroupTypes.CourseSubstitutionTeachers].getGroupsByParentId(parentId);\n\t\tconst CoursegroupStudents = this[UserGroupTypes.CoursegroupStudents].getGroupsByParentId(parentId);\n\t\treturn [...CourseStudents, ...CourseTeachers, ...CourseSubstitutionTeachers, ...CoursegroupStudents];\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                news interface for ceating news\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, ValueOf } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountId\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         ResolvedUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResolvedUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ResolvedUser } from '@shared/domain/entity';\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: ResolvedUser;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultMessage\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGroupProperties.html":{"url":"interfaces/IGroupProperties.html","title":"interface - IGroupProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGroupProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/group.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permission\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            userIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permission\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permission:         PermissionsTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PermissionsTypes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         UserGroupTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserGroupTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId, PermissionsTypes } from '@shared/domain';\n\n/**\n * Why \"group\" also the id list of userIds seperatly?\n * If we want to have a group collection in future,\n * we can add the id of this groups to the learning room (that include the stuff from teams, classes, course, coursgroups, editor, multiple sub groups...)\n * The lerning room ressources and childs hold all the related informations but not the userId numbers.\n * This are the part of the IDM group, class, school, user management.\n * If we run a sync we only want to update this id list and not the content that is linked with it.\n *\n * To get closer to this target we must start to collect this informations on this place and later replace this with a real group collection.\n */\n\n//  TODO: For search optimization we should work with schoolId.\n\nexport enum UserGroupTypes {\n\tCourseSubstitutionTeachers = 'course-substitution-teachers',\n\tCourseTeachers = 'course-teachers',\n\tCourseStudents = 'course-students',\n\tCoursegroupStudents = 'coursegroup-students',\n}\n\ninterface IGroupProperties {\n\tparent?: EntityId;\n\ttype: UserGroupTypes; // TODO: Enum course-teacher, course-substitutionTeacher, course-students, coursegroup-students\n\tuserIds: EntityId[];\n\tname?: string;\n\tpermission?: PermissionsTypes;\n\tschoolId?: EntityId;\n}\n\nexport class GroupEntity extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index()\n\tparent: EntityId | null;\n\n\t@Property()\n\t@Index()\n\tuserIds: EntityId[];\n\n\t@Property()\n\t@Index()\n\ttype: UserGroupTypes;\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tschoolId: EntityId | null;\n\n\tpermission?: PermissionsTypes;\n\n\tconstructor(props: IGroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent || null;\n\t\tthis.userIds = props.userIds;\n\t\tthis.type = props.type;\n\t\tthis.name = props.name || '';\n\t\tthis.permission = props.permission || PermissionsTypes.Empty;\n\t\tthis.schoolId = props.schoolId || null;\n\n\t\tObject.assign(this, {});\n\t}\n\n\thasParent(): boolean {\n\t\treturn this.parent !== null;\n\t}\n}\n\nclass GroupEntityCollection {\n\tgroups: GroupEntity[];\n\n\tconstructor(groups?: GroupEntity[]) {\n\t\tthis.groups = groups || [];\n\t}\n\n\tgetExistingParentIds(): EntityId[] {\n\t\tconst parentIds: EntityId[] = [];\n\t\tthis.groups.forEach((group) => {\n\t\t\tif (group.hasParent()) {\n\t\t\t\tparentIds.push(group.parent as EntityId);\n\t\t\t}\n\t\t});\n\t\treturn parentIds;\n\t}\n\n\tpush(props: IGroupProperties): void {\n\t\tthis.groups.push(new GroupEntity(props));\n\t}\n\n\tgetNumberOfGroups(): number {\n\t\treturn this.groups.length;\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst foundGroups = this.groups.filter((group) => group.parent === parentId);\n\t\treturn foundGroups;\n\t}\n}\n\ninterface ICoursegroupProperties {\n\tparent: EntityId;\n\tstudentIds: EntityId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CoursegroupEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'courseId' })\n\t@Index()\n\tparent: EntityId;\n\n\t@Property({ fieldName: 'userIds' })\n\t@Index()\n\tstudentIds: EntityId[];\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.parent = props.parent;\n\t\tthis.studentIds = props.studentIds;\n\t\tObject.assign(this, {});\n\t}\n}\n\n// TODO: must split later in 3 groups\ninterface ICourseProperties {\n\tstudentIds?: EntityId[];\n\tteacherIds?: EntityId[];\n\tsubstitutionIds?: EntityId[];\n}\n\n@Entity({ tableName: 'courses' })\nexport class CourseEntity extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: EntityId[];\n\n\t@Property({ fieldName: 'teacherIds' })\n\tteacherIds: EntityId[];\n\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionIds: EntityId[];\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionIds = props.substitutionIds || [];\n\t\tObject.assign(this, {});\n\t}\n}\n\nexport class FilteredCourseGroups {\n\t[UserGroupTypes.CourseStudents]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CourseSubstitutionTeachers]: GroupEntityCollection;\n\n\t[UserGroupTypes.CoursegroupStudents]: GroupEntityCollection;\n\n\tconstructor() {\n\t\tthis[UserGroupTypes.CourseStudents] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CourseSubstitutionTeachers] = new GroupEntityCollection();\n\t\tthis[UserGroupTypes.CoursegroupStudents] = new GroupEntityCollection();\n\t}\n\n\tgetGroupsByParentId(parentId: EntityId): GroupEntity[] {\n\t\tconst CourseStudents = this[UserGroupTypes.CourseStudents].getGroupsByParentId(parentId);\n\t\tconst CourseTeachers = this[UserGroupTypes.CourseTeachers].getGroupsByParentId(parentId);\n\t\tconst CourseSubstitutionTeachers = this[UserGroupTypes.CourseSubstitutionTeachers].getGroupsByParentId(parentId);\n\t\tconst CoursegroupStudents = this[UserGroupTypes.CoursegroupStudents].getGroupsByParentId(parentId);\n\t\treturn [...CourseStudents, ...CourseTeachers, ...CourseSubstitutionTeachers, ...CoursegroupStudents];\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceDescription\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updater\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updater:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                news interface for finding news\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpublished\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         FindNewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FindNewsTarget\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, ValueOf } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/pagination.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleProperties.html":{"url":"interfaces/IRoleProperties.html","title":"interface - IRoleProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoleProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/role.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Unique, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: EntityId[];\n\tname: string;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@Property()\n\troles: EntityId[] = [];\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.permissions = props.permissions || [];\n\t\tthis.roles = props.roles || [];\n\t\t// Object.assign(this, { roles: props.roles });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties.html":{"url":"interfaces/IUserProperties.html","title":"interface - IUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Role } from './role.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\troles: Role[];\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\t@Property()\n\troles: EntityId[] = [];\n\n\t// index\n\t// collection\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tObject.assign(this, { roles: props.roles, school: props.school });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtOptions\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            iss\n                                        \n                                \n                                \n                                        \n                                            jti\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ResolvedUser } from '@shared/domain/entity';\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: ResolvedUser;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userFacade: UserFacade)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userFacade\n                                                  \n                                                        \n                                                                        UserFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\nimport { UserFacade } from '../../user';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userFacade: UserFacade) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload): Promise {\n\t\t// TODO: check jwt is whitelisted\n\n\t\t// TODO: check user is active\n\t\t// TODO: throw not authentication error if user not exist or is not activated\n\t\tconst resolvedUser = await this.userFacade.resolveUser(payload);\n\t\tpayload.user = resolvedUser;\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LessonRepo.html":{"url":"injectables/LessonRepo.html","title":"injectable - LessonRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LessonRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/lesson.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPublishedLessonsIdsByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/lesson.repo.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPublishedLessonsIdsByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPublishedLessonsIdsByCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/lesson.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '../../../shared/domain';\nimport { LessonTaskInfo } from '../entity';\n\n// TODO: add schoolId as filter vs shd operations?\n@Injectable()\nexport class LessonRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync getPublishedLessonsIdsByCourseIds(courseIds: EntityId[]): Promise {\n\t\tconst publishedLessons = await this.em.find(LessonTaskInfo, {\n\t\t\tcourseId: { $in: courseIds },\n\t\t\thidden: false,\n\t\t});\n\n\t\tconst publishedLessonsIds = publishedLessons.map(({ id }) => id);\n\t\treturn publishedLessonsIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonTaskInfo.html":{"url":"classes/LessonTaskInfo.html","title":"class - LessonTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseId\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        courseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Entity, Property } from '@mikro-orm/core';\n\n@Entity({ tableName: 'lessons' })\nexport class LessonTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@Property()\n\tcourseId: EntityId;\n}\n\n// TODO: should remove from this place ..it is not part of task\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: Omit)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Omit\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nconst createMikroOrmModule = (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n/** options we not allow to pass as they are internally replaced by using the in memory mongo  */\ntype ForbiddenOptions = 'type' | 'driver' | 'clientUrl' | 'dbName' | 'user' | 'password';\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: Omit): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule(options || {})],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:34\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:38\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:51\n                        \n                    \n\n            \n                \n                    id reference to a collection\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModelValue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:55\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:30\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/entity/news.entity.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:46\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ParseObjectIdPipe } from '@shared/controller/pipe';\nimport { PaginationQuery } from '@shared/controller';\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { NewsUc } from '../uc/news.uc';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\tpagination\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\treturn new PaginationResponse(dtoList, count);\n\t}\n\n\t/** Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unpublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapCreateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapNewsScopeToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapUpdateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { ICreateNews, INewsScope, IUpdateNews, News, NewsTargetModelValue } from '../entity';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target?.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_exports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { AuthorizationModule } from '../authorization/authorization.module';\nimport { LoggerModule } from '../../core/logger/logger.module';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:24\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findNewsAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements names (school, updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { News } from '../entity';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync save(news: News): Promise {\n\t\tawait this.em.persistAndFlush(news);\n\t\treturn news;\n\t}\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param pagination\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\tpagination: IPagination = {}\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\t// TODO sort by publishedAt?\n\t\t// scope.sortBy(...)\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, pagination);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements names (school, updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst news = await this.em.findOneOrFail(News, id, ['school', 'creator', 'updater']);\n\t\treturn news;\n\t}\n\n\tasync delete(news: News): Promise {\n\t\tawait this.em.removeAndFlush(news);\n\t}\n\n\tprivate async findNewsAndCount(query, pagination: IPagination): Promise> {\n\t\tconst [obj, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t});\n\t\tconst newsList = await this.em.populate(obj, ['school', 'creator', 'updater']);\n\t\treturn [newsList, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The creation timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the User that created the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The School ownership'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The source description of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The update timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '../../entity';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addQuery\n                            \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    addQuery(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byTargets\n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byUnpublished\n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from '@shared/repo';\nimport { News } from '../entity';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query;\n\t}\n\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n\n\tprivate addQuery(query: FilterQuery) {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            targetIds\n                                        \n                                \n                                \n                                        \n                                            targetModel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModelValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModelValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModelValue } from '../entity';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModelValue;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByIdForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getNewsPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getRequiredPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTargetFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModelValue[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModelValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { AuthorizationService } from '../../authorization/authorization.service';\nimport { News, NewsTargetModel, NewsTargetModelValue, ICreateNews, INewsScope, IUpdateNews } from '../entity';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, ...props } = params;\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.save(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, pagination);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.save(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.delete(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModelValue[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number, skip?: number, limit?: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n\n\t@ApiProperty()\n\tskip?: number;\n\n\t@ApiProperty()\n\tlimit?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUser.html":{"url":"classes/ResolvedUser.html","title":"class - ResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/resolvedUser.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ResolvedUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/resolvedUser.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ResolvedUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/resolvedUser.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/resolvedUser.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/resolvedUser.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/resolvedUser.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/resolvedUser.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleInfo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/resolvedUser.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/resolvedUser.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/resolvedUser.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport type RoleInfo = { name: string; id: string };\n\ntype ResolvedUserProperties = {\n\tfirstName: string;\n\tlastName: string;\n\troles: RoleInfo[];\n\tpermissions: string[];\n\tschoolId: string;\n};\n\nexport class ResolvedUser {\n\t@ApiProperty()\n\tfirstName: string;\n\n\t@ApiProperty()\n\tlastName: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\troles: RoleInfo[];\n\n\t@ApiProperty()\n\tpermissions: string[];\n\n\t@ApiProperty()\n\tschoolId: string;\n\n\tconstructor(props: ResolvedUserProperties) {\n\t\tObject.assign(this, props);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUserMapper.html":{"url":"classes/ResolvedUserMapper.html","title":"class - ResolvedUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, permissions: string[], roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolvedUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResolvedUser } from '@shared/domain/entity';\nimport { User, Role } from '../entity';\n\nexport class ResolvedUserMapper {\n\tstatic mapToResponse(user: User, permissions: string[] = [], roles: Role[] = []): ResolvedUser {\n\t\tconst dto = new ResolvedUser({\n\t\t\tfirstName: user.firstName || '',\n\t\t\tlastName: user.lastName || '',\n\t\t\tschoolId: user.school.toString(),\n\t\t\troles: roles.map((role) => ({ name: role.name, id: role.id })),\n\t\t\tpermissions,\n\t\t});\n\t\tdto.id = user.id;\n\t\tdto.createdAt = user.createdAt;\n\t\tdto.updatedAt = user.updatedAt;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/role.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IRoleProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IRoleProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'primaryRoleSearchOperation'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Unique, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: EntityId[];\n\tname: string;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@Property()\n\troles: EntityId[] = [];\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.permissions = props.permissions || [];\n\t\tthis.roles = props.roles || [];\n\t\t// Object.assign(this, { roles: props.roles });\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                resolvePermissionsFromSubRolesById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsFromSubRolesById\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsFromSubRolesById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cache\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { Role } from '../entity';\n\n@Injectable()\nexport class RoleRepo {\n\tcache: 60000;\n\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByName(name: string): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { name }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { id }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsFromSubRolesById(id: EntityId): Promise {\n\t\tconst role = await this.findById(id);\n\t\tlet { permissions } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleUC.html":{"url":"injectables/RoleUC.html","title":"injectable - RoleUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/role.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolvePermissionsByIdList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepo: RoleRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/role.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepo\n                                                  \n                                                        \n                                                                        RoleRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsByIdList\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByIdList(ids: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/role.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { IPermissionsAndRoles } from '../entity';\nimport { RoleRepo } from '../repo';\n\n@Injectable()\nexport class RoleUC {\n\tconstructor(private readonly roleRepo: RoleRepo) {}\n\n\tasync resolvePermissionsByIdList(ids: EntityId[]): Promise {\n\t\tconst roles = await Promise.all(ids.map((id) => this.roleRepo.resolvePermissionsFromSubRolesById(id)));\n\n\t\tlet permissions: string[] = [];\n\t\troles.forEach((role) => {\n\t\t\tpermissions = [...permissions, ...role.permissions];\n\t\t});\n\t\tpermissions = [...new Set(permissions)];\n\n\t\treturn { roles, permissions };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfo.html":{"url":"classes/SchoolInfo.html","title":"class - SchoolInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/school-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'schools' })\nexport class SchoolInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: SchoolInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                SchoolInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SchoolInfo } from '../entity';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: SchoolInfo): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:95\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:34\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:38\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModelValue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:30\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\n\nimport { CoreModule } from './core/core.module';\nimport { TaskModule } from './modules/task/task.module';\nimport { UserModule } from './modules/user/user.module';\n\nimport {\n\tCourseNews,\n\tNews,\n\tSchoolInfo,\n\tSchoolNews,\n\tTeamNews,\n\tUserInfo,\n\tCourseInfo,\n\tTeamInfo,\n} from './modules/news/entity';\nimport { Task, LessonTaskInfo, Submission, FileTaskInfo, UserTaskInfo } from './modules/task/entity';\nimport { User, Role, Account, GroupEntity } from './modules/user/entity';\n\nconst courseEntities = [CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo, CourseInfo, TeamInfo];\nconst taskEntities = [Task, LessonTaskInfo, Submission, FileTaskInfo, UserTaskInfo];\nconst userEntities = [User, Role, Account, GroupEntity];\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tTaskModule,\n\t\tUserModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: [...courseEntities, ...taskEntities, ...userEntities],\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFileIds\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeFileIds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'gradeFileIds', type: FileTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'studentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'fileIds', type: FileTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'homeworkId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\nimport { FileTaskInfo } from './file-task-info.entity';\nimport { Task } from './task.entity';\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserTaskInfo;\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string;\n\n\t@ManyToMany({ fieldName: 'fileIds', type: FileTaskInfo })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number;\n\n\t@Property()\n\tgradeComment: string;\n\n\t@ManyToMany({ fieldName: 'gradeFileIds', type: FileTaskInfo })\n\tgradeFileIds = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/submission.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSubmissionsByTasksList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/submission.repo.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSubmissionsByTasksList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubmissionsByTasksList(tasks: Task[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                                Task[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { Counted } from '../../../shared/domain';\nimport { Submission, Task } from '../entity';\n\n// TODO: add schoolId as filter vs shd operations?\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync getSubmissionsByTasksList(tasks: Task[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: tasks },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseId\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lessonId\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                private\n                            \n                            \n                                schoolId\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: TaskProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        TaskProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lessonId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LessonTaskInfo | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\ntype TaskProperties = {\n\tname?: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcourseId?: EntityId;\n\tlesson?: LessonTaskInfo;\n\tschoolId: EntityId;\n};\n\n@Index({ name: 'TaskRepo_getOpenTaskByCourseListAndLessonList', properties: ['schoolId', 'courseId'] })\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date | null;\n\n\t@Property()\n\tprivate?: boolean;\n\n\t@Property()\n\tcourseId?: EntityId | null;\n\n\t@Property()\n\tlessonId?: LessonTaskInfo | null;\n\n\t@Property()\n\tschoolId: EntityId;\n\n\tconstructor(props: TaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name || 'Kurse';\n\t\tthis.dueDate = props.dueDate || null;\n\t\tthis.private = props.private || true;\n\t\tthis.courseId = props.courseId || null;\n\t\tthis.lessonId = props.lesson || null;\n\t\tthis.schoolId = props.schoolId;\n\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dashboard')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { PaginationQuery } from '@shared/controller/dto/pagination.query';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { TaskUC } from '../uc/task.uc';\n\nimport { TaskResponse } from './dto';\n\n// TODO: swagger doku do not read from combined query object only from passed single parameter in Query(), but this do not allowed optional querys only required querys\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('task')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get('dashboard')\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\tconst [tasks, total] = await this.taskUc.findAllOpen(currentUser.user, paginationQuery);\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(tasks, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskHelper.html":{"url":"classes/TaskHelper.html","title":"class - TaskHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/taskHelper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                computeSubmissionStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                calculateDateFilterForOpenTask\n                            \n                            \n                                    Static\n                                computedTasksBySubmissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        computeSubmissionStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/uc/taskHelper.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        calculateDateFilterForOpenTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateDateFilterForOpenTask()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/taskHelper.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        computedTasksBySubmissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    computedTasksBySubmissions(tasks: Task[], submissions: Submission[], filteredCourseGroups: FilteredCourseGroups)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/taskHelper.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                                Task[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    submissions\n                                    \n                                                Submission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filteredCourseGroups\n                                    \n                                                FilteredCourseGroups\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TaskResponse[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilteredCourseGroups } from '../../user';\nimport { Submission, ISubmissionStatus, Task } from '../entity';\nimport { TaskMapper } from '../mapper/task.mapper';\nimport { TaskResponse } from '../controller/dto';\n\nexport class TaskHelper {\n\tstatic computeSubmissionStatus = (taskSubmissions: Submission[], maxSubmissions = 0): ISubmissionStatus => {\n\t\tconst submittedUsers = new Set();\n\t\tconst gradedUsers = new Set();\n\n\t\t// TODO: should only get the newest submission\n\t\tconst sortedSubmissions = [...taskSubmissions].sort((a: Submission, b: Submission) => {\n\t\t\tif (a.createdAt > b.createdAt) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn -1;\n\t\t});\n\n\t\tsortedSubmissions.forEach((submission) => {\n\t\t\tif (\n\t\t\t\t!submittedUsers.has(submission.student.id) &&\n\t\t\t\t(submission.grade || submission.gradeComment || submission.gradeFileIds)\n\t\t\t) {\n\t\t\t\tgradedUsers.add(submission.student.id);\n\t\t\t}\n\t\t\tsubmittedUsers.add(submission.student.id);\n\t\t});\n\n\t\treturn {\n\t\t\tsubmitted: submittedUsers.size,\n\t\t\tmaxSubmissions,\n\t\t\tgraded: gradedUsers.size,\n\t\t};\n\t};\n\n\tstatic calculateDateFilterForOpenTask(): Date {\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\treturn oneWeekAgo;\n\t}\n\n\tstatic computedTasksBySubmissions(\n\t\ttasks: Task[],\n\t\tsubmissions: Submission[],\n\t\tfilteredCourseGroups: FilteredCourseGroups\n\t): TaskResponse[] {\n\t\t// coursegroups  max students for maxSubmissions -> move to additional function\n\t\tconst maxSubmissions: number = filteredCourseGroups['course-students'].getNumberOfGroups();\n\t\tconst computedTasks = tasks.map((task) => {\n\t\t\tconst taskSubmissions = submissions.filter((sub) => sub.task === task);\n\t\t\treturn TaskMapper.mapToResponse(task, this.computeSubmissionStatus(taskSubmissions, maxSubmissions));\n\t\t});\n\t\treturn computedTasks;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(task: Task, status?: ISubmissionStatus)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                ISubmissionStatus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskResponse } from '../controller/dto';\nimport { Task, ISubmissionStatus } from '../entity';\n\nconst COURSE_DEFAULT_COLOR = '#ACACAC';\n\nexport class TaskMapper {\n\tstatic mapToResponse(task: Task, status?: ISubmissionStatus): TaskResponse {\n\t\tconst dto = new TaskResponse();\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.courseName = ''; // task.course?.name; // TODO: we need name\n\t\tdto.displayColor = COURSE_DEFAULT_COLOR; // TODO: we need color\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\tdto.status = status || {};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_TaskModule_imports\n\n\n\n\nUserFacade\n\nUserFacade\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nUserFacade->TaskModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nSubmissionRepo\n\nSubmissionRepo\n\nTaskModule -->\n\nSubmissionRepo->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LessonRepo\n                        \n                        \n                            SubmissionRepo\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './controller';\nimport { TaskUC } from './uc';\nimport { TaskRepo, LessonRepo, SubmissionRepo } from './repo';\nimport { UserFacade } from '../user';\n\n@Module({\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, SubmissionRepo, LessonRepo],\n\timports: [UserFacade],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOpenTaskByCourseListAndLessonList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOpenTaskByCourseListAndLessonList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOpenTaskByCourseListAndLessonList(lessonIdsAndCourseIds: EntityId[], filterOptions: FilterOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lessonIdsAndCourseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filterOptions\n                                    \n                                                FilterOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { QueryOrder } from '@mikro-orm/core';\nimport { Counted } from '@shared/domain/types';\nimport { Task } from '../entity';\n\n/*\nconst homeworkSchema = new Schema({\n\tschoolId: { type: Schema.Types.ObjectId, required: true },\n\tcreatedAt: { type: Date, default: Date.now },\n\tfileIds: [{ type: Schema.Types.ObjectId, ref: 'file' }],\n\tupdatedAt: { type: Date, default: Date.now },\n\tname: { type: String, required: true },\n\tdescription: { type: String },\n\tdueDate: { type: Date },\n\tavailableDate: { type: Date, required: true },\n\tteacherId: { type: Schema.Types.ObjectId, required: true, ref: 'user' },\n\tcourseId: {\n\t\ttype: Schema.Types.ObjectId,\n\t\tdefault: null,\n\t\tref: 'course',\n\t},\n\tlessonId: { type: Schema.Types.ObjectId, default: null, ref: 'lesson' },\n\tprivate: { type: Boolean },\n\tpublicSubmissions: { type: Boolean },\n\tteamSubmissions: { type: Boolean },\n\tmaxTeamMembers: { type: Number, default: null, min: 1 },\n\tarchived: [{ type: Schema.Types.ObjectId, ref: 'user' }],\n});\n\nconst submissionSchema = new Schema({\n\tschoolId: { type: Schema.Types.ObjectId, required: true },\n\tcreatedAt: { type: Date, default: Date.now },\n\tupdatedAt: { type: Date, default: Date.now },\n\tcomment: { type: String },\n\tgrade: { type: Number, min: 0, max: 100 },\n\tgradeComment: { type: String },\n\thomeworkId: {\n\t\ttype: Schema.Types.ObjectId,\n\t\trequired: true,\n\t\tref: 'homework',\n\t},\n\tstudentId: { type: Schema.Types.ObjectId, required: true, ref: 'user' },\n\tteamMembers: [{ type: Schema.Types.ObjectId, required: true, ref: 'user' }],\n\tcourseGroupId: { type: Schema.Types.ObjectId, ref: 'courseGroup' },\n\tfileIds: [{ type: Schema.Types.ObjectId, ref: 'file' }],\n\tgradeFileIds: [{ type: Schema.Types.ObjectId, ref: 'file' }],\n});\n\n*/\n\nexport class FilterOptions {\n\tlimit?: number;\n\n\tskip?: number;\n\n\tdueDateGreaterThen: Date;\n\n\tschoolId: EntityId;\n\n\tconstructor(pagination: IPagination, dueDateGreaterThen: Date, schoolId: EntityId) {\n\t\tthis.dueDateGreaterThen = dueDateGreaterThen;\n\t\tthis.skip = pagination.skip;\n\t\tthis.limit = pagination.limit;\n\t\tthis.schoolId = schoolId;\n\t}\n}\n\n// TODO: add schoolId as filter vs shd operations?\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync getOpenTaskByCourseListAndLessonList(\n\t\tlessonIdsAndCourseIds: EntityId[],\n\t\tfilterOptions: FilterOptions\n\t): Promise> {\n\t\tconst { limit, skip, dueDateGreaterThen, schoolId } = filterOptions;\n\t\tconst [usersTasks, total] = await this.em.findAndCount(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t$and: [\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ courseId: { $in: lessonIdsAndCourseIds } },\n\t\t\t\t\t{ schoolId },\n\t\t\t\t\t// Is lesson really needed ?? I think every lesson should select by a course\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: lessonIdsAndCourseIds } }] },\n\t\t\t\t\t// WTF courseGroupId do not exist in task ...\n\t\t\t\t\t// { $or: [{ courseGroupId: null }, { courseGroupId: { $in: ressourceIds } }] },\n\t\t\t\t\t{ $or: [{ dueDate: { $gte: dueDateGreaterThen } }, { dueDate: null }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t{ limit, offset: skip, orderBy: { dueDate: QueryOrder.ASC } }\n\t\t);\n\n\t\treturn [usersTasks, total];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate?: Date | null;\n\n\t@ApiProperty()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus?: {\n\t\tsubmitted?: number;\n\t\tmaxSubmissions?: number;\n\t\tgraded?: number;\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, submissionRepo: SubmissionRepo, lessonRepo: LessonRepo, userFacade: UserFacade)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        submissionRepo\n                                                  \n                                                        \n                                                                        SubmissionRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lessonRepo\n                                                  \n                                                        \n                                                                        LessonRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userFacade\n                                                  \n                                                        \n                                                                        UserFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllOpen\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpen(user: ResolvedUser, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                ResolvedUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { IPagination, ResolvedUser, Counted, EntityId, PermissionsTypes } from '@shared/domain';\nimport { UserFacade } from '../../user';\nimport { TaskRepo, SubmissionRepo, LessonRepo, FilterOptions } from '../repo';\nimport { TaskResponse } from '../controller/dto';\nimport { TaskHelper } from './taskHelper';\n\n@Injectable()\nexport class TaskUC {\n\tconstructor(\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly submissionRepo: SubmissionRepo,\n\t\tprivate readonly lessonRepo: LessonRepo,\n\t\tprivate readonly userFacade: UserFacade\n\t) {}\n\n\t// TODO: Combine student and teacher logic if it is possible in next iterations\n\t// TODO: Add for students in status -> student has finished, teacher has answered\n\tasync findAllOpen(user: ResolvedUser, pagination: IPagination): Promise> {\n\t\tconst { id: userId, schoolId } = user;\n\n\t\tconst filteredCourseGroups = await this.userFacade.getCourseGroupsByUserId(userId);\n\t\tconst courseIds = filteredCourseGroups['course-teachers'].getExistingParentIds();\n\n\t\t// !!!date is set for student and teacher now!!!\n\t\tconst dueDateGreaterThen = TaskHelper.calculateDateFilterForOpenTask();\n\n\t\tconst publishedLessonsIds = await this.lessonRepo.getPublishedLessonsIdsByCourseIds(courseIds);\n\n\t\t// TODO: !!!  If it is really needed that we passed publisedLessons? As OR? If couseId also set by lessons homeworks it should find it without passing !!!\n\t\t// To many parameter and schoolId need also passed... -.-\n\t\t// But the dateFilter is part of uc not of the repo method\n\t\tconst ressourceIds = [...courseIds, ...publishedLessonsIds] as EntityId[];\n\t\tconst filterOptions = new FilterOptions(pagination, dueDateGreaterThen, schoolId);\n\t\tconst [tasks, counted] = await this.taskRepo.getOpenTaskByCourseListAndLessonList(ressourceIds, filterOptions);\n\t\t// TODO: !!! find submissions by task it is different between teacher and student !!!\n\t\t// group.permission hold write and read permission PermissionsTypes.Read / PermissionsTypes.Write\n\t\t// const groups = filteredCourseGroups.getGroupsByParentId(taskId);\n\t\t// helper > filter all that has no write permission AND userId is not in submission ==\n\t\t// read should only get his own, write should get all\n\t\t// both only want the newest by createdAt\n\t\tconst [submissions] = await this.submissionRepo.getSubmissionsByTasksList(tasks);\n\n\t\tconst computedTasks = TaskHelper.computedTasksBySubmissions(tasks, submissions, filteredCourseGroups);\n\t\t// !!! In this workflow course color and course name is not passed for now,\n\t\t// because we do not know anything about the course. !!!\n\n\t\t// TODO: Add substitution teacher flag\n\t\treturn [computedTasks, counted];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamInfo.html":{"url":"classes/TeamInfo.html","title":"class - TeamInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/team-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'teams' })\nexport class TeamInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:107\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:34\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:38\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModelValue\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:30\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Static\n                        defaultTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REQUEST_TIMEOUT\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                school\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'roleIdBasedSearches'})@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@Property({fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Role } from './role.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\troles: Role[];\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\t@Property()\n\troles: EntityId[] = [];\n\n\t// index\n\t// collection\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tObject.assign(this, { roles: props.roles, school: props.school });\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/user.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { UserUC } from '../uc';\nimport { ResolvedUser } from '@shared/domain/entity';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user')\nexport class UserController {\n\tconstructor(private readonly userUc: UserUC) {}\n\n\t@Get('me')\n\tasync me(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\treturn Promise.resolve(currentUser.user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/user.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCourseGroupsByUserId\n                            \n                            \n                                    Async\n                                resolveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userUC: UserUC, groupUC: GroupUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/user.facade.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userUC\n                                                  \n                                                        \n                                                                        UserUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupUC\n                                                  \n                                                        \n                                                                        GroupUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCourseGroupsByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCourseGroupsByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/user.facade.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolveUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveUser(currentUser: ICurrentUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/user.facade.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, ResolvedUser } from '@shared/domain';\nimport { UserUC } from './uc/user.uc';\nimport { GroupUC } from './uc/group.uc';\nimport { ICurrentUser } from '../authentication/interface/jwt-payload';\nimport { FilteredCourseGroups } from './entity';\n\n@Injectable()\nexport class UserFacade {\n\tconstructor(private readonly userUC: UserUC, private readonly groupUC: GroupUC) {}\n\n\tasync resolveUser(currentUser: ICurrentUser): Promise {\n\t\tconst resolvedUser = await this.userUC.getUserWithPermissions(currentUser);\n\t\treturn resolvedUser;\n\t}\n\n\tasync getCourseGroupsByUserId(userId: EntityId): Promise {\n\t\tconst filteredCourseGroups = await this.groupUC.getCourseGroupsByUserId(userId);\n\t\treturn filteredCourseGroups;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/user-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: { firstName: string; lastName: string }) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(userInfo: UserInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userInfo\n                                    \n                                                UserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserInfo } from '../entity';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(userInfo: UserInfo): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = userInfo.id;\n\t\tdto.firstName = userInfo.firstName;\n\t\tdto.lastName = userInfo.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'First name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserFacade \n\nUserFacade \n\n\n\nUserModule\n\nUserModule\n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\n\n\nGroupRepo\n\nGroupRepo\n\nUserModule -->\n\nGroupRepo->UserModule\n\n\n\n\n\nGroupUC\n\nGroupUC\n\nUserModule -->\n\nGroupUC->UserModule\n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GroupRepo\n                        \n                        \n                            GroupUC\n                        \n                        \n                            RoleRepo\n                        \n                        \n                            RoleUC\n                        \n                        \n                            UserFacade\n                        \n                        \n                            UserRepo\n                        \n                        \n                            UserUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './controller';\nimport { UserUC, RoleUC, GroupUC } from './uc';\nimport { RoleRepo, UserRepo, GroupRepo } from './repo';\nimport { UserFacade } from './user.facade';\n\n@Module({\n\tcontrollers: [UserController],\n\tproviders: [RoleRepo, UserRepo, GroupRepo, UserUC, RoleUC, GroupUC, UserFacade],\n\texports: [UserFacade],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepo.html":{"url":"injectables/UserRepo.html","title":"injectable - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/user.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/user.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/user.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { User } from '../entity';\n\n@Injectable()\nexport class UserRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst user = await this.em.findOneOrFail(User, { id });\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserTaskInfo.html":{"url":"classes/UserTaskInfo.html","title":"class - UserTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/user-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserTaskInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserUC.html":{"url":"injectables/UserUC.html","title":"injectable - UserUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/user.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserWithPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, roleUC: RoleUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/user.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleUC\n                                                  \n                                                        \n                                                                        RoleUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserWithPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserWithPermissions(currentUser: ICurrentUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/user.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ResolvedUser } from '@shared/domain/entity';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { ResolvedUserMapper } from '../mapper';\nimport { RoleUC } from './role.uc';\nimport { UserRepo } from '../repo';\n\n@Injectable()\nexport class UserUC {\n\tconstructor(private readonly userRepo: UserRepo, private readonly roleUC: RoleUC) {}\n\n\tasync getUserWithPermissions(currentUser: ICurrentUser): Promise {\n\t\tconst [user, resolved] = await Promise.all([\n\t\t\tthis.userRepo.findById(currentUser.userId),\n\t\t\tthis.roleUC.resolvePermissionsByIdList(currentUser.roles),\n\t\t]);\n\n\t\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, resolved.permissions, resolved.roles);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\nUnreleased\n[26.5.0] - 2021-06-28\nAdded\n\nSC-9431 - add teacher view to task/open over permission TASK_DASHBOARD_VIEW_V3, solving permissions after authenticate and add v3/user/me route.\n\nChanged\n\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\n\n[26.4.8] - 2021-06-29\nFixed\n\nroute forwarding\n\n[26.4.7] - 2021-06-22\nAdded\n\nSC-9148 - Add migration for change of school year on BRB\n\n[26.4.6] - 2021-06-24\nChanged\n\nOPS-2466 - changes build pipeline to github actions\n\n[26.4.5] - 2021-06-21\nAdded\n\nSC-9156 - Add maintenance mode for LDAP rewrite\n\n[26.4.4] - 2021-06-16\nChange\n\nrename permission TASK_DASHBOARD_VIEW_V3\n\n[26.4.3] - 2021-06-16\nChange\n\nSC-9139 - Add a check if user roles should be updated or not to the repo\n\n[26.4.2] - 2021-06-16\nFixed\n\nnpm run syncIndex work for not existing collections in the db\n\n[26.4.1] - 2021-06-15\nChange\n\nSC-9029 - Change place of the channel creation for RabbitMQ\n\n[26.4.0] - 2021-06-11\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.1] - 2021-06-14\nAdded\n\nSC-9134 - Add missing mongo indexes for LDAP Sync\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n26.2.2 - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n26.2.1 - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n26.2.0 - 2021-06-01\nAdded\n\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\n\nChanged\n\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            interface\n            GlobalConstants\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            usedGlobals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            API_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            ROUTE_PRAEFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            STRATEGIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            ICurrentUser\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n            \n            variable\n            createMikroOrmModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/course-info.entity.ts\n            \n            class\n            CourseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            News\n            \n                26 %\n                (5/19)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            variable\n            NewsTargetModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/school-info.entity.ts\n            \n            class\n            SchoolInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/team-info.entity.ts\n            \n            class\n            TeamInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/user-info.entity.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task.response.ts\n            \n            class\n            TaskResponse\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course-task-info.entity.ts\n            \n            class\n            CourseTaskInfo\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course-task-info.entity.ts\n            \n            variable\n            COURSE_DEFAULT_COLOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/file-task-info.entity.ts\n            \n            class\n            FileTaskInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n            \n            class\n            LessonTaskInfo\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/user-task-info.entity.ts\n            \n            class\n            UserTaskInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            class\n            TaskMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            variable\n            COURSE_DEFAULT_COLOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/lesson.repo.ts\n            \n            injectable\n            LessonRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/submission.repo.ts\n            \n            injectable\n            SubmissionRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            class\n            FilterOptions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/taskHelper.ts\n            \n            class\n            TaskHelper\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/account.entity.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/group.entity.ts\n            \n            class\n            CourseEntity\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/group.entity.ts\n            \n            class\n            CoursegroupEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/group.entity.ts\n            \n            class\n            FilteredCourseGroups\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/group.entity.ts\n            \n            class\n            GroupEntity\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/group.entity.ts\n            \n            class\n            GroupEntityCollection\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/group.entity.ts\n            \n            interface\n            ICoursegroupProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/group.entity.ts\n            \n            interface\n            ICourseProperties\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/group.entity.ts\n            \n            interface\n            IGroupProperties\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/role.entity.ts\n            \n            interface\n            IRoleProperties\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            interface\n            IUserProperties\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n            \n            class\n            ResolvedUserMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/group.repo.ts\n            \n            injectable\n            GroupRepo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/role.repo.ts\n            \n            injectable\n            RoleRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/user.repo.ts\n            \n            injectable\n            UserRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/group.uc.ts\n            \n            injectable\n            GroupUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/role.uc.ts\n            \n            injectable\n            RoleUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/user.uc.ts\n            \n            injectable\n            UserUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/user.facade.ts\n            \n            injectable\n            UserFacade\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/utils/createCurrentTestUser.ts\n            \n            variable\n            createCurrentTestUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            courseEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            taskEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            userEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            REQUEST_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            controller\n            DelayController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            createTestModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            enableOpenApiDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n            \n            function\n            StringToBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/resolvedUser.ts\n            \n            class\n            ResolvedUser\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/pagination.interface.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/sorting.ts\n            \n            variable\n            SortOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^6.10.2\n        \n            amqplib : ^0.7.0\n        \n            arg : ^5.0.0\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.306.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : ^4.7.0\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.22.2\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.12.3\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.7.6\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^2.0.3\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PermissionsTypes   (apps/.../permissionTypes.ts)\n                        \n                        \n                            UserGroupTypes   (apps/.../group.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/permissionTypes.ts\n    \n        \n            \n                \n                    \n                        \n                        PermissionsTypes\n                    \n                \n                        \n                            \n                                 Write\n                            \n                        \n                        \n                            \n                                Value : write\n                            \n                        \n                        \n                            \n                                 Read\n                            \n                        \n                        \n                            \n                                Value : read\n                            \n                        \n                        \n                            \n                                 Empty\n                            \n                        \n            \n        \n\n    apps/server/src/modules/user/entity/group.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserGroupTypes\n                    \n                \n                    \n                        \n                            Why \"group\" also the id list of userIds seperatly?\nIf we want to have a group collection in future,\nwe can add the id of this groups to the learning room (that include the stuff from teams, classes, course, coursgroups, editor, multiple sub groups...)\nThe lerning room ressources and childs hold all the related informations but not the userId numbers.\nThis are the part of the IDM group, class, school, user management.\nIf we run a sync we only want to update this id list and not the content that is linked with it.\nTo get closer to this target we must start to collect this informations on this place and later replace this with a real group collection.\n\n                        \n                    \n                        \n                            \n                                 CourseSubstitutionTeachers\n                            \n                        \n                        \n                            \n                                Value : course-substitution-teachers\n                            \n                        \n                        \n                            \n                                 CourseTeachers\n                            \n                        \n                        \n                            \n                                Value : course-teachers\n                            \n                        \n                        \n                            \n                                 CourseStudents\n                            \n                        \n                        \n                            \n                                Value : course-students\n                            \n                        \n                        \n                            \n                                 CoursegroupStudents\n                            \n                        \n                        \n                            \n                                Value : coursegroup-students\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponseForBusinessError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForFeathersError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForUnknownError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StringToBoolean\n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nBased on Node.js and Feathers\nDevelop:  \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nSwagger UI documentation when running the server locally, it is served at http://localhost:3030/docs/.\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages.\n\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\n\nSetup\nYou will need the client as well. For more detailed setup instructions, take a look here. It is written for Windows but the procedure is similar for other OS.\nRun\n\nGo into project folder\nRun mongod\nRun npm start\nRun npm run setup\n\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nTesting\nRun tests\n\nGo into project folder\nrun npm run test\n\nTo run a single test, use npm run mocha-single -- .\nCreate tests\n\nCreate a folder for the \"service\" you're working on in \"/test/services\"\nCreate a file \"user.test.js\" for frontend tests (e.g. clicking a link or check if URL is available)\nCreate a file \"unit.test.js\" for backend tests (e.g. calculating a number)\n\nTry to cover as many methods as possible unit test wise - goal is 100% of course, so one test per method.\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_imports\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\nUserFacade \n\nUserFacade \n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\nTaskModule -->\n\nUserFacade->TaskModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nSubmissionRepo\n\nSubmissionRepo\n\nTaskModule -->\n\nSubmissionRepo->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nGroupRepo\n\nGroupRepo\n\nUserModule -->\n\nGroupRepo->UserModule\n\n\n\n\n\nGroupUC\n\nGroupUC\n\nUserModule -->\n\nGroupUC->UserModule\n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    49 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\n\nACCEPTED\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FindNewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            ForbiddenOptions   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            IPermissionsAndRoles   (apps/.../role.entity.ts)\n                        \n                        \n                            ISubmissionStatus   (apps/.../status.type.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTargetModelValue   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            ResolvedUserProperties   (apps/.../resolvedUser.ts)\n                        \n                        \n                            RoleInfo   (apps/.../resolvedUser.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../sorting.ts)\n                        \n                        \n                            SortOrderValue   (apps/.../sorting.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TaskProperties   (apps/.../task.entity.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/news/entity/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    FindNewsTarget\n                \n            \n            \n                \n                    define the news target for find\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news\n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                    define the news target for a specific entity\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTargetModelValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n    \n        \n            \n                \n                    \n                    ForbiddenOptions\n                \n            \n            \n                \n                    options we not allow to pass as they are internally replaced by using the in memory mongo\n\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    apps/server/src/modules/user/entity/role.entity.ts\n    \n    \n        \n            \n                \n                    \n                    IPermissionsAndRoles\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/task/entity/status.type.ts\n    \n    \n        \n            \n                \n                    \n                    ISubmissionStatus\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/resolvedUser.ts\n    \n    \n        \n            \n                \n                    \n                    ResolvedUserProperties\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RoleInfo\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/sorting.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SortOrderValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/task/entity/task.entity.ts\n    \n    \n        \n            \n                \n                    \n                    TaskProperties\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_PATH   (apps/.../constants.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            COURSE_DEFAULT_COLOR   (apps/.../course-task-info.entity.ts)\n                        \n                        \n                            COURSE_DEFAULT_COLOR   (apps/.../task.mapper.ts)\n                        \n                        \n                            courseEntities   (apps/.../server.module.ts)\n                        \n                        \n                            createCurrentTestUser   (apps/.../createCurrentTestUser.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            PORT   (apps/.../constants.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            ROUTE_PRAEFIX   (apps/.../constants.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            SortOrder   (apps/.../sorting.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            taskEntities   (apps/.../server.module.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                            userEntities   (apps/.../server.module.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3030\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTE_PRAEFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'v3'\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                    \n                \n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                    \n                \n\n            \n                \n                    Returns the current authenticated user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['jwt'] as const\n                    \n                \n\n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Config.InitialOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$', 'main.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('ts-jest/utils')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./tsconfig.json')\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/controller/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                    \n                \n\n            \n                \n                    \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableOpenApiDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/task/entity/course-task-info.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COURSE_DEFAULT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#ACACAC'\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/task/mapper/task.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COURSE_DEFAULT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#ACACAC'\n                    \n                \n\n\n        \n    \n\n    apps/server/src/server.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo, CourseInfo, TeamInfo]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Task, LessonTaskInfo, Submission, FileTaskInfo, UserTaskInfo]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [User, Role, Account, GroupEntity]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/user/utils/createCurrentTestUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCurrentTestUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tinitPermissions?: string[]\n): {\n\tcurrentUser: ICurrentUser;\n\tuser: User;\n\troles: Role[];\n} => {\n\tconst accountId = new ObjectId().toHexString();\n\tconst schoolId = new ObjectId().toHexString();\n\n\tconst permissions = initPermissions || ['A', 'B'];\n\tconst roles = [new Role({ name: 'name', permissions })] as Role[];\n\tconst roleIds = roles.map((role) => role.id);\n\n\tconst user = new User({ email: `Date.now()@email.de`, roles, school: schoolId });\n\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, permissions, roles);\n\n\tconst currentUser = { userId: user.id, roles: roleIds, schoolId, accountId, user: resolvedUser } as ICurrentUser;\n\treturn { currentUser, user, roles };\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForHttpException\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                    \n                \n\n            \n                \n                    Creates ErrorResponse from NestJS build in technical exceptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBusinessError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFeathersError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTechnicalError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                    \n                \n\n            \n                \n                    Compare helper to detect an error is a build in NestJS http exception.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeErrorLog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValidationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMikroOrmModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmptyResultQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { $and: [{ _id: false }] }\n                    \n                \n\n            \n                \n                    When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : externalAuthConfig\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NEWS_SOURCES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['internal', 'rss'] as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/entity/news.types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NewsTargetModel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/server-error-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_ERROR_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IErrorType\n\n                    \n                \n                \n                    \n                        Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverErrorTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : legacyErrorTypes\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : serverErrorTypes\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/interface/sorting.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n\tasc: 'asc',\n\tdesc: 'desc',\n} as const\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usedGlobals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConstants\n\n                    \n                \n                \n                    \n                        Default value : globals\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : usedGlobals\n                    \n                \n\n            \n                \n                    Database URL\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:doc:serve builds code documentation and module relations into /documentation folder and serves it on port :8080\nnest:start starts the nest application // TODO how?\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to statically check the code\n\nnest:lint run eslint to report linter issues and apply formatting\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting \n\nHow to test the application?\n\nnest:test executes all jest  (NestJS) tests, to separate them from existing tests, not use _.test.[ts|js] as filename but instead either *.spec.ts beside tested files or *.e2e-spec.ts in test folder\nnest:test:watch executes changed tests again on save\nnest:test:cov reports coverage results\nnest:test:debug executes tests for debugging\nnest:test:e2e execute e2e tests only\nnest:test:spec execute spec tests (without e2e) only\n\nStatic Code Analysis\nBased on npm run nest:test:all you can ensure the code is accepted to be merged. This executes all tests, checks for linter issues and code coverage. \nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture **divides the application into technical ****layers** based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into *component parts* for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\n It will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to **external consumers **over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\n A request is received\n A hook initializes the request context\n A hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\n After the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n    \n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                        (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead. \n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                           (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as PaginationResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
