var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiValidationError.html",[0,0.049,1,2.795]],["body/classes/ApiValidationError.html",[0,0.061,1,4.361,2,1.219,3,0.241,4,0.198,5,0.144,6,6.151,7,4.884,8,1.922,9,5.704,10,0.475,11,1.129,12,4.225,13,2.723,14,3.813,15,2.98,16,0.588,17,1.828,18,6.733,19,1.83,20,5.545,21,6.438,22,1.127,23,5.545,24,1.219,25,0.01,26,0.762,27,0.873,28,6.733,29,2.367,30,3.893,31,5.545,32,1.11,33,5.545,34,5.545,35,5.545,36,5.545,37,1.416,38,3.157,39,0.514,40,4.449,41,1.281,42,5.545,43,0.226,44,4.884,45,2.524,46,4.449,47,3.178,48,3.665,49,2.367,50,4.124,51,3.864,52,2.91,53,3.463,54,5.545,55,0.006,56,0.007,57,0.006]],["title/classes/ApiValidationErrorResponse.html",[0,0.049,58,3.591]],["body/classes/ApiValidationErrorResponse.html",[0,0.061,1,5.27,2,1.216,3,0.24,4,0.198,5,0.144,8,1.92,10,0.474,11,1.128,13,2.72,14,3.809,15,2.72,16,0.518,19,1.827,22,0.931,24,1.216,25,0.01,26,0.76,27,0.872,28,6.728,38,4.349,39,0.562,43,0.226,47,3.175,48,4.496,49,2.362,51,3.857,55,0.006,56,0.007,57,0.006,58,5.597,59,6.728,60,4.876,61,1.982,62,4.356,63,4.152,64,4.589,65,3.908,66,6.976,67,5.535,68,5.68,69,5.535,70,4.117,71,5.535,72,5.535,73,2.103,74,5.535,75,5.535,76,5.535,77,6.976,78,6.976,79,5.535,80,1.533,81,1.572,82,6.976,83,5.535]],["title/interfaces/AppendedAttachment.html",[84,0.668,85,2.548]],["body/interfaces/AppendedAttachment.html",[3,0.256,4,0.211,5,0.154,8,2.319,10,0.506,11,1.175,25,0.01,26,0.812,32,1.313,43,0.241,55,0.006,56,0.008,57,0.006,84,1.297,85,4.479,86,1.899,87,3.518,88,4.672,89,5.261,90,3.69,91,3.69,92,4.136,93,3.69,94,3.69,95,3.69,96,4.479,97,3.518,98,3.69,99,4.136,100,4.537,101,4.537,102,4.136,103,3.671,104,3.518,105,3.69,106,3.69,107,3.69]],["title/modules/AuthModule.html",[108,1.232,109,3.119]],["body/modules/AuthModule.html",[0,0.065,3,0.259,4,0.214,5,0.155,25,0.01,39,0.641,41,1.378,43,0.244,55,0.006,56,0.008,57,0.006,108,2.175,109,5.991,110,2.26,111,2.628,112,3.258,113,3.258,114,3.015,115,3.27,116,3.326,117,5.256,118,5.256,119,5.991,120,3.99,121,3.131,122,2.628,123,5.967,124,7.309,125,4.437,126,5.967,127,5.256,128,5.967,129,3.925,130,4.787,131,7.309,132,5.967,133,5.967,134,5.967,135,3.015,136,5.967,137,3.015]],["title/modules/AuthorizationModule.html",[108,1.232,138,2.945]],["body/modules/AuthorizationModule.html",[0,0.065,3,0.257,4,0.212,5,0.154,25,0.01,39,0.605,41,1.37,43,0.242,55,0.006,56,0.008,57,0.006,108,2.169,110,2.247,111,2.613,112,3.239,113,3.239,114,2.997,115,3.261,116,3.586,120,3.976,121,3.113,122,2.613,135,3.68,138,5.888,139,5.225,140,5.225,141,5.225,142,5.225,143,5.648,144,5.35,145,5.111,146,5.932,147,5.932,148,5.932,149,2.891,150,5.225]],["title/injectables/AuthorizationService.html",[144,2.664,151,1.232]],["body/injectables/AuthorizationService.html",[0,0.044,3,0.176,4,0.145,5,0.105,10,0.346,16,0.48,17,1.482,19,1.334,22,0.945,24,1.555,25,0.01,26,0.972,27,1.114,32,1.12,37,1.901,39,0.521,41,0.934,43,0.165,55,0.004,56,0.006,57,0.004,73,1.947,80,1.244,81,0.911,144,3.369,145,4.593,149,1.971,150,3.562,151,1.558,152,1.84,153,3.562,154,3.202,155,5.752,156,5.752,157,6.53,158,4.044,159,4.044,160,4.044,161,3.394,162,3.618,163,3.916,164,4.592,165,4.056,166,4.044,167,3.09,168,2.674,169,5.66,170,3.512,171,1.654,172,4.484,173,3.008,174,3.535,175,4.044,176,4.044,177,5.261,178,3.562,179,4.044,180,3.862,181,4.209,182,4.986,183,3.535,184,4.986,185,1.299,186,1.903,187,2.818,188,2.122,189,4.737,190,3.724,191,3.28,192,4.044,193,4.044,194,3.245,195,4.044,196,4.044,197,4.044,198,5.66,199,4.044,200,4.044,201,2.407,202,4.044,203,5.66,204,4.044,205,4.044]],["title/classes/BaseEntity.html",[0,0.049,206,1.797]],["body/classes/BaseEntity.html",[0,0.084,2,1.234,3,0.244,4,0.201,5,0.146,8,1.546,10,0.481,11,1.244,13,2.19,16,0.478,22,0.94,25,0.01,32,1.116,39,0.518,43,0.287,55,0.006,56,0.008,57,0.006,81,1.732,171,1.728,206,3.237,207,4.506,208,3.44,209,2.007,210,3.44,211,2.171,212,3.794,213,5.617,214,3.794,215,5.617,216,3.088,217,2.323,218,2.19,219,3.343,220,4.506,221,4.177,222,3.431,223,4.506,224,4.506,225,4.947,226,3.507,227,2.737,228,4.947,229,2.556,230,4.506,231,3.198,232,2.324,233,3.067,234,2.068,235,4.947,236,4.506,237,4.947,238,3.914,239,3.695,240,4.177,241,4.506,242,2.838,243,2.831,244,4.947,245,2.838]],["title/classes/BaseEntityWithTimestamps.html",[0,0.049,222,2.181]],["body/classes/BaseEntityWithTimestamps.html",[0,0.081,2,1.129,3,0.223,4,0.184,5,0.134,8,1.831,10,0.44,11,1.193,13,2.002,16,0.529,22,1.105,25,0.01,30,3.13,32,1.132,39,0.49,43,0.272,55,0.006,56,0.007,57,0.006,81,1.82,171,1.672,206,3.323,207,4.121,208,3.532,209,2.06,210,3.448,211,2.378,212,3.802,214,3.802,216,3.132,217,2.194,218,2.002,219,3.057,220,4.121,221,3.82,222,3.594,223,4.121,224,4.121,225,4.524,226,3.207,227,2.503,228,4.524,229,2.337,230,4.121,231,2.924,232,2.125,233,2.804,234,1.891,235,4.524,236,4.121,237,4.524,238,3.579,239,3.379,240,3.82,241,4.121,242,3.726,243,2.974,244,4.524,245,3.726,246,5.136,247,1.926,248,2.381,249,5.136,250,5.136,251,2.924,252,2.503,253,5.136,254,2.503,255,2.503]],["title/classes/BusinessError.html",[0,0.049,9,2.945]],["body/classes/BusinessError.html",[0,0.08,2,1.112,3,0.22,4,0.181,5,0.132,8,1.813,9,4.332,10,0.434,11,1.065,12,4.287,13,3.354,14,4.234,15,3.214,16,0.593,17,1.724,18,6.831,19,2.173,22,1.101,24,1.112,25,0.01,26,0.695,27,0.797,29,2.811,32,1.197,37,1.292,38,4.168,39,0.539,40,6.222,41,1.169,43,0.207,45,2.303,50,5.445,55,0.005,56,0.007,57,0.005,61,1.811,65,3.779,80,1.112,81,1.14,256,4.457,257,4.168,258,4.589,259,3.596,260,4.589,261,3.749,262,3.92,263,4.332,264,2.901,265,5.874,266,5.06,267,5.404,268,6.586,269,5.06,270,5.06,271,5.06,272,5.06,273,5.06,274,5.06,275,4.457,276,6.586,277,5.06,278,4.332,279,6.586,280,5.06]],["title/modules/CoreModule.html",[108,1.232,281,3.119]],["body/modules/CoreModule.html",[0,0.06,3,0.239,4,0.197,5,0.143,25,0.01,39,0.608,41,1.274,43,0.225,49,2.97,55,0.006,56,0.007,57,0.006,61,1.975,108,2.273,110,2.089,111,2.43,112,3.011,113,3.011,114,2.787,115,2.282,116,2.51,120,3.8,121,2.894,122,2.43,135,3.517,264,3.066,281,6.204,282,4.858,283,4.858,284,5.876,285,5.876,286,5.019,287,5.876,288,5.515,289,4.346,290,6.96,291,4.346,292,5.584,293,5.584,294,6.96,295,4.346,296,5.176,297,4.579,298,6.96,299,3.962,300,4.85,301,6.13,302,6.96,303,5.176,304,5.515,305,5.515,306,5.515,307,5.515]],["title/classes/Course.html",[0,0.049,308,1.797]],["body/classes/Course.html",[0,0.054,2,1.092,3,0.216,4,0.178,5,0.129,8,1.792,10,0.426,11,1.053,16,0.582,19,1.64,22,1.155,24,1.092,25,0.01,26,1.058,27,0.783,30,3.86,32,1.191,39,0.534,43,0.203,45,2.262,55,0.005,56,0.007,57,0.005,81,1.735,171,1.395,185,1.597,187,3.463,206,2.613,208,3.287,209,1.917,210,2.778,211,2.421,212,3.063,214,3.063,216,3.293,217,1.64,218,1.937,222,4.073,242,3.289,243,2.396,245,3.289,247,2.102,248,2.598,251,2.829,252,2.422,254,2.422,255,2.422,308,2.613,309,4.377,310,7.258,311,5.397,312,6.509,313,5.259,314,4.969,315,4.969,316,4.969,317,6.509,318,4.969,319,6.509,320,3.667,321,4.969,322,2.958,323,2.958,324,2.958,325,2.958,326,2.958,327,6.509,328,2.958,329,3.103,330,3.269,331,2.829]],["title/classes/CourseInfo.html",[0,0.049,332,2.548]],["body/classes/CourseInfo.html",[0,0.064,2,1.276,3,0.252,4,0.208,5,0.151,8,1.979,10,0.498,11,1.163,16,0.579,19,1.917,22,1.089,24,1.276,25,0.01,26,1.152,27,0.915,30,3.383,32,1.185,39,0.529,43,0.237,45,2.643,55,0.006,56,0.008,57,0.006,171,1.541,185,1.866,206,3.366,208,3.068,209,1.79,210,2.479,211,2.204,212,2.734,214,2.734,216,3.135,217,1.917,218,2.265,254,2.831,255,2.831,328,3.458,329,3.627,332,4.093,333,6.876,334,4.048,335,4.093,336,4.489,337,5.346,338,3.048,339,4.66,340,4.66]],["title/classes/CourseNews.html",[0,0.049,341,2.548]],["body/classes/CourseNews.html",[0,0.064,2,0.608,3,0.12,4,0.228,5,0.072,8,1.752,10,0.237,11,0.692,15,2.624,16,0.577,17,1.12,22,1.152,24,0.608,25,0.01,26,0.719,27,1.172,30,4.048,32,1.208,37,0.707,39,0.517,43,0.26,45,1.26,55,0.003,56,0.005,57,0.003,80,0.608,81,1.581,84,0.413,161,2.482,162,2.904,163,3.168,165,2.381,168,0.889,171,1.364,185,0.889,186,1.303,190,1.821,206,2.556,208,3.094,209,1.892,210,2.513,211,2.42,212,2.771,214,2.771,216,3.317,217,0.913,218,1.079,222,3.28,229,2.381,234,1.926,242,2.975,243,2.583,245,2.975,247,1.844,248,2.279,251,2.437,252,2.086,254,1.349,255,1.349,257,2.437,278,1.821,308,1.112,320,3.216,322,1.648,323,1.648,324,1.648,325,1.648,326,3.505,330,1.821,331,2.979,332,2.979,335,1.576,338,2.746,341,2.437,342,1.821,343,3.098,344,3.25,345,2.965,346,3.34,347,2.869,348,4.103,349,2.624,350,3.873,351,3.677,352,2.381,353,3.183,354,4.524,355,2.768,356,2.221,357,2.816,358,3.267,359,2.816,360,2.221,361,2.221,362,2.982,363,3.873,364,2.982,365,2.816,366,2.163,367,2.673,368,2.982,369,2.221,370,2.221,371,3.214,372,2.086,373,2.221,374,2.857,375,3.115,376,2.221,377,2.221,378,2.221,379,2.673,380,2.221,381,2.673,382,2.221,383,2.982,384,2.221,385,2.221,386,2.221,387,2.221,388,2.221,389,2.221,390,2.221,391,2.982,392,3.975,393,2.221,394,3.873,395,1.929,396,2.437,397,1.511,398,1.929,399,1.399,400,1.929,401,1.929,402,1.929,403,1.929,404,1.929,405,1.929,406,1.929,407,1.929,408,2.982,409,2.381,410,2.463,411,2.381,412,2.305,413,2.381,414,3.115,415,2.746,416,1.929,417,2.982,418,1.929,419,1.929,420,3.646,421,1.648,422,1.648]],["title/classes/CreateNewsParams.html",[0,0.049,423,2.945]],["body/classes/CreateNewsParams.html",[0,0.071,2,1.083,3,0.214,4,0.176,5,0.128,10,0.422,11,1.047,15,3.109,16,0.541,22,1.065,25,0.01,32,1.229,39,0.532,43,0.201,55,0.005,56,0.007,57,0.005,61,3.03,73,1.357,162,2.992,164,3.947,170,2.946,171,1.866,186,3.403,209,1.612,211,2.251,243,2.383,343,3.052,344,3.177,345,3.512,347,3.523,423,4.259,424,6.566,425,3.666,426,3.155,427,4.815,428,3.535,429,6.474,430,4.342,431,4.929,432,5.194,433,3.854,434,5.194,435,4.815,436,4.929,437,4.929,438,4.512,439,4.512,440,4.794,441,4.929,442,4.929,443,5.038,444,5.194,445,3.686,446,4.929,447,4.929,448,4.872,449,2.491,450,5.703,451,6.397,452,3.078,453,3.435,454,3.955,455,3.078]],["title/controllers/DelayController.html",[456,2.107,457,3.329]],["body/controllers/DelayController.html",[0,0.063,3,0.251,4,0.207,5,0.15,10,0.495,17,1.875,22,0.771,25,0.01,37,1.474,39,0.573,41,1.334,43,0.236,47,2.628,55,0.006,56,0.008,57,0.006,73,1.972,80,1.574,81,1.301,115,2.39,137,3.62,154,3.036,173,3.036,191,2.544,211,1.631,247,2.075,300,4.992,456,3.371,457,5.791,458,5.747,459,4.634,460,7.171,461,5.776,462,4.713,463,3.795,464,4.473,465,3.759,466,5.327,467,5.087,468,5.776,469,3.438,470,4.634,471,5.747,472,5.087,473,5.087,474,5.776,475,4.295,476,2.718,477,4.634,478,4.713,479,4.634,480,3.031,481,4.634,482,4.295]],["title/injectables/DurationLoggingInterceptor.html",[151,1.232,483,3.591]],["body/injectables/DurationLoggingInterceptor.html",[0,0.062,3,0.244,4,0.201,5,0.146,10,0.482,11,1.14,12,3.75,16,0.382,17,1.845,22,0.941,24,1.237,25,0.01,26,0.773,27,0.886,37,1.436,39,0.594,41,1.3,43,0.23,55,0.006,56,0.008,57,0.006,61,2.014,73,1.549,80,1.237,81,1.588,151,1.94,152,2.561,247,1.63,248,2.014,297,4.637,411,3.502,466,5.241,478,4.637,483,5.655,484,6.778,485,4.956,486,7.048,487,5.241,488,4.637,489,3.39,490,4.233,491,6.208,492,6.208,493,5.999,494,7.105,495,5.627,496,2.843,497,6.778,498,7.048,499,5.627,500,4.515,501,5.627,502,4.956,503,4.956,504,3.702,505,5.627,506,3.921,507,7.048,508,5.627,509,5.627,510,5.627]],["title/modules/ErrorModule.html",[108,1.232,284,3.119]],["body/modules/ErrorModule.html",[0,0.069,3,0.274,4,0.226,5,0.164,25,0.01,39,0.596,41,1.458,43,0.258,55,0.007,56,0.008,57,0.007,61,2.259,108,2.081,110,2.39,115,2.612,183,4.722,247,2.19,284,5.269,299,4.305,303,6.241,469,3.757,480,3.312,511,6.311,512,6.66,513,4.501,514,4.305,515,3.685,516,5.269,517,6.311,518,6.311,519,5.064]],["title/classes/ErrorResponse.html",[0,0.049,38,2.548]],["body/classes/ErrorResponse.html",[0,0.063,2,1.272,3,0.251,4,0.207,5,0.151,12,3.97,13,3.176,14,4.255,15,3.038,16,0.568,19,2.366,22,0.773,24,1.272,25,0.01,26,0.795,27,0.911,29,3.326,32,1.28,38,4.083,39,0.426,40,4.643,41,1.337,43,0.236,49,3.326,55,0.006,56,0.008,57,0.006,61,2.567,62,4.867,63,4.269,64,4.718,65,3.495,275,5.097,520,5.097,521,5.786,522,5.786,523,5.786,524,4.643,525,4.998,526,5.786,527,4.643,528,5.097,529,3.445,530,2.47,531,3.294,532,3.807,533,4.643]],["title/injectables/FeathersAuthProvider.html",[145,2.664,151,1.232]],["body/injectables/FeathersAuthProvider.html",[0,0.044,3,0.173,4,0.143,5,0.104,10,0.342,16,0.521,17,1.469,19,1.319,22,1.027,24,1.689,25,0.01,26,1.056,27,1.211,32,1.076,37,1.892,39,0.546,41,0.923,43,0.163,55,0.004,56,0.006,57,0.004,73,2.285,80,1.689,81,0.9,84,0.596,145,3.342,151,1.545,152,1.819,154,3.371,161,3.471,162,3.181,163,3.716,164,3.842,165,3.374,168,2.59,172,4.311,173,3.236,174,3.506,185,1.284,187,2.785,188,2.097,191,3.266,201,2.379,206,2.254,208,1.706,210,2.769,217,1.319,219,2.379,349,1.558,372,3.613,462,3.693,463,1.948,489,2.858,534,6.335,535,2.972,536,5.614,537,5.206,538,5.614,539,5.614,540,5.206,541,3.997,542,4.377,543,3.997,544,4.945,545,3.997,546,3.52,547,3.997,548,4.945,549,3.997,550,4.945,551,3.997,552,3.997,553,3.997,554,4.504,555,3.52,556,3.206,557,4.945,558,3.206,559,4.945,560,4.945,561,3.52,562,3.52,563,2.858,564,3.52,565,4.945,566,4.945,567,4.945,568,3.52,569,2.629,570,3.52,571,3.52,572,1.881,573,3.52,574,2.182,575,4.175,576,3.206,577,3.52,578,3.52,579,2.972]],["title/interfaces/FeathersError.html",[84,0.668,580,3.119]],["body/interfaces/FeathersError.html",[3,0.28,4,0.231,5,0.168,8,2.11,10,0.553,11,1.24,13,3.297,16,0.6,25,0.009,29,3.489,32,1.272,43,0.264,49,3.271,55,0.007,56,0.008,57,0.007,84,0.964,86,2.075,580,5.342,581,5.688,582,5.688,583,7.448]],["title/modules/FeathersModule.html",[108,1.232,143,2.945]],["body/modules/FeathersModule.html",[0,0.064,3,0.254,4,0.209,5,0.152,25,0.01,39,0.531,41,1.349,43,0.239,55,0.006,56,0.008,57,0.006,61,2.091,108,2.312,110,2.964,111,2.573,112,3.189,113,3.189,114,2.952,115,3.239,116,3.562,120,3.939,121,3.065,122,2.573,143,5.703,149,3.814,465,3.785,542,5.107,556,4.687,563,3.178,584,5.145,585,5.145,586,5.145,587,5.842,588,4.505,589,4.107,590,3.785,591,3.516,592,4.294,593,4.746,594,4.746,595,4.746,596,4.746,597,5.788,598,3.395]],["title/interfaces/FeathersService.html",[84,0.668,599,3.329]],["body/interfaces/FeathersService.html",[0,0.054,3,0.214,4,0.176,5,0.128,10,0.422,16,0.521,17,1.695,22,0.865,24,1.423,25,0.01,26,0.889,27,1.02,32,0.716,37,1.653,39,0.587,41,1.139,43,0.313,55,0.005,56,0.007,57,0.005,73,1.357,80,1.083,84,0.736,86,1.584,110,1.867,149,2.402,151,1.782,161,2.993,173,2.993,185,1.584,189,4.116,209,1.612,264,2.171,409,2.946,410,3.047,411,2.946,412,2.852,413,2.946,414,3.854,465,3.794,469,2.934,489,2.171,542,2.806,563,3.605,588,3.078,589,4.116,590,2.587,591,3.886,592,2.934,593,3.243,594,3.243,595,3.243,596,3.243,597,3.955,598,2.32,599,5.709,600,5.376,601,3.435,602,3.185,603,5.703,604,6.692,605,4.929,606,4.872,607,4.259,608,5.703,609,4.929,610,3.397,611,3.243,612,3.078,613,3.955,614,5.194,615,5.703,616,4.043,617,5.194,618,5.194,619,3.955,620,3.435,621,4.342,622,4.342,623,4.342,624,4.342,625,4.342]],["title/injectables/FeathersServiceProvider.html",[151,1.232,542,2.548]],["body/injectables/FeathersServiceProvider.html",[0,0.053,3,0.211,4,0.174,5,0.126,10,0.416,16,0.518,17,1.677,19,1.601,22,0.855,24,1.408,25,0.01,26,0.88,27,1.009,32,1.042,37,1.238,39,0.584,41,1.121,43,0.312,55,0.005,56,0.007,57,0.005,61,1.737,73,1.335,80,1.066,84,0.724,110,2.426,149,3.122,151,1.764,152,2.208,161,2.498,173,2.498,185,1.559,189,4.084,209,1.208,264,2.137,409,2.916,410,3.015,411,2.916,412,2.822,413,2.916,414,3.814,465,4.003,469,2.888,489,2.137,542,3.647,563,3.715,588,4.001,589,4.344,590,3.362,591,4.159,592,3.814,593,4.215,594,4.215,595,4.215,596,4.215,597,5.14,598,3.015,599,5.674,600,5.334,601,3.381,602,2.137,603,4.273,604,5.755,606,4.27,608,4.273,610,3.362,611,3.192,612,3.03,613,3.892,614,5.14,615,5.643,616,4.001,617,5.14,618,5.14,619,3.892,620,4.464,621,4.273,622,4.273,623,5.643,624,4.273,625,4.273,626,6.406,627,4.851,628,4.851,629,4.851,630,3.381]],["title/interfaces/GlobalConstants.html",[84,0.668,631,3.329]],["body/interfaces/GlobalConstants.html",[3,0.269,4,0.222,5,0.161,10,0.531,11,1.209,16,0.545,25,0.01,27,1.314,32,1.294,39,0.456,43,0.253,55,0.007,56,0.008,57,0.007,73,2.059,84,0.925,86,1.991,631,5.973,632,4.971,633,7.52,634,7.52,635,7.52,636,6,637,6.196,638,6,639,3.528,640,4.076]],["title/classes/GlobalErrorFilter.html",[0,0.049,516,3.119]],["body/classes/GlobalErrorFilter.html",[0,0.053,1,3.602,2,0.713,3,0.141,4,0.116,5,0.084,9,4.202,10,0.278,11,0.781,12,2.811,13,2.49,14,2.637,15,2.249,16,0.463,17,1.51,22,0.77,24,1.061,25,0.01,26,0.792,27,0.761,37,1.631,38,4.576,39,0.546,41,0.75,43,0.133,47,1.478,48,1.704,49,3.837,55,0.003,56,0.005,57,0.003,62,2.027,63,4.715,65,1.582,70,2.414,73,2.397,80,1.824,81,1.538,84,0.484,149,2.811,189,2.75,216,1.304,234,1.195,247,0.94,248,1.162,252,1.582,259,2.637,265,5.125,352,2.625,409,2.198,410,2.273,411,2.198,412,2.128,413,1.478,489,2.541,490,4.218,504,3.178,513,4.065,515,2.354,516,3.366,574,1.773,580,4.451,583,2.86,590,1.704,598,1.528,612,2.027,641,4.75,642,2.262,643,5.768,644,5.078,645,4.628,646,4.83,647,3.247,648,4.83,649,5.742,650,5.768,651,6.388,652,3.247,653,3.794,654,5.768,655,3.247,656,3.247,657,2.86,658,2.86,659,3.247,660,3.247,661,2.605,662,2.86,663,2.605,664,5.742,665,2.605,666,2.414,667,2.86,668,3.178,669,2.605,670,2.262,671,3.602,672,2.027,673,2.605,674,2.86,675,4.254,676,2.86,677,2.605,678,2.86,679,2.86,680,2.86,681,2.86,682,2.86,683,4.019,684,3.875,685,3.247,686,3.875,687,5.478,688,3.247,689,3.247,690,3.247,691,3.875,692,3.247,693,3.247,694,4.83,695,3.247,696,3.247,697,2.136,698,4.254,699,2.262,700,2.86,701,2.027,702,2.027,703,4.254,704,3.149,705,2.605,706,4.254,707,2.86,708,3.875,709,2.86,710,2.86,711,2.414,712,2.605,713,2.86,714,2.86,715,2.605,716,2.605,717,2.605,718,2.414,719,2.414,720,2.86,721,2.86,722,2.86,723,2.86,724,6.014,725,2.605,726,6.014,727,2.86,728,2.605,729,2.86,730,3.247,731,3.247,732,3.247,733,4.83,734,3.247,735,3.247]],["title/classes/GlobalValidationPipe.html",[0,0.049,736,3.329]],["body/classes/GlobalValidationPipe.html",[0,0.083,1,3.414,2,1.201,3,0.237,4,0.196,5,0.142,8,1.905,11,0.884,16,0.515,19,2.506,21,5.552,22,0.73,25,0.01,39,0.51,41,1.263,43,0.223,45,2.488,48,4.189,55,0.006,56,0.007,57,0.006,61,1.957,65,2.664,70,4.065,80,1.201,81,1.232,211,1.954,234,2.548,247,2.004,258,4.823,299,3.94,399,3.837,426,3.701,448,3.254,452,4.322,530,2.333,572,2.573,574,2.984,606,3.254,736,5.147,737,6.096,738,4.815,739,5.552,740,4.12,741,5.552,742,5.552,743,5.552,744,4.553,745,7.594,746,5.466,747,4.553,748,3.596,749,4.386,750,5.466,751,2.573,752,3.596,753,5.466,754,5.466,755,4.065,756,5.466,757,5.466,758,5.466,759,4.065,760,4.386,761,5.466,762,3.112,763,3.809,764,5.466,765,4.386,766,3.414,767,4.815,768,4.065,769,3.112,770,5.466,771,5.466]],["title/interfaces/HtmlMailContent.html",[84,0.668,102,2.548]],["body/interfaces/HtmlMailContent.html",[3,0.25,4,0.206,5,0.15,8,2.303,10,0.494,11,1.157,16,0.485,25,0.01,26,0.792,27,1.127,32,1.322,43,0.235,55,0.006,56,0.008,57,0.006,84,1.29,85,4.073,86,1.852,87,3.432,88,4.43,89,4.468,90,3.6,91,3.6,92,4.073,93,3.6,94,3.6,95,3.6,96,4.632,97,3.432,98,3.6,99,4.073,100,5.224,101,5.224,102,4.43,103,3.615,104,3.432,105,3.6,106,3.6,107,3.6]],["title/interfaces/ICreateNews.html",[84,0.668,772,2.945]],["body/interfaces/ICreateNews.html",[3,0.232,4,0.192,5,0.139,10,0.459,11,1.104,15,3.088,16,0.584,25,0.01,32,1.215,39,0.394,43,0.347,55,0.006,56,0.007,57,0.006,61,1.916,73,1.88,84,1.249,86,1.72,161,2.932,162,2.826,163,3.539,164,3.728,170,2.436,171,1.147,185,1.72,186,2.519,229,3.107,243,2.768,308,2.149,313,3.521,329,3.342,343,3.051,344,3.519,345,3.489,347,3.86,349,2.086,397,2.922,602,2.357,772,4.492,773,3.729,774,6.014,775,6.355,776,5.478,777,3.521,778,3.729,779,5.478,780,3.729,781,3.729,782,4.714,783,3.521,784,3.342,785,3.047]],["title/interfaces/ICurrentUser.html",[84,0.668,786,2.664]],["body/interfaces/ICurrentUser.html",[3,0.242,4,0.2,5,0.145,8,1.535,10,0.478,11,1.133,16,0.545,25,0.01,29,2.991,32,1.327,43,0.286,55,0.006,56,0.008,57,0.006,84,1.046,86,1.792,172,4.39,181,5.211,209,2.002,232,2.9,372,4.12,786,4.562,787,4.473,788,4.473,789,6.45,790,5.603,791,5.211,792,5.28,793,5.211,794,4.883,795,3.885,796,4.146,797,4.911,798,4.911,799,4.911,800,4.911,801,4.473,802,4.911,803,4.911,804,3.885]],["title/interfaces/IErrorType.html",[84,0.668,267,3.119]],["body/interfaces/IErrorType.html",[3,0.281,4,0.232,5,0.168,10,0.554,11,1.241,12,3.988,15,3.299,16,0.6,25,0.009,32,1.303,43,0.264,50,6.293,55,0.007,56,0.008,57,0.007,84,0.966,86,2.079,267,5.348,805,5.7,806,5.7]],["title/interfaces/ILogger.html",[84,0.668,807,3.329]],["body/interfaces/ILogger.html",[3,0.238,4,0.196,5,0.143,10,0.47,14,4.501,16,0.559,17,1.816,22,1.101,24,1.812,25,0.01,26,1.132,27,1.375,32,1.317,37,2.104,43,0.224,49,2.96,55,0.006,56,0.007,57,0.006,84,0.819,86,1.763,496,4.547,607,5.539,807,5.158,808,4.832,809,5.565,810,4.563,811,6.936,812,6.936,813,5.486,814,5.486,815,6.109,816,6.103,817,5.486,818,6.109,819,5.486,820,5.486,821,5.486,822,6.109,823,5.486,824,4.832,825,4.832]],["title/interfaces/INewsProperties.html",[84,0.668,392,2.795]],["body/interfaces/INewsProperties.html",[0,0.075,3,0.163,4,0.269,5,0.098,8,1.883,10,0.321,11,0.868,15,2.936,16,0.556,25,0.01,26,0.515,27,1.249,32,1.257,39,0.571,43,0.296,45,1.707,55,0.004,56,0.006,57,0.004,80,0.824,81,1.412,84,0.56,86,1.206,161,3.293,162,2.831,163,2.95,165,1.707,168,1.206,171,1.551,185,1.206,186,1.766,190,2.468,206,2.155,209,0.934,216,3.184,217,1.238,218,1.463,222,2.616,229,2.852,234,2.307,243,2.518,257,3.056,278,2.468,308,1.506,320,3.167,326,3.195,330,2.468,331,3.568,332,3.056,335,2.136,338,1.969,341,2.136,342,2.468,343,2.983,344,3.389,345,3.317,346,3.951,347,3.527,348,5.044,349,3.023,350,4.762,351,4.52,352,1.707,354,4.72,357,2.468,359,2.468,362,2.614,363,3.531,364,2.614,365,2.468,366,1.896,367,2.343,368,2.614,371,3.422,372,1.828,374,3.735,375,4.072,379,2.343,381,2.343,383,2.614,391,2.614,392,4.272,394,4.5,395,2.614,396,3.056,397,2.048,398,2.614,399,1.896,400,2.614,401,2.614,402,2.614,403,2.614,404,2.614,405,2.614,406,2.614,407,2.614,408,3.74,409,2.852,410,2.95,411,2.852,412,2.761,413,2.852,414,3.731,415,3.289,416,2.614,417,3.74,418,2.614,419,2.614,420,4.368,421,2.233,422,2.233]],["title/interfaces/INewsScope.html",[84,0.668,783,2.945]],["body/interfaces/INewsScope.html",[3,0.236,4,0.195,5,0.142,10,0.467,11,1.117,15,2.124,16,0.57,25,0.01,27,1.255,32,1.003,39,0.401,43,0.349,55,0.006,56,0.007,57,0.006,61,1.95,73,1.901,84,1.254,86,1.75,161,2.956,162,2.857,163,3.568,164,3.77,170,2.479,171,1.167,185,1.75,186,2.564,229,3.142,243,2.005,308,2.187,313,3.583,329,3.401,343,3.06,344,3.533,345,2.399,347,2.654,349,2.124,397,2.974,602,2.399,772,3.583,773,3.796,774,4.798,775,5.54,776,5.54,777,3.583,778,3.796,779,6.396,780,3.796,781,3.796,782,6.082,783,4.542,784,4.978,785,4.316]],["title/interfaces/IPagination.html",[84,0.668,826,2.795]],["body/interfaces/IPagination.html",[3,0.286,4,0.236,5,0.172,10,0.565,11,1.255,16,0.527,25,0.009,27,1.341,29,3.755,43,0.269,55,0.007,56,0.008,57,0.007,84,0.984,86,2.12,826,4.848,827,5.811,828,5.602,829,5.602]],["title/interfaces/InlineAttachment.html",[84,0.668,92,2.548]],["body/interfaces/InlineAttachment.html",[3,0.253,4,0.209,5,0.152,8,2.31,10,0.5,11,1.165,16,0.396,25,0.01,26,0.801,32,1.318,43,0.238,55,0.006,56,0.008,57,0.006,84,1.293,85,4.102,86,1.873,87,3.471,88,4.651,89,5.241,90,3.641,91,3.641,92,4.452,93,3.641,94,5.101,95,3.641,96,4.452,97,3.471,98,3.641,99,4.102,100,4.5,101,4.5,102,4.102,103,3.641,104,3.471,105,3.641,106,3.641,107,3.641]],["title/modules/InterceptorModule.html",[108,1.232,285,3.119]],["body/modules/InterceptorModule.html",[0,0.065,3,0.257,4,0.212,5,0.154,25,0.01,39,0.58,41,1.368,43,0.242,55,0.006,56,0.008,57,0.006,61,2.12,70,4.403,108,2.002,110,2.243,115,2.45,231,4.141,232,2.45,285,5.069,299,4.141,300,5.487,469,3.524,478,4.785,480,3.817,519,5.836,598,3.865,740,4.33,751,3.424,762,3.371,830,5.921,831,5.836,832,5.069,833,5.409,834,4.542,835,8.212,836,3.817,837,4.785,838,5.836,839,6.107,840,3.697]],["title/injectables/JwtAuthGuard.html",[151,1.232,841,3.329]],["body/injectables/JwtAuthGuard.html",[0,0.074,3,0.294,4,0.242,5,0.176,8,1.864,25,0.01,39,0.58,41,1.564,43,0.277,55,0.007,56,0.008,57,0.007,125,5.036,151,2.17,152,3.082,841,5.862,842,5.965,843,5.965,844,6.772,845,6.772]],["title/interfaces/JwtConstants.html",[84,0.668,129,2.945]],["body/interfaces/JwtConstants.html",[3,0.267,4,0.22,5,0.16,10,0.527,11,1.204,16,0.564,25,0.01,32,1.292,39,0.453,43,0.304,55,0.007,56,0.008,57,0.007,73,2.049,84,0.917,86,1.975,129,5.472,336,4.647,796,4.571,801,4.931,846,4.931,847,7.504,848,6.335,849,6.555,850,6.147,851,6.147,852,4.931,853,6.147,854,6.147,855,6.147,856,5.414,857,5.414]],["title/interfaces/JwtPayload.html",[84,0.668,795,3.119]],["body/interfaces/JwtPayload.html",[3,0.238,4,0.196,5,0.142,8,1.907,10,0.469,11,1.121,16,0.571,25,0.01,29,3.592,32,1.319,43,0.283,55,0.006,56,0.007,57,0.006,84,1.034,86,1.76,172,2.99,181,4.072,209,1.725,232,3.305,372,3.376,786,4.524,787,4.393,788,4.393,789,4.393,790,3.816,791,4.072,792,4.746,793,4.072,794,3.816,795,4.828,796,5.152,797,7.035,798,6.103,799,7.035,800,7.035,801,5.559,802,7.035,803,7.035,804,5.566]],["title/injectables/JwtStrategy.html",[119,3.119,151,1.232]],["body/injectables/JwtStrategy.html",[0,0.064,3,0.254,4,0.209,5,0.152,8,1.611,10,0.501,16,0.397,17,1.89,19,2.585,22,0.964,24,1.286,25,0.01,26,0.804,27,0.922,37,1.494,39,0.619,41,1.352,43,0.239,45,2.664,55,0.006,56,0.008,57,0.006,80,1.286,119,5.033,125,4.353,129,3.85,130,4.696,151,1.988,152,2.664,168,1.881,232,2.989,233,3.943,574,3.195,795,5.963,833,5.371,858,5.155,859,5.853,860,7.222,861,5.853,862,5.826,863,5.853,864,4.696,865,5.155,866,5.033,867,5.853,868,5.853,869,5.853,870,5.853,871,5.853,872,5.853,873,5.853,874,5.853,875,5.853,876,5.853,877,5.853,878,5.853]],["title/classes/Lesson.html",[0,0.049,879,2.795]],["body/classes/Lesson.html",[0,0.058,2,1.17,3,0.231,4,0.191,5,0.138,8,1.873,10,0.456,11,1.101,16,0.567,22,1.148,25,0.01,30,3.932,32,0.988,39,0.552,43,0.217,55,0.006,56,0.007,57,0.006,81,1.533,171,1.459,185,1.711,206,2.733,208,3.374,209,1.968,210,2.904,211,2.428,212,3.203,214,3.203,216,3.174,217,1.757,218,2.076,222,4.139,242,3.439,243,2.505,245,3.439,247,1.971,248,2.436,251,3.031,252,2.594,254,2.594,255,2.594,308,3.355,322,3.169,323,3.169,324,3.169,325,3.169,328,3.169,331,3.031,354,4.051,358,3.325,785,3.874,879,4.25,880,4.689,881,5.578,882,5.994,883,5.324,884,5.324,885,4.689,886,4.689]],["title/injectables/Logger.html",[151,1.232,490,2.349]],["body/injectables/Logger.html",[0,0.064,3,0.254,4,0.21,5,0.153,8,1.991,17,1.535,25,0.01,39,0.532,41,1.355,43,0.239,55,0.006,56,0.008,57,0.006,151,1.991,152,2.669,183,3.662,189,4.117,234,2.159,247,1.698,264,2.583,476,2.76,490,4.493,496,3.962,504,4.757,531,3.339,563,2.583,593,3.858,610,3.794,744,3.858,748,3.858,751,3.403,807,6.087,810,5.158,887,5.165,888,8.185,889,5.864,890,5.864,891,4.086,892,4.086,893,5.165,894,4.361,895,5.165,896,3.491,897,3.662,898,6.369,899,3.339,900,4.361,901,5.864,902,5.864,903,5.165,904,4.086,905,5.165,906,3.491,907,5.864,908,5.864,909,5.864]],["title/modules/LoggerModule.html",[108,1.232,286,2.664]],["body/modules/LoggerModule.html",[0,0.069,3,0.273,4,0.225,5,0.164,25,0.01,39,0.556,41,1.455,43,0.257,55,0.007,56,0.008,57,0.007,108,2.227,110,2.385,111,2.774,112,3.439,113,3.439,114,3.182,115,3.347,116,3.681,120,4.123,121,3.305,122,2.774,286,5.241,490,4.751,910,5.548,911,5.548,912,5.548,913,6.298,914,6.298]],["title/interfaces/Mail.html",[84,0.668,103,2.262]],["body/interfaces/Mail.html",[3,0.236,4,0.194,5,0.141,8,2.192,10,0.465,11,1.114,16,0.57,25,0.01,26,0.746,27,1.36,32,1.328,43,0.222,55,0.006,56,0.007,57,0.006,84,1.273,85,3.922,86,1.744,87,3.231,88,4.309,89,4.302,90,3.389,91,3.389,92,3.922,93,3.389,94,3.389,95,3.389,96,4.309,97,3.231,98,3.389,99,4.533,100,4.302,101,4.302,102,4.533,103,4.243,104,4.739,105,4.972,106,4.972,107,4.972]],["title/interfaces/MailAttachment.html",[84,0.668,88,2.548]],["body/interfaces/MailAttachment.html",[3,0.249,4,0.205,5,0.149,8,2.235,10,0.491,11,1.153,16,0.526,25,0.01,26,1.115,32,1.326,43,0.234,55,0.006,56,0.008,57,0.006,84,1.288,85,4.059,86,1.842,87,3.412,88,4.623,89,4.453,90,5.071,91,5.071,92,4.059,93,3.58,94,3.58,95,3.58,96,4.418,97,3.412,98,3.58,99,4.059,100,4.453,101,4.453,102,4.059,103,3.603,104,3.412,105,3.58,106,3.58,107,3.58]],["title/interfaces/MailContent.html",[84,0.668,96,2.548]],["body/interfaces/MailContent.html",[3,0.249,4,0.206,5,0.149,8,2.237,10,0.492,11,1.154,16,0.484,25,0.01,26,0.789,27,1.124,32,1.316,43,0.235,55,0.006,56,0.008,57,0.006,84,1.289,85,4.626,86,1.845,87,3.419,88,4.422,89,4.458,90,3.586,91,3.586,92,4.626,93,3.586,94,3.586,95,3.586,96,4.626,97,4.837,98,5.074,99,4.064,100,4.458,101,4.458,102,4.064,103,3.607,104,3.419,105,3.586,106,3.586,107,3.586]],["title/modules/MailModule.html",[108,1.232,915,3.119]],["body/modules/MailModule.html",[0,0.068,3,0.269,4,0.222,5,0.162,25,0.01,39,0.592,41,1.434,43,0.254,55,0.007,56,0.008,57,0.007,108,2.213,110,2.352,111,2.735,112,3.39,113,3.39,114,3.137,115,3.327,116,3.659,120,4.088,121,3.258,122,2.735,135,3.137,915,6.117,916,5.469,917,5.469,918,5.469,919,6.298,920,6.209,921,6.209,922,6.45]],["title/injectables/MailService.html",[151,1.232,919,3.119]],["body/injectables/MailService.html",[0,0.065,3,0.258,4,0.213,5,0.155,10,0.51,12,2.902,16,0.495,17,1.911,19,1.965,22,0.975,24,1.604,25,0.01,26,1.003,27,1.15,37,1.52,39,0.606,41,1.376,43,0.243,55,0.006,56,0.008,57,0.006,80,1.309,103,4.267,151,2.01,152,2.71,154,3.078,188,3.125,464,4.93,751,3.436,919,5.087,923,5.245,924,6.43,925,5.955,926,8.594,927,5.955,928,7.3,929,5.955,930,5.245,931,4.778,932,4.15,933,3.719,934,3.545,935,4.778,936,5.955,937,5.955,938,5.955]],["title/modules/MongoMemoryDatabaseModule.html",[108,1.232,939,3.329]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.051,3,0.203,4,0.167,5,0.122,12,2.278,16,0.424,17,1.223,19,1.542,22,0.835,24,1.027,25,0.01,26,0.642,27,0.736,37,1.595,39,0.577,41,1.08,43,0.307,55,0.005,56,0.007,57,0.005,73,2.069,80,1.652,81,1.053,108,2.069,110,1.77,115,1.934,116,2.127,135,2.362,154,2.745,173,2.437,191,3.102,217,2.062,218,1.822,220,3.75,232,1.934,352,2.844,469,2.782,476,2.941,480,3.279,488,4.111,489,3.102,504,3.075,602,2.059,607,3.075,611,4.111,701,2.919,906,2.782,939,5.236,940,5.649,941,5.737,942,5.649,943,3.75,944,4.674,945,6.25,946,7.101,947,4.674,948,4.632,949,6.901,950,7.835,951,4.674,952,5.505,953,6.031,954,3.75,955,6.202,956,7.251,957,2.919,958,3.75,959,4.117,960,5.505,961,5.014,962,5.014,963,4.117,964,4.111,965,3.75,966,3.075,967,3.257,968,3.476,969,3.75,970,3.257,971,4.117,972,3.476,973,5.505,974,4.117,975,2.661,976,4.117,977,4.117,978,4.674,979,3.257,980,4.674,981,4.674,982,5.014,983,3.257,984,3.257,985,3.257,986,3.476,987,4.117,988,4.674,989,4.674]],["title/classes/NestAppHolder.html",[0,0.049,990,3.591]],["body/classes/NestAppHolder.html",[0,0.064,2,1.294,3,0.255,4,0.211,5,0.153,10,0.504,11,1.172,16,0.492,17,1.897,19,2.591,22,1.094,24,1.294,25,0.01,26,0.809,27,0.927,37,1.85,39,0.433,41,1.36,43,0.24,55,0.006,56,0.008,57,0.006,80,1.294,352,4.022,464,4.526,489,3.707,653,3.873,702,4.526,748,5.167,990,5.815,991,5.185,992,8.196,993,7.248,994,7.248,995,7.724,996,5.887,997,7.248,998,5.887,999,5.887,1000,7.248]],["title/classes/News.html",[0,0.049,343,1.559]],["body/classes/News.html",[0,0.068,2,0.669,3,0.132,4,0.238,5,0.079,8,1.829,10,0.261,11,0.745,15,2.725,16,0.573,17,1.205,19,1.005,22,1.14,24,1.012,25,0.01,26,0.85,27,1.228,30,3.289,32,1.211,37,0.778,39,0.534,43,0.271,45,1.386,55,0.003,56,0.005,57,0.003,80,0.669,81,1.497,84,0.455,161,2.591,162,3.003,163,3.289,165,2.527,168,0.979,171,1.424,185,0.979,186,1.434,190,2.004,206,2.668,208,2.641,209,1.74,210,1.965,211,2.37,212,2.167,214,2.167,216,3.348,217,1.005,218,1.188,222,3.537,229,2.527,234,2.044,242,2.327,243,2.446,245,2.327,247,1.608,248,1.987,251,1.734,252,1.485,254,1.485,255,1.485,257,2.622,278,2.004,308,1.223,320,3.357,322,1.813,323,1.813,324,1.813,325,1.813,326,3.683,330,2.004,331,3.161,332,2.622,335,2.622,338,3.247,341,1.734,342,2.004,343,2.986,344,3.226,345,3.079,346,3.487,347,3.016,348,4.312,349,2.725,350,4.071,351,3.864,352,2.527,353,3.424,354,4.553,357,3.029,358,3.467,359,3.029,362,3.209,363,4.071,364,3.209,365,3.029,366,2.327,367,2.876,368,3.209,371,3.378,372,2.244,374,3.031,375,3.305,379,2.876,381,2.876,383,3.209,391,3.209,392,4.532,394,4.071,395,2.123,396,2.622,397,1.663,398,2.123,399,1.539,400,2.123,401,2.123,402,2.123,403,2.123,404,2.123,405,2.123,406,2.123,407,2.123,408,3.209,409,2.527,410,2.613,411,2.527,412,2.446,413,2.527,414,3.305,415,2.913,416,2.123,417,3.209,418,2.123,419,2.123,420,3.869,421,1.813,422,1.813,1001,4.605,1002,3.046,1003,3.046,1004,3.046,1005,3.046,1006,3.046,1007,3.046,1008,3.046,1009,3.046,1010,3.046,1011,3.046,1012,3.046,1013,3.046]],["title/controllers/NewsController.html",[456,2.107,1014,3.329]],["body/controllers/NewsController.html",[0,0.04,3,0.16,4,0.132,5,0.096,10,0.317,12,1.802,16,0.488,17,1.39,22,0.961,24,1.582,25,0.01,26,0.989,27,1.133,32,1.168,37,1.837,39,0.601,41,0.854,43,0.151,55,0.004,56,0.006,57,0.004,73,2.214,80,1.582,81,0.833,137,1.868,154,3.332,168,2.184,170,2.417,171,1.138,173,3.183,188,1.94,189,3.024,191,3.171,209,1.322,211,2.032,343,2.843,349,2.071,366,2.684,423,4.47,426,3.762,449,1.868,456,1.74,572,2.926,588,2.309,606,4.46,610,3.262,704,2.9,739,2.966,786,5.117,862,2.75,1014,3.95,1015,3.257,1016,3.257,1017,4.735,1018,4.623,1019,6.217,1020,4.332,1021,3.697,1022,4.623,1023,3.697,1024,6.05,1025,3.697,1026,5.312,1027,3.697,1028,7.493,1029,3.257,1030,4.735,1031,4.045,1032,4.47,1033,3.697,1034,3.697,1035,5.312,1036,3.697,1037,4.679,1038,5.312,1039,4.045,1040,5.312,1041,3.317,1042,4.679,1043,3.697,1044,4.735,1045,5.312,1046,3.697,1047,4.623,1048,3.257,1049,3.257,1050,5.016,1051,3.697,1052,3.697,1053,2.432,1054,3.257,1055,3.882,1056,3.257,1057,2.75,1058,3.257,1059,3.257,1060,2.576,1061,2.75,1062,3.697,1063,3.697,1064,3.257,1065,3.697,1066,3.257,1067,3.257,1068,6.34,1069,3.257,1070,3.257,1071,5.985,1072,2.966,1073,4.679,1074,3.697,1075,3.697,1076,3.697,1077,3.697,1078,3.697,1079,2.75,1080,2.966,1081,3.697,1082,6.217,1083,3.697,1084,3.697,1085,3.697,1086,5.312,1087,3.697]],["title/classes/NewsFilterQuery.html",[0,0.049,1030,3.119]],["body/classes/NewsFilterQuery.html",[0,0.074,2,1.16,3,0.229,4,0.189,5,0.137,10,0.452,11,1.094,16,0.507,22,0.998,25,0.01,27,1.313,32,1.144,39,0.58,43,0.216,55,0.006,56,0.007,57,0.006,61,2.917,73,1.453,162,3.372,164,4.079,170,3.08,171,1.131,186,3.516,209,1.685,211,2.109,343,2.903,344,3.261,438,4.716,439,4.716,440,4.921,443,5.206,444,5.43,445,3.853,449,2.667,451,5.43,452,3.296,453,3.678,454,4.234,455,3.296,784,4.665,785,3.853,1030,4.716,1088,6.322,1089,4.234,1090,5.278,1091,5.43,1092,5.961,1093,5.278,1094,5.278,1095,5.278,1096,5.278,1097,5.961,1098,6.768,1099,4.716,1100,5.278,1101,5.86,1102,6.768,1103,5.278,1104,6.768,1105,6.94,1106,5.43,1107,5.278,1108,5.278]],["title/classes/NewsMapper.html",[0,0.049,1061,3.329]],["body/classes/NewsMapper.html",[0,0.049,2,0.991,3,0.196,4,0.161,5,0.117,10,0.386,15,2.378,16,0.503,17,1.597,22,0.989,24,1.628,25,0.01,26,1.018,27,1.167,37,1.891,39,0.545,43,0.184,55,0.005,56,0.007,57,0.005,73,2.039,80,1.628,81,1.016,162,2.524,163,3.254,164,3.331,168,1.449,171,0.966,343,2.696,344,1.866,345,2.687,347,2.973,349,1.758,352,3.933,423,4.873,426,4.043,572,2.871,606,3.631,772,4.548,781,4.818,783,4.873,784,2.815,1030,5.162,1044,5.162,1060,5.162,1061,4.536,1109,3.971,1110,6.1,1111,6.1,1112,4.536,1113,6.1,1114,6.1,1115,4.508,1116,6.1,1117,4.508,1118,6.1,1119,4.508,1120,6.1,1121,4.508,1122,3.353,1123,3.353,1124,6.1,1125,3.353,1126,3.353,1127,3.971,1128,4.508,1129,4.508,1130,4.508,1131,4.508,1132,4.508,1133,3.971,1134,4.508,1135,4.508,1136,4.508,1137,4.508,1138,4.508,1139,4.508,1140,4.508,1141,3.971,1142,4.508,1143,4.508,1144,4.508,1145,4.508,1146,4.508,1147,4.508,1148,4.508,1149,3.971,1150,4.508,1151,3.971,1152,4.508,1153,4.508,1154,3.971,1155,6.1,1156,4.508,1157,4.508,1158,4.508,1159,4.508,1160,6.1,1161,6.1,1162,6.1,1163,4.508,1164,4.508]],["title/modules/NewsModule.html",[108,1.232,1165,3.119]],["body/modules/NewsModule.html",[0,0.06,3,0.239,4,0.197,5,0.143,25,0.01,39,0.62,41,1.27,43,0.224,55,0.006,56,0.007,57,0.006,108,2.096,110,2.082,111,2.421,112,3,113,3,114,2.777,115,3.15,116,3.465,120,3.791,121,2.884,122,2.421,135,3.509,137,3.509,138,5.542,227,2.678,286,5.015,747,3.615,983,3.83,1014,5.948,1020,3.83,1055,5.557,1056,4.841,1165,6.228,1166,4.841,1167,4.841,1168,4.841,1169,5.496,1170,5.261,1171,5.496,1172,4.841,1173,5.496,1174,5.496,1175,4.841,1176,5.496,1177,3.615,1178,3.615,1179,6.116,1180,5.496,1181,5.496,1182,5.496,1183,3.615]],["title/injectables/NewsRepo.html",[151,1.232,1170,2.795]],["body/injectables/NewsRepo.html",[0,0.045,3,0.18,4,0.148,5,0.108,10,0.354,12,2.016,16,0.527,17,1.505,19,1.365,22,1.038,24,1.708,25,0.01,26,1.068,27,1.224,37,1.917,39,0.587,41,0.956,43,0.169,55,0.004,56,0.006,57,0.004,73,2.067,80,1.57,81,0.932,151,1.583,152,1.883,154,3.387,161,2.785,171,0.887,173,3.259,185,1.329,188,2.171,189,3.763,191,3.424,209,1.432,217,1.365,219,2.463,232,1.712,247,1.198,248,1.481,343,3.066,344,1.712,346,3.018,349,2.785,351,3.591,428,3.14,489,2.912,514,2.355,569,4.349,572,2.707,602,2.533,610,3.018,784,4.461,785,3.763,826,4.978,1017,4.007,1018,4.916,1031,4.914,1041,3.591,1042,5.065,1072,4.614,1073,5.065,1170,3.591,1184,3.644,1185,5.751,1186,5.751,1187,4.614,1188,3.644,1189,5.732,1190,4.137,1191,4.277,1192,5.751,1193,4.137,1194,4.137,1195,4.7,1196,4.137,1197,5.751,1198,4.137,1199,5.751,1200,4.137,1201,5.751,1202,5.065,1203,5.751,1204,4.007,1205,5.751,1206,4.137,1207,2.883,1208,3.077,1209,4.007,1210,4.137,1211,4.137,1212,4.137,1213,4.137,1214,4.137,1215,4.137,1216,5.751,1217,4.137,1218,4.137,1219,4.137,1220,4.137,1221,4.137,1222,4.137]],["title/classes/NewsResponse.html",[0,0.049,1060,3.119]],["body/classes/NewsResponse.html",[0,0.04,2,0.805,3,0.159,4,0.282,5,0.095,10,0.314,11,0.853,15,2.796,16,0.588,22,1.132,25,0.01,27,1.176,32,1.246,39,0.498,43,0.15,55,0.004,56,0.006,57,0.004,61,3.117,73,1.702,162,2.559,164,3.376,165,3.263,168,2.473,170,2.401,171,1.891,177,3.923,186,2.91,209,1.916,211,2.393,242,3.124,243,2.75,245,3.124,343,3.065,344,2.8,345,3.159,346,3.245,347,3.013,349,2.912,350,4.068,351,3.861,374,1.999,375,2.18,379,4.225,432,4.232,433,3.14,434,4.232,435,3.923,438,4.714,439,4.714,440,4.225,443,4.309,444,4.232,445,3.003,448,4.962,449,1.85,453,2.552,454,4.961,455,3.861,749,4.232,897,3.294,1020,3.676,1060,3.676,1101,5.031,1223,2.723,1224,6.438,1225,3.662,1226,5.959,1227,3.662,1228,4.997,1229,3.662,1230,3.662,1231,3.662,1232,3.923,1233,3.662,1234,4.309,1235,4.646,1236,3.662,1237,5.446,1238,3.662,1239,4.961,1240,3.662,1241,5.275,1242,3.662,1243,2.938,1244,3.662,1245,3.662,1246,3.662,1247,3.662,1248,3.662,1249,3.923,1250,3.662,1251,5.275,1252,3.662,1253,3.662]],["title/classes/NewsScope.html",[0,0.049,1209,3.119]],["body/classes/NewsScope.html",[0,0.051,2,1.029,3,0.203,4,0.168,5,0.122,10,0.401,11,1.012,16,0.51,17,1.637,22,1.047,24,1.548,25,0.01,26,0.968,27,1.11,37,1.799,39,0.554,43,0.191,55,0.007,56,0.007,57,0.005,73,1.94,80,1.723,81,1.055,162,1.937,167,2.556,171,1.003,217,1.545,218,1.825,243,1.723,247,1.356,248,1.676,343,2.179,344,1.937,347,2.281,489,3.553,506,4.91,514,2.665,569,3.079,572,3.938,576,3.755,653,3.079,784,3.907,785,4.012,975,3.562,1195,4.948,1209,5.62,1254,6.471,1255,4.123,1256,7.046,1257,6.256,1258,6.256,1259,6.256,1260,5.51,1261,8.368,1262,4.681,1263,6.256,1264,4.681,1265,6.256,1266,4.681,1267,6.256,1268,4.681,1269,4.681,1270,4.681,1271,5.019,1272,4.681,1273,6.256,1274,4.116,1275,4.681,1276,4.681,1277,4.116,1278,4.681,1279,4.681,1280,4.681,1281,6.256,1282,4.681,1283,4.681,1284,3.079,1285,4.681,1286,4.681,1287,6.256,1288,4.681,1289,4.681,1290,4.681]],["title/interfaces/NewsTargetFilter.html",[84,0.668,1195,2.945]],["body/interfaces/NewsTargetFilter.html",[3,0.281,4,0.232,5,0.169,10,0.556,11,1.243,16,0.521,25,0.01,39,0.566,43,0.265,55,0.007,56,0.008,57,0.007,84,0.968,86,2.084,161,3.301,162,3.504,163,3.986,171,1.39,185,2.084,344,2.684,575,6.297,1195,5.055,1254,5.203,1291,5.712]],["title/injectables/NewsUc.html",[151,1.232,1055,2.795]],["body/injectables/NewsUc.html",[0,0.027,3,0.108,4,0.089,5,0.065,10,0.213,16,0.51,17,1.032,19,0.822,22,0.985,24,1.621,25,0.01,26,1.013,27,1.161,32,0.71,37,2.008,39,0.515,41,0.575,43,0.102,55,0.003,56,0.004,57,0.003,61,0.892,73,2.23,80,1.621,81,0.561,144,4.015,151,1.085,152,1.134,154,3.294,161,3.419,162,3.052,163,2.616,164,3.683,165,3.534,168,1.786,170,1.134,171,0.534,172,4.65,173,3.066,185,0.8,186,1.172,188,1.307,189,4.477,191,3.667,209,1.836,243,1.8,247,0.722,248,1.751,252,2.383,338,2.068,343,2.987,344,2.665,346,1.307,347,1.921,349,0.971,352,2.225,366,3.534,367,2.461,372,2.951,409,1.134,410,1.172,411,1.134,412,1.097,445,1.418,453,1.736,489,3.464,490,3.54,503,2.194,514,1.418,537,3.162,546,3.471,569,4.438,575,2.931,579,1.853,602,1.736,606,4.286,607,2.593,610,3.67,704,2.152,762,1.418,769,1.418,772,3.657,781,3.874,783,4.438,784,3.782,785,2.784,792,2.461,826,3.471,836,2.068,897,1.556,975,1.418,1017,2.746,1020,3.407,1031,3.605,1055,2.461,1072,3.162,1099,3.407,1127,2.194,1133,2.194,1141,4.896,1154,3.471,1170,4.022,1172,2.194,1195,2.593,1207,1.736,1208,1.853,1292,1.999,1293,3.941,1294,3.941,1295,3.941,1296,3.941,1297,4.89,1298,2.491,1299,2.491,1300,3.941,1301,2.491,1302,3.941,1303,2.491,1304,3.941,1305,2.491,1306,3.941,1307,2.491,1308,3.941,1309,2.491,1310,2.491,1311,3.941,1312,2.491,1313,2.746,1314,2.491,1315,4.89,1316,2.491,1317,3.941,1318,2.491,1319,2.491,1320,2.491,1321,3.162,1322,4.46,1323,2.491,1324,2.194,1325,2.491,1326,5.559,1327,2.491,1328,2.491,1329,3.941,1330,2.491,1331,4.896,1332,2.491,1333,2.491,1334,2.491,1335,3.941,1336,2.491,1337,3.941,1338,2.491,1339,3.941,1340,2.491,1341,2.491,1342,1.36,1343,4.89,1344,2.491,1345,3.941,1346,2.491,1347,2.491,1348,5.559,1349,2.491,1350,2.194,1351,1.999,1352,2.491,1353,2.491,1354,2.491,1355,2.491,1356,2.194,1357,3.941,1358,2.491,1359,2.491,1360,2.491,1361,3.941,1362,2.491,1363,2.491,1364,2.491,1365,2.491,1366,2.491]],["title/classes/PaginationQuery.html",[0,0.049,1032,2.945]],["body/classes/PaginationQuery.html",[0,0.078,2,1.269,3,0.251,4,0.207,5,0.15,10,0.495,11,1.159,16,0.486,22,0.957,25,0.01,27,1.282,29,3.64,39,0.527,43,0.236,55,0.006,56,0.008,57,0.006,61,2.564,211,2.023,247,2.075,248,2.564,449,2.918,452,3.607,765,5.747,828,5.506,829,5.123,975,4.078,1032,4.713,1101,5.791,1202,6.31,1274,4.713,1367,5.087,1368,6.055,1369,5.776,1370,3.491,1371,6.31,1372,7.163,1373,7.163,1374,7.163,1375,5.776,1376,5.776,1377,6.31,1378,5.776,1379,7.787,1380,5.087,1381,5.776,1382,5.776,1383,5.776,1384,5.776]],["title/classes/PaginationResponse.html",[0,0.049,1053,2.945]],["body/classes/PaginationResponse.html",[0,0.061,2,1.221,3,0.241,4,0.199,5,0.145,10,0.476,11,1.131,16,0.561,19,1.833,22,1.105,24,1.221,25,0.01,26,0.763,27,1.303,29,3.845,39,0.409,43,0.227,55,0.006,56,0.008,57,0.006,211,2.267,448,5.209,449,2.807,607,4.6,649,6.639,751,3.895,828,5.641,829,5.641,1053,4.6,1385,4.893,1386,5.641,1387,6.992,1388,5.556,1389,5.556,1390,5.556,1391,5.556,1392,5.556,1393,5.556,1394,5.556,1395,5.556,1396,5.556]],["title/injectables/ParseObjectIdPipe.html",[151,1.232,1050,3.119]],["body/injectables/ParseObjectIdPipe.html",[0,0.067,3,0.265,4,0.219,5,0.159,10,0.523,16,0.414,17,1.941,22,0.816,24,1.343,25,0.01,26,0.839,27,0.962,32,1.235,37,1.56,39,0.588,41,1.411,43,0.249,55,0.007,56,0.008,57,0.007,73,1.682,80,1.343,81,1.377,151,2.041,152,2.781,161,2.382,185,1.963,201,3.637,210,3.165,217,2.016,219,3.637,248,2.655,504,4.019,752,4.878,1050,5.167,1397,6.531,1398,4.048,1399,4.902,1400,7.415,1401,6.11,1402,7.415,1403,6.11,1404,7.415,1405,6.11,1406,6.11]],["title/interfaces/PlainTextMailContent.html",[84,0.668,99,2.548]],["body/interfaces/PlainTextMailContent.html",[3,0.25,4,0.206,5,0.15,8,2.303,10,0.494,11,1.157,16,0.485,25,0.01,26,0.792,27,1.127,32,1.322,43,0.235,55,0.006,56,0.008,57,0.006,84,1.29,85,4.073,86,1.852,87,3.432,88,4.43,89,4.468,90,3.6,91,3.6,92,4.073,93,3.6,94,3.6,95,3.6,96,4.632,97,3.432,98,3.6,99,4.43,100,5.224,101,5.224,102,4.073,103,3.615,104,3.432,105,3.6,106,3.6,107,3.6]],["title/classes/SchoolInfo.html",[0,0.049,371,2.444]],["body/classes/SchoolInfo.html",[0,0.064,2,1.276,3,0.252,4,0.208,5,0.151,8,1.979,10,0.498,11,1.163,16,0.579,19,1.917,22,1.089,24,1.276,25,0.01,26,1.152,27,0.915,30,3.383,32,1.185,39,0.529,43,0.237,45,2.643,55,0.006,56,0.008,57,0.006,171,1.541,185,1.866,206,3.366,208,3.068,209,1.79,210,2.479,211,2.204,212,2.734,214,2.734,216,3.135,217,1.917,218,2.265,254,2.831,255,2.831,328,3.458,334,4.048,335,4.093,336,4.489,337,5.346,338,3.048,339,4.66,340,4.66,371,3.925,777,3.821,1407,6.876]],["title/classes/SchoolInfoMapper.html",[0,0.049,1123,3.329]],["body/classes/SchoolInfoMapper.html",[0,0.068,2,1.37,3,0.271,4,0.223,5,0.162,10,0.534,16,0.423,17,1.965,22,0.832,24,1.37,25,0.01,26,0.856,27,0.982,37,1.591,39,0.553,43,0.255,55,0.007,56,0.008,57,0.007,73,1.716,80,1.37,81,1.405,171,1.336,352,3.665,371,4.669,426,3.658,1112,5.582,1122,4.636,1123,5.582,1126,4.636,1234,5.824,1408,6.611,1409,5.002,1410,7.506,1411,5.491,1412,6.234,1413,5.491,1414,6.234]],["title/classes/SchoolInfoResponse.html",[0,0.049,1234,3.119]],["body/classes/SchoolInfoResponse.html",[0,0.067,2,1.351,3,0.267,4,0.22,5,0.16,10,0.527,11,1.204,16,0.505,22,0.994,25,0.01,26,1.17,32,1.208,39,0.453,43,0.251,55,0.007,56,0.008,57,0.007,61,2.865,171,1.783,209,2.121,211,2.101,349,3.243,438,5.186,439,5.186,448,4.765,449,3.106,455,3.838,1224,4.931,1234,5.186,1243,4.931,1415,7.05,1416,4.931,1417,5.414,1418,5.414]],["title/classes/SchoolNews.html",[0,0.049,421,2.664]],["body/classes/SchoolNews.html",[0,0.064,2,0.608,3,0.12,4,0.228,5,0.072,8,1.752,10,0.237,11,0.692,15,2.624,16,0.577,17,1.12,22,1.152,24,0.608,25,0.01,26,0.719,27,1.172,30,4.048,32,1.208,37,0.707,39,0.517,43,0.26,45,1.26,55,0.003,56,0.005,57,0.003,80,0.608,81,1.581,84,0.413,161,2.482,162,2.904,163,3.168,165,2.381,168,0.889,171,1.364,185,0.889,186,1.303,190,1.821,206,2.556,208,3.094,209,1.892,210,2.513,211,2.42,212,2.771,214,2.771,216,3.317,217,0.913,218,1.079,222,3.28,229,2.381,234,1.926,242,2.975,243,2.583,245,2.975,247,1.844,248,2.279,251,2.437,252,2.086,254,1.349,255,1.349,257,2.437,278,1.821,308,1.112,320,3.216,322,1.648,323,1.648,324,1.648,325,1.648,326,3.505,330,1.821,331,2.979,332,2.437,335,1.576,338,2.746,341,1.576,342,1.821,343,3.098,344,3.25,345,2.965,346,3.34,347,2.869,348,4.103,349,2.624,350,3.873,351,3.677,352,2.381,353,3.183,354,4.524,356,2.221,357,2.816,358,3.267,359,2.816,360,2.221,361,2.221,362,2.982,363,3.873,364,2.982,365,2.816,366,2.163,367,2.673,368,2.982,369,2.221,370,2.221,371,3.475,372,2.086,373,2.221,374,2.857,375,3.115,376,2.221,377,2.221,378,2.221,379,2.673,380,2.221,381,2.673,382,2.221,383,2.982,384,2.221,385,2.221,386,2.221,387,2.221,388,2.221,389,2.221,390,2.221,391,2.982,392,3.975,393,2.221,394,3.873,395,1.929,396,2.437,397,1.511,398,1.929,399,1.399,400,1.929,401,1.929,402,1.929,403,1.929,404,1.929,405,1.929,406,1.929,407,1.929,408,2.982,409,2.381,410,2.463,411,2.381,412,2.305,413,2.381,414,3.115,415,2.746,416,1.929,417,2.982,418,1.929,419,1.929,420,3.646,421,2.548,422,1.648,1419,2.768]],["title/controllers/ServerController.html",[456,2.107,1420,3.329]],["body/controllers/ServerController.html",[0,0.07,3,0.278,4,0.229,5,0.167,10,0.549,17,1.996,22,0.855,25,0.01,32,1.107,37,1.635,39,0.472,41,1.479,43,0.261,47,2.914,55,0.007,56,0.008,57,0.007,80,1.407,137,3.236,211,1.808,247,2.209,456,3.59,460,7.428,462,5.018,463,3.717,464,4.763,465,4.002,475,4.762,476,3.014,1420,5.672,1421,5.64,1422,6.404]],["title/modules/ServerModule.html",[108,1.232,1423,3.119]],["body/modules/ServerModule.html",[0,0.052,3,0.208,4,0.171,5,0.125,16,0.325,25,0.01,32,0.696,39,0.649,41,1.107,43,0.196,52,2.514,55,0.005,56,0.007,57,0.005,80,1.053,81,1.079,108,1.962,109,5.658,110,1.814,111,2.11,112,2.616,113,2.616,114,2.421,115,1.982,116,2.18,120,3.469,121,2.514,122,2.11,135,3.21,137,3.21,168,1.539,180,2.616,217,2.096,218,1.868,232,1.982,281,5.658,308,2.551,320,3.21,332,3.617,341,3.617,343,2.213,371,3.469,394,4.18,396,3.617,409,2.18,410,2.255,411,2.18,412,2.11,413,2.18,421,3.782,422,3.782,554,3.844,633,5.596,634,5.596,635,5.596,715,3.844,716,3.844,717,3.844,879,3.968,915,5.658,948,4.18,953,3.844,954,3.844,962,3.844,964,4.18,1165,3.338,1420,5.301,1423,6.08,1424,4.22,1425,4.22,1426,5.658,1427,4.791,1428,6.353,1429,6.353,1430,4.791,1431,4.791,1432,4.791,1433,4.791,1434,3.152,1435,4.791,1436,4.791,1437,3.096,1438,4.18,1439,4.791,1440,4.791,1441,4.791,1442,4.791,1443,4.22,1444,2.852,1445,3.152,1446,4.791,1447,3.844,1448,4.791,1449,6.353,1450,4.791,1451,3.844,1452,3.338]],["title/classes/Submission.html",[0,0.049,1438,2.945]],["body/classes/Submission.html",[0,0.057,2,1.154,3,0.228,4,0.188,5,0.137,8,1.857,10,0.45,11,1.091,16,0.565,22,1.145,25,0.01,30,3.918,32,0.979,39,0.579,43,0.214,55,0.006,56,0.007,57,0.006,81,1.52,171,1.446,185,1.687,187,3.659,206,2.708,208,3.356,209,1.958,210,2.879,211,2.421,212,3.175,214,3.175,216,2.108,217,1.733,218,2.047,222,4.126,242,3.408,243,2.483,245,3.408,247,1.954,248,2.415,251,2.989,252,2.559,254,2.559,255,2.559,320,3.766,322,3.126,323,3.126,324,3.126,325,3.126,328,3.126,331,3.84,354,4.436,358,4.212,1437,3.632,1438,4.437,1453,4.625,1454,5.979,1455,5.193,1456,6.745,1457,5.251,1458,6.745,1459,5.251,1460,5.251,1461,4.625]],["title/classes/Task.html",[0,0.049,1437,2.181]],["body/classes/Task.html",[0,0.053,2,1.069,3,0.211,4,0.174,5,0.127,8,1.767,10,0.417,11,1.038,16,0.579,22,1.16,25,0.01,26,0.987,27,1.284,30,3.838,32,1.109,39,0.562,43,0.199,55,0.005,56,0.007,57,0.005,81,1.446,171,1.376,185,1.564,206,2.578,208,3.26,209,1.902,210,2.74,211,2.453,212,3.022,214,3.022,216,3.389,217,1.606,218,1.897,222,4.052,242,3.244,243,2.812,245,3.244,247,1.859,248,2.298,251,2.771,252,2.372,254,2.372,255,2.372,308,3.274,322,2.897,323,2.897,324,2.897,325,2.897,328,2.897,331,3.655,354,4.277,358,4.009,489,3.165,785,3.655,879,5.093,882,5.655,885,4.287,1437,3.129,1462,4.287,1463,5.764,1464,4.867,1465,4.867,1466,6.42,1467,4.867,1468,4.867,1469,4.867,1470,4.867,1471,4.287]],["title/controllers/TaskController.html",[456,2.107,1472,3.329]],["body/controllers/TaskController.html",[0,0.057,3,0.227,4,0.187,5,0.136,10,0.448,12,2.55,16,0.355,17,1.762,22,0.699,24,1.15,25,0.01,26,0.719,27,1.06,37,1.336,39,0.637,41,1.209,43,0.214,55,0.008,56,0.007,57,0.006,73,2.162,80,1.15,81,1.179,137,2.644,154,2.901,173,2.624,188,2.746,191,2.305,211,1.477,232,2.165,426,2.55,449,2.644,456,2.463,572,3.697,766,3.268,769,2.979,786,4.675,828,4.428,829,4.428,862,3.891,1016,4.609,1018,5.533,1024,5.473,1029,4.609,1032,5.696,1039,3.115,1049,4.609,1053,3.442,1054,4.609,1057,3.891,1058,4.609,1059,4.609,1064,4.609,1079,3.891,1386,4.428,1398,2.857,1437,2.55,1472,5.005,1473,4.609,1474,6.73,1475,5.233,1476,5.233,1477,4.895,1478,4.609,1479,3.646,1480,3.891,1481,5.233,1482,3.891,1483,5.233,1484,4.609,1485,4.609,1486,3.268,1487,6.73,1488,5.233,1489,5.233,1490,3.442,1491,5.233,1492,5.233,1493,5.233,1494,5.233,1495,5.233]],["title/classes/TaskMapper.html",[0,0.049,1480,3.329]],["body/classes/TaskMapper.html",[0,0.066,2,1.335,3,0.264,4,0.217,5,0.158,10,0.52,16,0.412,17,1.934,22,0.811,24,1.335,25,0.01,26,0.834,27,0.956,37,1.55,39,0.544,43,0.248,55,0.007,56,0.008,57,0.007,73,1.672,80,1.335,81,1.368,171,1.302,352,3.624,426,3.6,1112,5.494,1122,4.517,1126,4.517,1149,5.35,1151,5.35,1413,5.35,1437,4.138,1479,5.773,1480,5.494,1496,5.35,1497,7.388,1498,6.073,1499,6.073,1500,6.073,1501,6.073,1502,6.073,1503,6.073,1504,6.073,1505,6.073,1506,6.073,1507,6.073,1508,6.073]],["title/modules/TaskModule.html",[108,1.232,1426,3.119]],["body/modules/TaskModule.html",[0,0.067,3,0.267,4,0.22,5,0.16,25,0.01,39,0.613,41,1.423,43,0.251,55,0.007,56,0.008,57,0.007,108,2.205,110,2.333,111,2.713,112,3.363,113,3.363,114,3.112,115,3.315,116,2.803,120,4.068,121,3.232,122,2.713,137,3.765,1426,6.162,1472,5.958,1477,5.699,1478,5.425,1509,5.425,1510,5.425,1511,5.699,1512,6.159,1513,6.159,1514,5.425]],["title/injectables/TaskRepo.html",[151,1.232,1511,2.945]],["body/injectables/TaskRepo.html",[0,0.047,3,0.187,4,0.154,5,0.112,10,0.369,12,2.101,16,0.401,17,1.549,19,1.423,22,0.79,24,1.3,25,0.01,26,0.813,27,0.932,37,1.101,39,0.58,41,0.996,43,0.176,52,2.263,55,0.005,56,0.006,57,0.005,73,2.167,80,0.948,81,0.971,151,1.629,152,1.962,154,2.634,161,2.835,168,1.385,171,0.924,172,3.689,173,2.307,185,1.385,188,2.263,191,3.203,209,1.073,217,1.953,218,1.681,219,2.567,232,3.258,243,1.587,247,1.249,248,1.544,252,2.101,308,2.92,311,3.206,343,1.502,399,2.179,489,1.899,514,3.369,572,2.029,574,2.354,579,4.401,826,4.541,828,3.893,829,3.893,879,4.219,881,3.206,892,3.005,896,2.567,1031,3.523,1039,2.567,1188,3.798,1189,5.834,1191,4.401,1207,3.005,1208,3.206,1209,3.005,1232,3.206,1386,3.893,1437,3.293,1438,2.837,1455,3.005,1463,5.834,1490,2.837,1511,3.893,1515,3.798,1516,5.917,1517,4.312,1518,5.917,1519,4.312,1520,4.312,1521,3.798,1522,2.354,1523,4.312,1524,3.798,1525,3.206,1526,4.312,1527,3.005,1528,4.312,1529,4.748,1530,3.798,1531,3.206,1532,2.837,1533,3.459,1534,4.312,1535,3.005,1536,3.005,1537,6.756,1538,4.312,1539,5.917,1540,4.312,1541,4.312,1542,4.312,1543,5.917,1544,4.312,1545,4.312,1546,5.917,1547,4.312,1548,3.459,1549,5.917,1550,4.312,1551,4.312,1552,2.837,1553,3.798,1554,4.312,1555,4.312,1556,4.312,1557,4.312,1558,4.748,1559,3.798,1560,3.798,1561,4.312,1562,4.312,1563,4.312,1564,4.312]],["title/classes/TaskResponse.html",[0,0.049,1479,3.119]],["body/classes/TaskResponse.html",[0,0.06,2,1.195,3,0.236,4,0.195,5,0.141,10,0.466,11,1.115,16,0.579,22,1.14,25,0.01,26,1.041,27,1.323,32,1.266,39,0.4,43,0.222,47,3.139,55,0.006,56,0.007,57,0.006,61,1.946,209,1.886,211,2.41,242,3.828,243,3.093,245,3.828,426,3.361,428,3.766,448,5.351,449,2.747,1437,3.361,1463,6.078,1479,4.806,1565,4.789,1566,6.075,1567,4.106,1568,7.575,1569,7.575,1570,5.437,1571,5.437,1572,5.437,1573,5.437,1574,5.437,1575,5.437,1576,5.437,1577,4.043]],["title/injectables/TaskUC.html",[151,1.232,1477,2.945]],["body/injectables/TaskUC.html",[0,0.061,3,0.243,4,0.2,5,0.146,10,0.479,16,0.476,17,1.838,19,1.847,22,0.938,24,1.543,25,0.01,26,0.965,27,1.106,37,1.428,39,0.611,41,1.293,43,0.229,55,0.006,56,0.008,57,0.006,73,1.54,80,1.23,151,1.933,152,2.547,154,2.993,161,3.139,165,2.547,168,1.798,171,1.199,172,3.055,173,2.738,185,1.798,188,2.937,191,2.465,231,3.186,232,3.177,514,3.186,826,5.027,1031,4.792,1207,3.9,1208,4.162,1386,4.621,1437,2.727,1477,4.621,1490,5.296,1511,5.567,1514,4.929,1530,4.929,1578,4.929,1579,7.024,1580,5.596,1581,5.596,1582,7.024,1583,5.596,1584,4.49,1585,3.9,1586,5.596,1587,4.162,1588,4.162,1589,4.929,1590,3.9,1591,5.596]],["title/classes/TeamInfo.html",[0,0.049,396,2.548]],["body/classes/TeamInfo.html",[0,0.064,2,1.276,3,0.252,4,0.208,5,0.151,8,1.979,10,0.498,11,1.163,16,0.579,19,1.917,22,1.089,24,1.276,25,0.01,26,1.152,27,0.915,30,3.383,32,1.185,39,0.529,43,0.237,45,2.643,55,0.006,56,0.008,57,0.006,171,1.541,185,1.866,206,3.366,208,3.068,209,1.79,210,2.479,211,2.204,212,2.734,214,2.734,216,3.135,217,1.917,218,2.265,254,2.831,255,2.831,328,3.458,334,4.048,335,4.093,336,4.489,337,5.346,338,3.048,339,4.66,340,4.66,396,4.093,778,4.048,1592,6.876]],["title/classes/TeamNews.html",[0,0.049,422,2.664]],["body/classes/TeamNews.html",[0,0.064,2,0.608,3,0.12,4,0.228,5,0.072,8,1.752,10,0.237,11,0.692,15,2.624,16,0.577,17,1.12,22,1.152,24,0.608,25,0.01,26,0.719,27,1.172,30,4.048,32,1.208,37,0.707,39,0.517,43,0.26,45,1.26,55,0.003,56,0.005,57,0.003,80,0.608,81,1.581,84,0.413,161,2.482,162,2.904,163,3.168,165,2.381,168,0.889,171,1.364,185,0.889,186,1.303,190,1.821,206,2.556,208,3.094,209,1.892,210,2.513,211,2.42,212,2.771,214,2.771,216,3.317,217,0.913,218,1.079,222,3.28,229,2.381,234,1.926,242,2.975,243,2.583,245,2.975,247,1.844,248,2.279,251,2.437,252,2.086,254,1.349,255,1.349,257,2.437,278,1.821,308,1.112,320,3.216,322,1.648,323,1.648,324,1.648,325,1.648,326,3.505,330,1.821,331,2.979,332,2.437,335,1.576,338,2.746,341,1.576,342,1.821,343,3.098,344,3.25,345,2.965,346,3.34,347,2.869,348,4.103,349,2.624,350,3.873,351,3.677,352,2.381,353,3.183,354,4.524,356,2.221,357,2.816,358,3.267,359,2.816,360,2.221,361,2.221,362,2.982,363,3.873,364,2.982,365,2.816,366,2.163,367,2.673,368,2.982,369,2.221,370,2.221,371,3.214,372,2.086,373,2.221,374,2.857,375,3.115,376,2.221,377,2.221,378,2.221,379,2.673,380,2.221,381,2.673,382,2.221,383,2.982,384,2.221,385,2.221,386,2.221,387,2.221,388,2.221,389,2.221,390,2.221,391,2.982,392,3.975,393,2.221,394,3.873,395,1.929,396,2.979,397,1.511,398,1.929,399,1.399,400,1.929,401,1.929,402,1.929,403,1.929,404,1.929,405,1.929,406,1.929,407,1.929,408,2.982,409,2.381,410,2.463,411,2.381,412,2.305,413,2.381,414,3.115,415,2.746,416,1.929,417,2.982,418,1.929,419,1.929,420,3.646,421,1.648,422,2.548,1593,2.768]],["title/injectables/TimeoutInterceptor.html",[151,1.232,839,3.329]],["body/injectables/TimeoutInterceptor.html",[0,0.054,3,0.213,4,0.176,5,0.128,10,0.42,11,1.044,16,0.489,17,1.689,22,1.063,24,1.418,25,0.01,26,0.886,27,1.207,29,3.488,37,1.647,39,0.564,41,1.133,43,0.2,55,0.005,56,0.007,57,0.005,61,1.756,80,1.684,130,3.936,151,1.777,152,2.233,247,1.421,248,1.756,352,3.282,409,2.233,410,2.309,411,3.487,412,2.161,413,2.233,414,2.92,456,3.038,466,4.799,471,5.178,478,4.246,489,3.177,491,5.685,492,5.685,493,5.698,494,6.749,496,2.479,497,6.353,500,3.936,502,4.321,504,3.227,590,3.387,591,3.145,617,3.936,653,3.227,664,3.936,836,2.574,837,5.377,839,4.799,985,4.497,1260,5.685,1594,4.321,1595,6.454,1596,4.497,1597,4.497,1598,4.246,1599,5.178,1600,7.212,1601,7.212,1602,7.212,1603,4.906,1604,4.906,1605,5.364,1606,4.906,1607,4.906,1608,4.906,1609,4.906,1610,4.906,1611,6.454,1612,6.454,1613,4.906,1614,6.454,1615,4.906,1616,4.906,1617,4.906,1618,4.906,1619,4.906,1620,4.906,1621,4.906,1622,6.454,1623,4.906,1624,4.906]],["title/classes/UpdateNewsParams.html",[0,0.049,1044,3.119]],["body/classes/UpdateNewsParams.html",[0,0.087,2,1.191,3,0.235,4,0.194,5,0.141,10,0.464,11,1.287,15,3.202,16,0.513,22,1.01,25,0.01,27,1.084,32,1.155,39,0.507,43,0.221,55,0.006,56,0.007,57,0.006,61,2.848,171,1.799,211,2.135,243,2.533,343,3.006,345,3.618,347,3.686,425,4.029,426,3.354,428,3.757,430,4.772,432,5.521,433,4.096,434,5.521,435,5.118,449,2.738,450,6.061,451,6.068,452,3.383,744,4.527,780,4.795,1044,4.795,1101,5.917,1105,7.008,1625,7.008,1626,6.882,1627,6.882,1628,5.118,1629,4.795,1630,6.061,1631,6.882,1632,5.418,1633,5.418,1634,5.418]],["title/interfaces/User.html",[84,0.668,168,1.438]],["body/interfaces/User.html",[0,0.051,3,0.203,4,0.167,5,0.122,10,0.4,11,1.011,16,0.478,25,0.01,32,1.138,39,0.577,41,1.08,43,0.191,55,0.005,56,0.007,57,0.005,73,2.356,80,1.772,81,1.053,84,0.697,86,1.502,145,2.782,151,1.72,154,3.054,161,3.303,162,2.586,163,3.314,164,3.412,165,3.669,168,2.722,172,3.412,173,3.054,174,2.919,185,1.502,187,3.257,188,2.452,191,3.451,201,2.782,206,2.509,208,3.208,210,3.513,217,1.542,219,2.782,349,1.822,372,3.929,462,4.111,463,2.278,489,2.059,534,3.75,535,3.476,537,3.75,540,3.75,542,4.009,544,4.117,548,4.117,550,4.117,554,5.014,555,4.117,556,3.75,557,5.505,558,3.75,559,5.505,560,5.505,561,4.117,562,4.117,563,3.102,564,4.117,565,5.505,566,5.505,567,5.505,568,4.117,569,3.075,570,4.117,571,4.117,572,2.2,573,4.117,574,2.552,575,4.648,576,3.75,577,4.117,578,4.117,579,3.476]],["title/classes/UserInfo.html",[0,0.049,320,2.262]],["body/classes/UserInfo.html",[0,0.061,2,1.232,3,0.243,4,0.201,5,0.146,8,1.936,10,0.48,11,1.137,16,0.583,19,1.85,22,1.108,24,1.232,25,0.01,26,0.77,27,0.883,30,3.31,32,1.248,39,0.518,43,0.229,45,2.551,55,0.006,56,0.008,57,0.006,171,1.507,185,1.801,206,3.332,208,3.001,209,1.751,210,2.393,211,2.275,212,2.639,214,2.639,216,3.332,217,1.85,218,2.186,254,2.732,255,2.732,320,3.553,328,3.337,334,3.907,335,4.003,336,4.391,337,4.169,338,2.942,792,3.501,1635,7.096,1636,7.096,1637,7.096,1638,7.032,1639,5.606,1640,5.606,1641,5.606,1642,5.606]],["title/classes/UserInfoMapper.html",[0,0.049,1125,3.329]],["body/classes/UserInfoMapper.html",[0,0.068,2,1.362,3,0.269,4,0.222,5,0.161,10,0.531,16,0.42,17,1.957,22,0.827,24,1.362,25,0.01,26,0.851,27,0.976,37,1.582,39,0.551,43,0.253,55,0.007,56,0.008,57,0.007,73,1.706,80,1.362,81,1.396,171,1.328,320,4.314,352,3.655,426,3.644,1112,5.561,1122,4.608,1125,5.561,1126,4.608,1228,5.812,1409,4.971,1411,5.458,1643,6.587,1644,7.478,1645,6.196,1646,6.196,1647,6.196,1648,6.196,1649,6.196]],["title/classes/UserInfoResponse.html",[0,0.049,1228,3.119]],["body/classes/UserInfoResponse.html",[0,0.064,2,1.294,3,0.255,4,0.211,5,0.153,10,0.504,11,1.172,16,0.533,22,1.049,25,0.01,26,1.126,32,1.244,39,0.433,43,0.24,55,0.006,56,0.008,57,0.006,61,2.934,168,2.754,171,1.553,209,2.095,211,2.217,438,5.051,439,5.051,448,4.879,449,2.974,455,3.676,1224,5.815,1228,5.051,1243,4.723,1416,4.723,1417,5.185,1418,5.185,1636,6.918,1637,6.918,1650,7.219,1651,4.768,1652,6.384,1653,5.887]],["title/classes/ValidationErrorDetailResponse.html",[0,0.049,68,3.329]],["body/classes/ValidationErrorDetailResponse.html",[0,0.072,2,1.443,3,0.285,4,0.235,5,0.171,12,3.201,16,0.446,19,2.167,22,0.877,24,1.443,25,0.009,26,0.902,27,1.034,32,1.276,43,0.268,44,5.786,49,3.305,55,0.007,56,0.008,57,0.007,65,4.013,68,5.758,1654,6.82,1655,5.786,1656,6.568,1657,6.568,1658,6.212]],["title/modules/ValidationModule.html",[108,1.232,287,3.119]],["body/modules/ValidationModule.html",[0,0.072,3,0.286,4,0.236,5,0.171,25,0.01,39,0.607,41,1.521,43,0.269,55,0.007,56,0.008,57,0.007,108,2.134,110,2.493,115,2.724,287,5.402,301,6.829,469,3.918,480,3.454,519,5.281,736,5.765,1659,6.583,1660,6.583,1661,6.583]],["title/changelog.html",[1662,2.794,1663,2.618,1664,3.309]],["body/changelog.html",[0,0.024,2,0.886,3,0.028,4,0.023,5,0.116,10,0.056,13,1.138,14,0.358,22,0.29,25,0.003,26,0.237,27,0.272,29,0.523,37,0.441,39,0.127,47,2.518,48,1.852,49,2.361,51,1.204,52,0.344,53,0.766,55,0.001,56,0.003,57,0.002,65,1.966,80,0.144,81,1.247,84,0.098,103,0.62,108,0.475,111,0.54,116,0.298,121,0.644,122,0.54,149,0.842,154,0.256,165,1.474,167,0.358,168,2.225,170,0.298,172,0.67,173,0.673,174,0.41,177,0.488,180,1.185,181,1.284,189,0.373,191,0.289,201,0.39,209,0.54,221,0.488,226,0.41,227,2.35,230,0.526,233,2.07,234,1.641,236,2.831,238,0.855,239,0.807,243,1.075,247,0.743,248,0.439,259,0.358,260,0.457,261,0.698,262,1.738,263,0.807,264,0.289,289,0.41,293,0.526,295,2.519,297,2.321,308,1.172,311,2.624,313,0.431,326,1.292,329,1.355,345,0.761,346,0.906,349,2.568,365,0.431,366,1.916,372,0.32,374,0.943,381,0.41,397,1.401,399,0.331,409,0.786,410,0.577,413,0.558,415,0.344,427,1.284,428,0.67,433,1.738,440,0.766,445,1.236,462,3.172,463,2.073,464,0.766,465,1.532,475,0.488,476,2.003,480,0.906,488,0.431,496,0.331,506,4.633,514,0.983,515,0.32,525,1.204,527,0.526,529,1.292,530,0.523,531,0.698,532,0.431,558,0.984,563,3.202,572,1.207,574,0.67,589,0.373,590,0.344,591,1.72,592,2.1,594,1.921,598,1.374,602,0.956,606,0.39,610,0.344,612,0.41,614,0.526,616,2.203,630,0.457,636,0.526,639,1.236,640,0.431,644,0.488,665,0.526,666,0.912,668,0.431,670,0.457,672,0.766,683,0.457,687,0.984,697,1.428,699,0.855,704,2.07,718,0.488,719,1.284,728,0.526,740,1.738,742,0.526,743,1.741,744,1.688,747,2.131,748,1.136,749,2.831,751,1.898,760,2.342,762,2.296,765,0.526,766,1.079,768,1.908,769,0.373,777,3.172,778,1.512,780,0.457,790,1.788,791,2.624,792,4.355,793,0.912,794,0.855,796,0.488,804,1.204,810,1.136,834,0.41,836,1.532,837,0.431,838,3.043,840,0.41,848,0.488,852,0.526,862,1.284,864,2.599,866,1.512,879,0.766,886,1.521,892,5.322,894,0.488,897,1.079,899,4.565,903,0.578,906,1.928,924,1.521,931,1.386,932,2.257,933,0.41,934,0.73,935,0.526,941,0.855,948,0.431,957,0.766,964,0.431,970,0.457,972,0.488,975,0.698,982,0.984,983,1.512,984,2.257,985,0.457,986,1.284,1017,1.788,1020,2.034,1031,0.73,1039,1.028,1041,1.079,1048,2.572,1079,0.488,1091,0.526,1097,2.572,1177,0.431,1178,0.807,1179,4.093,1183,0.807,1204,0.457,1232,1.284,1249,2.409,1274,1.136,1277,0.807,1284,1.136,1313,0.457,1342,0.943,1350,0.578,1351,2.058,1368,4.283,1370,1.058,1371,0.578,1380,0.578,1398,1.185,1434,2.131,1437,0.598,1438,0.807,1444,4.389,1445,1.688,1447,0.984,1451,1.386,1452,0.457,1454,3.043,1455,0.457,1461,1.521,1471,1.521,1482,0.912,1486,0.766,1490,0.807,1521,0.578,1522,1.401,1525,0.488,1527,0.855,1529,2.342,1532,1.136,1536,0.855,1548,0.984,1552,0.807,1553,1.08,1558,0.526,1566,0.578,1567,1.292,1577,0.912,1584,0.526,1585,0.457,1590,0.855,1596,0.855,1597,0.855,1605,0.488,1628,2.171,1629,1.512,1651,1.136,1652,1.521,1658,0.984,1664,2.572,1665,0.656,1666,1.204,1667,0.984,1668,0.578,1669,1.512,1670,0.656,1671,0.656,1672,1.727,1673,0.984,1674,3.473,1675,5.533,1676,7.419,1677,4.12,1678,0.656,1679,7.971,1680,0.656,1681,0.656,1682,0.656,1683,1.08,1684,0.656,1685,0.656,1686,1.727,1687,0.984,1688,0.656,1689,0.39,1690,0.656,1691,1.727,1692,2.023,1693,1.08,1694,4.822,1695,0.656,1696,3.529,1697,3.236,1698,0.656,1699,0.488,1700,2.853,1701,0.526,1702,1.727,1703,0.656,1704,0.578,1705,1.136,1706,0.578,1707,0.578,1708,0.656,1709,7.231,1710,5.76,1711,1.08,1712,0.656,1713,1.08,1714,0.984,1715,6.77,1716,0.656,1717,0.656,1718,2.171,1719,1.727,1720,0.656,1721,0.656,1722,0.656,1723,0.656,1724,0.431,1725,1.823,1726,0.656,1727,2.17,1728,0.656,1729,3.108,1730,0.656,1731,0.578,1732,0.578,1733,0.656,1734,3.748,1735,1.226,1736,6.1,1737,1.521,1738,2.257,1739,1.204,1740,1.521,1741,1.08,1742,0.656,1743,1.386,1744,0.656,1745,2.26,1746,3.927,1747,0.656,1748,4.647,1749,0.656,1750,0.656,1751,0.656,1752,4.033,1753,3.529,1754,0.656,1755,4.822,1756,0.656,1757,0.656,1758,3.239,1759,0.656,1760,2.565,1761,3.34,1762,0.656,1763,0.656,1764,1.741,1765,0.526,1766,0.656,1767,0.578,1768,0.656,1769,1.912,1770,0.656,1771,0.656,1772,1.727,1773,0.656,1774,1.912,1775,0.656,1776,1.908,1777,1.912,1778,0.656,1779,1.727,1780,1.08,1781,1.08,1782,1.226,1783,1.226,1784,1.912,1785,1.226,1786,0.656,1787,0.578,1788,0.656,1789,1.226,1790,3.586,1791,1.226,1792,1.727,1793,1.727,1794,1.226,1795,1.521,1796,1.912,1797,0.656,1798,1.08,1799,0.656,1800,1.226,1801,1.08,1802,0.656,1803,4.984,1804,2.853,1805,2.92,1806,1.226,1807,0.656,1808,1.08,1809,2.26,1810,0.656,1811,2.92,1812,3.239,1813,0.656,1814,0.656,1815,1.226,1816,0.656,1817,0.526,1818,0.578,1819,0.656,1820,0.656,1821,0.656,1822,0.578,1823,0.656,1824,0.656,1825,0.578,1826,2.565,1827,2.26,1828,0.578,1829,0.656,1830,0.656,1831,0.656,1832,0.656,1833,1.727,1834,0.656,1835,0.656,1836,1.08,1837,0.656,1838,1.226,1839,0.656,1840,1.226,1841,0.656,1842,1.521,1843,0.984,1844,0.656,1845,0.656,1846,1.226,1847,1.226,1848,0.656,1849,5.177,1850,1.912,1851,0.656,1852,0.656,1853,1.136,1854,0.656,1855,0.656,1856,2.342,1857,0.656,1858,0.656,1859,2.17,1860,3.792,1861,0.656,1862,3.236,1863,0.656,1864,0.656,1865,1.386,1866,1.08,1867,0.526,1868,0.656,1869,0.656,1870,0.656,1871,2.831,1872,1.226,1873,1.226,1874,1.226,1875,1.08,1876,1.226,1877,0.656,1878,1.521,1879,0.656,1880,0.656,1881,0.656,1882,2.1,1883,0.656,1884,1.226,1885,0.656,1886,0.656,1887,1.08,1888,0.656,1889,0.656,1890,1.521,1891,1.912,1892,0.656,1893,0.656,1894,0.984,1895,0.656,1896,4.647,1897,0.656,1898,0.656,1899,0.656,1900,0.656,1901,4.984,1902,2.92,1903,1.226,1904,0.656,1905,0.656,1906,0.656,1907,0.656,1908,0.656,1909,0.656,1910,1.08,1911,0.656,1912,4.033,1913,0.656,1914,1.727,1915,2.572,1916,0.656,1917,1.521,1918,0.656,1919,0.656,1920,1.08,1921,0.656,1922,0.656,1923,2.565,1924,1.08,1925,0.656,1926,1.727,1927,0.656,1928,0.578,1929,0.656,1930,0.656,1931,1.226,1932,1.741,1933,0.656,1934,0.656,1935,1.08,1936,0.656,1937,0.656,1938,0.578,1939,0.912,1940,1.226,1941,1.908,1942,2.92,1943,0.656,1944,0.656,1945,0.656,1946,0.526,1947,1.226,1948,0.656,1949,1.226,1950,1.741,1951,1.226,1952,0.656,1953,0.656,1954,0.656,1955,0.656,1956,2.565,1957,0.578,1958,0.656,1959,1.226,1960,0.656,1961,0.578,1962,2.17,1963,0.984,1964,0.656,1965,1.226,1966,1.727,1967,1.921,1968,0.656,1969,0.656,1970,0.457,1971,0.656,1972,0.656,1973,1.226,1974,0.656,1975,1.602,1976,0.526,1977,0.656,1978,1.521,1979,0.656,1980,0.656,1981,1.727,1982,0.656,1983,0.656,1984,1.226,1985,1.727,1986,0.656,1987,0.656,1988,0.656,1989,0.656,1990,1.226,1991,0.656,1992,1.727,1993,1.08,1994,1.912,1995,0.656,1996,0.526,1997,0.656,1998,1.204,1999,1.226,2000,1.614,2001,0.656,2002,0.656,2003,0.656,2004,0.656,2005,1.727,2006,1.741,2007,0.656,2008,0.578,2009,0.656,2010,1.727,2011,2.572,2012,0.656,2013,0.656,2014,0.656,2015,1.727,2016,0.656,2017,0.656,2018,0.656,2019,1.226,2020,0.656,2021,1.521,2022,1.226,2023,0.656,2024,0.656,2025,0.656,2026,0.656,2027,0.656,2028,0.912,2029,0.488,2030,0.912,2031,0.488,2032,0.656,2033,0.656,2034,0.578,2035,1.08,2036,0.656,2037,0.656,2038,0.656,2039,4.822,2040,0.656,2041,1.727,2042,0.656,2043,0.656,2044,0.656,2045,2.17,2046,0.656,2047,1.226,2048,1.226,2049,0.656,2050,0.656,2051,0.656,2052,1.226,2053,0.656,2054,0.656,2055,0.656,2056,0.578,2057,0.578,2058,0.656,2059,0.656,2060,0.578,2061,0.656,2062,1.226,2063,0.578,2064,0.656,2065,0.656,2066,0.656,2067,0.656,2068,0.656,2069,0.656,2070,0.656,2071,0.656,2072,0.578,2073,0.656,2074,0.656,2075,0.656,2076,0.656,2077,0.656,2078,0.656,2079,1.226,2080,0.656,2081,0.656,2082,1.727,2083,0.578,2084,1.226,2085,0.656,2086,1.428,2087,0.656,2088,1.226,2089,0.578,2090,0.656,2091,0.578,2092,0.656,2093,1.226,2094,0.656,2095,0.656,2096,0.656,2097,2.565,2098,0.656,2099,0.656,2100,0.526,2101,0.656,2102,0.656,2103,0.578,2104,0.656,2105,0.656,2106,0.656,2107,0.656,2108,0.656,2109,0.488,2110,0.656,2111,1.727,2112,0.656,2113,0.488,2114,0.656,2115,0.656,2116,0.656,2117,0.656,2118,0.983,2119,0.766,2120,1.727,2121,1.226,2122,0.656,2123,1.727,2124,0.656,2125,1.912,2126,0.656,2127,0.656,2128,0.656,2129,0.656,2130,0.656,2131,2.92,2132,0.656,2133,1.226,2134,0.656,2135,0.656,2136,1.226,2137,0.526,2138,1.226,2139,0.578,2140,1.386,2141,0.656,2142,0.656,2143,0.526,2144,0.656,2145,7.799,2146,2.853,2147,0.656,2148,0.656,2149,0.526,2150,0.656,2151,0.656,2152,0.656,2153,0.656,2154,0.656,2155,2.92,2156,0.656,2157,1.284,2158,0.656,2159,0.656,2160,0.656,2161,0.656,2162,0.656,2163,2.17,2164,2.17,2165,2.26,2166,1.512,2167,1.521,2168,2.565,2169,1.226,2170,1.226,2171,3.108,2172,1.614,2173,3.239,2174,1.08,2175,1.226,2176,1.204,2177,1.226,2178,0.984,2179,0.984,2180,1.226,2181,0.656,2182,0.656,2183,2.853,2184,0.526,2185,0.431,2186,2.565,2187,0.984,2188,0.656,2189,0.526,2190,0.457,2191,0.488,2192,0.656,2193,0.656,2194,0.578,2195,1.08,2196,0.656,2197,1.226,2198,0.656,2199,0.656,2200,1.08,2201,0.656,2202,0.656,2203,1.226,2204,0.656,2205,0.656,2206,1.226,2207,0.656,2208,0.656,2209,0.656,2210,0.578,2211,1.512,2212,0.656,2213,0.656,2214,1.08,2215,0.488,2216,0.656,2217,1.727,2218,2.058,2219,0.656,2220,0.578,2221,1.226,2222,0.656,2223,0.656,2224,0.578,2225,0.656,2226,3.34,2227,1.226,2228,0.656,2229,0.656,2230,0.656,2231,0.656,2232,0.656,2233,1.08,2234,1.08,2235,2.17,2236,1.741,2237,0.656,2238,1.727,2239,0.656,2240,0.656,2241,1.386,2242,0.656,2243,0.656,2244,0.656,2245,1.226,2246,1.727,2247,0.526,2248,0.656,2249,0.656,2250,0.656,2251,0.656,2252,1.226,2253,0.656,2254,0.984,2255,0.578,2256,1.226,2257,0.656,2258,0.578,2259,0.656,2260,0.656,2261,0.656,2262,1.226,2263,0.656,2264,1.226,2265,0.656,2266,0.656,2267,0.656,2268,0.656,2269,0.656,2270,1.688,2271,1.727,2272,1.727,2273,1.614,2274,0.457,2275,2.058,2276,0.656,2277,1.727,2278,1.226,2279,0.656,2280,0.656,2281,0.578,2282,0.488,2283,1.226,2284,1.204,2285,1.727,2286,1.08,2287,0.656,2288,0.656,2289,0.578,2290,0.656,2291,0.656,2292,0.656,2293,1.788,2294,0.656,2295,0.656,2296,0.656,2297,0.656,2298,0.912,2299,0.656,2300,0.656,2301,0.656,2302,0.656,2303,0.656,2304,0.656,2305,1.226,2306,0.578,2307,0.526,2308,0.578,2309,0.656,2310,0.578,2311,0.656,2312,0.526,2313,1.08,2314,0.656,2315,1.386,2316,0.656,2317,0.656,2318,0.656,2319,1.226,2320,0.656,2321,0.656,2322,0.656,2323,0.656,2324,0.656,2325,0.984,2326,0.656,2327,0.656,2328,0.656,2329,0.656,2330,0.656,2331,2.17,2332,0.578,2333,0.656,2334,1.226,2335,0.656,2336,0.656,2337,1.226,2338,1.226,2339,1.226,2340,1.727,2341,1.727,2342,1.912,2343,1.226,2344,1.386,2345,0.984,2346,0.578,2347,0.457,2348,0.656,2349,0.526,2350,0.578,2351,0.656,2352,0.855,2353,0.656,2354,1.521,2355,0.656,2356,0.656,2357,0.656,2358,0.656,2359,1.788,2360,0.578,2361,0.656,2362,1.226,2363,0.984,2364,1.727,2365,1.08,2366,0.656,2367,0.656,2368,0.656,2369,1.226,2370,1.386,2371,1.08,2372,1.226,2373,0.656,2374,0.656,2375,0.656,2376,0.656,2377,0.656,2378,0.656,2379,0.656,2380,0.656,2381,0.656,2382,0.578,2383,0.578,2384,0.656,2385,0.656,2386,1.727,2387,0.656,2388,1.226,2389,0.656,2390,1.08,2391,0.656,2392,1.226,2393,0.656,2394,1.226,2395,0.656,2396,0.984,2397,0.656,2398,0.578,2399,0.656,2400,0.656,2401,0.578,2402,1.727,2403,2.17,2404,1.226,2405,0.807,2406,1.08,2407,1.226,2408,1.08,2409,1.226,2410,0.855,2411,0.656,2412,1.226,2413,0.578,2414,0.656,2415,1.226,2416,1.08,2417,0.656,2418,0.578,2419,0.656,2420,0.578,2421,0.656,2422,0.656,2423,1.226,2424,0.656,2425,0.656,2426,2.572,2427,0.984,2428,0.656,2429,3.529,2430,0.656,2431,0.578,2432,0.578,2433,0.656,2434,0.656,2435,0.656,2436,0.656,2437,2.17,2438,0.656,2439,0.656,2440,1.386,2441,0.656,2442,0.656,2443,0.656,2444,0.656,2445,0.578,2446,1.08,2447,0.656,2448,0.656,2449,0.656,2450,0.656,2451,0.984,2452,0.656,2453,0.656,2454,0.656,2455,0.656,2456,0.656,2457,0.656,2458,0.656,2459,0.656,2460,0.656,2461,0.656,2462,0.526,2463,0.656,2464,0.526,2465,0.656,2466,0.656,2467,0.578,2468,0.656,2469,0.488,2470,0.656,2471,0.656,2472,0.578,2473,0.656,2474,0.656,2475,0.656,2476,0.656,2477,0.656,2478,0.656,2479,0.656,2480,1.727,2481,0.526,2482,0.656,2483,0.526,2484,0.656,2485,0.656,2486,0.656,2487,0.656,2488,1.727,2489,0.656,2490,1.226,2491,1.727,2492,1.226,2493,1.226,2494,1.226,2495,1.226,2496,0.656,2497,1.226,2498,0.656,2499,0.656,2500,0.656,2501,0.656,2502,0.656,2503,0.578,2504,0.656,2505,1.226,2506,0.656,2507,0.656,2508,0.488,2509,0.656,2510,0.526,2511,0.656,2512,1.226,2513,0.656,2514,0.578,2515,0.656,2516,0.656,2517,0.656,2518,0.656,2519,0.526,2520,0.656,2521,0.656,2522,1.727,2523,1.727,2524,0.656,2525,1.08,2526,0.656,2527,0.656,2528,0.656,2529,0.656,2530,0.656,2531,0.656,2532,0.656,2533,0.656,2534,0.656,2535,1.226,2536,0.578,2537,0.656,2538,0.578,2539,0.656,2540,0.656,2541,0.656,2542,0.656,2543,0.656,2544,0.656,2545,0.656,2546,0.656,2547,0.656,2548,1.226,2549,1.226,2550,0.656,2551,0.578,2552,0.656,2553,0.656,2554,0.656,2555,1.226,2556,0.656,2557,0.656,2558,1.226,2559,0.656,2560,1.226,2561,0.656,2562,0.656,2563,1.226,2564,0.41,2565,2.17,2566,0.656,2567,0.656,2568,0.656,2569,0.656,2570,0.656,2571,0.912,2572,0.578,2573,0.578,2574,1.226,2575,0.656,2576,0.656,2577,1.226,2578,0.656,2579,0.656,2580,0.656,2581,0.656,2582,0.656,2583,1.226,2584,0.656,2585,0.656,2586,0.656,2587,0.656,2588,0.656,2589,0.656,2590,0.656,2591,1.727,2592,0.656,2593,0.656,2594,0.656,2595,0.656,2596,0.656,2597,0.656,2598,0.656,2599,0.656,2600,1.226,2601,1.226,2602,0.656,2603,0.656,2604,0.656,2605,2.17,2606,4.459,2607,1.226,2608,0.984,2609,1.08,2610,1.226,2611,2.17,2612,1.08,2613,1.226,2614,0.656,2615,1.226,2616,1.08,2617,1.226,2618,1.226,2619,1.226,2620,1.08,2621,1.226,2622,2.17,2623,1.226,2624,2.17,2625,1.226,2626,1.226,2627,1.08,2628,1.08,2629,1.727,2630,1.226,2631,0.656,2632,0.656,2633,1.226,2634,0.912,2635,0.457,2636,1.226,2637,0.656,2638,2.565,2639,1.226,2640,0.656,2641,0.526,2642,0.656,2643,2.17,2644,0.656,2645,0.656,2646,0.656,2647,0.656,2648,0.656,2649,0.457,2650,0.578,2651,0.656,2652,0.656,2653,0.656,2654,1.226,2655,1.226,2656,1.226,2657,0.656,2658,0.656,2659,0.656,2660,0.656,2661,0.656,2662,1.226,2663,1.226,2664,0.656,2665,0.656,2666,0.656,2667,1.226,2668,0.488,2669,0.656,2670,0.656,2671,0.656,2672,1.226,2673,0.656,2674,1.727,2675,1.521,2676,0.656,2677,0.656,2678,0.526,2679,1.226,2680,1.226,2681,0.656,2682,0.488,2683,0.656,2684,0.656,2685,1.727,2686,1.226,2687,1.226,2688,0.526,2689,0.656,2690,1.226,2691,0.656,2692,0.656,2693,0.656,2694,2.17,2695,0.656,2696,0.656,2697,0.656,2698,0.656,2699,0.656,2700,0.656,2701,0.656,2702,1.226,2703,0.656,2704,0.656,2705,0.656,2706,0.578,2707,1.226,2708,0.656,2709,1.226,2710,0.656,2711,0.656,2712,0.526,2713,0.656,2714,1.226,2715,2.17,2716,0.656,2717,0.578,2718,0.656,2719,1.226,2720,1.226,2721,0.656,2722,0.656,2723,0.578,2724,1.226,2725,0.656,2726,0.656,2727,1.226,2728,0.526,2729,0.526,2730,1.226,2731,0.656,2732,0.656,2733,0.656,2734,1.226,2735,1.226,2736,0.656,2737,0.656,2738,1.226,2739,0.656,2740,0.656,2741,0.656,2742,0.656,2743,1.226,2744,0.656,2745,0.656,2746,0.526,2747,0.656,2748,2.17,2749,0.526,2750,0.656,2751,0.656,2752,1.226,2753,0.578,2754,0.488,2755,1.226,2756,0.656,2757,2.565,2758,1.226,2759,0.488,2760,1.226,2761,0.488,2762,0.656,2763,0.656,2764,0.526,2765,0.656,2766,0.656,2767,0.656,2768,0.656,2769,0.656,2770,0.656,2771,0.656,2772,0.656,2773,0.656,2774,0.656,2775,0.656,2776,0.656,2777,1.08,2778,0.656,2779,0.656,2780,0.656,2781,0.656,2782,0.656,2783,0.526,2784,0.656,2785,0.656,2786,0.656,2787,0.578,2788,0.656,2789,0.656,2790,0.656,2791,0.526,2792,0.457,2793,0.656,2794,0.656,2795,0.578,2796,1.727,2797,0.656,2798,0.578,2799,0.578,2800,0.656,2801,0.578,2802,0.656,2803,0.656,2804,0.656,2805,0.656,2806,0.656,2807,2.17,2808,0.656,2809,0.656,2810,0.578,2811,0.656,2812,1.521,2813,0.656,2814,0.656,2815,0.656,2816,0.656,2817,0.578,2818,0.656,2819,1.226,2820,0.656,2821,0.656,2822,0.656,2823,0.526,2824,1.226,2825,0.656,2826,0.656,2827,0.656,2828,0.656,2829,0.656,2830,1.727,2831,1.226,2832,1.226,2833,0.656,2834,0.578,2835,0.656,2836,1.226,2837,0.578,2838,1.727,2839,0.656,2840,0.656,2841,0.656,2842,0.656,2843,0.656,2844,1.226,2845,1.226,2846,1.226,2847,1.226,2848,1.521,2849,1.226,2850,0.656,2851,1.226,2852,0.656,2853,1.226,2854,0.431,2855,0.578,2856,1.727,2857,0.656,2858,0.578,2859,0.656,2860,0.656,2861,0.656,2862,2.565,2863,0.656,2864,0.578,2865,0.656,2866,0.656,2867,0.656,2868,0.578,2869,0.656,2870,1.08,2871,0.656,2872,0.578,2873,0.488,2874,0.656,2875,0.656,2876,0.656,2877,0.656,2878,1.226,2879,0.656,2880,0.656,2881,0.656,2882,0.656,2883,0.578,2884,0.656,2885,0.656,2886,0.526,2887,0.656,2888,0.656,2889,0.488,2890,0.656,2891,0.656,2892,0.656,2893,1.226,2894,0.578,2895,0.578]],["title/coverage.html",[2119,3.791]],["body/coverage.html",[0,0.096,1,1.544,5,0.064,6,2.178,7,2.178,9,1.627,16,0.168,25,0.01,38,1.408,48,1.298,49,2.363,55,0.003,56,0.004,57,0.003,58,1.984,59,2.178,60,2.178,68,1.839,81,0.557,84,1.241,85,1.408,87,4.004,88,1.408,92,1.408,96,1.408,99,1.408,102,1.408,103,1.25,114,1.25,119,1.723,129,2.578,144,1.472,145,1.472,151,2.161,153,2.178,168,0.795,186,1.164,206,0.993,207,3.144,222,1.205,256,2.178,267,1.723,308,0.993,309,2.178,320,1.25,332,1.408,333,2.178,334,3.858,341,1.408,342,3.97,343,0.861,344,1.023,371,1.35,392,1.544,396,1.408,421,1.472,422,1.472,423,1.627,424,3.144,425,3.619,443,3.391,456,2.606,457,1.839,458,3.904,459,3.904,470,1.984,477,1.984,483,1.984,484,2.178,485,2.178,490,1.298,516,1.723,520,2.178,524,1.984,534,3.144,535,2.914,542,1.408,580,1.723,581,2.178,582,2.178,599,1.839,600,2.914,601,2.731,631,1.839,632,3.904,638,1.984,641,5.584,642,5.233,645,1.984,661,1.984,663,1.984,669,1.984,673,1.984,683,4.205,711,1.839,712,1.984,725,1.984,736,1.839,737,2.178,738,2.178,772,1.627,773,3.391,783,1.627,786,1.472,787,3.144,788,3.144,795,1.723,805,2.178,806,2.178,807,1.839,808,2.178,826,1.544,827,2.178,839,1.839,841,1.839,842,2.178,843,2.178,846,3.904,858,2.178,879,1.544,880,2.178,887,2.178,919,1.723,922,1.984,923,2.178,940,1.984,941,2.731,942,1.984,943,1.984,958,1.984,975,5.212,990,1.984,991,2.178,1014,1.839,1015,2.178,1024,1.723,1030,1.723,1032,1.627,1044,1.723,1050,1.723,1053,1.627,1055,1.544,1057,1.839,1060,1.723,1061,1.839,1088,3.144,1089,3.144,1106,1.984,1109,2.178,1123,1.839,1125,1.839,1170,1.544,1184,2.178,1195,1.627,1209,1.723,1223,3.619,1228,1.723,1234,1.723,1239,1.984,1254,3.144,1255,2.178,1271,1.984,1291,2.178,1292,1.984,1367,2.178,1385,2.178,1397,2.178,1398,1.35,1399,1.984,1407,2.178,1408,2.178,1409,3.144,1415,2.178,1416,3.144,1420,1.839,1421,2.178,1434,2.578,1437,1.205,1438,1.627,1453,2.178,1462,2.178,1472,1.839,1473,2.178,1477,1.627,1479,1.723,1480,1.839,1496,2.178,1511,1.627,1515,2.178,1565,2.178,1578,2.178,1592,2.178,1594,2.178,1605,1.839,1625,2.178,1635,2.178,1643,2.178,1650,2.178,1654,2.178,1655,2.178,1718,2.914,1743,1.984,1871,1.984,1917,3.451,1935,2.178,1978,4.286,2086,1.627,2119,1.544,2146,2.178,2440,1.984,2445,2.178,2746,7.12,2896,1.984,2897,6.976,2898,8.862,2899,6.145,2900,6.976,2901,4.286,2902,2.178,2903,1.984,2904,2.178,2905,5.536,2906,5.536,2907,5.536,2908,5.536,2909,6.726,2910,2.178,2911,2.178,2912,4.286,2913,4.286,2914,2.178,2915,2.178,2916,4.866,2917,6.42,2918,2.178,2919,7.94,2920,3.904,2921,1.984,2922,2.178,2923,2.473,2924,2.473,2925,2.473,2926,2.178,2927,2.473,2928,5.536,2929,2.178,2930,3.918,2931,2.473,2932,3.918,2933,4.866,2934,2.473,2935,4.866,2936,2.473,2937,2.473,2938,2.473,2939,3.918,2940,2.473,2941,5.925,2942,2.178,2943,2.178,2944,2.178,2945,2.178,2946,2.473,2947,3.451,2948,3.451,2949,2.178,2950,2.178,2951,2.178,2952,1.984,2953,2.178,2954,2.178,2955,2.178,2956,4.286,2957,2.473]],["title/dependencies.html",[111,2.367,2462,3.014]],["body/dependencies.html",[0,0.059,4,0.136,5,0.141,16,0.258,25,0.01,41,0.878,47,1.731,55,0.004,56,0.006,57,0.004,111,1.675,125,2.828,127,3.35,149,3.077,154,2.113,173,2.684,180,2.076,209,0.947,217,2.084,218,1.483,219,2.264,262,3.759,289,2.375,291,2.375,357,3.566,375,2.264,409,2.467,449,1.922,452,3.944,469,2.264,500,3.051,563,1.675,591,2.641,612,4.298,613,3.051,658,3.35,865,5.562,866,2.65,930,3.35,931,3.051,933,2.375,934,3.226,935,3.051,954,3.051,957,2.375,984,2.65,1039,2.264,1047,2.828,1445,5.235,1482,4.031,1737,3.35,1843,4.348,1875,3.35,1970,2.65,2034,3.35,2035,3.35,2089,3.35,2210,3.35,2233,3.35,2234,3.35,2270,2.502,2281,3.35,2289,3.35,2332,3.35,2347,2.65,2352,3.777,2365,3.35,2370,3.051,2573,3.35,2834,3.35,2872,3.35,2958,5.42,2959,7.784,2960,3.803,2961,3.803,2962,3.803,2963,3.803,2964,3.803,2965,3.803,2966,5.42,2967,5.42,2968,3.803,2969,5.42,2970,3.803,2971,3.803,2972,3.803,2973,3.803,2974,3.803,2975,3.803,2976,3.803,2977,3.803,2978,3.803,2979,3.803,2980,3.803,2981,3.803,2982,3.803,2983,3.051,2984,3.803,2985,3.803,2986,6.315,2987,3.803,2988,3.803,2989,3.803,2990,3.803,2991,3.803,2992,3.803,2993,5.42,2994,3.803,2995,3.803,2996,5.42,2997,3.803,2998,3.803,2999,7.276,3000,3.803,3001,3.803,3002,3.803,3003,3.803,3004,3.803,3005,3.803,3006,3.803,3007,3.803,3008,3.803,3009,3.803,3010,5.42,3011,3.803,3012,2.828,3013,3.803,3014,3.803,3015,5.42,3016,3.803,3017,5.42,3018,5.42,3019,3.803,3020,3.803,3021,3.803,3022,3.051,3023,3.803,3024,3.803,3025,3.803,3026,3.803,3027,3.803,3028,5.42,3029,3.803,3030,3.803,3031,3.803,3032,3.803,3033,3.803,3034,3.803,3035,3.803,3036,3.803,3037,3.803,3038,3.803,3039,3.803,3040,3.803,3041,3.803,3042,3.803,3043,3.35,3044,3.803,3045,3.803,3046,5.42,3047,4.774,3048,3.803,3049,3.803,3050,3.803,3051,3.803,3052,3.35,3053,3.803,3054,5.42,3055,3.803,3056,3.803,3057,3.803,3058,3.803,3059,3.803,3060,3.803,3061,3.803,3062,3.803,3063,3.803,3064,3.803,3065,3.803,3066,3.803,3067,5.42,3068,3.803,3069,3.803,3070,3.803,3071,3.803,3072,3.803,3073,5.42,3074,3.803,3075,3.35,3076,3.051,3077,3.803,3078,3.803,3079,3.803,3080,3.803,3081,3.803,3082,3.803,3083,3.803,3084,3.803,3085,3.803,3086,3.803,3087,3.803,3088,3.803,3089,3.803,3090,3.803,3091,3.803,3092,3.803,3093,3.803,3094,3.803,3095,3.051,3096,3.803,3097,3.803,3098,3.803,3099,3.803,3100,3.803,3101,3.803,3102,3.803,3103,3.803,3104,3.803,3105,3.803,3106,3.803,3107,3.803,3108,3.803]],["title/miscellaneous/functions.html",[3109,2.471,3110,3.744]],["body/miscellaneous/functions.html",[10,0.527,16,0.417,24,1.759,25,0.009,26,1.099,27,1.261,32,1.081,37,2.043,38,4.237,49,3.416,55,0.007,56,0.008,57,0.007,114,4.044,248,2.2,399,3.106,574,3.356,607,4.044,641,4.571,642,5.797,684,4.931,686,4.931,691,4.931,711,5.534,752,4.044,785,3.499,975,3.499,1106,6.422,1274,4.044,2795,5.414,2910,6.555,2911,6.555,2918,5.414,2950,5.414,2951,6.555,3109,4.044,3110,4.283,3111,6.147,3112,7.05,3113,6.147,3114,4.931,3115,6.147,3116,6.147]],["title/index.html",[10,0.322,1662,2.794,1663,2.618]],["body/index.html",[5,0.157,13,2.679,14,2.433,15,1.737,17,1.166,25,0.008,26,0.831,29,3.146,52,3.606,53,2.783,55,0.005,56,0.006,57,0.005,61,1.595,64,2.931,81,1.004,149,2.172,209,1.109,226,4.604,227,3.874,231,3.446,233,3.304,234,1.64,247,1.291,262,2.653,264,1.963,308,1.789,415,2.338,428,2.433,433,2.653,463,3.757,476,2.848,515,2.949,532,2.931,563,1.963,591,2.949,592,2.653,602,1.963,616,2.783,640,2.931,697,2.931,704,4.44,740,4.091,759,3.314,762,2.537,769,3.446,836,2.338,840,2.783,899,3.446,932,3.105,933,2.783,934,3.603,957,2.783,961,3.575,1039,2.653,1342,2.433,1377,3.925,1482,3.314,1535,3.105,1598,2.931,1651,2.931,1666,3.105,1667,5.514,1669,4.217,1679,3.925,1689,2.653,1724,4.85,1725,5.387,1740,3.925,1741,3.925,1790,4.501,1882,4.091,1890,3.925,1928,7.163,1932,3.575,1941,3.314,1967,2.931,2060,3.925,2086,3.981,2118,2.537,2119,2.783,2137,4.856,2166,3.105,2215,3.314,2274,3.105,2310,6.053,2312,4.856,2315,3.575,2350,3.925,2538,3.925,2572,3.925,2634,4.501,2635,3.105,2678,3.575,2791,3.575,2792,3.105,2868,3.925,2889,3.314,2899,3.925,3095,3.575,3117,3.314,3118,6.052,3119,6.378,3120,4.456,3121,3.925,3122,4.456,3123,3.105,3124,3.105,3125,3.925,3126,3.105,3127,4.456,3128,4.456,3129,3.105,3130,3.105,3131,4.456,3132,3.925,3133,3.981,3134,3.925,3135,4.456,3136,3.575,3137,4.456,3138,6.053,3139,5.482,3140,3.779,3141,3.925,3142,6.052,3143,6.052,3144,7.708,3145,7.372,3146,4.456,3147,4.456,3148,6.052,3149,3.925,3150,4.456,3151,3.925,3152,6.052,3153,4.456,3154,3.925,3155,6.052,3156,6.052,3157,3.105,3158,3.925,3159,4.456,3160,4.456,3161,4.456,3162,4.456,3163,4.456,3164,4.456,3165,4.456,3166,3.575,3167,4.456,3168,3.314,3169,3.575,3170,4.456,3171,3.925,3172,4.456,3173,3.575,3174,3.575,3175,4.501,3176,4.456,3177,4.456,3178,3.925,3179,4.456,3180,3.925]],["title/license.html",[1662,2.794,1663,2.618,3181,3.309]],["body/license.html",[0,0.01,4,0.286,5,0.043,13,2.948,17,0.238,22,0.121,25,0.002,29,0.707,39,0.067,52,1.479,53,0.567,55,0.002,56,0.002,57,0.002,64,1.09,80,0.2,81,0.978,84,0.601,86,0.734,97,0.541,103,0.459,104,2.19,122,0.4,165,2.214,167,1.539,168,1.864,170,1.283,171,0.355,177,1.232,182,2.012,183,3.42,216,0.365,221,2.996,234,2.399,239,5.651,243,0.334,259,0.496,261,0.943,264,0.4,291,0.567,296,0.675,345,0.4,349,0.354,363,0.598,366,2.458,367,0.567,411,0.413,412,0.4,428,1.247,433,1.678,435,0.675,445,0.517,464,4.486,465,2.277,476,2.395,480,1.93,489,0.4,496,0.459,525,0.633,529,1.678,530,2.41,532,2.855,563,0.73,588,1.427,592,2.19,598,1.327,602,0.73,610,0.477,612,1.035,653,0.598,672,1.035,718,1.232,744,0.598,747,0.598,751,1.075,755,0.675,760,2.261,762,0.943,763,1.155,766,1.76,769,0.943,792,3.178,828,1.09,832,3.688,891,0.633,896,0.541,899,1.301,900,0.675,948,0.598,966,0.598,967,2.808,969,0.729,970,2.563,972,1.699,984,1.964,986,3.936,1041,1.035,1047,0.675,1080,0.729,1091,4.246,1099,1.964,1178,0.598,1204,0.633,1274,2.157,1313,0.633,1342,2.008,1351,0.729,1368,1.699,1398,3.558,1444,1.678,1447,0.729,1452,0.633,1484,2.012,1486,1.427,1522,2.889,1532,1.854,1536,1.155,1548,1.329,1577,0.675,1584,0.729,1585,2.808,1587,0.675,1588,4.073,1589,2.888,1597,1.592,1598,1.854,1630,4.067,1651,0.598,1668,0.8,1669,1.592,1674,1.964,1676,1.46,1687,1.329,1689,3.029,1692,1.76,1693,1.46,1699,0.675,1705,0.598,1714,0.729,1718,1.232,1725,2.516,1729,1.46,1731,2.888,1734,1.46,1739,0.633,1765,0.729,1780,1.46,1790,0.675,1796,0.8,1817,0.729,1822,0.8,1843,1.329,1853,0.598,1871,0.729,1878,0.8,1882,2.19,1891,0.8,1894,0.729,1910,0.8,1932,5.966,1939,2.438,1941,1.232,1950,0.729,1961,1.46,1963,0.729,1976,1.329,1996,2.63,1998,0.633,2006,0.729,2008,0.8,2011,0.8,2029,0.675,2030,2.438,2056,0.8,2091,0.8,2109,0.675,2119,1.035,2139,1.46,2143,1.329,2149,0.729,2166,0.633,2172,2.996,2179,2.261,2187,0.729,2189,5.808,2190,3.39,2191,1.699,2194,6.039,2211,2.284,2215,1.232,2255,0.8,2270,1.503,2273,3.227,2284,4.667,2293,3.024,2298,0.675,2307,0.729,2325,0.729,2342,0.8,2344,1.329,2345,1.329,2349,3.482,2382,0.8,2405,1.854,2406,0.8,2408,0.8,2440,0.729,2446,0.8,2451,0.729,2469,1.232,2472,0.8,2483,0.729,2508,1.232,2564,2.297,2608,1.329,2634,2.096,2635,1.592,2641,1.329,2649,1.964,2678,1.329,2682,1.699,2717,1.46,2728,0.729,2754,1.699,2761,0.675,2764,2.951,2783,4.083,2792,0.633,2798,5.352,2799,1.46,2801,1.46,2810,0.8,2848,0.8,2855,1.46,2858,0.8,2873,3.785,2883,2.012,2926,0.8,3022,0.729,3119,0.729,3126,2.284,3129,1.964,3130,0.633,3133,0.598,3134,2.483,3136,1.833,3140,0.567,3154,0.8,3157,1.592,3175,1.699,3181,7.618,3182,6.076,3183,5.944,3184,0.908,3185,2.285,3186,7.124,3187,3.278,3188,4.769,3189,5.041,3190,3.278,3191,0.908,3192,0.908,3193,1.657,3194,2.285,3195,2.285,3196,5.292,3197,0.908,3198,0.908,3199,1.46,3200,3.278,3201,3.233,3202,1.657,3203,1.657,3204,4.973,3205,4.34,3206,0.908,3207,0.908,3208,3.678,3209,1.46,3210,0.8,3211,0.8,3212,4.482,3213,7.74,3214,2.285,3215,2.012,3216,0.908,3217,0.908,3218,2.819,3219,4.617,3220,0.908,3221,4.617,3222,1.232,3223,0.908,3224,2.819,3225,0.675,3226,2.819,3227,0.729,3228,5.11,3229,0.8,3230,0.8,3231,4.865,3232,5.089,3233,3.278,3234,5.292,3235,0.908,3236,1.657,3237,0.908,3238,0.908,3239,2.012,3240,0.908,3241,0.908,3242,0.908,3243,0.908,3244,0.908,3245,0.908,3246,2.819,3247,0.908,3248,2.285,3249,0.908,3250,0.908,3251,5.064,3252,1.699,3253,0.908,3254,0.908,3255,1.833,3256,2.285,3257,0.908,3258,0.675,3259,1.657,3260,1.657,3261,2.285,3262,6.846,3263,0.908,3264,3.278,3265,3.278,3266,3.678,3267,2.285,3268,4.694,3269,1.657,3270,0.908,3271,0.908,3272,0.908,3273,2.285,3274,0.908,3275,0.908,3276,1.657,3277,0.908,3278,1.657,3279,0.908,3280,3.39,3281,0.908,3282,2.819,3283,0.8,3284,1.657,3285,7.707,3286,2.285,3287,4.617,3288,2.483,3289,1.232,3290,0.908,3291,1.657,3292,2.285,3293,4.617,3294,4.865,3295,0.908,3296,2.819,3297,1.657,3298,2.819,3299,2.483,3300,0.908,3301,2.285,3302,6.929,3303,1.46,3304,0.908,3305,4.34,3306,0.908,3307,2.012,3308,2.42,3309,0.908,3310,5.801,3311,2.012,3312,1.657,3313,3.549,3314,5.089,3315,3.678,3316,0.908,3317,1.657,3318,4.029,3319,0.908,3320,5.477,3321,1.657,3322,0.908,3323,0.908,3324,0.908,3325,2.285,3326,0.908,3327,0.908,3328,0.908,3329,0.729,3330,2.285,3331,2.483,3332,0.908,3333,0.908,3334,0.908,3335,1.46,3336,4.865,3337,0.8,3338,0.729,3339,2.012,3340,2.285,3341,1.699,3342,2.285,3343,0.908,3344,2.888,3345,3.24,3346,0.8,3347,1.09,3348,2.012,3349,0.908,3350,0.908,3351,0.908,3352,0.908,3353,1.46,3354,0.908,3355,6.164,3356,1.46,3357,2.012,3358,0.633,3359,1.657,3360,2.819,3361,0.8,3362,0.908,3363,1.657,3364,2.63,3365,0.908,3366,0.908,3367,0.908,3368,1.657,3369,0.908,3370,1.329,3371,0.908,3372,2.63,3373,0.908,3374,0.729,3375,4.029,3376,2.261,3377,0.908,3378,2.888,3379,0.908,3380,1.657,3381,0.908,3382,0.908,3383,0.908,3384,0.908,3385,0.908,3386,2.285,3387,0.908,3388,1.657,3389,1.657,3390,1.657,3391,0.908,3392,5.477,3393,1.46,3394,0.908,3395,0.908,3396,0.8,3397,0.908,3398,0.633,3399,0.908,3400,0.908,3401,2.285,3402,0.8,3403,0.908,3404,5.11,3405,0.675,3406,0.908,3407,0.908,3408,3.278,3409,3.24,3410,0.908,3411,0.908,3412,2.285,3413,0.908,3414,0.908,3415,2.819,3416,0.908,3417,0.908,3418,0.908,3419,0.908,3420,0.908,3421,0.908,3422,1.657,3423,0.908,3424,2.285,3425,0.908,3426,0.908,3427,1.657,3428,0.908,3429,0.908,3430,0.908,3431,0.908,3432,0.908,3433,1.657,3434,1.155,3435,4.067,3436,0.908,3437,3.678,3438,0.908,3439,0.908,3440,1.46,3441,2.285,3442,2.819,3443,2.819,3444,2.819,3445,0.908,3446,2.888,3447,2.888,3448,0.908,3449,2.285,3450,0.908,3451,1.657,3452,0.908,3453,1.46,3454,3.278,3455,1.657,3456,2.819,3457,2.819,3458,0.908,3459,2.285,3460,3.278,3461,0.908,3462,0.908,3463,3.233,3464,2.285,3465,2.285,3466,1.657,3467,0.633,3468,0.908,3469,0.8,3470,0.908,3471,0.908,3472,2.012,3473,0.908,3474,0.908,3475,0.908,3476,0.908,3477,0.908,3478,2.285,3479,0.908,3480,0.8,3481,2.012,3482,1.657,3483,3.678,3484,5.741,3485,2.285,3486,1.657,3487,1.657,3488,1.657,3489,0.8,3490,0.908,3491,0.908,3492,0.908,3493,3.24,3494,1.657,3495,0.908,3496,0.908,3497,0.908,3498,0.908,3499,1.657,3500,0.908,3501,1.657,3502,0.908,3503,0.908,3504,3.024,3505,0.908,3506,4.482,3507,0.908,3508,0.908,3509,0.908,3510,0.908,3511,1.657,3512,0.908,3513,2.819,3514,1.657,3515,0.8,3516,0.908,3517,0.908,3518,0.908,3519,0.908,3520,1.657,3521,0.908,3522,0.908,3523,0.729,3524,2.483,3525,0.908,3526,1.657,3527,0.908,3528,0.908,3529,2.012,3530,0.908,3531,0.908,3532,0.908,3533,0.908,3534,2.819,3535,0.908,3536,0.908,3537,0.908,3538,0.8,3539,0.8,3540,0.8,3541,0.908,3542,0.908,3543,0.908,3544,3.278,3545,0.908,3546,0.908,3547,2.819,3548,0.908,3549,0.8,3550,0.908,3551,0.908,3552,0.908,3553,0.908,3554,0.908,3555,2.819,3556,0.908,3557,0.908,3558,2.285,3559,0.908,3560,0.729,3561,2.285,3562,0.908,3563,0.908,3564,0.908,3565,0.908,3566,0.908,3567,0.908,3568,0.908,3569,0.8,3570,1.46,3571,0.908,3572,0.633,3573,1.657,3574,0.8,3575,0.908,3576,2.819,3577,0.908,3578,0.908,3579,1.657,3580,2.285,3581,2.285,3582,0.729,3583,1.657,3584,0.908,3585,2.285,3586,4.029,3587,0.908,3588,0.908,3589,1.657,3590,0.908,3591,0.908,3592,0.908,3593,0.908,3594,2.819,3595,2.285,3596,0.908,3597,3.278,3598,0.908,3599,0.908,3600,0.908,3601,0.908,3602,0.8,3603,0.908,3604,1.657,3605,1.657,3606,1.46,3607,2.285,3608,0.8,3609,0.908,3610,1.329,3611,2.285,3612,0.908,3613,1.46,3614,0.908,3615,1.657,3616,0.908,3617,0.908,3618,1.657,3619,6.697,3620,2.285,3621,0.908,3622,3.278,3623,4.865,3624,2.285,3625,0.908,3626,0.8,3627,0.908,3628,0.908,3629,2.819,3630,0.908,3631,2.285,3632,0.908,3633,0.908,3634,0.908,3635,0.908,3636,0.908,3637,0.908,3638,0.908,3639,2.819,3640,1.657,3641,0.908,3642,0.908,3643,2.285,3644,0.908,3645,1.657,3646,2.285,3647,1.657,3648,0.908,3649,0.908,3650,0.908,3651,1.657,3652,2.285,3653,0.8,3654,0.908,3655,0.908,3656,1.657,3657,0.908,3658,0.8,3659,0.908,3660,0.908,3661,0.908,3662,0.908,3663,2.285,3664,1.657,3665,0.8,3666,0.908,3667,0.908,3668,2.819,3669,0.908,3670,2.285,3671,0.908,3672,0.908,3673,1.657,3674,0.908,3675,0.908,3676,0.908,3677,2.285,3678,1.657,3679,1.657,3680,0.908,3681,1.657,3682,4.029,3683,1.46,3684,2.285,3685,2.819,3686,0.8,3687,0.908,3688,1.657,3689,0.908,3690,2.285,3691,0.908,3692,0.908,3693,0.908,3694,0.908,3695,0.908,3696,0.908,3697,2.285,3698,1.657,3699,0.908,3700,1.657,3701,0.8,3702,0.908,3703,0.908,3704,1.657,3705,1.657,3706,0.908,3707,1.46,3708,0.908,3709,0.908,3710,0.729,3711,0.908,3712,2.285,3713,0.908,3714,0.908,3715,0.908,3716,0.908,3717,1.657,3718,2.285,3719,0.908,3720,0.908,3721,0.908,3722,0.908,3723,0.729,3724,1.657,3725,0.908,3726,0.908,3727,0.908,3728,0.908,3729,0.908,3730,0.908,3731,0.908,3732,0.908,3733,0.675,3734,0.908,3735,0.908,3736,0.908,3737,2.819,3738,0.908,3739,0.908,3740,1.657,3741,0.908,3742,0.908,3743,0.908,3744,0.908,3745,0.908,3746,0.908,3747,0.908,3748,0.729,3749,0.908,3750,0.908,3751,0.908,3752,0.8,3753,1.657,3754,0.908,3755,0.908,3756,0.908,3757,0.908,3758,0.8,3759,1.657,3760,0.908,3761,0.908,3762,0.8,3763,0.8,3764,0.598,3765,0.908,3766,1.657,3767,1.657,3768,2.63,3769,0.908,3770,0.908,3771,0.8,3772,0.908,3773,0.908,3774,2.285,3775,1.329,3776,0.908,3777,1.657,3778,1.657,3779,1.657,3780,0.908,3781,0.8,3782,0.8,3783,0.908,3784,0.8,3785,0.908,3786,0.908,3787,1.657,3788,0.908,3789,2.285,3790,0.908,3791,0.908,3792,0.908,3793,0.908,3794,0.908,3795,0.908,3796,0.908,3797,0.908,3798,0.908,3799,0.908,3800,0.8,3801,0.908,3802,0.729,3803,0.908,3804,0.908,3805,0.908,3806,0.908,3807,0.908,3808,0.908,3809,0.908,3810,0.908,3811,0.908,3812,0.908,3813,0.908,3814,0.908,3815,0.908,3816,0.675,3817,0.8,3818,1.657,3819,1.46,3820,0.908,3821,0.908,3822,0.908,3823,0.908,3824,0.908,3825,0.908,3826,1.657,3827,0.908,3828,0.908,3829,0.8,3830,0.729,3831,0.908,3832,0.908,3833,0.729,3834,0.908,3835,0.908,3836,0.908,3837,0.908]],["title/modules.html",[110,2.299]],["body/modules.html",[25,0.008,55,0.007,56,0.008,57,0.007,109,4.353,110,2.366,138,4.11,143,4.11,281,4.353,284,4.353,285,4.353,286,3.719,287,4.353,915,4.353,939,4.646,1165,4.353,1423,4.353,1426,4.353,1689,4.979,2270,5.871,3838,8.924,3839,8.924,3840,7.992,3841,8.364]],["title/overview.html",[3842,4.87]],["body/overview.html",[2,1.064,25,0.01,55,0.005,56,0.007,57,0.005,86,1.556,108,1.333,109,5.525,110,1.835,111,2.134,112,2.645,113,2.645,114,2.447,115,2.004,116,2.204,117,4.266,118,4.266,119,4.995,120,3.494,121,2.542,122,2.134,137,2.447,138,5.667,139,4.266,140,4.266,141,4.266,142,4.266,143,5.358,144,4.944,145,4.267,152,2.204,281,6.05,282,4.266,283,4.266,284,4.995,285,4.995,286,4.944,287,4.995,490,4.358,542,4.729,584,4.266,585,4.266,586,4.266,910,4.266,911,4.266,912,4.266,915,5.675,916,4.266,917,4.266,918,4.266,919,5.788,1055,5.187,1165,6.05,1166,4.266,1167,4.266,1168,4.266,1170,4.476,1423,6.002,1424,4.266,1425,4.266,1426,5.788,1477,4.715,1509,4.266,1510,4.266,1511,4.715,1711,4.266,1743,3.886,1894,3.886,2635,3.375,3842,3.886,3843,4.844]],["title/todo.html",[232,1.555,1662,2.794,1663,2.618]],["body/todo.html",[0,0.046,5,0.108,11,0.674,13,1.624,16,0.392,25,0.009,26,0.794,32,0.605,47,2.63,48,2.186,49,2.466,51,2.902,52,3.95,55,0.006,56,0.006,57,0.004,65,2.03,86,1.338,108,1.972,116,1.896,122,2.545,135,2.105,149,2.816,154,2.586,168,1.338,170,1.896,171,1.669,173,1.624,180,2.274,185,1.338,209,1.438,223,5.323,226,3.608,227,3.892,232,1.724,233,3.622,234,2.638,247,1.674,258,4.026,289,3.608,295,3.608,299,2.371,300,2.902,303,3.097,343,1.451,346,2.186,410,2.719,415,2.186,426,2.816,428,3.155,456,1.96,463,3.892,476,1.96,490,2.186,496,2.92,513,2.479,514,2.371,531,3.289,589,3.777,591,2.816,598,1.96,602,2.922,611,2.74,630,2.902,639,2.371,640,2.74,642,2.902,668,2.74,671,2.601,701,4.474,702,3.608,740,2.479,741,6.039,747,2.74,762,4.636,810,3.801,837,2.74,891,2.902,906,2.479,932,2.902,934,2.479,948,4.364,952,5.843,964,2.74,966,2.74,967,2.902,979,2.902,983,4.623,984,2.902,1041,2.601,1178,2.74,1191,3.097,1249,3.097,1342,2.274,1398,2.274,1445,4.364,1531,3.097,1535,2.902,1590,2.902,1669,4.026,1674,2.902,1692,4.474,1701,3.342,1705,2.74,1706,3.669,1707,3.669,1715,3.669,1724,2.74,1746,3.669,1761,3.669,1849,5.749,1856,3.342,1975,2.601,2028,3.097,2086,2.74,2100,3.342,2167,3.669,2171,3.669,2179,3.342,2218,3.342,2254,3.342,2270,2.74,2273,3.097,2274,2.902,2363,4.636,2451,3.342,2462,3.342,2464,3.342,2564,2.601,2792,2.902,2823,3.342,2854,3.801,2886,3.342,2889,3.097,3047,3.669,3075,3.669,3076,3.342,3140,2.601,3151,3.669,3168,3.097,3222,3.097,3225,3.097,3358,2.902,3396,3.669,3440,3.669,3523,3.342,3771,5.089,3816,4.297,3844,3.342,3845,4.165,3846,3.669,3847,3.669,3848,3.097,3849,3.342,3850,4.165,3851,4.165,3852,3.669,3853,5.089,3854,4.165,3855,4.623,3856,4.165,3857,4.165,3858,4.165,3859,4.165,3860,3.669,3861,4.165,3862,3.342,3863,4.165,3864,4.165,3865,4.165,3866,4.165,3867,4.165,3868,3.669,3869,3.669,3870,4.165,3871,4.165,3872,4.165,3873,4.165,3874,4.165,3875,2.902,3876,3.669,3877,4.165,3878,4.165,3879,3.669,3880,3.669,3881,3.669,3882,4.165,3883,3.669,3884,4.165,3885,4.165,3886,4.165,3887,4.165,3888,5.843,3889,4.165,3890,4.165,3891,4.165,3892,4.165,3893,4.165,3894,4.165,3895,3.342,3896,3.669,3897,4.165,3898,5.778,3899,3.669,3900,4.165]],["title/miscellaneous/typealiases.html",[3109,2.471,3901,5.373]],["body/miscellaneous/typealiases.html",[10,0.488,16,0.566,25,0.009,29,2.433,32,0.828,55,0.006,56,0.008,57,0.006,84,0.851,161,2.77,163,3.344,170,2.594,171,1.523,209,1.419,229,3.234,313,4.674,336,4.437,343,2.822,344,2.94,366,3.59,600,4.239,601,5.394,602,2.511,604,5.7,618,5.7,619,5.7,649,6.211,773,3.972,775,5.7,776,6.502,779,5.7,780,3.972,781,4.951,1207,5.394,1223,4.239,1237,6.258,1292,4.573,1321,4.573,1322,4.573,1386,3.75,1828,5.021,1865,4.573,1867,4.573,2920,4.573,2921,5.7,2952,4.573,3109,3.75,3515,5.021,3902,5.7,3903,5.7,3904,5.7,3905,7.105,3906,7.105,3907,7.138,3908,5.7,3909,7.105,3910,6.258,3911,7.105,3912,5.021,3913,5.021,3914,5.7,3915,7.105,3916,5.7,3917,5.7,3918,5.7,3919,3.75,3920,5.7,3921,5.7,3922,5.7,3923,5.7]],["title/miscellaneous/variables.html",[1738,3.744,3109,2.471]],["body/miscellaneous/variables.html",[1,2.132,9,2.246,10,0.179,11,0.337,13,1.331,15,1.69,16,0.524,25,0.01,26,0.286,29,1.457,32,0.728,37,0.532,38,2.468,43,0.177,47,1.973,48,1.094,49,3.691,50,1.55,55,0.004,56,0.004,57,0.002,62,2.132,63,2.984,65,1.016,73,2.15,80,1.698,81,1.338,115,1.413,129,2.852,137,1.053,149,2.113,154,0.813,167,1.138,168,1.777,173,0.813,184,1.836,186,1.607,191,0.918,201,2.032,208,0.89,211,0.588,216,0.837,227,1.664,231,1.187,232,0.862,234,0.767,247,2.537,248,3.13,252,1.016,259,1.864,265,3.479,267,1.452,299,1.187,300,1.452,308,0.837,329,1.302,336,1.302,349,0.813,374,1.138,375,1.241,397,1.138,399,1.725,409,0.949,410,0.981,411,0.949,412,0.918,413,0.949,424,1.672,425,2.539,428,1.864,443,4.139,448,1.241,453,3.021,456,0.981,457,1.55,458,1.672,459,3.479,462,1.371,463,1.664,466,1.55,470,2.739,471,2.739,472,1.836,473,1.836,476,1.607,477,2.739,478,2.246,479,1.672,480,2.275,481,1.672,482,1.55,490,3.291,493,1.55,496,1.725,513,2.984,515,1.664,531,1.187,572,1.607,574,1.864,580,2.379,589,1.187,590,1.094,591,1.664,598,0.981,602,0.918,611,1.371,630,1.452,631,1.55,632,1.672,636,1.672,638,3.479,639,1.187,640,1.371,641,1.55,642,4.561,644,1.55,645,2.739,653,2.246,661,2.739,662,1.836,663,2.739,664,4.766,665,1.672,666,1.55,667,1.836,668,2.852,669,2.739,670,1.452,671,2.708,672,1.302,673,2.739,674,1.836,675,3.007,676,1.836,677,1.672,678,1.836,679,1.836,680,1.836,681,1.836,682,1.836,684,1.672,686,1.672,687,4.437,691,1.672,697,1.371,698,3.007,699,1.452,700,1.836,701,1.302,702,2.708,703,3.007,704,2.367,705,1.672,706,3.007,707,1.836,708,2.739,709,1.836,710,1.836,711,1.55,712,2.739,713,1.836,714,1.836,715,1.672,716,1.672,717,1.672,718,1.55,719,1.55,720,1.836,721,1.836,722,1.836,723,1.836,724,4.872,725,2.739,726,4.872,727,1.836,728,1.672,729,1.836,740,1.241,743,2.739,752,1.371,755,1.55,766,1.302,773,1.452,777,1.371,778,1.452,786,1.241,794,1.452,832,1.452,836,1.094,846,1.672,847,1.836,848,1.55,849,1.836,852,1.672,856,1.836,857,1.836,864,1.672,866,3.854,896,1.241,899,1.187,906,1.241,922,2.739,933,1.302,934,2.032,940,1.672,941,3.021,942,1.672,943,2.739,946,3.007,948,2.246,949,3.007,953,2.739,956,4.872,958,2.739,959,1.836,960,3.007,961,1.672,962,2.739,963,1.836,964,1.371,965,1.672,966,1.371,967,1.452,968,1.55,969,1.672,970,1.452,971,1.836,972,1.55,973,3.007,974,1.836,975,1.187,976,1.836,977,1.836,995,1.836,1024,3.021,1057,2.539,1088,1.672,1089,2.739,1177,1.371,1223,1.55,1232,1.55,1239,2.739,1271,2.739,1284,1.371,1368,1.55,1398,1.138,1434,4.126,1444,2.581,1451,1.672,1452,2.379,1485,1.836,1567,2.032,1596,1.452,1605,2.539,1629,1.452,1692,1.302,1705,1.371,1724,3.298,1725,2.708,1738,1.452,1745,1.836,1787,1.836,1795,3.007,1856,2.739,1967,1.371,2030,1.55,2119,1.302,2185,1.371,2254,1.672,2307,1.672,2315,1.672,2346,1.836,2347,3.021,2359,4.139,2383,3.007,2427,1.672,2536,1.836,2886,1.672,2896,1.672,2901,1.836,2902,3.007,2903,2.739,2904,3.007,2912,1.836,2913,4.415,2914,3.007,2915,3.819,2920,1.672,2921,4.022,2922,3.819,2929,1.836,2941,1.836,2942,3.819,2943,3.819,2944,3.819,2945,3.819,2947,1.836,2948,1.836,2949,3.007,2952,1.672,2953,3.007,2954,1.836,2955,3.007,2956,4.415,3012,1.55,3043,1.836,3109,1.371,3110,2.379,3112,5.524,3114,1.672,3117,2.539,3171,1.836,3358,1.452,3849,1.672,3862,3.479,3869,1.836,3875,1.452,3879,3.007,3888,3.007,3907,1.836,3910,1.836,3912,3.007,3913,3.819,3924,6.272,3925,3.414,3926,6.272,3927,2.084,3928,4.336,3929,2.084,3930,4.336,3931,2.084,3932,2.084,3933,3.414,3934,2.084,3935,2.084,3936,2.084,3937,3.007,3938,2.084,3939,2.084,3940,2.084,3941,2.084,3942,2.084,3943,2.084,3944,2.084,3945,2.084,3946,1.836,3947,2.084,3948,2.084,3949,2.084,3950,2.084,3951,2.084,3952,2.739,3953,1.836,3954,1.836,3955,1.836,3956,2.084,3957,2.084,3958,2.084,3959,3.007,3960,2.084,3961,2.084,3962,2.084,3963,2.084,3964,2.084,3965,1.836,3966,2.084,3967,2.084,3968,2.084,3969,2.084,3970,2.084,3971,2.084,3972,2.084,3973,2.084,3974,2.084,3975,2.084,3976,2.084,3977,2.084,3978,2.084,3979,2.084,3980,2.084,3981,2.084,3982,2.084,3983,2.084,3984,2.084,3985,2.084,3986,2.084,3987,2.084,3988,2.084,3989,2.084,3990,2.084,3991,1.836,3992,2.084,3993,2.084,3994,2.084,3995,2.084,3996,2.084,3997,2.084,3998,2.084,3999,2.084,4000,2.084,4001,2.084,4002,2.084,4003,1.836,4004,2.084,4005,2.084,4006,3.414,4007,3.414]],["title/additional-documentation/nestjs-application.html",[264,1.426,515,1.577,530,1.381,1370,1.577]],["body/additional-documentation/nestjs-application.html",[8,1.18,13,3.064,25,0.008,55,0.005,56,0.006,57,0.006,86,1.378,108,1.18,110,1.624,149,2.089,167,2.341,183,2.677,227,3.923,232,1.774,233,3.218,234,2.48,247,1.242,261,2.441,264,3.612,345,1.889,352,2.683,409,2.683,413,2.683,440,2.677,463,2.873,476,2.774,482,3.189,515,3.83,530,1.83,531,2.441,532,3.878,533,3.44,563,1.889,589,2.441,592,3.509,598,2.018,602,2.597,612,2.677,668,4.432,697,2.821,701,4.207,708,3.44,751,2.018,755,3.189,762,2.441,809,3.44,831,3.44,832,4.108,840,2.677,892,2.988,894,3.189,896,2.552,899,2.441,933,2.677,934,2.552,968,3.189,1099,4.108,1177,4.432,1178,4.432,1183,2.821,1187,3.44,1249,3.189,1370,2.873,1452,2.988,1532,2.821,1629,5.055,1689,2.552,1692,2.677,1704,3.777,1714,5.405,1724,4.772,1725,5.121,1849,3.44,1853,2.821,1924,3.777,1950,3.44,1975,2.677,2086,5.296,2100,3.44,2113,3.189,2118,2.441,2119,3.681,2140,5.405,2293,4.108,2467,5.192,2571,3.189,2612,5.192,2628,3.777,2903,5.405,3012,3.189,3117,3.189,3119,3.44,3121,3.777,3123,2.988,3125,5.192,3139,5.01,3140,4.207,3188,3.44,3341,3.189,3346,3.777,3347,2.821,3357,3.777,3358,4.694,3404,3.777,3434,2.988,3504,2.988,3572,2.988,3658,3.777,3665,3.777,3802,3.44,3840,3.777,3860,3.777,3875,2.988,3876,5.933,3880,5.192,3881,5.192,3919,3.878,3937,3.777,3952,4.729,3953,3.777,3954,3.777,3955,3.777,3991,3.777,4008,4.288,4009,3.44,4010,4.288,4011,4.288,4012,3.44,4013,4.288,4014,6.736,4015,4.288,4016,3.777,4017,4.288,4018,4.288,4019,4.288,4020,7.605,4021,4.288,4022,4.288,4023,3.777,4024,4.288,4025,4.288,4026,4.288,4027,4.288,4028,5.895,4029,4.288,4030,4.288,4031,4.288,4032,4.288,4033,4.288,4034,4.288,4035,4.288,4036,4.288,4037,4.288,4038,4.288,4039,4.288,4040,4.288,4041,4.288,4042,3.189,4043,4.288,4044,4.288,4045,3.777,4046,4.288,4047,5.192,4048,3.777,4049,4.288,4050,5.895,4051,4.288,4052,4.729,4053,3.777,4054,3.777,4055,4.288,4056,6.736,4057,5.895,4058,4.288,4059,4.288,4060,4.288,4061,3.777,4062,4.288,4063,3.44,4064,3.777,4065,4.288,4066,4.288,4067,4.288,4068,4.288,4069,4.288,4070,4.288]],["title/additional-documentation/nestjs-application/software-architecture.html",[530,1.381,1370,1.577,3189,2.407,4071,2.129]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.653,4,0.079,5,0.077,13,2.657,14,0.684,22,0.603,24,0.653,25,0.004,26,0.304,29,0.535,45,1.007,47,3.101,48,2.147,49,2.526,51,0.873,52,1.559,53,1.855,55,0.002,56,0.002,57,0.001,62,1.382,63,1.317,65,1.747,80,0.275,81,0.669,84,0.852,86,0.711,111,1.802,116,0.57,122,0.975,135,0.633,165,1.007,167,1.622,168,2.112,170,3.43,171,0.637,174,0.783,180,0.684,183,2.238,194,1.006,201,0.746,209,1.215,226,4.63,227,0.611,229,0.57,232,0.519,233,1.208,234,2.584,238,0.873,239,1.954,247,0.363,248,1.063,257,0.714,259,4.574,260,0.873,261,2.04,262,3.737,264,3.049,291,3.243,292,1.775,295,3.048,296,0.932,297,3.754,299,0.714,308,0.503,311,1.645,329,1.855,344,0.916,345,0.975,366,1.118,374,1.622,379,0.783,397,0.684,399,0.633,412,0.552,415,1.161,427,0.932,433,1.317,440,2.821,445,1.26,455,0.783,463,1.448,464,0.783,465,3.775,480,2.869,487,4.244,488,3.417,496,3.497,506,0.873,513,0.746,529,2.905,530,1.268,532,3.754,563,3.169,572,1.687,589,1.691,590,2.561,591,3.796,592,2.435,594,1.456,598,1.687,610,0.658,616,1.855,620,2.07,639,3.112,670,0.873,671,3.696,672,0.783,677,1.006,699,0.873,702,0.783,704,1.957,740,1.317,751,3.705,752,0.825,762,0.714,766,1.382,768,3.863,769,1.26,777,0.825,790,1.542,792,3.048,793,0.932,794,0.873,804,0.873,810,1.954,816,3.624,829,0.825,833,0.932,834,2.238,836,1.881,837,0.825,838,4.386,840,0.783,848,0.932,881,0.932,891,2.07,892,0.873,896,1.317,897,0.783,899,0.714,900,2.665,904,1.542,932,0.873,933,1.855,934,1.768,957,0.783,965,1.006,966,0.825,967,2.851,970,2.07,983,2.851,985,0.873,986,3.043,1031,0.746,1037,1.949,1039,0.746,1183,0.825,1204,0.873,1277,0.825,1284,0.825,1313,0.873,1342,0.684,1370,0.611,1398,0.684,1444,1.317,1455,0.873,1486,2.238,1490,1.954,1522,2.836,1524,1.949,1525,3.043,1527,0.873,1532,3.211,1533,1.006,1535,0.873,1536,0.873,1552,5.461,1560,2.616,1567,2.689,1587,2.209,1596,0.873,1598,0.825,1599,1.006,1628,1.645,1666,1.542,1667,1.775,1673,1.006,1674,2.07,1677,2.383,1687,1.006,1689,1.317,1697,1.775,1705,0.825,1713,1.949,1718,0.932,1732,1.104,1738,0.873,1739,2.851,1764,1.006,1765,1.775,1767,1.104,1769,1.104,1777,1.104,1781,1.104,1784,1.104,1809,1.104,1825,1.104,1827,2.616,1853,0.825,1862,1.006,1866,1.104,1867,1.775,1882,2.134,1920,1.949,1939,6.188,1941,0.932,1946,1.775,1967,1.456,1970,2.07,1975,2.238,1993,1.104,1994,1.104,1998,2.498,2000,5.513,2021,1.104,2029,1.645,2063,1.949,2086,1.456,2109,1.645,2113,0.932,2118,0.714,2125,2.616,2137,1.006,2143,1.006,2157,3.043,2165,1.104,2166,2.07,2172,2.665,2176,0.873,2183,3.157,2190,3.148,2191,0.932,2195,1.104,2211,4.579,2214,1.104,2215,1.645,2218,1.006,2220,1.104,2226,1.104,2236,1.775,2241,2.383,2258,5.026,2273,2.209,2274,0.873,2275,1.006,2282,3.36,2284,3.148,2293,1.542,2312,1.006,2345,1.006,2352,0.873,2359,0.873,2360,3.604,2371,1.949,2401,2.616,2405,2.692,2410,0.873,2420,1.949,2426,2.616,2464,1.006,2469,0.932,2481,2.383,2483,1.006,2508,2.665,2510,1.006,2519,1.006,2564,2.821,2571,0.932,2609,1.104,2616,1.104,2627,1.949,2649,2.07,2650,3.604,2668,1.645,2682,1.645,2712,1.006,2746,1.006,2749,1.006,2753,3.157,2754,0.932,2761,2.209,2764,1.006,2777,1.104,2783,1.775,2812,1.104,2823,3.916,2837,1.104,2854,0.825,2864,1.104,2873,1.645,2894,1.949,2895,1.949,3095,1.775,3117,2.209,3123,1.542,3124,1.542,3126,2.07,3129,3.401,3130,2.498,3133,0.825,3136,1.775,3138,1.104,3139,0.932,3157,0.873,3175,1.645,3188,1.775,3189,0.932,3199,1.949,3201,1.006,3204,1.104,3209,1.104,3212,1.104,3215,1.104,3225,0.932,3228,1.104,3239,1.104,3251,1.775,3252,3.36,3255,3.624,3258,1.645,3268,2.665,3280,2.851,3283,1.104,3288,1.104,3289,4.244,3308,0.825,3311,1.104,3313,1.949,3329,1.006,3331,2.616,3335,1.104,3337,1.104,3344,1.104,3345,2.616,3347,1.954,3355,1.104,3356,1.104,3364,5.037,3370,1.006,3372,1.006,3374,1.775,3376,1.006,3378,1.104,3398,0.873,3405,2.665,3409,1.104,3434,0.873,3435,1.104,3453,1.104,3463,1.006,3467,0.873,3481,1.104,3484,1.104,3489,1.104,3493,1.949,3504,0.873,3506,1.104,3524,1.104,3538,1.949,3539,3.604,3549,1.104,3560,1.006,3569,3.157,3570,1.104,3572,0.873,3574,1.104,3582,1.006,3602,1.104,3606,1.104,3608,1.104,3610,4.386,3613,1.104,3626,1.104,3653,3.979,3683,1.104,3701,1.104,3710,3.916,3733,4.543,3748,1.006,3762,1.104,3763,1.104,3764,3.754,3775,1.006,3817,1.104,3833,1.006,3842,1.006,3844,1.775,3847,1.104,3848,3.36,3853,1.104,3883,1.949,3899,1.104,4003,1.104,4012,1.006,4042,0.932,4053,1.104,4071,4.959,4072,1.253,4073,1.253,4074,5.213,4075,5.467,4076,2.213,4077,2.97,4078,2.616,4079,4.167,4080,2.213,4081,2.616,4082,4.881,4083,1.253,4084,1.253,4085,2.665,4086,3.157,4087,1.253,4088,1.253,4089,1.253,4090,1.253,4091,1.253,4092,2.213,4093,2.213,4094,1.253,4095,1.253,4096,4.091,4097,1.253,4098,1.253,4099,2.97,4100,2.213,4101,1.253,4102,1.253,4103,1.253,4104,1.253,4105,6.376,4106,1.253,4107,1.253,4108,1.253,4109,1.104,4110,2.213,4111,4.518,4112,1.253,4113,1.253,4114,2.213,4115,2.213,4116,3.584,4117,2.97,4118,3.584,4119,1.253,4120,3.157,4121,3.157,4122,1.253,4123,1.253,4124,1.253,4125,1.253,4126,1.253,4127,1.253,4128,2.876,4129,2.213,4130,1.006,4131,2.616,4132,1.253,4133,1.253,4134,1.253,4135,6.814,4136,1.253,4137,6.372,4138,1.253,4139,1.949,4140,1.253,4141,1.253,4142,2.213,4143,1.006,4144,3.809,4145,5.467,4146,1.253,4147,2.616,4148,1.949,4149,2.213,4150,1.253,4151,1.253,4152,1.253,4153,1.253,4154,1.253,4155,1.253,4156,2.876,4157,2.213,4158,1.253,4159,1.104,4160,1.253,4161,1.253,4162,1.253,4163,1.104,4164,1.253,4165,2.383,4166,1.253,4167,1.253,4168,1.253,4169,1.104,4170,1.253,4171,1.253,4172,1.253,4173,1.104,4174,1.253,4175,2.97,4176,1.253,4177,1.253,4178,1.253,4179,2.665,4180,2.213,4181,1.253,4182,2.213,4183,2.97,4184,1.253,4185,1.253,4186,1.253,4187,1.949,4188,2.213,4189,2.97,4190,1.253,4191,1.253,4192,1.253,4193,1.253,4194,1.253,4195,1.253,4196,1.104,4197,1.253,4198,2.213,4199,1.253,4200,1.253,4201,5.467,4202,1.253,4203,1.104,4204,1.006,4205,1.253,4206,1.253,4207,1.253,4208,0.932,4209,1.253,4210,1.253,4211,1.253,4212,1.253,4213,1.253,4214,2.213,4215,2.97,4216,1.253,4217,1.253,4218,1.253,4219,1.253,4220,2.213,4221,1.253,4222,1.253,4223,1.253,4224,1.949,4225,1.253,4226,1.253,4227,1.253,4228,2.213,4229,1.253,4230,1.104,4231,1.253,4232,2.213,4233,1.253,4234,1.253,4235,1.104,4236,1.253,4237,1.253,4238,1.104,4239,1.253,4240,1.253,4241,2.213,4242,1.253,4243,1.253,4244,1.253,4245,1.253,4246,1.253,4247,1.104,4248,1.253,4249,1.253,4250,1.253,4251,1.104,4252,1.104,4253,2.97,4254,1.253,4255,1.253,4256,1.253,4257,1.253,4258,1.253,4259,1.253,4260,2.213,4261,1.253,4262,1.104,4263,1.253,4264,2.97,4265,1.104,4266,1.253,4267,1.253,4268,2.213,4269,1.253,4270,2.213,4271,1.253,4272,1.253,4273,1.253,4274,1.253,4275,1.253,4276,1.253,4277,1.253,4278,2.213,4279,1.253,4280,1.253,4281,1.253,4282,1.253,4283,1.253,4284,1.253,4285,1.253,4286,1.253,4287,7.346,4288,1.253,4289,1.253,4290,4.091,4291,1.104,4292,1.253,4293,1.253,4294,2.213,4295,1.253,4296,1.253,4297,1.253,4298,1.253,4299,1.253,4300,1.253,4301,1.253,4302,1.104,4303,1.253,4304,1.253,4305,1.104,4306,1.253,4307,1.253,4308,1.253,4309,1.253,4310,2.213,4311,1.253,4312,1.253,4313,2.209,4314,1.253,4315,1.253,4316,1.006,4317,1.253,4318,1.253,4319,1.253,4320,4.091,4321,1.253,4322,1.253,4323,1.253,4324,1.253,4325,1.253,4326,1.253,4327,1.253,4328,1.253,4329,1.253,4330,1.253,4331,1.253,4332,1.253,4333,2.213,4334,1.253,4335,1.253,4336,2.213,4337,1.253,4338,1.253,4339,1.253,4340,2.213,4341,1.253,4342,1.253,4343,1.253,4344,1.253,4345,1.253,4346,1.104,4347,2.213,4348,1.253,4349,2.213,4350,1.253,4351,1.253,4352,1.253,4353,1.104,4354,2.213]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[13,1.108,530,1.213,1370,1.385,4071,1.87,4144,1.981]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.08,2,0.497,3,0.098,4,0.081,5,0.19,11,0.741,13,1.422,16,0.247,19,0.746,22,0.902,25,0.01,26,0.928,39,0.269,43,0.252,47,2.808,48,2.406,52,1.914,55,0.006,56,0.004,57,0.002,63,1.346,64,3.461,65,1.102,73,1.448,80,1.008,81,0.822,84,0.337,86,1.172,108,2.224,110,2.772,111,0.996,115,1.509,116,2.808,135,1.843,137,2.916,138,1.488,143,3.016,144,2.171,145,3.131,149,2.812,151,0.622,154,1.422,167,1.235,168,1.854,170,2.394,171,1.391,173,1.422,174,1.412,180,3.807,188,1.187,191,1.607,209,0.563,211,1.629,216,0.908,227,2.234,229,2.808,231,2.995,234,3.016,240,1.682,241,1.814,247,0.655,257,2.077,258,1.576,259,2.872,261,2.61,263,2.4,264,0.996,289,2.863,299,2.077,313,1.488,343,1.597,345,1.607,349,1.787,374,1.992,413,1.029,415,1.187,423,1.488,426,3.163,428,1.235,440,2.278,445,1.287,452,2.863,456,3.178,463,1.778,465,3.406,476,1.064,478,1.488,487,3.409,513,1.346,515,2.812,529,3.435,530,1.957,531,1.287,533,1.814,535,1.682,540,1.814,542,3.512,563,3.286,572,1.064,588,1.412,589,3.285,590,3.237,593,3.016,594,1.488,595,1.488,596,1.488,598,2.476,601,1.576,602,0.996,606,1.346,611,2.4,616,1.412,620,1.576,639,1.287,657,1.992,668,1.488,671,1.412,702,2.863,704,2.872,739,3.678,741,2.927,751,3.282,752,1.488,759,1.682,763,1.576,766,1.412,768,3.409,769,2.077,786,2.171,804,1.576,833,1.682,834,2.278,841,1.682,866,1.576,881,2.713,899,2.61,904,2.542,906,1.346,966,2.4,1022,1.682,1024,2.542,1032,1.488,1041,3.604,1047,1.682,1050,1.576,1066,1.992,1067,1.992,1068,1.992,1069,1.992,1070,1.992,1071,1.992,1080,1.814,1099,3.195,1177,1.488,1235,1.992,1277,1.488,1342,1.992,1398,1.992,1399,1.814,1434,1.488,1437,1.102,1444,1.346,1445,1.488,1454,1.814,1486,1.412,1522,3.368,1527,1.576,1529,1.814,1531,1.682,1552,4.443,1567,1.346,1590,3.195,1597,1.576,1651,1.488,1673,3.678,1677,1.814,1689,1.346,1692,2.863,1697,4.22,1699,3.409,1705,4.059,1738,1.576,1739,3.195,1801,1.992,1850,1.992,1882,2.171,1938,1.992,1970,2.542,1975,1.412,1998,2.542,2000,1.682,2028,1.682,2030,1.682,2031,2.713,2118,2.077,2172,1.682,2176,1.576,2178,1.814,2184,1.814,2185,2.4,2190,1.576,2191,1.682,2211,1.576,2236,3.678,2247,1.814,2282,1.682,2293,2.542,2298,2.713,2306,1.992,2308,1.992,2347,4.021,2359,2.542,2390,1.992,2396,1.814,2398,1.992,2405,1.488,2410,1.576,2413,1.992,2431,1.992,2432,1.992,2514,1.992,2564,1.412,2634,1.682,2668,1.682,2688,2.927,2723,1.992,2729,1.814,2749,1.814,2759,1.682,2854,1.488,3114,1.814,3124,4.859,3129,1.576,3132,1.992,3133,1.488,3139,3.912,3140,1.412,3149,1.992,3157,1.576,3158,1.992,3169,1.814,3174,1.814,3175,3.912,3178,1.992,3180,1.992,3211,1.992,3227,1.814,3229,1.992,3258,1.682,3268,1.682,3280,4.021,3289,1.682,3303,1.992,3308,1.488,3329,1.814,3338,1.814,3339,1.992,3341,1.682,3347,1.488,3361,1.992,3370,1.814,3376,1.814,3398,1.576,3405,1.682,3434,2.542,3446,1.992,3467,1.576,3504,1.576,3560,1.814,3572,1.576,3610,2.927,3686,4.038,3723,2.927,3733,2.713,3758,1.992,3764,1.488,3784,1.992,3833,1.814,3848,3.912,3849,3.678,3855,4.859,3862,3.678,3895,3.678,3919,3.016,3946,1.992,3959,1.992,3965,1.992,4012,1.814,4016,1.992,4052,2.927,4071,3.016,4074,1.992,4085,1.682,4105,3.678,4121,1.992,4137,6.223,4139,1.992,4143,2.927,4144,4.021,4159,1.992,4163,1.992,4165,1.814,4173,1.992,4179,1.682,4187,1.992,4196,3.213,4203,4.038,4208,2.713,4235,1.992,4238,3.213,4252,4.038,4262,3.213,4302,3.213,4305,1.992,4313,1.682,4355,1.814,4356,1.992,4357,2.261,4358,4.585,4359,2.261,4360,5.716,4361,2.927,4362,2.261,4363,2.261,4364,3.648,4365,5.26,4366,2.261,4367,2.261,4368,2.261,4369,2.261,4370,2.261,4371,2.261,4372,2.261,4373,3.648,4374,2.261,4375,5.083,4376,2.261,4377,2.261,4378,1.992,4379,3.648,4380,4.585,4381,2.261,4382,2.261,4383,2.261,4384,2.261,4385,2.261,4386,2.261,4387,1.992,4388,3.648,4389,2.261,4390,1.814,4391,2.261,4392,2.261,4393,2.261,4394,2.261,4395,2.261,4396,2.261,4397,2.261,4398,2.261,4399,3.648,4400,3.648,4401,2.261,4402,1.992,4403,3.213,4404,2.261,4405,2.261,4406,2.261,4407,2.261,4408,2.261,4409,2.261,4410,2.261,4411,2.261,4412,2.261,4413,2.261,4414,2.261,4415,2.261,4416,2.261,4417,2.261,4418,2.261,4419,2.261,4420,2.261,4421,2.261,4422,2.261,4423,2.261,4424,2.261,4425,2.261,4426,1.682,4427,2.261,4428,2.261,4429,2.261,4430,2.261,4431,2.261,4432,1.992,4433,2.261,4434,2.261,4435,2.261,4436,2.261,4437,2.261,4438,2.261,4439,2.261,4440,1.992,4441,2.261,4442,2.261,4443,1.682,4444,2.261,4445,1.992,4446,2.261,4447,2.261,4448,2.261,4449,2.261,4450,2.261,4451,2.261,4452,2.261,4453,2.261,4454,2.261,4455,1.992,4456,2.261]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[530,1.213,1370,1.385,3855,1.981,4085,2.114,4457,2.504]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[13,2.022,22,0.478,25,0.01,32,0.519,46,2.869,49,1.526,52,3.201,53,3.238,55,0.004,56,0.006,57,0.004,64,2.353,73,1.428,80,1.14,81,1.508,84,0.534,122,1.575,154,1.394,161,2.022,168,2.604,171,1.111,173,1.394,180,4.045,191,3.129,194,4.161,201,2.129,211,1.01,229,2.36,232,1.48,233,2.831,234,3.022,259,4.173,260,4.251,261,2.036,262,2.129,263,2.353,264,3.264,289,2.233,292,4.161,295,2.233,296,2.66,297,2.353,338,1.877,346,1.877,349,2.379,359,3.412,366,1.807,372,2.527,427,4.537,445,3.81,465,1.877,488,2.353,496,1.807,506,2.492,513,2.129,515,2.527,529,4.66,563,1.575,572,2.441,590,4.187,595,2.353,596,2.353,598,2.441,670,2.492,671,2.233,683,2.492,697,2.353,704,2.831,751,3.344,759,2.66,763,2.492,832,2.492,836,1.877,897,3.81,899,2.952,975,2.036,979,2.492,1022,2.66,1183,2.353,1284,2.353,1313,2.492,1324,3.15,1356,3.15,1437,1.743,1445,2.353,1486,2.233,1490,2.353,1522,3.331,1533,2.869,1552,2.353,1559,4.568,1585,2.492,1588,2.66,1629,2.492,1666,2.492,1669,2.492,1725,2.233,1774,5.374,1776,2.66,1804,3.15,1882,2.129,1975,3.238,1998,4.251,2029,2.66,2031,2.66,2149,2.869,2157,2.66,2185,2.353,2189,4.161,2247,2.869,2284,2.492,2313,3.15,2352,2.492,2370,4.161,2405,2.353,2410,4.95,2508,2.66,2519,2.869,2649,3.614,2688,4.161,2712,2.869,2729,4.161,2754,2.66,2854,3.412,2873,2.66,2983,2.869,3022,2.869,3110,2.492,3124,2.492,3126,3.614,3129,2.492,3130,3.614,3133,2.353,3166,2.869,3168,2.66,3222,2.66,3227,4.161,3252,5.509,3258,2.66,3268,2.66,3280,3.614,3308,2.353,3347,3.412,3398,3.614,3467,2.492,3504,3.614,3572,2.492,3710,2.869,3733,2.66,3752,3.15,3764,2.353,3802,2.869,3816,2.66,3829,4.568,3830,2.869,3844,2.869,3855,5.924,3919,2.353,4009,2.869,4042,2.66,4052,2.869,4071,4.402,4081,3.15,4085,3.857,4086,3.15,4128,2.869,4130,2.869,4137,5.283,4179,2.66,4208,3.857,4230,3.15,4251,3.15,4291,3.15,4316,2.869,4355,2.869,4360,4.568,4378,4.568,4426,2.66,4440,3.15,4443,2.66,4445,3.15,4457,3.15,4458,3.576,4459,3.576,4460,3.576,4461,3.576,4462,3.576,4463,3.576,4464,3.576,4465,3.576,4466,5.186,4467,3.576,4468,3.576,4469,3.576,4470,3.576,4471,3.576,4472,3.576,4473,3.576,4474,3.576,4475,3.576,4476,3.576,4477,3.576,4478,3.576,4479,3.576,4480,3.576,4481,3.15,4482,3.576,4483,3.576,4484,3.576,4485,3.15,4486,3.576,4487,3.576,4488,3.576,4489,3.576,4490,3.576,4491,3.576,4492,3.576,4493,3.576,4494,4.568,4495,3.576,4496,3.576,4497,3.576,4498,3.576,4499,3.576,4500,3.576,4501,3.576,4502,3.576,4503,3.576,4504,3.576,4505,3.576,4506,3.576,4507,3.576,4508,3.576,4509,3.576,4510,3.576,4511,3.576,4512,3.576,4513,3.576,4514,3.576,4515,3.576,4516,3.576,4517,3.576,4518,3.576,4519,3.576,4520,3.576,4521,3.576,4522,3.576,4523,3.576,4524,3.576,4525,3.15,4526,3.576,4527,2.869,4528,3.576,4529,3.15,4530,3.576,4531,3.576,4532,3.576,4533,3.576,4534,2.869]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[291,1.775,530,1.213,1370,1.385,3764,1.87,4079,2.281]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.065,13,2.63,14,2.347,15,1.676,16,0.493,19,1.419,21,4.738,25,0.01,26,0.591,29,2.521,32,1.209,39,0.497,43,0.176,46,3.45,47,2.688,48,3.54,49,3.249,53,2.685,55,0.005,56,0.006,57,0.006,62,2.685,63,2.559,65,3.71,84,0.881,108,2.096,135,2.984,151,1.184,154,1.676,167,2.347,183,4.213,224,3.45,227,2.095,229,3.07,231,2.448,234,2.674,247,2.205,257,2.448,259,4.156,260,2.996,261,3.362,262,2.559,264,1.894,286,3.516,289,2.685,291,3.688,295,2.685,297,4.778,303,3.197,433,3.516,476,2.024,489,1.894,490,4.306,496,4.207,512,3.787,513,3.516,514,2.448,515,2.878,516,2.996,524,3.45,525,4.116,529,2.559,530,2.521,531,3.841,563,2.602,591,2.095,593,2.829,639,2.448,671,4.213,672,5.124,701,3.688,705,3.45,751,2.024,769,3.362,810,3.885,815,3.787,816,3.45,818,3.787,822,3.787,824,3.787,825,3.787,834,2.685,836,3.099,891,2.996,893,3.787,896,2.559,904,4.116,906,3.516,1079,4.392,1175,3.787,1331,3.787,1342,2.347,1444,2.559,1522,3.225,1527,2.996,1658,3.45,1790,3.197,1882,2.559,1967,2.829,2118,2.448,2176,2.996,2282,3.197,2416,3.787,2469,3.197,2620,5.202,3123,2.996,3140,2.685,3353,3.787,3480,3.787,3723,3.45,3764,2.829,3768,3.45,4048,3.787,4079,4.738,4204,3.45,4247,3.787,4361,3.45,4387,3.787,4390,3.45,4426,3.197,4432,3.787,4443,3.197,4455,3.787,4534,3.45,4535,4.3,4536,7.263,4537,4.3,4538,4.3,4539,7.263,4540,3.787,4541,4.3,4542,4.3,4543,6.746,4544,4.3,4545,4.3,4546,4.3,4547,4.3,4548,5.906,4549,4.3,4550,4.3,4551,4.3,4552,4.3,4553,3.787,4554,4.3,4555,5.906,4556,4.3,4557,4.3,4558,4.3,4559,4.3,4560,4.3,4561,4.3,4562,4.3,4563,4.3,4564,4.3,4565,4.3,4566,4.3,4567,4.3]],["title/additional-documentation/nestjs-application/testing.html",[530,1.603,840,2.346,1370,1.831]],["body/additional-documentation/nestjs-application/testing.html",[0,0.032,2,0.38,13,2.248,16,0.303,22,0.596,24,0.38,25,0.01,26,0.522,37,0.442,39,0.215,47,0.788,49,2.865,55,0.006,56,0.003,57,0.003,62,2.372,63,2.97,65,0.843,73,1.848,80,1.097,108,1.848,110,1.108,111,1.673,115,1.572,122,0.762,135,1.919,137,0.875,144,1.741,154,2.835,155,1.525,156,1.525,162,0.716,165,0.788,167,3.563,168,1.22,170,0.788,171,0.371,172,0.945,173,2.111,174,1.826,178,1.525,180,2.074,191,3.204,217,0.571,227,4.102,229,0.788,231,0.985,233,2.074,234,2.813,238,1.206,240,1.287,247,1.293,248,1.598,258,1.206,259,2.074,261,1.665,263,1.924,264,2.198,286,1.03,293,1.389,295,1.826,308,0.695,341,0.985,343,1.555,372,0.843,381,1.081,399,0.875,411,0.788,412,0.762,415,1.535,426,0.843,455,1.081,456,2.101,463,4.077,465,2.619,467,4.77,476,0.815,479,4.004,480,2.619,481,3.582,482,3.711,487,1.287,488,2.937,493,1.287,496,0.875,515,0.843,525,1.206,527,2.347,528,2.576,529,3.432,531,0.985,563,1.967,569,1.139,574,0.945,588,1.081,590,0.908,591,1.851,598,2.714,610,1.535,616,1.826,620,1.206,630,1.206,639,3.823,640,1.139,644,2.175,666,1.287,672,1.081,683,4.896,699,1.206,701,3.381,702,2.788,704,2.956,719,2.175,740,1.03,742,1.389,747,1.139,748,1.924,751,3.16,763,1.206,767,1.525,789,1.389,790,1.206,791,1.287,809,1.389,831,1.389,834,1.826,836,2.343,837,1.924,840,4.817,894,1.287,895,1.525,896,1.03,897,1.081,898,1.525,900,3.32,904,1.206,906,2.261,939,2.175,941,2.038,955,1.525,957,1.081,968,1.287,979,3.773,982,2.347,985,1.206,987,1.525,1017,1.206,1018,2.175,1022,2.175,1031,1.741,1039,1.03,1041,1.081,1053,1.139,1055,1.081,1092,1.525,1170,2.372,1177,3.283,1178,1.924,1183,2.937,1187,1.389,1189,2.347,1191,2.824,1226,1.525,1274,2.937,1277,2.937,1284,2.499,1321,1.389,1322,1.389,1342,0.945,1386,1.139,1398,0.945,1423,2.038,1443,1.525,1455,1.206,1486,1.081,1522,2.724,1525,1.287,1531,1.287,1535,4.397,1536,1.206,1552,4.151,1567,1.741,1577,1.287,1585,2.647,1587,1.287,1588,2.824,1590,4.986,1596,3.477,1597,1.206,1598,1.139,1599,1.389,1651,1.139,1663,1.206,1674,1.206,1683,1.525,1689,1.741,1700,2.576,1701,3.047,1725,1.081,1736,1.525,1739,3.111,1776,1.287,1798,2.576,1808,1.525,1817,1.389,1818,1.525,1836,1.525,1842,4.395,1853,1.139,1862,1.389,1865,2.347,1882,1.03,1887,5.078,1915,1.525,1939,1.287,1957,1.525,1963,1.389,1967,1.924,1975,3.116,1976,1.389,1996,3.582,2000,1.287,2006,1.389,2028,1.287,2031,1.287,2072,1.525,2083,1.525,2103,1.525,2118,4.074,2157,2.175,2166,2.647,2174,1.525,2176,3.773,2178,1.389,2184,1.389,2185,1.924,2187,1.389,2190,3.773,2200,1.525,2211,2.038,2224,1.525,2241,1.389,2274,2.038,2275,1.389,2284,1.206,2298,4.027,2325,3.047,2344,1.389,2349,2.347,2352,1.206,2354,1.525,2359,2.038,2363,1.389,2410,2.038,2418,1.525,2427,3.047,2510,1.389,2525,1.525,2551,3.345,2564,1.081,2571,1.287,2608,1.389,2635,2.038,2641,1.389,2649,3.477,2668,1.287,2675,5.078,2682,2.175,2759,1.287,2761,1.287,2787,1.525,2791,1.389,2817,1.525,2854,1.139,2870,1.525,2896,1.389,2983,1.389,3012,2.175,3052,1.525,3076,1.389,3110,4.018,3124,3.111,3126,2.038,3130,2.038,3133,1.139,3157,2.038,3166,2.347,3168,1.287,3169,1.389,3174,1.389,3189,1.287,3201,1.389,3210,1.525,3222,2.175,3225,1.287,3230,1.525,3251,1.389,3252,2.824,3255,1.389,3262,2.576,3280,1.206,3289,1.287,3299,1.525,3307,1.525,3308,1.139,3338,1.389,3341,2.175,3347,2.937,3348,1.525,3364,2.347,3372,1.389,3374,1.389,3393,1.525,3398,1.206,3402,1.525,3405,1.287,3434,1.206,3447,1.525,3463,1.389,3467,1.206,3472,1.525,3523,1.389,3529,1.525,3540,5.338,3582,1.389,3707,1.525,3768,1.389,3775,1.389,3781,1.525,3782,1.525,3800,3.932,3816,1.287,3848,2.824,3852,1.525,3855,1.206,3868,1.525,3875,2.038,3895,1.389,3896,1.525,3919,1.139,4009,1.389,4023,1.525,4042,4.507,4045,1.525,4047,1.525,4054,1.525,4078,1.525,4105,1.389,4109,1.525,4120,1.525,4128,1.389,4131,2.576,4137,4.853,4143,1.389,4144,3.477,4147,1.525,4148,1.525,4156,1.389,4165,1.389,4169,2.576,4179,1.287,4204,1.389,4208,3.32,4265,1.525,4313,1.287,4316,3.047,4353,2.576,4355,3.582,4356,1.525,4361,1.389,4375,1.525,4390,1.389,4402,1.525,4403,1.525,4426,3.711,4443,4.507,4481,1.525,4485,1.525,4494,1.525,4525,4.395,4529,1.525,4534,2.347,4540,1.525,4553,1.525,4568,2.925,4569,1.731,4570,1.731,4571,1.731,4572,1.731,4573,1.731,4574,1.731,4575,1.731,4576,1.731,4577,1.731,4578,1.731,4579,1.731,4580,1.731,4581,1.731,4582,1.731,4583,2.925,4584,1.731,4585,1.731,4586,1.731,4587,1.731,4588,1.731,4589,1.731,4590,1.731,4591,1.731,4592,1.731,4593,1.731,4594,1.731,4595,1.731,4596,1.731,4597,1.731,4598,1.731,4599,1.731,4600,1.731,4601,1.731,4602,1.731,4603,1.731,4604,1.731,4605,1.731,4606,1.731,4607,1.731,4608,1.731,4609,1.731,4610,1.731,4611,1.731,4612,1.731,4613,1.525,4614,3.798,4615,1.731,4616,3.798,4617,2.925,4618,4.99,4619,2.925,4620,3.798,4621,1.731,4622,4.465,4623,1.731,4624,1.731,4625,2.925,4626,1.731,4627,1.731,4628,1.731,4629,1.731,4630,1.731,4631,1.731,4632,1.731,4633,1.731,4634,5.415,4635,1.731,4636,1.731,4637,1.731,4638,1.731,4639,1.731,4640,1.731,4641,1.731,4642,1.731,4643,1.731,4644,1.731,4645,1.731,4646,1.731,4647,2.925,4648,1.731,4649,2.925,4650,1.731,4651,1.731,4652,1.731,4653,2.925,4654,1.731,4655,1.731,4656,1.731,4657,3.798,4658,2.925,4659,2.925,4660,1.731,4661,1.731,4662,4.465,4663,1.731,4664,1.731,4665,1.731,4666,1.731,4667,1.731,4668,1.731,4669,1.731,4670,2.925,4671,1.731,4672,2.925,4673,1.731,4674,2.925,4675,1.731,4676,1.731,4677,1.731,4678,1.731,4679,1.731,4680,2.925,4681,2.925,4682,1.731,4683,2.925,4684,1.731,4685,1.731,4686,2.925,4687,1.731,4688,1.731,4689,1.731,4690,1.731,4691,1.731,4692,1.731,4693,2.925,4694,2.925,4695,1.731,4696,1.731,4697,1.731,4698,1.731,4699,1.731,4700,1.731,4701,1.731,4702,1.731,4703,1.731,4704,1.731,4705,1.731,4706,1.731,4707,1.731,4708,1.731,4709,2.925,4710,1.731,4711,1.731,4712,1.731,4713,1.731,4714,1.731,4715,1.731,4716,1.731,4717,1.731,4718,1.731,4719,1.731,4720,1.731,4721,1.731,4722,1.731,4723,1.731,4724,1.731,4725,1.731,4726,1.731,4727,1.731,4728,1.731,4729,1.731,4730,1.731,4731,1.731,4732,1.731,4733,1.731,4734,1.731,4735,1.731,4736,1.731,4737,1.731,4738,1.731,4739,1.731,4740,1.731,4741,1.731]],["title/additional-documentation/nestjs-application/decisions.html",[530,1.603,1370,1.831,4527,3.014]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.565,25,0.008,47,2.604,55,0.006,56,0.008,57,0.006,171,1.226,180,3.888,209,1.424,211,1.615,217,1.888,226,3.573,234,2.855,239,3.764,262,3.406,326,3.406,413,3.241,475,4.255,476,2.693,480,3.002,515,2.788,591,2.788,595,4.685,596,3.764,610,3.002,639,3.257,744,3.764,748,3.764,751,2.693,905,5.04,957,4.842,964,3.764,979,3.987,1277,4.685,1342,3.124,1522,3.124,1558,5.714,1567,4.239,1666,3.987,1764,4.59,1853,3.764,1946,4.59,1970,3.987,2057,5.04,2113,5.767,2118,3.257,2140,4.59,2270,5.101,2286,5.04,2347,3.987,2405,3.764,2481,5.714,2503,5.04,2564,3.573,2706,5.04,2759,4.255,3123,3.987,3308,3.764,3748,4.59,3830,4.59,4071,3.764,4130,5.714,4144,3.987,4156,4.59,4313,4.255,4346,5.04,4527,5.714,4613,5.04,4742,5.722,4743,5.722,4744,5.722,4745,5.722,4746,5.722,4747,5.722,4748,5.722,4749,5.722,4750,5.722,4751,7.122,4752,5.722,4753,5.722,4754,5.722,4755,5.722,4756,5.722,4757,5.722,4758,5.722,4759,5.722,4760,5.722,4761,5.722,4762,5.722,4763,5.722,4764,5.722]],["title/additional-documentation/nestjs-application/vscode.html",[530,1.603,1370,1.831,4063,3.014]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.196,25,0.009,52,3.953,55,0.007,56,0.008,57,0.007,227,3.671,263,4.126,264,3.319,291,3.917,463,3.057,515,3.671,602,3.319,1204,4.371,1522,3.425,1532,4.126,1567,3.734,1598,4.126,1628,4.665,1692,4.704,1699,4.665,1724,4.126,1776,4.665,2109,4.665,2118,3.571,2185,4.126,2396,6.044,2728,5.032,3140,3.917,3141,6.636,3358,4.371,3469,5.525,3819,7.112,3846,5.525,3875,5.25,3919,4.126,3952,5.032,4061,5.525,4063,6.044,4064,5.525,4765,6.272,4766,6.272,4767,6.272,4768,6.272,4769,6.272,4770,6.272,4771,6.272,4772,6.272,4773,6.272,4774,6.272]],["title/additional-documentation/nestjs-application/git.html",[530,1.603,1370,1.831,3173,3.014]],["body/additional-documentation/nestjs-application/git.html",[25,0.009,55,0.007,56,0.009,57,0.007,299,3.907,412,3.023,834,4.286,836,3.601,1434,4.515,1444,4.085,2792,4.782,2889,5.908,3173,6.727,4224,6.045,4775,6.863,4776,6.863,4777,6.863,4778,6.863,4779,6.863]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":975,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":3040,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":3077,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":3088,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":3002,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":2992,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":3001,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":3066,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":3100,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":3092,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":3059,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3051,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":3091,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":2986,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":3044,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2898,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2935,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2940,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2931,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2909,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2919,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2897,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2917,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2916,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2928,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2939,"title":{},"body":{"coverage.html":{}}}],["0000d224816abba584714c9c",{"_index":4716,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":4718,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":1760,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1755,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1901,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1752,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2429,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1710,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1748,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2039,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1896,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1274,"title":{},"body":{"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":3067,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3080,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":3027,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":3014,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":3062,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":4670,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":3024,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3108,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":3078,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":2997,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":2964,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":4672,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":2993,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":2414,"title":{},"body":{"changelog.html":{}}}],["1.28.1",{"_index":3030,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":2965,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":3005,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2900,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2908,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2906,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2932,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2936,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2930,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2946,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2938,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1368,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":2899,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["11",{"_index":1734,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["12",{"_index":2146,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["12.0.0",{"_index":3069,"title":{},"body":{"dependencies.html":{}}}],["1289",{"_index":2276,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1894,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["1316",{"_index":2512,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":2322,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":2320,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1743,"title":{},"body":{"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["1499",{"_index":1789,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1729,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":1829,"title":{},"body":{"changelog.html":{}}}],["1589",{"_index":2317,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1718,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":3025,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":2296,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":1923,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":2170,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":1978,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["19",{"_index":1878,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":3421,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":4758,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":4757,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":1996,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":3028,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":3042,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":3063,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":3087,"title":{},"body":{"dependencies.html":{}}}],["2.306.0",{"_index":2991,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":2989,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":3009,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":2937,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1871,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":3185,"title":{},"body":{"license.html":{}}}],["2020",{"_index":2145,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":1709,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":1711,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["22",{"_index":2437,"title":{},"body":{"changelog.html":{}}}],["22.10.0",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":2862,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":2856,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":2824,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":2819,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":2853,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":2849,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":2847,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":2844,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":2832,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":2831,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2445,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["23.0.0",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":2738,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":2686,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":2672,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":2636,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":2630,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":2605,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":2604,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":2596,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":2592,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":2585,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":2560,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":2558,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":2555,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":2549,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":2546,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":2535,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":2533,"title":{},"body":{"changelog.html":{}}}],["2418",{"_index":1762,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1917,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":2531,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":2528,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":2496,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":2493,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":2490,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":2527,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":2521,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":2518,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":2516,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":2515,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":2511,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":2504,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":2500,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":2465,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":2460,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":2428,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":2424,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":2422,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":2421,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":2456,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":2455,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":2452,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":2449,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":2444,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":2439,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":2436,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":2434,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":2162,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":2378,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":2375,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":2374,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":2368,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":2367,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":2366,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":2198,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":2192,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":2181,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":2160,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":2158,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":2153,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":2150,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":2144,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":2141,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":2136,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":2135,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":2106,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":2105,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":2054,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":2053,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":2051,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":2049,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":2046,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":2042,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":2038,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":2101,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":2048,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":2080,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":2078,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":2070,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":2068,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":2065,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":2058,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":2003,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":2001,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":1931,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":1926,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":1952,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":1948,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":1995,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":1991,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":1988,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":1986,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":1982,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":1977,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":1964,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":1958,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":1959,"title":{},"body":{"changelog.html":{}}}],["26.0",{"_index":1927,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":1933,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":1930,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":1895,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":1893,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":1888,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":1885,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":1880,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":1877,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":1870,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":1929,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":1922,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":1916,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":1913,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":1909,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":1907,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":1900,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":1899,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":1857,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":1759,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":1754,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":1751,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":1747,"title":{},"body":{"changelog.html":{}}}],["26.3.1",{"_index":1742,"title":{},"body":{"changelog.html":{}}}],["26.4.0",{"_index":1733,"title":{},"body":{"changelog.html":{}}}],["26.4.1",{"_index":1728,"title":{},"body":{"changelog.html":{}}}],["26.4.2",{"_index":1723,"title":{},"body":{"changelog.html":{}}}],["26.4.3",{"_index":1721,"title":{},"body":{"changelog.html":{}}}],["26.4.4",{"_index":1717,"title":{},"body":{"changelog.html":{}}}],["26.4.5",{"_index":1708,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":2541,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":2691,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2440,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["29",{"_index":1914,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":2869,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":3871,"title":{},"body":{"todo.html":{}}}],["3",{"_index":1585,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":3073,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":3082,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":4709,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":3070,"title":{},"body":{"dependencies.html":{}}}],["3.1.20",{"_index":3061,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":3106,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":2984,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":3083,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":2927,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1910,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030",{"_index":3934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":1902,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":2905,"title":{},"body":{"coverage.html":{}}}],["3395",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["36",{"_index":3843,"title":{},"body":{"overview.html":{}}}],["3607",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":2879,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":2890,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2635,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":2999,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":3096,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":3020,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":3037,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":2967,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":3003,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":2959,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":2966,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3021,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":2977,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":3128,"title":{},"body":{"index.html":{}}}],["4/5",{"_index":2923,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":2925,"title":{},"body":{"coverage.html":{}}}],["4008",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":3883,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":4565,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":705,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["4215",{"_index":2820,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":2381,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":2033,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":2209,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":2246,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":2725,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1817,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":2988,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":3105,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":3023,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":3065,"title":{},"body":{"dependencies.html":{}}}],["5.12.3",{"_index":3045,"title":{},"body":{"dependencies.html":{}}}],["5/21",{"_index":2934,"title":{},"body":{"coverage.html":{}}}],["5/27",{"_index":2933,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2907,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":4556,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":1840,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":2485,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":2654,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":2606,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":2088,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":2593,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":2221,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":2544,"title":{},"body":{"changelog.html":{}}}],["5686",{"_index":2657,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":2924,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":2614,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":2631,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":2299,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":2637,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":2568,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":4717,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":1818,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":3007,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2979,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":1875,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":3084,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":3071,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2926,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["6060",{"_index":2290,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":2287,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":2340,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":2570,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":1702,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":2582,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":2474,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":2394,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":2566,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":2559,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":2561,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":2386,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":2334,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":2279,"title":{},"body":{"changelog.html":{}}}],["6637",{"_index":2550,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":2539,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":2491,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":1934,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":2222,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":2269,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":2369,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":2547,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":2225,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":2470,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":2388,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":2392,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":2477,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":2466,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":2482,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":2389,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":2522,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":1815,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":2505,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":2517,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":2402,"title":{},"body":{"changelog.html":{}}}],["6b",{"_index":3500,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3518,"title":{},"body":{"license.html":{}}}],["7",{"_index":1548,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":3010,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":2975,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":2970,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":2974,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":3019,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":2969,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":2968,"title":{},"body":{"dependencies.html":{}}}],["7.6.17",{"_index":2972,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":1837,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":2266,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":2384,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":2230,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":2457,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":2419,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":2501,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":2204,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":2385,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":2461,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":2494,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":2237,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":2228,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":2280,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":2438,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":2326,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":2229,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":2242,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":2283,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":2291,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":2235,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":2362,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":2450,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":2335,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":2267,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":2188,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":2441,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":2256,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":2330,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":2327,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":2262,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":2208,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":2260,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":2351,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":2355,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":2240,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":2219,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":2435,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":2423,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":2425,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":2379,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":2182,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":2124,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":2376,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":2022,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":2114,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":2107,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":2201,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":2202,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":2199,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":1779,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":2302,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":2358,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":2257,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":1775,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":1824,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":2159,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2575,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":3103,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":1876,"title":{},"body":{"changelog.html":{}}}],["8.5.0",{"_index":2981,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":3032,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2922,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["8020",{"_index":2127,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":2115,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":2117,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":2193,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":4024,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["8101",{"_index":2163,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":2154,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":2122,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":2102,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":2138,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":2147,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":1953,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":2032,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":2110,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":2129,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":2130,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":2151,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":1768,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":2128,"title":{},"body":{"changelog.html":{}}}],["8300",{"_index":2037,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":2079,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":2094,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":2099,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":2009,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":2132,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":1771,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":2081,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":2096,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":2026,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":2007,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":1773,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":2085,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":2047,"title":{},"body":{"changelog.html":{}}}],["8440",{"_index":1807,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":2073,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":2050,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":1965,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":2066,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":2012,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":2069,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":2052,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":1835,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":2059,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":2055,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":2040,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":2004,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":1940,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":2023,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":2043,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":1820,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":1987,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":1979,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":1983,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":1943,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":1903,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":1960,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":1851,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":1861,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":1872,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":1908,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":1955,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":1846,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":1949,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":1918,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":1911,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":1782,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":1868,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":1749,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":1897,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":1879,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":1858,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":1886,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":1889,"title":{},"body":{"changelog.html":{}}}],["8933",{"_index":1848,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":1881,"title":{},"body":{"changelog.html":{}}}],["8959",{"_index":1695,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":1785,"title":{},"body":{"changelog.html":{}}}],["9003",{"_index":1681,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":1735,"title":{},"body":{"changelog.html":{}}}],["9018",{"_index":1680,"title":{},"body":{"changelog.html":{}}}],["9029",{"_index":1730,"title":{},"body":{"changelog.html":{}}}],["9055",{"_index":1810,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":1802,"title":{},"body":{"changelog.html":{}}}],["9092",{"_index":1690,"title":{},"body":{"changelog.html":{}}}],["9093",{"_index":1685,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":1756,"title":{},"body":{"changelog.html":{}}}],["9134",{"_index":1744,"title":{},"body":{"changelog.html":{}}}],["9139",{"_index":1722,"title":{},"body":{"changelog.html":{}}}],["9156",{"_index":1712,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":4031,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["99",{"_index":1374,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":3148,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":439,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":657,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":680,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":693,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":4357,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":681,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":695,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":4040,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":208,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":1256,"title":{},"body":{"classes/NewsScope.html":{}}}],["_timeout",{"_index":1600,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.m",{"_index":3177,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":4609,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":3560,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":3175,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":3445,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":3809,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":257,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":4278,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accept",{"_index":3640,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":3639,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":3860,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["accepts",{"_index":2795,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":465,"title":{},"body":{"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accessable",{"_index":4343,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":368,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["accessible",{"_index":2345,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":2360,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":1260,"title":{},"body":{"classes/NewsScope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":3485,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":3813,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":3257,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3444,"title":{},"body":{"license.html":{}}}],["according",{"_index":1765,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":791,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":789,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":2403,"title":{},"body":{"changelog.html":{}}}],["achieve",{"_index":3817,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":3384,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3688,"title":{},"body":{"license.html":{}}}],["act",{"_index":4608,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":2321,"title":{},"body":{"changelog.html":{}}}],["actions",{"_index":2728,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":2875,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":2638,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":878,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":3301,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3729,"title":{},"body":{"license.html":{}}}],["actors",{"_index":4466,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":3710,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":3539,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":3279,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":4135,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":1444,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":3987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":899,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adding",{"_index":1777,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":530,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4432,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":4021,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":1257,"title":{},"body":{"classes/NewsScope.html":{}}}],["addquery(query",{"_index":1263,"title":{},"body":{"classes/NewsScope.html":{}}}],["address",{"_index":3763,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":2652,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":3275,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":2371,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":2125,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adduser",{"_index":1852,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":4491,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":1670,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":1997,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2226,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":2871,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2583,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":2545,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":1860,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":3419,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3566,"title":{},"body":{"license.html":{}}}],["advised",{"_index":3801,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3567,"title":{},"body":{"license.html":{}}}],["affero",{"_index":3183,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":3669,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3381,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":4679,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":4681,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach",{"_index":4602,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":4724,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":4600,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":2628,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":3434,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":4255,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":3472,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":4155,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":2665,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":4132,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":4346,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":3837,"title":{},"body":{"license.html":{}}}],["agree",{"_index":3746,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":3788,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":4463,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":3697,"title":{},"body":{"license.html":{}}}],["aims",{"_index":4072,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":2980,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":1892,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":2324,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":854,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":3902,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":4125,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":2513,"title":{},"body":{"changelog.html":{}}}],["alleging",{"_index":3676,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1776,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":1486,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":1628,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alone",{"_index":4598,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":3447,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":1204,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":3240,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3496,"title":{},"body":{"license.html":{}}}],["always",{"_index":4156,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":1867,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqp",{"_index":2982,"title":{},"body":{"dependencies.html":{}}}],["amqpconnection",{"_index":926,"title":{},"body":{"injectables/MailService.html":{}}}],["amqplib",{"_index":2985,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":4048,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":3099,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":3641,"title":{},"body":{"license.html":{}}}],["and/opr",{"_index":4624,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["and/or",{"_index":3233,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":4367,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":4349,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":4121,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anti",{"_index":3407,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":2377,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2473,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":3457,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3288,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":4417,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":47,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"controllers/ServerController.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api_path",{"_index":2902,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_validation_error",{"_index":46,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":3938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":448,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty({description",{"_index":1224,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({enum",{"_index":1245,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":1243,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":1101,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional({description",{"_index":1241,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apipropertyoptional({type",{"_index":1238,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":4096,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":1049,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["apitags('news",{"_index":1063,"title":{},"body":{"controllers/NewsController.html":{}}}],["apitags('task",{"_index":1488,"title":{},"body":{"controllers/TaskController.html":{}}}],["apivalidationerror",{"_index":1,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":771,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":76,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":58,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["app",{"_index":702,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/NestAppHolder.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":4726,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":4721,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":303,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":302,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":300,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":301,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":2044,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":2818,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":3900,"title":{},"body":{"todo.html":{}}}],["appendedattachment",{"_index":85,"title":{"interfaces/AppendedAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["applicable",{"_index":3293,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":4033,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":264,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["application).service(path",{"_index":625,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["applications",{"_index":3123,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":4431,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":3769,"title":{},"body":{"license.html":{}}}],["apply",{"_index":832,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":3939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":4730,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":4111,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":3313,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":3439,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":3808,"title":{},"body":{"license.html":{}}}],["apps",{"_index":3974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":3962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":3913,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":3924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":3903,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../create",{"_index":3928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":3933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":3929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":3904,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":3906,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":3112,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":3111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":3927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":3932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":3912,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":3907,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.uc.ts",{"_index":3908,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../rabbitmqclient.ts",{"_index":3931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../server",{"_index":3930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../sorting.ts",{"_index":3910,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":3113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../swagger.ts",{"_index":3925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.schema.ts",{"_index":3926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../value",{"_index":3914,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":4016,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":4055,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":3968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":4060,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":3978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":632,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/constants.ts",{"_index":2901,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":288,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":59,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":520,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":522,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":1654,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":511,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":641,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":805,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":581,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":2912,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":830,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":808,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":819,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":817,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":823,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":814,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":821,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":913,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":887,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":737,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":1659,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/legacyconnection/nestappholder.ts",{"_index":991,"title":{},"body":{"classes/NestAppHolder.html":{},"coverage.html":{}}}],["apps/server/src/legacyconnection/nestappholder.ts:10",{"_index":996,"title":{},"body":{"classes/NestAppHolder.html":{}}}],["apps/server/src/legacyconnection/nestappholder.ts:14",{"_index":998,"title":{},"body":{"classes/NestAppHolder.html":{}}}],["apps/server/src/legacyconnection/nestappholder.ts:4",{"_index":994,"title":{},"body":{"classes/NestAppHolder.html":{}}}],["apps/server/src/main.ts",{"_index":2918,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":846,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":2920,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":842,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":787,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":858,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18",{"_index":861,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8",{"_index":859,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":146,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":153,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":176,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:37",{"_index":166,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:57",{"_index":179,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":159,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":534,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":940,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":600,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":587,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/mail/interfaces/mail.ts",{"_index":87,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.module.ts",{"_index":920,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/server/src/modules/mail/mail.service.ts",{"_index":923,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:12",{"_index":929,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:9",{"_index":927,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/mail/rabbitmqclient.ts",{"_index":2929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":424,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":1088,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1223,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:15",{"_index":1231,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:20",{"_index":1247,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:25",{"_index":1225,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:30",{"_index":1230,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:37",{"_index":1240,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:42",{"_index":1242,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:49",{"_index":1246,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:55",{"_index":1244,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:60",{"_index":1236,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:65",{"_index":1229,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:70",{"_index":1250,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:75",{"_index":1227,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:80",{"_index":1248,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:85",{"_index":1233,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":1415,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":1625,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":1650,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":1015,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:19",{"_index":1023,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:30",{"_index":1033,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:46",{"_index":1036,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:57",{"_index":1046,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:68",{"_index":1027,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/entity/course",{"_index":333,"title":{},"body":{"classes/CourseInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts",{"_index":342,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:101",{"_index":355,"title":{},"body":{"classes/CourseNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:107",{"_index":1593,"title":{},"body":{"classes/TeamNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:30",{"_index":1011,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:34",{"_index":1002,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:38",{"_index":1004,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:41",{"_index":1005,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:44",{"_index":1007,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:47",{"_index":1008,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:51",{"_index":1009,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:55",{"_index":1010,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:58",{"_index":1006,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:61",{"_index":1003,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:64",{"_index":1012,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:66",{"_index":1001,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:76",{"_index":1013,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:95",{"_index":1419,"title":{},"body":{"classes/SchoolNews.html":{}}}],["apps/server/src/modules/news/entity/news.types.ts",{"_index":773,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/entity/school",{"_index":1407,"title":{},"body":{"classes/SchoolInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/team",{"_index":1592,"title":{},"body":{"classes/TeamInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/user",{"_index":1635,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1109,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:28",{"_index":1117,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:42",{"_index":1115,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:55",{"_index":1121,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:7",{"_index":1119,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":1408,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":1643,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1171,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1254,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1184,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:10",{"_index":1190,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:13",{"_index":1206,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:24",{"_index":1196,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:39",{"_index":1200,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:44",{"_index":1193,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:48",{"_index":1198,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1292,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:102",{"_index":1318,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:126",{"_index":1303,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:13",{"_index":1299,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:137",{"_index":1310,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:157",{"_index":1316,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:175",{"_index":1309,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:185",{"_index":1312,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:25",{"_index":1301,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:52",{"_index":1305,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:78",{"_index":1307,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":1565,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:11",{"_index":1573,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:14",{"_index":1570,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:17",{"_index":1572,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":1574,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":1571,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":1576,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":1575,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":1473,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:22",{"_index":1475,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts",{"_index":309,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:13",{"_index":316,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:16",{"_index":315,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:19",{"_index":321,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:6",{"_index":314,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts",{"_index":880,"title":{},"body":{"classes/Lesson.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:11",{"_index":883,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:8",{"_index":884,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts",{"_index":1453,"title":{},"body":{"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:12",{"_index":1459,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:9",{"_index":1457,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts",{"_index":1462,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:12",{"_index":1465,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:15",{"_index":1469,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:18",{"_index":1464,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:21",{"_index":1467,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:9",{"_index":1468,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":1496,"title":{},"body":{"classes/TaskMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:7",{"_index":1498,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":1515,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:14",{"_index":1519,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:9",{"_index":1517,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.schema.ts",{"_index":2941,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":1512,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":1578,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:12",{"_index":1583,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:9",{"_index":1581,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/server.controller.ts",{"_index":1421,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":1422,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":1427,"title":{},"body":{"modules/ServerModule.html":{}}}],["apps/server/src/shared/$1",{"_index":3977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":6,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":256,"title":{},"body":{"classes/BusinessError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":269,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":271,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":270,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":268,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:26",{"_index":272,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":2947,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":484,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":458,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":1594,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":1606,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":1604,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":1603,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":1608,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":1610,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":1367,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":1375,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":1378,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":1385,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:12",{"_index":1389,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:15",{"_index":1392,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:18",{"_index":1391,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:21",{"_index":1390,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":1388,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":1397,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":2948,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":2950,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":207,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":215,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":246,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":250,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":249,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":253,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":213,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/interface/pagination.interface.ts",{"_index":827,"title":{},"body":{"interfaces/IPagination.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/interface/sorting.ts",{"_index":2952,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":3916,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":3920,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":3921,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":2954,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["arc",{"_index":2319,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":4071,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":4429,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":3832,"title":{},"body":{"license.html":{}}}],["archives",{"_index":4480,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":4605,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":4493,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":2987,"title":{},"body":{"dependencies.html":{}}}],["argument",{"_index":4655,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":651,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":4104,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":3792,"title":{},"body":{"license.html":{}}}],["around",{"_index":3844,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":3707,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":3718,"title":{},"body":{"license.html":{}}}],["array",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["array.isarray(constraint",{"_index":79,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":561,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["arrays",{"_index":2391,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":3416,"title":{},"body":{"license.html":{}}}],["asc",{"_index":4006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asking",{"_index":2459,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":4248,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":4118,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":3230,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":3658,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":4402,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assignment",{"_index":2010,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":3365,"title":{},"body":{"license.html":{}}}],["assume",{"_index":3784,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":4444,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":3812,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3606,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":154,"title":{},"body":{"injectables/AuthorizationService.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":2418,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynclocalstorage",{"_index":4326,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":4223,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":3819,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attachment",{"_index":95,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attachments",{"_index":98,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attempt",{"_index":3617,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":2248,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2131,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":1981,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":3590,"title":{},"body":{"license.html":{}}}],["aud",{"_index":797,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":796,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":4320,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth.guard.ts",{"_index":843,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":150,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":535,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":543,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":551,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":553,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":547,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":545,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":549,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":851,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":857,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":856,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{}}}],["authenticate",{"_index":1057,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":1064,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authenticated",{"_index":794,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":4331,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2359,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authentication/decorator/auth.decorator",{"_index":1058,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authentication/interface/jwt",{"_index":1059,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authguard",{"_index":844,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":845,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":109,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3589,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":1587,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":148,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorization/authorization.module",{"_index":1174,"title":{},"body":{"modules/NewsModule.html":{}}}],["authorization/authorization.service",{"_index":1319,"title":{},"body":{"injectables/NewsUc.html":{}}}],["authorizationmodule",{"_index":138,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":144,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":3582,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":3683,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":3722,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3595,"title":{},"body":{"license.html":{}}}],["auto",{"_index":4038,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["automated",{"_index":4568,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":1796,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":2634,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":1883,"title":{},"body":{"changelog.html":{}}}],["availability",{"_index":4573,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":1689,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoid",{"_index":1700,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoiding",{"_index":4088,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":191,"title":{},"body":{"injectables/AuthorizationService.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":4625,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":3207,"title":{},"body":{"license.html":{}}}],["aws",{"_index":2872,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":2281,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":3345,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":1740,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["background",{"_index":4134,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":1182,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":4504,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":2339,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":1403,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":1406,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["base",{"_index":258,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base64",{"_index":3102,"title":{},"body":{"dependencies.html":{}}}],["base64content",{"_index":90,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["based",{"_index":592,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":206,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":255,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentity:7",{"_index":254,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentitywithtimestamps",{"_index":222,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":322,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:22",{"_index":324,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:25",{"_index":323,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:28",{"_index":325,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["basic",{"_index":3374,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":4288,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":4287,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":4294,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":2035,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bcc",{"_index":106,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["bcryptjs",{"_index":2994,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":3989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":3990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":3242,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":3253,"title":{},"body":{"license.html":{}}}],["before",{"_index":415,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":4669,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":4657,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":4034,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":3149,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":3394,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":4704,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":293,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":1599,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":2344,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":3716,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":4114,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":4200,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":3402,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":3236,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":4276,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":3919,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":3816,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":966,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":2092,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":2045,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1739,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":3474,"title":{},"body":{"license.html":{}}}],["bind",{"_index":2618,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":2337,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":2591,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":2587,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":4297,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bl",{"_index":1530,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["blackbox",{"_index":4577,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":4585,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["bob",{"_index":4479,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":1047,"title":{},"body":{"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":3094,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":785,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":2951,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boolish",{"_index":3115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstraps",{"_index":4656,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["both",{"_index":2408,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["box",{"_index":4648,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":1928,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":1795,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brandenburg",{"_index":1813,"title":{},"body":{"changelog.html":{}}}],["brb",{"_index":2061,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":4474,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":4274,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":2197,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":3840,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":3838,"title":{},"body":{"modules.html":{}}}],["btw",{"_index":241,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":4307,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":2497,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":4182,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":668,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["builder",{"_index":1551,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["building",{"_index":1855,"title":{},"body":{"changelog.html":{}}}],["buildpipelines",{"_index":1763,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":4023,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":1769,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":1874,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":4211,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":3850,"title":{},"body":{"todo.html":{}}}],["business",{"_index":259,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":42,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror",{"_index":9,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":31,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:12",{"_index":35,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:14",{"_index":34,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:16",{"_index":33,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:26",{"_index":36,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businessexception",{"_index":4555,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["bytargets",{"_index":1258,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1265,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1259,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1267,"title":{},"body":{"classes/NewsScope.html":{}}}],["c",{"_index":3187,"title":{},"body":{"license.html":{}}}],["caches",{"_index":4180,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":2503,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["calculating",{"_index":3165,"title":{},"body":{"index.html":{}}}],["calendar",{"_index":4337,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":488,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":987,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["called",{"_index":2649,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":4260,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":494,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":700,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":2157,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":4401,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":4168,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":4712,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":2696,"title":{},"body":{"changelog.html":{}}}],["capitalization",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":4242,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":2185,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":4301,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":4529,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":4560,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":3451,"title":{},"body":{"license.html":{}}}],["case",{"_index":529,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":3252,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":644,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch(error",{"_index":648,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":4309,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":1615,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":1618,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":4311,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":4112,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":4138,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":1961,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":2468,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":901,"title":{},"body":{"injectables/Logger.html":{}}}],["cc",{"_index":105,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["cease",{"_index":3621,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":774,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":2548,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":3579,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":3632,"title":{},"body":{"license.html":{}}}],["chain",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["chains",{"_index":1701,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["chalk",{"_index":2998,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":4284,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":1674,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":892,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":1664,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1666,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":1950,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":1732,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":2484,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":4341,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":3557,"title":{},"body":{"license.html":{}}}],["charge",{"_index":3219,"title":{},"body":{"license.html":{}}}],["chat",{"_index":1920,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":4191,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":233,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checked",{"_index":4250,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":155,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":160,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":742,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":3159,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":3171,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":2571,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkusernotexistbyemail(email",{"_index":4520,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["children",{"_index":2196,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":2641,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":3773,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":4256,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":3072,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":1973,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":1791,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":3400,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3408,"title":{},"body":{"license.html":{}}}],["civil",{"_index":3811,"title":{},"body":{"license.html":{}}}],["claim",{"_index":3673,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3685,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":583,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":835,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":2410,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":2363,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clear",{"_index":3507,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":4534,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":4056,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":2060,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["client",{"_index":262,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":4204,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":962,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["clipboard",{"_index":2863,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":3172,"title":{},"body":{"index.html":{}}}],["close",{"_index":982,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closed",{"_index":4683,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":3807,"title":{},"body":{"license.html":{}}}],["closing",{"_index":2174,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":3117,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":1707,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["cloud.org",{"_index":2868,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":935,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":3049,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":3035,"title":{},"body":{"dependencies.html":{}}}],["clouds",{"_index":2602,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2133,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":139,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":140,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":141,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":142,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":282,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":283,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":584,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":586,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":585,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":910,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":911,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":912,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":916,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":917,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":918,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1166,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1167,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1169,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1168,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":1424,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":1425,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":1509,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":1510,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluttered",{"_index":4303,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":2891,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":2538,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":13,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":2551,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":754,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":4100,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":3748,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":3961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":326,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":317,"title":{},"body":{"classes/Course.html":{}}}],["collections",{"_index":1727,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":310,"title":{},"body":{"classes/Course.html":{}}}],["columnnames",{"_index":2656,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":3758,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":1484,"title":{},"body":{"controllers/TaskController.html":{},"license.html":{}}}],["come",{"_index":3247,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3458,"title":{},"body":{"license.html":{}}}],["command",{"_index":4497,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commands",{"_index":3323,"title":{},"body":{"license.html":{}}}],["commentschema",{"_index":2806,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":3542,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2312,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":3698,"title":{},"body":{"license.html":{}}}],["committing",{"_index":3170,"title":{},"body":{"index.html":{}}}],["common",{"_index":3022,"title":{},"body":{"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":2278,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":4146,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":3370,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":3203,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":4404,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":665,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":4293,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":4753,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":3466,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3473,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3732,"title":{},"body":{"license.html":{}}}],["compile",{"_index":482,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":3352,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":2361,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":3158,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completely",{"_index":4228,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":904,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":3654,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":4122,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":3391,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":4050,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":1939,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":4186,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4105,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":1834,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":3004,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":3296,"title":{},"body":{"license.html":{}}}],["concept",{"_index":1697,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":4360,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":3764,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":4425,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrently",{"_index":3006,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":4589,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":3726,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1588,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":4193,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":1434,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":3947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":2264,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":932,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('mail_send_exchange",{"_index":4002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration.get('rabbitmq_uri",{"_index":4004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration.get('request_timeout",{"_index":4005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurations",{"_index":4062,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":1686,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":290,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":4359,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":2627,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connection",{"_index":984,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"todo.html":{}}}],["connections",{"_index":1781,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":2809,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":4280,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":1809,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":1956,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":3643,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":3791,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3608,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":4526,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":2076,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":2143,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":4449,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":4053,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["conspicuously",{"_index":3438,"title":{},"body":{"license.html":{}}}],["const",{"_index":73,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":3383,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":77,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":4184,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject(request",{"_index":622,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(amqpconnection",{"_index":925,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(apivalidationerror",{"_index":66,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(data",{"_index":1387,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":1188,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":158,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":541,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":1656,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(newsrepo",{"_index":1298,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(partial",{"_index":312,"title":{},"body":{"classes/Course.html":{}}}],["constructor(private",{"_index":188,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/MailService.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":335,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["constructor(readonly",{"_index":44,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":627,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(taskrepo",{"_index":1580,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":521,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":266,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(validationerrors",{"_index":20,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":3736,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3524,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":4226,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contact",{"_index":1822,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":3733,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":4093,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":2311,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":3154,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":3610,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":345,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contentdisposition",{"_index":89,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contentid",{"_index":94,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contents",{"_index":3695,"title":{},"body":{"license.html":{}}}],["context",{"_index":496,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":4714,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":2139,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":3551,"title":{},"body":{"license.html":{}}}],["contract",{"_index":4092,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":3605,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":3742,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3210,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":3682,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3684,"title":{},"body":{"license.html":{}}}],["control",{"_index":2764,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":3687,"title":{},"body":{"license.html":{}}}],["controller",{"_index":456,"title":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('news",{"_index":1065,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('task",{"_index":1489,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller.ts",{"_index":4373,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/auth.controller",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/dto",{"_index":1122,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["controller/news.controller",{"_index":1173,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":1513,"title":{},"body":{"modules/TaskModule.html":{}}}],["controllers",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":3316,"title":{},"body":{"license.html":{}}}],["convention",{"_index":4581,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":4143,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["converted",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":3302,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3720,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3558,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3310,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3604,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":3202,"title":{},"body":{"license.html":{}}}],["copies",{"_index":3196,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2194,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":3264,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":3198,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3186,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3272,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3397,"title":{},"body":{"license.html":{}}}],["core",{"_index":289,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":4779,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":1440,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":4561,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":1175,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":4538,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":281,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2176,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":3786,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":2675,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":3355,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":3008,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":3494,"title":{},"body":{"license.html":{}}}],["count",{"_index":1073,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["counted",{"_index":1207,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1216,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["counterclaim",{"_index":3674,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":3922,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":2121,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":2205,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":3300,"title":{},"body":{"license.html":{}}}],["country",{"_index":3712,"title":{},"body":{"license.html":{}}}],["counts",{"_index":3918,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":4275,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":4102,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":308,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course.entity",{"_index":885,"title":{},"body":{"classes/Lesson.html":{},"classes/Task.html":{}}}],["coursegroups",{"_index":1528,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["courseid",{"_index":882,"title":{},"body":{"classes/Lesson.html":{},"classes/Task.html":{}}}],["courseinfo",{"_index":332,"title":{"classes/CourseInfo.html":{}},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["coursemodel",{"_index":3996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursename",{"_index":1568,"title":{},"body":{"classes/TaskResponse.html":{}}}],["coursenews",{"_index":341,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":416,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courses",{"_index":329,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["courseschema",{"_index":2942,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursesofstudent",{"_index":1537,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["court",{"_index":3741,"title":{},"body":{"license.html":{}}}],["courts",{"_index":3806,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3702,"title":{},"body":{"license.html":{}}}],["cover",{"_index":3166,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":2119,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":3963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":3964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":3966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":3285,"title":{},"body":{"license.html":{}}}],["covers",{"_index":4702,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":1831,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":704,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":1066,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":1021,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":1300,"title":{},"body":{"injectables/NewsUc.html":{}}}],["created",{"_index":897,"title":{},"body":{"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":242,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{}}}],["createerrorresponse",{"_index":645,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":654,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":2910,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":684,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":2911,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":691,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":673,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":707,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":690,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":711,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":686,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":353,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":391,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createmikroormmodule",{"_index":958,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createmikroormmodule(options",{"_index":981,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["createnestapplication",{"_index":4710,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":4436,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":423,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":3944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":670,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createtestmodule",{"_index":477,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":427,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":1971,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":749,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":346,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":359,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":4282,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":3328,"title":{},"body":{"license.html":{}}}],["critical",{"_index":4239,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":2433,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":291,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":4318,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":4427,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":4496,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":3011,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2426,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":729,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":731,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":3945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":225,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":3635,"title":{},"body":{"license.html":{}}}],["current",{"_index":1232,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":968,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":2660,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":1024,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":1069,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.userid",{"_index":1068,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":531,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":4557,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":3487,"title":{},"body":{"license.html":{}}}],["customary",{"_index":3755,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3491,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":294,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":908,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":4079,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycles",{"_index":4119,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":3464,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3789,"title":{},"body":{"license.html":{}}}],["dash",{"_index":2350,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["data",{"_index":751,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data/rules",{"_index":4209,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":4201,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":639,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":1446,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":943,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:47",{"_index":947,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:57",{"_index":951,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":942,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":4754,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":4160,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":1524,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["date",{"_index":243,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":507,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["dated",{"_index":4300,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1693,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":983,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":4279,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":633,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["db_url",{"_index":634,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["db_username",{"_index":635,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["dbs",{"_index":4267,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":2663,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":4458,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":1905,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1523,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["deata",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":809,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["debug(message",{"_index":813,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":824,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":3141,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":4047,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["december",{"_index":3420,"title":{},"body":{"license.html":{}}}],["decide",{"_index":3771,"title":{},"body":{"license.html":{},"todo.html":{}}}],["decision",{"_index":1767,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":4527,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declarations",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["declare",{"_index":2524,"title":{},"body":{"changelog.html":{}}}],["declining",{"_index":3596,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":761,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":3114,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":211,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":4073,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":4217,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":4227,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dedicated",{"_index":4167,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":3410,"title":{},"body":{"license.html":{}}}],["default",{"_index":247,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defaultmessage",{"_index":50,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1371,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":1602,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":3783,"title":{},"body":{"license.html":{}}}],["defending",{"_index":3237,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":3738,"title":{},"body":{"license.html":{}}}],["define",{"_index":229,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":4012,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":240,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":64,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":1699,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":470,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":474,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":457,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1017,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":1026,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1302,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(news",{"_index":1192,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["delete(newsid",{"_index":1025,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2200,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedid",{"_index":1086,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":4299,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":2021,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1694,"title":{},"body":{"changelog.html":{}}}],["delivered",{"_index":4572,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":4254,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":3563,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":3699,"title":{},"body":{"license.html":{}}}],["depend",{"_index":4494,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependecy",{"_index":2475,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":111,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":4009,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deploy",{"_index":1797,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":1794,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":614,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{}}}],["deprecates",{"_index":2304,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":3708,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":2093,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":4007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["describe",{"_index":4316,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":4594,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":4595,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":4732,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":4113,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":61,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"index.html":{}}}],["descriptive",{"_index":4094,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":4085,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":3502,"title":{},"body":{"license.html":{}}}],["designed",{"_index":3201,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":4304,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":4083,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":4340,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":3762,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":72,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":1655,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":1657,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":3131,"title":{},"body":{"index.html":{}}}],["details",{"_index":53,"title":{},"body":{"classes/ApiValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":667,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2520,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":3972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":3971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":2214,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":3533,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":4765,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":4028,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":3119,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":4582,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["developers",{"_index":3226,"title":{},"body":{"license.html":{}}}],["development",{"_index":2274,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":1847,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":3179,"title":{},"body":{"index.html":{}}}],["di",{"_index":4385,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":1428,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":4257,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":3046,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":3890,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":3761,"title":{},"body":{"license.html":{}}}],["different",{"_index":2564,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":3587,"title":{},"body":{"license.html":{}}}],["digits",{"_index":1819,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":4003,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":3395,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3508,"title":{},"body":{"license.html":{}}}],["directly",{"_index":3289,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["director",{"_index":1554,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["directory",{"_index":3856,"title":{},"body":{"todo.html":{}}}],["disable",{"_index":410,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":2272,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":2842,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":3431,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":3774,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3584,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":2625,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":4461,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":4469,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":223,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":398,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":420,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":3724,"title":{},"body":{"license.html":{}}}],["display",{"_index":3465,"title":{},"body":{"license.html":{}}}],["displayat",{"_index":347,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":1569,"title":{},"body":{"classes/TaskResponse.html":{}}}],["displayed",{"_index":435,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":3312,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":2573,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":4017,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":4606,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":3765,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3194,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":3823,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":3727,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3265,"title":{},"body":{"license.html":{}}}],["divide",{"_index":4142,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":4115,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":2112,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1833,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":3879,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["docu",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":428,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":2086,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":3982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":1668,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":1838,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":971,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["doing",{"_index":4175,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["doku",{"_index":1483,"title":{},"body":{"controllers/TaskController.html":{}}}],["domain",{"_index":3855,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domains",{"_index":3013,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":238,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":1535,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dos",{"_index":2323,"title":{},"body":{"changelog.html":{}}}],["dosomethingcrazy",{"_index":4614,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z",{"_index":4619,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).catch(err",{"_index":4635,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).then(result",{"_index":4630,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazysync(wrong",{"_index":4638,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doubtful",{"_index":3535,"title":{},"body":{"license.html":{}}}],["down",{"_index":4575,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":3651,"title":{},"body":{"license.html":{}}}],["driven",{"_index":4457,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["drop",{"_index":938,"title":{},"body":{"injectables/MailService.html":{}}}],["dropdown",{"_index":1823,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":4485,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":426,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":4365,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1130,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":1503,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":1149,"title":{},"body":{"classes/NewsMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":1144,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1132,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":1505,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":1501,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":1646,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.id",{"_index":1126,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":1648,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":1413,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":1153,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.school",{"_index":1142,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.source",{"_index":1134,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":1136,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.target",{"_index":1156,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1138,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1140,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1128,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1158,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1151,"title":{},"body":{"classes/NewsMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":1147,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/error.response",{"_index":660,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dtolist",{"_index":1076,"title":{},"body":{"controllers/NewsController.html":{}}}],["dtos",{"_index":741,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dtos/entities",{"_index":3992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":1463,"title":{},"body":{"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{}}}],["duplicate",{"_index":2103,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["duplicated",{"_index":2041,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":237,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":1954,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":3486,"title":{},"body":{"license.html":{}}}],["duration",{"_index":486,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":483,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":2218,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":3532,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":3366,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":949,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":718,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":226,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":720,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.value",{"_index":721,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1177,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":2190,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":3284,"title":{},"body":{"license.html":{}}}],["easier",{"_index":4077,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":615,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":365,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":1944,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":1811,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2577,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":3804,"title":{},"body":{"license.html":{}}}],["effected",{"_index":3428,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3411,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3821,"title":{},"body":{"license.html":{}}}],["effects",{"_index":4177,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":4574,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":3667,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":3827,"title":{},"body":{"license.html":{}}}],["elements",{"_index":1202,"title":{},"body":{"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{}}}],["eligible",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":1191,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":4750,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":4725,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":2370,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":1806,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":4470,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":4761,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":3482,"title":{},"body":{"license.html":{}}}],["employer",{"_index":3834,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1284,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":1271,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":4487,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":747,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":743,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":757,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":2949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":3304,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":2502,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":4149,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":4188,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":4117,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":4162,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":3245,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":2878,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2298,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":4770,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":4778,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":1683,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":2241,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enforce",{"_index":3700,"title":{},"body":{"license.html":{}}}],["enforced",{"_index":4459,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":3433,"title":{},"body":{"license.html":{}}}],["enough",{"_index":4206,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":2829,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":4210,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":167,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4235,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entered",{"_index":3734,"title":{},"body":{"license.html":{}}}],["entire",{"_index":3456,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":3750,"title":{},"body":{"license.html":{}}}],["entites",{"_index":4207,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":180,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entitiyids",{"_index":203,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":171,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.ts",{"_index":4364,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entityid",{"_index":161,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":1189,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":1449,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":196,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":200,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":235,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":4321,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":1038,"title":{},"body":{"controllers/NewsController.html":{}}}],["enum",{"_index":454,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["enumeration",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["enumname",{"_index":444,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":1737,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":3863,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":2275,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":1844,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":2882,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":3386,"title":{},"body":{"license.html":{}}}],["err",{"_index":1619,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["err.code",{"_index":4636,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["error",{"_index":49,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":815,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":518,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":642,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:114",{"_index":647,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:117",{"_index":652,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:125",{"_index":655,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":685,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":582,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":71,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts",{"_index":60,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":69,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":67,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":724,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":714,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":304,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":4263,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":284,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":713,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":38,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":696,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":280,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":682,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":65,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["errros",{"_index":2387,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":3015,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":409,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":414,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{}}}],["eslint/restrict",{"_index":715,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["especially",{"_index":4131,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":3348,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":4107,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2611,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":2823,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":4562,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":4563,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":2678,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2446,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":1774,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":2075,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":3193,"title":{},"body":{"license.html":{}}}],["everything",{"_index":2178,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":4319,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":3283,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":3364,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exceeds",{"_index":2554,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":2179,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":513,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exception.constructor.name.replace('exception",{"_index":679,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":674,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":676,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":709,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":770,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":643,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":678,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":672,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchangeable",{"_index":4091,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exchanges",{"_index":4001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["excluded",{"_index":3522,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":2008,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":2382,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":3692,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3389,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":3743,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3340,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1178,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":4315,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1183,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":4020,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":3295,"title":{},"body":{"license.html":{}}}],["execution",{"_index":1596,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":493,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":3668,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3429,"title":{},"body":{"license.html":{}}}],["exist",{"_index":4362,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exist/is",{"_index":877,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["existing",{"_index":1629,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":4521,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":2313,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exp",{"_index":799,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":4169,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expect(code).to",{"_index":4637,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(data.length).tobe(0",{"_index":4736,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazy(x,y,z)).to",{"_index":4617,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazysync(wrong",{"_index":4640,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":4699,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(result).to",{"_index":4620,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":4735,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expectation",{"_index":4610,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":3540,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":4698,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expecting",{"_index":4634,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":2406,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":2822,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":4462,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expexting",{"_index":4626,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expiration",{"_index":798,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expiresin",{"_index":855,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":617,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":3380,"title":{},"body":{"license.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":4380,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":2413,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":3853,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":4157,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":4225,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":612,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":3776,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":717,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":3616,"title":{},"body":{"license.html":{}}}],["extend",{"_index":744,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":3723,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":3943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/FeathersError.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"classes/News.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":3469,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":3315,"title":{},"body":{"license.html":{}}}],["external",{"_index":2000,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":849,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":348,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":1945,"title":{},"body":{"changelog.html":{}}}],["extract",{"_index":1560,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":767,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["extractjwt",{"_index":863,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":871,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":4328,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":2353,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":3602,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":438,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":2258,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":4591,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":3756,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3390,"title":{},"body":{"license.html":{}}}],["factory",{"_index":4567,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":1963,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":51,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":4771,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":2006,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":3799,"title":{},"body":{"license.html":{}}}],["fair",{"_index":3385,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":2252,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":574,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":3527,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":3153,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":3281,"title":{},"body":{"license.html":{}}}],["fast",{"_index":4481,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":3086,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":3537,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":149,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":4233,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":555,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["feathers/feathers.module",{"_index":147,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersauthprovider",{"_index":145,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":580,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":662,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersjs/authentication",{"_index":2958,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":2960,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":2961,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":613,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":2962,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":2963,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":143,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":599,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":604,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":542,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":619,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":1790,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":3152,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":2874,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":2232,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":4052,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":2206,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":3449,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":4066,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":4495,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":2285,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":1658,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":331,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["fields",{"_index":3852,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":4110,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filename",{"_index":4041,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["files",{"_index":1692,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":1841,"title":{},"body":{"changelog.html":{}}}],["filter",{"_index":514,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter.query.ts",{"_index":1089,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":1095,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":1093,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":1100,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1291,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":517,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":2835,"title":{},"body":{"changelog.html":{}}}],["filterquery",{"_index":1261,"title":{},"body":{"classes/NewsScope.html":{}}}],["filters",{"_index":1098,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["final",{"_index":4528,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":3627,"title":{},"body":{"license.html":{}}}],["find",{"_index":602,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":603,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":1018,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":1029,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["findall(targets",{"_index":1194,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallforuser",{"_index":1293,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1304,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallopenbystudent",{"_index":1516,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenbystudent(userid",{"_index":1518,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenforuser",{"_index":1579,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforuser(userid",{"_index":1582,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallspy",{"_index":4695,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["finding",{"_index":782,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":1185,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1197,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewstarget",{"_index":779,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["findone",{"_index":1019,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":1034,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":2104,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1186,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1199,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1294,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1306,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":1448,"title":{},"body":{"modules/ServerModule.html":{}}}],["finduser(userid",{"_index":4271,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":4546,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":1651,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstname",{"_index":1636,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["fit",{"_index":4196,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":3779,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1849,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":4039,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":1676,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":2171,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixtures",{"_index":4665,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":1097,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flow",{"_index":3371,"title":{},"body":{"license.html":{}}}],["fly",{"_index":1854,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":4501,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":4701,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":3139,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":4358,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":2754,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":1532,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":4059,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forbid",{"_index":3427,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":4440,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":3940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":764,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":2255,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcefullsync",{"_index":2253,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":4760,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":4737,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":2783,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":525,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":2662,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":2467,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":3477,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":944,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":945,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":2292,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":1452,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["foundation",{"_index":3190,"title":{},"body":{"license.html":{}}}],["framework",{"_index":4075,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":4322,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":4229,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":3188,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":3208,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":3026,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":4451,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":4450,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":1741,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fulfilled",{"_index":4236,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":3414,"title":{},"body":{"license.html":{}}}],["full",{"_index":1853,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["function",{"_index":683,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":292,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":4120,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":3552,"title":{},"body":{"license.html":{}}}],["functions",{"_index":3110,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":3504,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":367,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":4057,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":1863,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":2284,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generalerror",{"_index":2067,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":3362,"title":{},"body":{"license.html":{}}}],["generate",{"_index":2187,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generated",{"_index":3991,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":1942,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":2395,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":4187,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":1035,"title":{},"body":{"controllers/NewsController.html":{}}}],["get('dashboard",{"_index":1474,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(id",{"_index":608,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getentitypermissions",{"_index":156,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":175,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["gethello",{"_index":460,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{}}}],["getinstance",{"_index":992,"title":{},"body":{"classes/NestAppHolder.html":{}}}],["getnewspermissions",{"_index":1295,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1308,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getpermittedentities",{"_index":157,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":178,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":536,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":544,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["getpermittedtargets",{"_index":537,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{}}}],["getpermittedtargets(userid",{"_index":546,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":1269,"title":{},"body":{"classes/NewsScope.html":{}}}],["getrequiredpermissions",{"_index":1296,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1311,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":18,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{}}}],["getservice",{"_index":626,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":623,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["gettargetfilters",{"_index":1297,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1314,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettimeout",{"_index":1607,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":1662,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":538,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":548,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["getuserschoolpermissions",{"_index":539,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":550,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["getusertargetpermissions",{"_index":540,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":552,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["git",{"_index":3173,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":3034,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":3056,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":3048,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":3125,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":3446,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1597,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":588,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":3452,"title":{},"body":{"license.html":{}}}],["global",{"_index":299,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":631,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":516,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":733,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":831,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":636,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":736,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":3182,"title":{},"body":{"license.html":{}}}],["go",{"_index":3138,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":3168,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":3258,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":4477,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golevelup/nestjs",{"_index":930,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["good",{"_index":4613,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":3576,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3259,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":2617,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":2667,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":3597,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3375,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3646,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3841,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":3503,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":3815,"title":{},"body":{"license.html":{}}}],["group",{"_index":1553,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["grouping",{"_index":1972,"title":{},"body":{"changelog.html":{}}}],["groups",{"_index":1534,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["gt",{"_index":1288,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":1557,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["guarantee",{"_index":1080,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":3946,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":4388,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":4333,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guide",{"_index":4738,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":4189,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":1627,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":1527,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":260,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":2464,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":699,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":295,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["happen",{"_index":4103,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":4424,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":4688,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":4126,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hash",{"_index":2268,"title":{},"body":{"changelog.html":{}}}],["haspermissions",{"_index":198,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["having",{"_index":3388,"title":{},"body":{"license.html":{}}}],["header",{"_index":852,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":4258,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":4251,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":3244,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":4161,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["help",{"_index":4653,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":1821,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":2108,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":666,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helpers",{"_index":2306,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["helpful",{"_index":4627,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helps",{"_index":4612,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hence",{"_index":4246,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":231,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/TaskUC.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hereafter",{"_index":3689,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":4350,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":881,"title":{},"body":{"classes/Lesson.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":4502,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":4090,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hierarchical",{"_index":2417,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":4099,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":4445,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":2083,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":4174,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":3047,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":3050,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":3623,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3583,"title":{},"body":{"license.html":{}}}],["holding",{"_index":1968,"title":{},"body":{"changelog.html":{}}}],["home",{"_index":1526,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homework",{"_index":1454,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1456,"title":{},"body":{"classes/Submission.html":{}}}],["homeworks",{"_index":1471,"title":{},"body":{"classes/Task.html":{},"changelog.html":{}}}],["homeworkswithsubmissions",{"_index":1543,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homogeneitysolve",{"_index":4106,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":2183,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":4247,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":2352,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":3824,"title":{},"body":{"license.html":{}}}],["host",{"_index":650,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":730,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":3510,"title":{},"body":{"license.html":{}}}],["hot",{"_index":3880,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":2488,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":1925,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":3528,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":933,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":357,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["htmlcontent",{"_index":100,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["htmlmailcontent",{"_index":102,"title":{"interfaces/HtmlMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["http",{"_index":62,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":3192,"title":{},"body":{"license.html":{}}}],["http://localhost:3030/docs",{"_index":3122,"title":{},"body":{"index.html":{}}}],["http://www.gnu.org/licenses",{"_index":3826,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":265,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":4554,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":4389,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":4740,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/mikro",{"_index":4489,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":1706,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["https://jestjs.io",{"_index":4068,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":4499,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":4428,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":4069,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":4067,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":4219,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":3858,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":4221,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["httpstatus",{"_index":40,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["httpstatus.bad_request",{"_index":54,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["httpstatus.conflict",{"_index":275,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":2314,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":4558,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["i.e",{"_index":4240,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":800,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":4774,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icreatenews",{"_index":772,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":786,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":209,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":1399,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":1401,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":3905,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["identifiable",{"_index":3714,"title":{},"body":{"license.html":{}}}],["identified",{"_index":4564,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifier",{"_index":524,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identify",{"_index":4588,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":4751,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":2245,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":181,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["ierrortype",{"_index":267,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":4513,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":4523,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":4515,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["iframe",{"_index":2095,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":2536,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":872,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["ilogger",{"_index":807,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["immediately",{"_index":597,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":1980,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":2295,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":4129,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":891,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":3347,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":4390,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":2282,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":504,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":4441,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":4749,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":3737,"title":{},"body":{"license.html":{}}}],["import",{"_index":39,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":620,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importer",{"_index":2562,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":2458,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":3680,"title":{},"body":{"license.html":{}}}],["imports",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":3607,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":3740,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1283,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":2331,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3238,"title":{},"body":{"license.html":{}}}],["improves",{"_index":4569,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":4366,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":3793,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":3796,"title":{},"body":{"license.html":{}}}],["inc",{"_index":3191,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3790,"title":{},"body":{"license.html":{}}}],["include",{"_index":221,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":3342,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3299,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":2349,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":3476,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":750,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":2399,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":2852,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":3243,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3757,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3531,"title":{},"body":{"license.html":{}}}],["increase",{"_index":1890,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":2845,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":4214,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":3603,"title":{},"body":{"license.html":{}}}],["independant",{"_index":2888,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":4531,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":3467,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":4259,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":3849,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":1746,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":3649,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":3614,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1976,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":3277,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3543,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":995,"title":{},"body":{"classes/NestAppHolder.html":{},"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":392,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":783,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":4507,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info.entity",{"_index":394,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{}}}],["info.entity.ts",{"_index":334,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["info.entity.ts:10",{"_index":1638,"title":{},"body":{"classes/UserInfo.html":{}}}],["info.entity.ts:7",{"_index":337,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["info.mapper",{"_index":1124,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":1409,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":1411,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1251,"title":{},"body":{"classes/NewsResponse.html":{}}}],["info.response.ts",{"_index":1416,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":1418,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":1653,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":1417,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":3515,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":532,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infrastructure",{"_index":4378,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":3647,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3677,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3292,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":224,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inherited",{"_index":30,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["inital",{"_index":1786,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":4540,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":898,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":4327,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":3671,"title":{},"body":{"license.html":{}}}],["inject",{"_index":611,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject(mikroorm",{"_index":978,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":980,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":151,"title":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":152,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"overview.html":{}}}],["injected",{"_index":593,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":894,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":4286,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":2526,"title":{},"body":{"changelog.html":{}}}],["inline",{"_index":93,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inlineattachment",{"_index":92,"title":{"interfaces/InlineAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["inner",{"_index":4578,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":834,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":2540,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":263,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":4739,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":3357,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":3547,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3561,"title":{},"body":{"license.html":{}}}],["instance",{"_index":748,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"classes/NestAppHolder.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":664,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":2870,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instead",{"_index":1975,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":3132,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":3441,"title":{},"body":{"license.html":{}}}],["integration",{"_index":1842,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":3211,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":3432,"title":{},"body":{"license.html":{}}}],["interact",{"_index":3829,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":3752,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":3307,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":4150,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":3311,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":4317,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":491,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":492,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":478,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":307,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":285,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":3488,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3664,"title":{},"body":{"license.html":{}}}],["interface",{"_index":84,"title":{"interfaces/AppendedAttachment.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{},"interfaces/User.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":868,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":86,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{},"interfaces/User.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfaces/mail",{"_index":936,"title":{},"body":{"injectables/MailService.html":{}}}],["interfered",{"_index":3553,"title":{},"body":{"license.html":{}}}],["internal",{"_index":374,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":4505,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internalservererrorexception",{"_index":656,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":689,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":2692,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":3803,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3354,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3369,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":4475,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":594,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":2749,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":2712,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":4008,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":3845,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":2111,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":3462,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":4347,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":4352,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":4295,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":4158,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":4270,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":4476,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":826,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["iprimarykey",{"_index":1429,"title":{},"body":{"modules/ServerModule.html":{}}}],["irrevocable",{"_index":3377,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":1102,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":663,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":703,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":450,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@apiproperty({description",{"_index":431,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["iserv",{"_index":1962,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":1859,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":661,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":698,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isin",{"_index":1103,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":1108,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":1379,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":1376,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":1369,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":1104,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isolated",{"_index":4353,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":4597,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":1105,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":1096,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":1632,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":1090,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":1631,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":1094,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":1344,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":802,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":451,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":429,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":442,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":437,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["issue",{"_index":1753,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":2619,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":801,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":2140,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["istechnicalerror",{"_index":669,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":706,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":909,"title":{},"body":{"injectables/Logger.html":{}}}],["it's",{"_index":4179,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["it(\"should",{"_index":4596,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('bad",{"_index":4616,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('good",{"_index":4618,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":4694,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["item",{"_index":3326,"title":{},"body":{"license.html":{}}}],["items",{"_index":1828,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["itself",{"_index":3564,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":781,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["jest",{"_index":3875,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":2956,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jest.spyon(repo",{"_index":4696,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":3980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":3146,"title":{},"body":{"index.html":{}}}],["job",{"_index":4290,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":2650,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["join",{"_index":2057,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["jose",{"_index":3029,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":3012,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":2254,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(e.constraints",{"_index":722,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":3031,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":803,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["jwauthguard",{"_index":4708,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":866,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtauthguard",{"_index":841,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":129,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":875,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":874,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":870,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":847,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":795,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":119,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kafka",{"_index":4231,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1669,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":4018,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":3349,"title":{},"body":{"license.html":{}}}],["key",{"_index":1351,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{}}}],["keyof",{"_index":3923,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":3549,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":3303,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":3199,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":2867,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":3225,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knowingly",{"_index":3704,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3711,"title":{},"body":{"license.html":{}}}],["known",{"_index":2031,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":4310,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":2018,"title":{},"body":{"changelog.html":{}}}],["label",{"_index":3156,"title":{},"body":{"index.html":{}}}],["language",{"_index":1687,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":4215,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":3470,"title":{},"body":{"license.html":{}}}],["last",{"_index":1652,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastname",{"_index":1637,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["later",{"_index":3768,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["latest",{"_index":2995,"title":{},"body":{"dependencies.html":{}}}],["launch",{"_index":4061,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["law",{"_index":3294,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3269,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3675,"title":{},"body":{"license.html":{}}}],["layer",{"_index":4137,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":4305,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":4097,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":3848,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":1715,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":2305,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":2213,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":2212,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":3033,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":3036,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":2519,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":3831,"title":{},"body":{"license.html":{}}}],["lean",{"_index":3052,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["leave",{"_index":3897,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":1595,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":589,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/nest",{"_index":3887,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":3999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":3232,"title":{},"body":{"license.html":{}}}],["legend",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["lern",{"_index":1826,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":2812,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":879,"title":{"classes/Lesson.html":{}},"body":{"classes/Lesson.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["lesson.entity",{"_index":1470,"title":{},"body":{"classes/Task.html":{}}}],["lessonid",{"_index":1466,"title":{},"body":{"classes/Task.html":{}}}],["lessonmodel",{"_index":3997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lessons",{"_index":886,"title":{},"body":{"classes/Lesson.html":{},"changelog.html":{}}}],["lessonschema",{"_index":2943,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lessonsofstudent",{"_index":1539,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["letter",{"_index":4399,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":3249,"title":{},"body":{"license.html":{}}}],["level",{"_index":2668,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":4593,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":3586,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3291,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3339,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":3523,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":3181,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3273,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3274,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3276,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3205,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3650,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3594,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":3644,"title":{},"body":{"license.html":{}}}],["limit",{"_index":828,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["limitation",{"_index":3787,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3777,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3585,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1830,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":412,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":3967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":1941,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":3367,"title":{},"body":{"license.html":{}}}],["links",{"_index":1985,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":3876,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":177,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":2447,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":336,"title":{},"body":{"classes/CourseInfo.html":{},"interfaces/JwtConstants.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":3672,"title":{},"body":{"license.html":{}}}],["living",{"_index":4473,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":4199,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2263,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":3861,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":4374,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":4486,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":4646,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":1906,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":1974,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":1843,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localization",{"_index":4222,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":3120,"title":{},"body":{"index.html":{}}}],["localstrategy",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["locate",{"_index":4438,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":4203,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":2308,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":1898,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":658,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":810,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log(message",{"_index":818,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":3877,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":4338,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logger",{"_index":490,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":646,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":498,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":726,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":723,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":710,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.info(`could",{"_index":4631,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["logger.interface",{"_index":889,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":914,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":305,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger/logger.service",{"_index":659,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["loggermodule",{"_index":286,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":4548,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":297,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":485,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":499,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":495,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":1552,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":4178,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":1533,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":1850,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":4408,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":3847,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":3157,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["longer",{"_index":2155,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":2572,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loop",{"_index":2478,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":3794,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3797,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":4101,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":4400,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1289,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":2098,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":4324,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":4759,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":3479,"title":{},"body":{"license.html":{}}}],["made",{"_index":3239,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":103,"title":{"interfaces/Mail.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"interfaces/PlainTextMailContent.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["mail.service",{"_index":921,"title":{},"body":{"modules/MailModule.html":{}}}],["mailattachment",{"_index":88,"title":{"interfaces/MailAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["mailcontent",{"_index":96,"title":{"interfaces/MailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["mailmodule",{"_index":915,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["mails",{"_index":2480,"title":{},"body":{"changelog.html":{}}}],["mailservice",{"_index":919,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":4252,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":3869,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["mainly",{"_index":4269,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":2483,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":2401,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":1713,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":3344,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":986,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":3405,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":1630,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":4689,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["manage",{"_index":4148,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":1946,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":4153,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":2983,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":4202,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":3851,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":3690,"title":{},"body":{"license.html":{}}}],["manual",{"_index":1793,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":4628,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["many",{"_index":2215,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":327,"title":{},"body":{"classes/Course.html":{}}}],["manytomany({fieldname",{"_index":318,"title":{},"body":{"classes/Course.html":{}}}],["manytoone",{"_index":354,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone({fieldname",{"_index":358,"title":{},"body":{"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":1970,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapcreatenewstodomain",{"_index":1110,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1114,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":4382,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":4383,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapnewsscopetodomain",{"_index":1111,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1116,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":4262,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper",{"_index":4375,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":4381,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/news.mapper",{"_index":1062,"title":{},"body":{"controllers/NewsController.html":{}}}],["mapper/task.mapper",{"_index":1481,"title":{},"body":{"controllers/TaskController.html":{}}}],["mappers",{"_index":4707,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mapping",{"_index":4144,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":4173,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoresponse",{"_index":1112,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(news",{"_index":1118,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":1410,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(task",{"_index":1497,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(userinfo",{"_index":1644,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1113,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1120,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":3735,"title":{},"body":{"license.html":{}}}],["marked",{"_index":3592,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3601,"title":{},"body":{"license.html":{}}}],["masks",{"_index":3271,"title":{},"body":{"license.html":{}}}],["master",{"_index":2137,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":533,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matches",{"_index":4685,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":56,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":3392,"title":{},"body":{"license.html":{}}}],["materially",{"_index":3565,"title":{},"body":{"license.html":{}}}],["materials",{"_index":1778,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":1784,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":4205,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":4272,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":1380,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":1384,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":1373,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maybe",{"_index":965,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":3882,"title":{},"body":{"todo.html":{}}}],["meaning",{"_index":3609,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":3176,"title":{},"body":{"index.html":{}}}],["means",{"_index":3268,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":3413,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3424,"title":{},"body":{"license.html":{}}}],["mechanisms",{"_index":4351,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":3437,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3450,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3327,"title":{},"body":{"license.html":{}}}],["member",{"_index":558,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["members",{"_index":1999,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":2530,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":941,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":3324,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":3778,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3306,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3180,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":1924,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["merges",{"_index":2489,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":3660,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":2186,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":14,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":4232,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":1696,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":1788,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":3379,"title":{},"body":{"license.html":{}}}],["meta",{"_index":4744,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":3076,"title":{},"body":{"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["method",{"_index":616,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"index.html":{},"license.html":{}}}],["metic",{"_index":2430,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":2234,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":4213,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":4151,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":2514,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":3038,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":2777,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1179,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":1884,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":1181,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":217,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":952,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":3874,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":973,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":976,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":977,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":953,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":1443,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":959,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":974,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":946,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":1611,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["mimetype",{"_index":91,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["min",{"_index":1381,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(0",{"_index":1382,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(1",{"_index":1383,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":4283,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":1372,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":1845,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":2412,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":4406,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":4764,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":3109,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":2828,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":3591,"title":{},"body":{"license.html":{}}}],["missing",{"_index":1745,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1282,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":4133,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":3039,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":2315,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mocha's",{"_index":4601,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":4662,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":4649,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":4651,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":1714,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":445,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["models",{"_index":1356,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":3266,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3330,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2798,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":2244,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":3455,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":2025,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":3234,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3297,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":2251,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":4011,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":108,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":4720,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":4723,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":4722,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":4692,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":4691,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":3965,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":4645,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":4415,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":4409,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":3948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":3975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":955,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":4661,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":4660,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":110,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":1430,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":4421,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":4419,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":4420,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/mail/mail.module",{"_index":1432,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity",{"_index":1436,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/course",{"_index":1441,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/team",{"_index":1442,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/news.module",{"_index":1431,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/entity",{"_index":1439,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":1435,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":3041,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":964,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongod",{"_index":961,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mongod.geturi",{"_index":963,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongodb",{"_index":957,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongomemorydatabasemodule",{"_index":939,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":4675,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":956,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":1445,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":4243,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":3058,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1882,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":3633,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":4571,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mounted",{"_index":4705,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["move",{"_index":1529,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":2277,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":471,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":675,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":2616,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":4136,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":768,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":4170,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":4172,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n21",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtStrategy.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["named",{"_index":3174,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["names",{"_index":1041,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":3895,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":3060,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":1869,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":3079,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":3468,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":2804,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":2803,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":1556,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["necessary",{"_index":2508,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":3129,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":3356,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":1525,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":701,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":3886,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":4014,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":4019,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:doc:serve",{"_index":4022,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":4051,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":4036,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":4037,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":4013,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":4025,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":4029,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":4027,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":4032,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":3953,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":4049,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":4044,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":4046,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":3955,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":3954,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":4043,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestappholder",{"_index":990,"title":{"classes/NestAppHolder.html":{}},"body":{"classes/NestAppHolder.html":{},"coverage.html":{}}}],["nestappholder.instance",{"_index":1000,"title":{},"body":{"classes/NestAppHolder.html":{}}}],["nested",{"_index":2706,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestinterceptor",{"_index":466,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":515,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":4058,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":469,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":2971,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":2973,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2976,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":449,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":468,"title":{},"body":{"controllers/DelayController.html":{}}}],["nestjs/testing.test",{"_index":4650,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestlogger",{"_index":888,"title":{},"body":{"injectables/Logger.html":{}}}],["network",{"_index":3204,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":4273,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":174,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":81,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["newly",{"_index":4468,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":343,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":1131,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createdat",{"_index":1150,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1328,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1133,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1127,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":425,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":1634,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":447,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":430,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:27",{"_index":436,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:28",{"_index":1633,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:35",{"_index":446,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:42",{"_index":441,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1154,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1135,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":1137,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1348,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.target?.id",{"_index":1139,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.targetmodel",{"_index":1141,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1129,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.types",{"_index":395,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news.updatedat",{"_index":1152,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1146,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news/entity",{"_index":187,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Submission.html":{},"interfaces/User.html":{}}}],["news:10",{"_index":390,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:19",{"_index":385,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:22",{"_index":387,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:25",{"_index":386,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:28",{"_index":388,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:30",{"_index":382,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:34",{"_index":356,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:38",{"_index":361,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:41",{"_index":369,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:44",{"_index":376,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:47",{"_index":377,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:51",{"_index":378,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":380,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":373,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":360,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":384,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":370,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:7",{"_index":389,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:76",{"_index":393,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news[key",{"_index":1353,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":4435,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":4439,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":1180,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":1327,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1322,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":1239,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1253,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1321,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":1014,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":1335,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsfilterquery",{"_index":1030,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsid",{"_index":1028,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist",{"_index":1072,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{}}}],["newslist.length",{"_index":1341,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":1077,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist.map(async",{"_index":1338,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":1061,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":1070,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":1075,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":1071,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":1085,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1165,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1170,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":1060,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"coverage.html":{}}}],["newsscope",{"_index":1209,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["newstarget",{"_index":775,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":1195,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetmodel",{"_index":186,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newstargetmodel.course",{"_index":408,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":190,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":417,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodelvalue",{"_index":163,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["newsuc",{"_index":1055,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":1346,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":1333,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":411,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":1616,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":508,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":2271,"title":{},"body":{"changelog.html":{}}}],["nin",{"_index":1555,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["node",{"_index":2886,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":3118,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":2881,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":4325,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":3055,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":3057,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":2273,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":3498,"title":{},"body":{"license.html":{}}}],["none",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":1361,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":2029,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":3526,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":3998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":2914,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":1665,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":220,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["notfound",{"_index":4261,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":554,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{},"interfaces/User.html":{}}}],["notfoundexception(`the",{"_index":1450,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":3645,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3318,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3314,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":3634,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3630,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3580,"title":{},"body":{"license.html":{}}}],["november",{"_index":3184,"title":{},"body":{"license.html":{}}}],["now",{"_index":506,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":510,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":1724,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":579,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{}}}],["number",{"_index":29,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IPagination.html":{},"interfaces/JwtPayload.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":3767,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":3917,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":2670,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":1764,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":3127,"title":{},"body":{"index.html":{}}}],["o",{"_index":4344,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":2332,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":2089,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["obj",{"_index":1220,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["object",{"_index":1398,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign(this",{"_index":330,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["object.entries(params",{"_index":1352,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.values(constraint",{"_index":83,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":453,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":210,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{}}}],["objectid.isvalid(value",{"_index":1405,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":4426,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":3747,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3512,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3415,"title":{},"body":{"license.html":{}}}],["observable",{"_index":497,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":2805,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":4195,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":3497,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":677,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":3642,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":2149,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["oderby",{"_index":1561,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["of.ts",{"_index":3915,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":3231,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3517,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3501,"title":{},"body":{"license.html":{}}}],["official",{"_index":3332,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":2019,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":1816,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1921,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":1562,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ok",{"_index":2589,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":4498,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":4580,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":1994,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":1584,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["once",{"_index":4080,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1342,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onerror",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":4405,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["oneweekago",{"_index":1546,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":1547,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["onload",{"_index":2463,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":950,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":4185,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":244,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":1808,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":2347,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":4030,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":3800,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":3505,"title":{},"body":{"license.html":{}}}],["operates",{"_index":4570,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":3350,"title":{},"body":{"license.html":{}}}],["operation",{"_index":2855,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":2250,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":2165,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3254,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":3754,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":4746,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":1761,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":4447,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":4752,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":972,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"injectables/JwtStrategy.html":{},"interfaces/Mail.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":4559,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":4550,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":948,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["orchestration",{"_index":2013,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":2116,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1536,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1563,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ordering",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":2303,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":3656,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":3278,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":4082,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":2056,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":2801,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":979,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":4727,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":4070,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":218,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsScope.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"dependencies.html":{}}}],["orm/entitymanager",{"_index":4666,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":4490,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":219,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":954,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["os",{"_index":3137,"title":{},"body":{"index.html":{}}}],["others",{"_index":763,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":970,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ours",{"_index":4396,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":4590,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outgoing",{"_index":4268,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2469,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":3398,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":2481,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":4703,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":4164,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":4552,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":2427,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":4711,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":4719,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":512,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":298,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":4654,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":3842,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":1957,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":3686,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":4123,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":1235,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":4418,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["package",{"_index":2462,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":3461,"title":{},"body":{"license.html":{}}}],["packages",{"_index":3859,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":3343,"title":{},"body":{"license.html":{}}}],["page",{"_index":1370,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":1377,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":573,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["pagination",{"_index":1031,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":4370,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination].query.ts",{"_index":4437,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":1032,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":1053,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["paginationresponse(dtolist",{"_index":1078,"title":{},"body":{"controllers/NewsController.html":{}}}],["paginationresponse(tasksresponse",{"_index":1495,"title":{},"body":{"controllers/TaskController.html":{}}}],["paging",{"_index":2811,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":3064,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":3828,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3620,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3696,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":1915,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":1750,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":189,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["param('id",{"_index":1082,"title":{},"body":{"controllers/NewsController.html":{}}}],["param)).rejects.tothrow(badrequestexception",{"_index":4641,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param)).tothrow(badrequestexception",{"_index":4639,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param.ts",{"_index":4369,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parameter",{"_index":1079,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":606,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":1161,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1162,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1325,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1164,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1163,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1160,"title":{},"body":{"classes/NewsMapper.html":{}}}],["param|query].ts",{"_index":4368,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":1805,"title":{},"body":{"changelog.html":{}}}],["parents",{"_index":2195,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":2390,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":4434,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":1050,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":2996,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":4296,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":3280,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":313,"title":{},"body":{"classes/Course.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":1626,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":3336,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3305,"title":{},"body":{"license.html":{}}}],["parts",{"_index":3372,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":3506,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":3662,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":4397,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":759,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":1485,"title":{},"body":{"controllers/TaskController.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":865,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":867,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":869,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":1447,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{}}}],["passwordrecovery",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":362,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":1048,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":1045,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":2563,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":3619,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3681,"title":{},"body":{"license.html":{}}}],["path",{"_index":630,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":3976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2346,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":455,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":862,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{}}}],["payload.ts",{"_index":788,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payment",{"_index":3728,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3513,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3516,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":2064,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":3169,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":1891,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":3363,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3629,"title":{},"body":{"license.html":{}}}],["permission",{"_index":366,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":1366,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":165,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":199,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":1365,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":3443,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3475,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3248,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1589,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{}}}],["perpetuity",{"_index":3556,"title":{},"body":{"license.html":{}}}],["persist",{"_index":2247,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist/make",{"_index":4453,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persisted",{"_index":2729,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":4456,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":1825,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":4549,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":4583,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":1780,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":3745,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":4467,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":3483,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3495,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2161,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":3223,"title":{},"body":{"license.html":{}}}],["pin",{"_index":1804,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":2016,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":739,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":1660,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":1792,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":4387,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":1402,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":2411,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":1731,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["plain",{"_index":4442,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["plaintextcontent",{"_index":101,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["plaintextmailcontent",{"_index":99,"title":{"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["platform",{"_index":2887,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":4224,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":3017,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":3666,"title":{},"body":{"license.html":{}}}],["point",{"_index":432,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":3822,"title":{},"body":{"license.html":{}}}],["policy",{"_index":2723,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":2210,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":1558,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":1042,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["populates",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":2903,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":3520,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":3492,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3459,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":3802,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":2166,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1022,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["potential",{"_index":1904,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":3867,"title":{},"body":{"todo.html":{}}}],["power",{"_index":3426,"title":{},"body":{"license.html":{}}}],["pr",{"_index":3144,"title":{},"body":{"index.html":{}}}],["practical",{"_index":3206,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3701,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":4741,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":3873,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":3197,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3263,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4525,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":3663,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":4553,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":4599,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":3329,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":1016,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["preload",{"_index":2578,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":4763,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":4762,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":2626,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":902,"title":{},"body":{"injectables/Logger.html":{}}}],["present",{"_index":2307,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":4139,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":3322,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3588,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":236,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":2342,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":3665,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":3218,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3730,"title":{},"body":{"license.html":{}}}],["primary",{"_index":2180,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":212,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["principle",{"_index":4664,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":4081,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":4500,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":2415,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":3631,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":1783,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":4748,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":489,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["problem",{"_index":2791,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":2109,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedure",{"_index":3135,"title":{},"body":{"index.html":{}}}],["procedures",{"_index":3548,"title":{},"body":{"license.html":{}}}],["process",{"_index":2510,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":4342,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":4291,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":4183,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":3719,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3353,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":4545,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":3484,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":2100,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":3731,"title":{},"body":{"license.html":{}}}],["program",{"_index":3213,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3436,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":3835,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3337,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":3224,"title":{},"body":{"license.html":{}}}],["programsif",{"_index":3814,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":3396,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":3422,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3725,"title":{},"body":{"license.html":{}}}],["project",{"_index":1667,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":3068,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":2233,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":3325,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3317,"title":{},"body":{"license.html":{}}}],["promise",{"_index":173,"title":{},"body":{"injectables/AuthorizationService.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promise((resolve",{"_index":472,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1337,"title":{},"body":{"injectables/NewsUc.html":{}}}],["promises",{"_index":4622,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":3016,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":3287,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3648,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3298,"title":{},"body":{"license.html":{}}}],["proper",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":2173,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":4745,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["property",{"_index":216,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property({onupdate",{"_index":251,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["propertydecorator",{"_index":3116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":338,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.content",{"_index":402,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.creator",{"_index":406,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.displayat",{"_index":404,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.firstname",{"_index":1640,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.lastname",{"_index":1642,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.name",{"_index":340,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["props.school",{"_index":405,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.target",{"_index":407,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.title",{"_index":400,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":3227,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":1601,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":3406,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3448,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":4074,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":3569,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":3782,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":480,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":183,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":906,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":900,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":296,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":3581,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3625,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":3770,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3772,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":2087,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":2015,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":464,"title":{},"body":{"controllers/DelayController.html":{},"injectables/MailService.html":{},"classes/NestAppHolder.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":3593,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3256,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":2846,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":3440,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1099,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["publishedat",{"_index":1214,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["pull",{"_index":2310,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pulled",{"_index":4218,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":3360,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3529,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":3717,"title":{},"body":{"license.html":{}}}],["put",{"_index":2854,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":4455,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":2239,"title":{},"body":{"changelog.html":{}}}],["qf",{"_index":1766,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":2005,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":2289,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":3638,"title":{},"body":{"license.html":{}}}],["quality",{"_index":3781,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":1277,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":1281,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":4277,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":572,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.targetid",{"_index":1157,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1155,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1159,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":4433,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["queryorder",{"_index":1520,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["queryorder.asc",{"_index":1564,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["querys",{"_index":1487,"title":{},"body":{"controllers/TaskController.html":{}}}],["querystring",{"_index":2288,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":931,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{},"dependencies.html":{}}}],["rabbitmqclient",{"_index":922,"title":{},"body":{"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmodule.forroot(rabbitmqmodule",{"_index":4000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["raise",{"_index":2509,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":1832,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":4244,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":3018,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":1039,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":3480,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":3706,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3572,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":2338,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IErrorType.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":2177,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":2071,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":4483,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":4663,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reason",{"_index":3715,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3493,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":3636,"title":{},"body":{"license.html":{}}}],["receive",{"_index":3221,"title":{},"body":{"license.html":{}}}],["received",{"_index":3463,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":3652,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":3721,"title":{},"body":{"license.html":{}}}],["recent",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":3555,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3713,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":104,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["recognized",{"_index":3333,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4776,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":4769,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":4767,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":2607,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":618,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":1984,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":2506,"title":{},"body":{"changelog.html":{}}}],["red",{"_index":3866,"title":{},"body":{"todo.html":{}}}],["redis",{"_index":3074,"title":{},"body":{"dependencies.html":{}}}],["redistribute",{"_index":3818,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":1866,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":2220,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":4089,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactoring",{"_index":1836,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":4216,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":2223,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":4465,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":379,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["referenced",{"_index":381,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["references",{"_index":2759,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":3217,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3267,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":3075,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":4472,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":3749,"title":{},"body":{"license.html":{}}}],["regard",{"_index":3577,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3460,"title":{},"body":{"license.html":{}}}],["regards",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":3373,"title":{},"body":{"license.html":{}}}],["regex",{"_index":2383,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":1800,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":4506,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":1803,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":2443,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":2156,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":2152,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":4690,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":3624,"title":{},"body":{"license.html":{}}}],["rejections",{"_index":2448,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":440,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":4488,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":4756,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":2113,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":3399,"title":{},"body":{"license.html":{}}}],["release",{"_index":1798,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":3260,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":3250,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":3453,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":3261,"title":{},"body":{"license.html":{}}}],["relies",{"_index":4446,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":3881,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":3705,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3511,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3215,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":3751,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":3753,"title":{},"body":{"license.html":{}}}],["removal",{"_index":3578,"title":{},"body":{"license.html":{}}}],["remove",{"_index":762,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["removed",{"_index":1675,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":2168,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":1719,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":2297,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":3795,"title":{},"body":{"license.html":{}}}],["repair",{"_index":2091,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":2123,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":1993,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":2028,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":2265,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":4537,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":3870,"title":{},"body":{"todo.html":{}}}],["replyto",{"_index":107,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["repo",{"_index":1590,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":4668,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":4377,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1320,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1172,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["repo/task.repo",{"_index":1514,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{}}}],["report",{"_index":2612,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":4566,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":4154,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":4045,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":4208,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":3124,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":3545,"title":{},"body":{"license.html":{}}}],["req",{"_index":4713,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":4715,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":2027,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":591,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":4733,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request/response",{"_index":4238,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":4245,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":1605,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":1451,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":2409,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":838,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":1612,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":2030,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":850,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":637,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":3981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":3979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":766,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":1345,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":3454,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3126,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":755,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":3282,"title":{},"body":{"license.html":{}}}],["reset",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"overview.html":{}}}],["resolve",{"_index":2074,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":3536,"title":{},"body":{"license.html":{}}}],["resolves",{"_index":1201,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resources",{"_index":4680,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":3430,"title":{},"body":{"license.html":{}}}],["respond",{"_index":3891,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":4706,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":63,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":4734,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":735,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":4372,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":4371,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":4181,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":4430,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":4116,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":3653,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":4452,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":1787,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":4015,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":3892,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":487,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":4312,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":4234,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":2336,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":2024,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1349,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":3423,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3611,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2717,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":2404,"title":{},"body":{"changelog.html":{}}}],["restructure",{"_index":1703,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":55,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["result.query.ts",{"_index":2955,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":3246,"title":{},"body":{"license.html":{}}}],["results",{"_index":57,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":3559,"title":{},"body":{"license.html":{}}}],["retention",{"_index":4298,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":1037,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":4336,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":4306,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":80,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":2590,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":1566,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":37,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["retvalue",{"_index":4615,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":4087,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":4386,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":4194,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":1873,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":1989,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":3160,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":3805,"title":{},"body":{"license.html":{}}}],["revised",{"_index":3759,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":1716,"title":{},"body":{"changelog.html":{}}}],["rich",{"_index":4471,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":2883,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":3228,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":3081,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":3780,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":1919,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":2420,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":4190,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":793,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role/permissions",{"_index":4237,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleids",{"_index":2532,"title":{},"body":{"changelog.html":{}}}],["roles",{"_index":790,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["rollback",{"_index":2507,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":3562,"title":{},"body":{"license.html":{}}}],["room",{"_index":2036,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":2397,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":230,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["rootdir",{"_index":3949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":2243,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":3973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":2090,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":4687,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":462,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":2356,"title":{},"body":{"changelog.html":{}}}],["route_praefix",{"_index":2904,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":1856,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routes.test.js",{"_index":2476,"title":{},"body":{"changelog.html":{}}}],["royalty",{"_index":3670,"title":{},"body":{"license.html":{}}}],["rss",{"_index":375,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":4492,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":1998,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":1725,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":4644,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":1598,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3351,"title":{},"body":{"license.html":{}}}],["runtime",{"_index":4652,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":500,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":502,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":1691,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":2876,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":2084,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":3820,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3679,"title":{},"body":{"license.html":{}}}],["same",{"_index":2405,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":559,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["sample",{"_index":4443,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["samplecontroller",{"_index":4658,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":4403,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sampleservice",{"_index":4659,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":4542,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":2164,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":2034,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":3857,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":195,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":182,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":1187,"title":{},"body":{"injectables/NewsRepo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["save(news",{"_index":1205,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["saying",{"_index":3509,"title":{},"body":{"license.html":{}}}],["sc",{"_index":1679,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":2827,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":4212,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":2688,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":4376,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":1801,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":3988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":349,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":1969,"title":{},"body":{"changelog.html":{}}}],["school_edit",{"_index":2839,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":2840,"title":{},"body":{"changelog.html":{}}}],["schoolid",{"_index":372,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":2407,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":371,"title":{"classes/SchoolInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolinfo.id",{"_index":1412,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":1414,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1123,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1143,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1234,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":421,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolnews(props",{"_index":419,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":777,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/SchoolInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolslist",{"_index":1682,"title":{},"body":{"changelog.html":{}}}],["schoolyear",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":434,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":934,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":475,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":2595,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":610,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.bytargets(targets",{"_index":1211,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1212,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.request",{"_index":621,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.sortby",{"_index":1215,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.target",{"_index":1358,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.transient",{"_index":890,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1255,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{}}}],["scope.ts:17",{"_index":1266,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:32",{"_index":1268,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:38",{"_index":1264,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:7",{"_index":1262,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:9",{"_index":1270,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope?.target",{"_index":1355,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1332,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":567,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["scopes",{"_index":1040,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":1758,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":3358,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":2990,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":1862,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":2126,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["second",{"_index":4551,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":3290,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":3235,"title":{},"body":{"license.html":{}}}],["secret",{"_index":848,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":873,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":2534,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":3404,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":3478,"title":{},"body":{"license.html":{}}}],["secure",{"_index":2097,"title":{},"body":{"changelog.html":{}}}],["secured",{"_index":1684,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":2487,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":1677,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":52,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":2238,"title":{},"body":{"changelog.html":{}}}],["seeddata",{"_index":4603,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seems",{"_index":3884,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":3864,"title":{},"body":{"todo.html":{}}}],["selection",{"_index":2884,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":2895,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":3694,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3678,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1671,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":3270,"title":{},"body":{"license.html":{}}}],["send",{"_index":924,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{}}}],["send(data",{"_index":928,"title":{},"body":{"injectables/MailService.html":{}}}],["sending",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":4514,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":4163,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":4339,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":528,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":2167,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":2978,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":2169,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":3519,"title":{},"body":{"license.html":{}}}],["separate",{"_index":896,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["separated",{"_index":3151,"title":{},"body":{"index.html":{},"todo.html":{}}}],["separately",{"_index":2191,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":4281,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":4530,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":4086,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":4604,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["serialization",{"_index":3854,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":2286,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":214,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["serve",{"_index":3085,"title":{},"body":{"dependencies.html":{}}}],["served",{"_index":3121,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":476,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.controller",{"_index":1433,"title":{},"body":{"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":3885,"title":{},"body":{"todo.html":{}}}],["servercontroller",{"_index":1420,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":2915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":4536,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":1423,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":2810,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":3346,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":563,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"interfaces/User.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":570,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["service.findallforuser(userid",{"_index":4697,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":4423,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":566,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["service.provider",{"_index":556,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/User.html":{}}}],["service.provider.ts",{"_index":601,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":609,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":605,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":628,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":629,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":4379,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":590,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":3785,"title":{},"body":{"license.html":{}}}],["session",{"_index":2175,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":836,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["setcontext",{"_index":907,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":3984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setinstance",{"_index":993,"title":{},"body":{"classes/NestAppHolder.html":{}}}],["setinstance(app",{"_index":997,"title":{},"body":{"classes/NestAppHolder.html":{}}}],["sets",{"_index":2224,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":1609,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":473,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":3942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":2396,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":3983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":740,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setversion('3.0",{"_index":3986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":3409,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":3209,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":1705,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":70,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":1052,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/dto/pagination.query",{"_index":1476,"title":{},"body":{"controllers/TaskController.html":{}}}],["shared/controller/dto/pagination.response",{"_index":1054,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["shared/controller/pipe",{"_index":1051,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/transformer",{"_index":1107,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":4391,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":185,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"todo.html":{}}}],["shared/domain/types",{"_index":1208,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["shared/pipes",{"_index":4416,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":1272,"title":{},"body":{"classes/NewsScope.html":{}}}],["shared/utils",{"_index":4392,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":4412,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":4395,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":2077,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":1812,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":2552,"title":{},"body":{"changelog.html":{}}}],["shortid",{"_index":3054,"title":{},"body":{"dependencies.html":{}}}],["shouldnt",{"_index":2584,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":2082,"title":{},"body":{"changelog.html":{}}}],["show_version",{"_index":2328,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":2063,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":4176,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":3836,"title":{},"body":{"license.html":{}}}],["signature",{"_index":4323,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":3546,"title":{},"body":{"license.html":{}}}],["similar",{"_index":3136,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":4165,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":3899,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":4302,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplify",{"_index":4611,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simply",{"_index":4621,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simulates",{"_index":4728,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":3744,"title":{},"body":{"license.html":{}}}],["singelton",{"_index":999,"title":{},"body":{"classes/NestAppHolder.html":{}}}],["single",{"_index":769,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":4166,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":2553,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":2498,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":829,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":765,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":3889,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":2354,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":4773,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":692,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":3089,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":2864,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":3189,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":3530,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3387,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3401,"title":{},"body":{"license.html":{}}}],["solid",{"_index":4742,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":4130,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":3833,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":2261,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":4543,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":4547,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sort",{"_index":1213,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["sorted",{"_index":2669,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":1947,"title":{},"body":{"changelog.html":{}}}],["sortorder",{"_index":2953,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sortordermap",{"_index":3909,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sortordervalue",{"_index":3911,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":4363,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":350,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":1704,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1237,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":4098,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":4314,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":4330,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":3490,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3216,"title":{},"body":{"license.html":{}}}],["spec",{"_index":3937,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["spec.ts",{"_index":3952,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":3957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3570,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":170,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":3200,"title":{},"body":{"license.html":{}}}],["specification",{"_index":2236,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":4454,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":3335,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":3766,"title":{},"body":{"license.html":{}}}],["specify",{"_index":969,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":1966,"title":{},"body":{"changelog.html":{}}}],["spirit",{"_index":3760,"title":{},"body":{"license.html":{}}}],["split",{"_index":4141,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sportinhalt",{"_index":1814,"title":{},"body":{"changelog.html":{}}}],["spy",{"_index":4693,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":4684,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":4264,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":4755,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":4285,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":3959,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":3950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/core/error/dto/error.response",{"_index":273,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":274,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger/logger.service",{"_index":503,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/NewsUc.html":{}}}],["src/modules/database",{"_index":4673,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["stabilisation",{"_index":2580,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":2333,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":4095,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":708,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":2400,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":1799,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3331,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":3334,"title":{},"body":{"license.html":{}}}],["start",{"_index":3140,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":1663,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":2632,"title":{},"body":{"changelog.html":{}}}],["starts",{"_index":4026,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":694,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":2416,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":2325,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":3378,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":3613,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":2896,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["states",{"_index":2207,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":352,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["statically",{"_index":4035,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":3442,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":2479,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":2613,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1577,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stay",{"_index":4124,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":1559,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":3229,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":4576,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":4460,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":985,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":2148,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":2011,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":1827,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":4198,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":4332,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["story",{"_index":4686,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":2921,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":3935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":864,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt.strategy",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["strictly",{"_index":4084,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":32,"title":{},"body":{"classes/ApiValidationError.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":903,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["stringtoboolean",{"_index":1106,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":3093,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":595,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":4775,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":4355,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":4356,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":905,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["student",{"_index":1455,"title":{},"body":{"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["student_create",{"_index":2453,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["studentid",{"_index":1458,"title":{},"body":{"classes/Submission.html":{}}}],["students",{"_index":311,"title":{},"body":{"classes/Course.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":3143,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":3178,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":4109,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["styling",{"_index":1936,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":804,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":3659,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":97,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["sublicenses",{"_index":3691,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3403,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1438,"title":{"classes/Submission.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["submission.homework.id",{"_index":1545,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissions",{"_index":1461,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{}}}],["submissionschema",{"_index":2944,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["submissionsofstudent",{"_index":1541,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissionsofstudent.map((submission",{"_index":1544,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["subprograms",{"_index":3368,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":3499,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3541,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3657,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":2892,"title":{},"body":{"changelog.html":{}}}],["succeed",{"_index":4633,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["succesful",{"_index":2623,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":2249,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":2620,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["such",{"_index":3251,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":3703,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3550,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":169,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":3898,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":3846,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["summarize",{"_index":2316,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":45,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":74,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":4647,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":3573,"title":{},"body":{"license.html":{}}}],["support",{"_index":2270,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["supported",{"_index":4140,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":4010,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":2799,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sure",{"_index":3214,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":3739,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3612,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":3798,"title":{},"body":{"license.html":{}}}],["svg",{"_index":3839,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1482,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["swaggermodule.createdocument(app",{"_index":3993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":3994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symmetric",{"_index":2877,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":2300,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":1736,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["synced",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":2217,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":2301,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["syncindex",{"_index":1726,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":1757,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":2624,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1350,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":2211,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system/school",{"_index":2216,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":2753,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":649,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/PaginationResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":4772,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":1935,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":328,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/Lesson.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["tables",{"_index":2227,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2957,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":3133,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taken",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":2184,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":3941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tangible",{"_index":3525,"title":{},"body":{"license.html":{}}}],["tap",{"_index":501,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":344,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":577,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["target.targetids",{"_index":1280,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":1363,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1278,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1279,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":443,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetid",{"_index":164,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{}}}],["targetids",{"_index":575,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{}}}],["targetmodel",{"_index":162,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":1315,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":1359,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":565,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["targets",{"_index":569,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":1362,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":576,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{},"interfaces/User.html":{}}}],["task",{"_index":1437,"title":{"classes/Task.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.course?.color",{"_index":1506,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.course?.name",{"_index":1504,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.createdat",{"_index":1507,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.duedate",{"_index":1502,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":1460,"title":{},"body":{"classes/Submission.html":{}}}],["task.id",{"_index":1499,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.name",{"_index":1500,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.updatedat",{"_index":1508,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task_dashboard_view_v3",{"_index":1720,"title":{},"body":{"changelog.html":{}}}],["taskcontroller",{"_index":1472,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmapper",{"_index":1480,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"coverage.html":{}}}],["taskmapper.maptoresponse(task",{"_index":1494,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodel",{"_index":3995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskmodule",{"_index":1426,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskrepo",{"_index":1511,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponse",{"_index":1479,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"coverage.html":{}}}],["tasks",{"_index":1490,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":1493,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskschema",{"_index":2945,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasksresponse",{"_index":1492,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskuc",{"_index":1477,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["teacher",{"_index":2894,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":2492,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["teachers",{"_index":1912,"title":{},"body":{"changelog.html":{}}}],["team",{"_index":397,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teaminfo",{"_index":396,"title":{"classes/TeamInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews",{"_index":422,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews(props",{"_index":418,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teams",{"_index":778,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/TeamInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["teardown",{"_index":3868,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":4065,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":4334,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":671,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":4127,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":3412,"title":{},"body":{"license.html":{}}}],["technology",{"_index":4076,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":4054,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":3319,"title":{},"body":{"license.html":{}}}],["template",{"_index":716,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":3376,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":3618,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3637,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3628,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3615,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2189,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":463,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"interfaces/User.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":479,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":459,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":461,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":3951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/services",{"_index":3162,"title":{},"body":{"index.html":{}}}],["testable",{"_index":4482,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testcase",{"_index":4586,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":4607,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":4042,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":3970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":840,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":467,"title":{},"body":{"controllers/DelayController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":4674,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":4682,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":4678,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":4677,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":4676,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":3958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":3956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":227,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":1938,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":4410,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":4393,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":4411,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":228,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":4192,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":3255,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":2472,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["think",{"_index":4361,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":3435,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._queries",{"_index":1275,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.length",{"_index":1273,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.push(query",{"_index":1290,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries[0",{"_index":1276,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._timeout",{"_index":1622,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.addquery",{"_index":1287,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1285,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":1286,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.amqpconnection.publish(configuration.get('mail_send_exchange",{"_index":937,"title":{},"body":{"injectables/MailService.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":1347,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":4508,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1326,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":1364,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":1360,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.code",{"_index":276,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.content",{"_index":401,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.createerrorresponse(error",{"_index":734,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.data",{"_index":1393,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.displayat",{"_index":403,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.em.find(course",{"_index":1538,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(lesson",{"_index":1540,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(submission",{"_index":1542,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount",{"_index":1550,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount(news",{"_index":1221,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1218,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.persistandflush(news",{"_index":1210,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(obj",{"_index":1222,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.removeandflush(news",{"_index":1219,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":204,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":205,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":192,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":193,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":578,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":564,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":568,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":4422,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1217,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.firstname",{"_index":1639,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.getentitypermissions(userid",{"_index":197,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":1339,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":1334,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":1357,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":557,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.lastname",{"_index":1641,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.limit",{"_index":1396,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.logger.log(`create",{"_index":1324,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":4544,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1330,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":1340,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1331,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":4517,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1323,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":4541,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":505,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":509,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":279,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":989,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":339,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["this.newsrepo.delete(news",{"_index":1354,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findall(targets",{"_index":1336,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":1343,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.save(news",{"_index":1329,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":1067,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":1087,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":1074,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":1083,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":1084,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.orm.close",{"_index":988,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.request.app",{"_index":624,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.skip",{"_index":1395,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.taskrepo.findallopenbystudent(userid",{"_index":1591,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findallopenforuser(currentuser.userid",{"_index":1491,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.timeout",{"_index":3865,"title":{},"body":{"todo.html":{}}}],["this.timeout(10000",{"_index":4629,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["this.title",{"_index":278,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.total",{"_index":1394,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":277,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":4516,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":4522,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.save(user",{"_index":4512,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":4510,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.validationerrors",{"_index":75,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":2873,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":3575,"title":{},"body":{"license.html":{}}}],["thr",{"_index":2062,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":2608,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":3308,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":201,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["throwerror",{"_index":1613,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":1621,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":1620,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":2787,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throws",{"_index":194,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":2579,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":2843,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":3393,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":3145,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":2372,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":3147,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":4197,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":433,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":837,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timeout(milliseconds",{"_index":1624,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":1617,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":2615,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":1614,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":839,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":1623,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":2072,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["times",{"_index":2609,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":1226,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timezone",{"_index":1688,"title":{},"body":{"changelog.html":{}}}],["timouts",{"_index":4623,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":3097,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":15,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["todo",{"_index":232,"title":{"todo.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/ICurrentUser.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":1092,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["toggle",{"_index":2841,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":1772,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":4643,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":3361,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":1937,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":4535,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":1386,"title":{},"body":{"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":816,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":4329,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":4354,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":3599,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3598,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3600,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2172,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":4313,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":3309,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3554,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3655,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":4484,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":752,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":1400,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":756,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":3000,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":753,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":893,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4777,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":4241,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":3514,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":4448,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":4345,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":2203,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":1839,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":3574,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":3418,"title":{},"body":{"license.html":{}}}],["tries",{"_index":2817,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":4253,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":4348,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":2837,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":2318,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":399,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":697,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":3862,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":2523,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2761,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":853,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NestAppHolder.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":806,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":3901,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":4743,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1252,"title":{},"body":{"classes/NewsResponse.html":{}}}],["typeorm",{"_index":4747,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":1673,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":2913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typesafety",{"_index":1081,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":413,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":3538,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":4289,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":596,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":3960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":1531,"title":{},"body":{"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":4384,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/news.uc",{"_index":1056,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.uc",{"_index":1478,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["ui",{"_index":3095,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":4308,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":523,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":184,"title":{},"body":{"injectables/AuthorizationService.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":202,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":2629,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":2486,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":4478,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":4249,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":252,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3262,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":4078,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unexpected",{"_index":4632,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":4587,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":728,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":2499,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":4108,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":527,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unit",{"_index":2118,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["unit.test.js",{"_index":3164,"title":{},"body":{"index.html":{}}}],["universal",{"_index":3098,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":687,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":688,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":3544,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":4700,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":3382,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3286,"title":{},"body":{"license.html":{}}}],["unneccesary",{"_index":1698,"title":{},"body":{"changelog.html":{}}}],["unnecessary",{"_index":2858,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":3571,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":2821,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":784,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":1678,"title":{},"body":{"changelog.html":{}}}],["unskip",{"_index":1176,"title":{},"body":{"modules/NewsModule.html":{}}}],["untestable",{"_index":4532,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":3626,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["up",{"_index":1967,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":1020,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":1317,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":1043,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":1249,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":245,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{}}}],["updatenewsparams",{"_index":1044,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":351,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":383,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":2848,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":2557,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":780,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1203,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":3090,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":2826,"title":{},"body":{"changelog.html":{}}}],["upon",{"_index":4464,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":4398,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":526,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":3043,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":640,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":1951,"title":{},"body":{"changelog.html":{}}}],["urlsafe",{"_index":3101,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":2431,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":234,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":4145,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":519,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":1522,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedglobals",{"_index":638,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":960,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":3825,"title":{},"body":{"license.html":{}}}],["useguards(jwtauthguard",{"_index":3936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":168,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":4511,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.id",{"_index":4518,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.ldapdn",{"_index":2700,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":2699,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":562,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["user.repo.ts",{"_index":4413,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.schoolid.tostring",{"_index":560,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["user.test.js",{"_index":3163,"title":{},"body":{"index.html":{}}}],["user.uc.ts",{"_index":4407,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user/class",{"_index":4152,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":4503,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":4509,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":4524,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["userid",{"_index":172,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":571,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["userids",{"_index":319,"title":{},"body":{"classes/Course.html":{}}}],["userinfo",{"_index":320,"title":{"classes/UserInfo.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfo.firstname",{"_index":1647,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.id",{"_index":1645,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.lastname",{"_index":1649,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfomapper",{"_index":1125,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1145,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1148,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1228,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["username",{"_index":2525,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":4414,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":792,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"classes/UserInfo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":2393,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":2860,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":4519,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":2471,"title":{},"body":{"changelog.html":{}}}],["userstasks",{"_index":1549,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["uses",{"_index":2682,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":481,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":598,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":4147,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["util",{"_index":2432,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":4642,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":2398,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":2834,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v1",{"_index":3985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":1770,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":3888,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/index",{"_index":3893,"title":{},"body":{"todo.html":{}}}],["valid",{"_index":760,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":833,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":860,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":4159,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":2495,"title":{},"body":{"changelog.html":{}}}],["validation",{"_index":48,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.error.ts",{"_index":7,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":23,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":1661,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":738,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":746,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":306,"title":{},"body":{"modules/CoreModule.html":{}}}],["validationerror",{"_index":21,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":78,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":68,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":82,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":28,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":287,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":745,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":452,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":4394,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":1404,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":248,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["valueof",{"_index":776,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["values",{"_index":1865,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["variable",{"_index":2746,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":1738,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["verbatim",{"_index":3195,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":811,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":820,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":825,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":4731,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":4729,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":1887,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":4667,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":2134,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1932,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["versioning",{"_index":1672,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":2294,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":3212,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":4128,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":1567,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1313,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":364,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":3568,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3622,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":3053,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":3872,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":363,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":3142,"title":{},"body":{"index.html":{}}}],["void",{"_index":653,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/NestAppHolder.html":{},"classes/NewsScope.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":3471,"title":{},"body":{"license.html":{}}}],["vor",{"_index":1992,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":3896,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":4063,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":4768,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":3894,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":4064,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":4766,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":3104,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":3425,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3810,"title":{},"body":{"license.html":{}}}],["want",{"_index":3222,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":4171,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":812,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":822,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":1521,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["warranties",{"_index":3321,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3320,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3878,"title":{},"body":{"todo.html":{}}}],["way",{"_index":967,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":3481,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":3830,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weeks",{"_index":1586,"title":{},"body":{"injectables/TaskUC.html":{}}}],["weight",{"_index":1864,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":3130,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":4584,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":3661,"title":{},"body":{"license.html":{}}}],["whereas",{"_index":4292,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":895,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":3534,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":758,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["whitelisted",{"_index":876,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":2655,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":3341,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":3521,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3338,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":3241,"title":{},"body":{"license.html":{}}}],["wil",{"_index":2647,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":2451,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":2889,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":2365,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":3155,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":3417,"title":{},"body":{"license.html":{}}}],["wise",{"_index":3167,"title":{},"body":{"index.html":{}}}],["wish",{"_index":3220,"title":{},"body":{"license.html":{}}}],["within",{"_index":261,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":2293,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["words",{"_index":3150,"title":{},"body":{"index.html":{}}}],["work",{"_index":239,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":3359,"title":{},"body":{"license.html":{}}}],["workflows",{"_index":4533,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":2792,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":4579,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":1091,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{},"license.html":{}}}],["world",{"_index":4230,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":3693,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":4671,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["wrapped",{"_index":4592,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["wraps",{"_index":4220,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":4265,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writeerrorlog",{"_index":725,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":732,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writes",{"_index":4335,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":712,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":727,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":3775,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["written",{"_index":3134,"title":{},"body":{"index.html":{},"license.html":{}}}],["wrong",{"_index":719,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":3969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3107,"title":{},"body":{"dependencies.html":{}}}],["xss",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":4266,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["year",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":3489,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":607,"title":{},"body":{"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":3161,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":3709,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":4539,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["yyyy",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":2542,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidationErrorDetailResponse[]\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppendedAttachment.html":{"url":"interfaces/AppendedAttachment.html","title":"interface - AppendedAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppendedAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/interfaces/mail.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        contentDisposition\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n    base64Content: string;\n\n    mimeType: string;\n\n    name: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n    contentDisposition: 'INLINE';\n\n    contentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n    contentDisposition: 'ATTACHMENT';\n}\n\n\ninterface MailContent {\n    subject: string;\n\n    attachments?: (InlineAttachment | AppendedAttachment)[];\n};\n\ninterface PlainTextMailContent extends MailContent {\n    htmlContent?: string;\n\n    plainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n    htmlContent: string;\n\n    plainTextContent?: string;\n}\n\n\nexport interface Mail {\n    mail: PlainTextMailContent | HtmlMailContent;\n\n    recipients: string[];\n\n    from?: string;\n\n    cc?: string[];\n\n    bcc?: string[];\n\n    replyTo?: string[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\n// import { AuthController } from './controller/auth.controller';\n// import { LocalStrategy } from './strategy/local.strategy';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants)],\n\tproviders: [JwtStrategy],\n\texports: [],\n\tcontrollers: [\n\t\t/* AuthController */\n\t],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:37\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedEntities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:57\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel, NewsTargetModelValue } from '../news/entity';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\tconstructor({ type, title, defaultMessage }: IErrorType, code: HttpStatus = HttpStatus.CONFLICT) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                name\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            students\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'userIds', type: UserInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcolor: string;\n\n\t@ManyToMany({ fieldName: 'userIds', type: UserInfo })\n\tstudents = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseInfo.html":{"url":"classes/CourseInfo.html","title":"class - CourseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/course-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'courses' })\nexport class CourseInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CourseInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDate, IsString } from 'class-validator';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(DurationLoggingInterceptor.name)\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedSchools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserSchoolPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserTargetPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModelValue } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        className\n                                \n                                \n                                        code\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FeathersModule_exports\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    find\n                                \n                                \n                                    get\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getService\n                        \n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        DB_PASSWORD\n                                \n                                \n                                        DB_URL\n                                \n                                \n                                            Optional\n                                        DB_USERNAME\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('Error')\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:114\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger } from '../../logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HtmlMailContent.html":{"url":"interfaces/HtmlMailContent.html","title":"interface - HtmlMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HtmlMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/interfaces/mail.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        htmlContent\n                                \n                                \n                                            Optional\n                                        plainTextContent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n    base64Content: string;\n\n    mimeType: string;\n\n    name: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n    contentDisposition: 'INLINE';\n\n    contentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n    contentDisposition: 'ATTACHMENT';\n}\n\n\ninterface MailContent {\n    subject: string;\n\n    attachments?: (InlineAttachment | AppendedAttachment)[];\n};\n\ninterface PlainTextMailContent extends MailContent {\n    htmlContent?: string;\n\n    plainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n    htmlContent: string;\n\n    plainTextContent?: string;\n}\n\n\nexport interface Mail {\n    mail: PlainTextMailContent | HtmlMailContent;\n\n    recipients: string[];\n\n    from?: string;\n\n    cc?: string[];\n\n    bcc?: string[];\n\n    replyTo?: string[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for ceating news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        displayAt\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, ValueOf } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accountId\n                                \n                                \n                                        roles\n                                \n                                \n                                        schoolId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        defaultMessage\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    debug\n                                \n                                \n                                    error\n                                \n                                \n                                    log\n                                \n                                \n                                        Optional\n                                    verbose\n                                \n                                \n                                    warn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            verbose\n                        \n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creator\n                                \n                                \n                                        displayAt\n                                \n                                \n                                            Optional\n                                        externalId\n                                \n                                \n                                        school\n                                \n                                \n                                            Optional\n                                        source\n                                \n                                \n                                            Optional\n                                        sourceDescription\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        updater\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                    \n                                \n                                \n                                    \n                                        updater:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for finding news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        target\n                                \n                                \n                                            Optional\n                                        unpublished\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         FindNewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FindNewsTarget\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, ValueOf } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InlineAttachment.html":{"url":"interfaces/InlineAttachment.html","title":"interface - InlineAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InlineAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/interfaces/mail.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        contentDisposition\n                                \n                                \n                                        contentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentId\n                                    \n                                \n                                \n                                    \n                                        contentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n    base64Content: string;\n\n    mimeType: string;\n\n    name: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n    contentDisposition: 'INLINE';\n\n    contentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n    contentDisposition: 'ATTACHMENT';\n}\n\n\ninterface MailContent {\n    subject: string;\n\n    attachments?: (InlineAttachment | AppendedAttachment)[];\n};\n\ninterface PlainTextMailContent extends MailContent {\n    htmlContent?: string;\n\n    plainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n    htmlContent: string;\n\n    plainTextContent?: string;\n}\n\n\nexport interface Mail {\n    mail: PlainTextMailContent | HtmlMailContent;\n\n    recipients: string[];\n\n    from?: string;\n\n    cc?: string[];\n\n    bcc?: string[];\n\n    replyTo?: string[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        jwtOptions\n                                \n                                \n                                        secret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        aud\n                                \n                                \n                                        exp\n                                \n                                \n                                        iat\n                                \n                                \n                                        iss\n                                \n                                \n                                        jti\n                                \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         JwtPayload\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor() {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tvalidate(payload: JwtPayload): JwtPayload {\n\t\t// TODO check jwt is whitelisted\n\t\t// TODO check user exist/is active\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { Course } from './course.entity';\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mail.html":{"url":"interfaces/Mail.html","title":"interface - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/interfaces/mail.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bcc\n                                \n                                \n                                            Optional\n                                        cc\n                                \n                                \n                                            Optional\n                                        from\n                                \n                                \n                                        mail\n                                \n                                \n                                        recipients\n                                \n                                \n                                            Optional\n                                        replyTo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcc\n                                    \n                                \n                                \n                                    \n                                        bcc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                    \n                                \n                                \n                                    \n                                        cc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                    \n                                \n                                \n                                    \n                                        mail:     PlainTextMailContent | HtmlMailContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlainTextMailContent | HtmlMailContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipients\n                                    \n                                \n                                \n                                    \n                                        recipients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyTo\n                                    \n                                \n                                \n                                    \n                                        replyTo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n    base64Content: string;\n\n    mimeType: string;\n\n    name: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n    contentDisposition: 'INLINE';\n\n    contentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n    contentDisposition: 'ATTACHMENT';\n}\n\n\ninterface MailContent {\n    subject: string;\n\n    attachments?: (InlineAttachment | AppendedAttachment)[];\n};\n\ninterface PlainTextMailContent extends MailContent {\n    htmlContent?: string;\n\n    plainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n    htmlContent: string;\n\n    plainTextContent?: string;\n}\n\n\nexport interface Mail {\n    mail: PlainTextMailContent | HtmlMailContent;\n\n    recipients: string[];\n\n    from?: string;\n\n    cc?: string[];\n\n    bcc?: string[];\n\n    replyTo?: string[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailAttachment.html":{"url":"interfaces/MailAttachment.html","title":"interface - MailAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/interfaces/mail.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        base64Content\n                                \n                                \n                                        mimeType\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base64Content\n                                    \n                                \n                                \n                                    \n                                        base64Content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                    \n                                \n                                \n                                    \n                                        mimeType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n    base64Content: string;\n\n    mimeType: string;\n\n    name: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n    contentDisposition: 'INLINE';\n\n    contentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n    contentDisposition: 'ATTACHMENT';\n}\n\n\ninterface MailContent {\n    subject: string;\n\n    attachments?: (InlineAttachment | AppendedAttachment)[];\n};\n\ninterface PlainTextMailContent extends MailContent {\n    htmlContent?: string;\n\n    plainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n    htmlContent: string;\n\n    plainTextContent?: string;\n}\n\n\nexport interface Mail {\n    mail: PlainTextMailContent | HtmlMailContent;\n\n    recipients: string[];\n\n    from?: string;\n\n    cc?: string[];\n\n    bcc?: string[];\n\n    replyTo?: string[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailContent.html":{"url":"interfaces/MailContent.html","title":"interface - MailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/interfaces/mail.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attachments\n                                \n                                \n                                        subject\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                    \n                                \n                                \n                                    \n                                        attachments:     (InlineAttachment | AppendedAttachment)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (InlineAttachment | AppendedAttachment)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n    base64Content: string;\n\n    mimeType: string;\n\n    name: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n    contentDisposition: 'INLINE';\n\n    contentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n    contentDisposition: 'ATTACHMENT';\n}\n\n\ninterface MailContent {\n    subject: string;\n\n    attachments?: (InlineAttachment | AppendedAttachment)[];\n};\n\ninterface PlainTextMailContent extends MailContent {\n    htmlContent?: string;\n\n    plainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n    htmlContent: string;\n\n    plainTextContent?: string;\n}\n\n\nexport interface Mail {\n    mail: PlainTextMailContent | HtmlMailContent;\n\n    recipients: string[];\n\n    from?: string;\n\n    cc?: string[];\n\n    bcc?: string[];\n\n    replyTo?: string[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\n\nimport { rabbitMqClient } from './rabbitMqClient';\n\n@Module({\n\timports: [rabbitMqClient],\n\tproviders: [MailService],\n\texports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amqpConnection: AmqpConnection)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/mail/mail.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpConnection\n                                                  \n                                                        \n                                                                    AmqpConnection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(data: Mail)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Configuration } from '@hpi-schul-cloud/commons';\n\nimport { Mail } from './interfaces/mail';\n\n@Injectable()\nexport class MailService {\n\tconstructor(private readonly amqpConnection: AmqpConnection) {}\n\n\tpublic async send(data: Mail) {\n\t\treturn this.amqpConnection.publish(Configuration.get('MAIL_SEND_EXCHANGE'), 'mail-drop', data);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MikroOrmModuleSyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            MikroOrmModuleSyncOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nconst createMikroOrmModule = (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MikroOrmModuleSyncOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule(options || {})],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NestAppHolder.html":{"url":"classes/NestAppHolder.html","title":"class - NestAppHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NestAppHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/legacyConnection/nestAppHolder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getInstance\n                            \n                            \n                                    Static\n                                setInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/legacyConnection/nestAppHolder.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            instance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     INestApplication\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/legacyConnection/nestAppHolder.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInstance()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/legacyConnection/nestAppHolder.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     INestApplication\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            setInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInstance(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/legacyConnection/nestAppHolder.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { INestApplication } from '@nestjs/common';\n\nexport class NestAppHolder {\n  private static instance: INestApplication;\n\n  private constructor() {\n    // singelton\n  }\n\n  public static getInstance(): INestApplication {\n    return NestAppHolder.instance;\n  }\n\n  public static setInstance(app: INestApplication) {\n    NestAppHolder.instance = app;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:34\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:38\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:51\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:55\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:30\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/entity/news.entity.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:46\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ParseObjectIdPipe } from '@shared/controller/pipe';\nimport { PaginationQuery } from '@shared/controller';\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { NewsUc } from '../uc/news.uc';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\tpagination\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\treturn new PaginationResponse(dtoList, count);\n\t}\n\n\t/** Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            unpublished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapCreateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapNewsScopeToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapUpdateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { ICreateNews, INewsScope, IUpdateNews, News, NewsTargetModelValue } from '../entity';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target?.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_imports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { AuthorizationModule } from '../authorization/authorization.module';\nimport { LoggerModule } from '../../core/logger/logger.module';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:24\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findNewsAndCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements names (school, updator/creator) populated already \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { News } from '../entity';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync save(news: News): Promise {\n\t\tawait this.em.persistAndFlush(news);\n\t\treturn news;\n\t}\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param pagination\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\tpagination: IPagination = {}\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\t// TODO sort by publishedAt?\n\t\t// scope.sortBy(...)\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, pagination);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements names (school, updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst news = await this.em.findOneOrFail(News, id, ['school', 'creator', 'updater']);\n\t\treturn news;\n\t}\n\n\tasync delete(news: News): Promise {\n\t\tawait this.em.removeAndFlush(news);\n\t}\n\n\tprivate async findNewsAndCount(query, pagination: IPagination): Promise> {\n\t\tconst [obj, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t});\n\t\tconst newsList = await this.em.populate(obj, ['school', 'creator', 'updater']);\n\t\treturn [newsList, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The creation timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Reference to the User that created the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The School ownership'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SourceType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'The source description of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The update timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '../../entity';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addQuery\n                            \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _queries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterQuery[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addQuery(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byTargets\n                        \n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byUnpublished\n                        \n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from '@shared/repo';\nimport { News } from '../entity';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query;\n\t}\n\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n\n\tprivate addQuery(query: FilterQuery) {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetIds\n                                \n                                \n                                        targetModel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModelValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModelValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModelValue } from '../entity';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModelValue;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByIdForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getNewsPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getRequiredPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getTargetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModelValue[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModelValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { AuthorizationService } from '../../authorization/authorization.service';\nimport { News, NewsTargetModel, NewsTargetModelValue, ICreateNews, INewsScope, IUpdateNews } from '../entity';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, ...props } = params;\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.save(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, pagination);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.save(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.delete(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModelValue[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number, skip?: number, limit?: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n\n\t@ApiProperty()\n\tskip?: number;\n\n\t@ApiProperty()\n\tlimit?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlainTextMailContent.html":{"url":"interfaces/PlainTextMailContent.html","title":"interface - PlainTextMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlainTextMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/interfaces/mail.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        htmlContent\n                                \n                                \n                                        plainTextContent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n    base64Content: string;\n\n    mimeType: string;\n\n    name: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n    contentDisposition: 'INLINE';\n\n    contentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n    contentDisposition: 'ATTACHMENT';\n}\n\n\ninterface MailContent {\n    subject: string;\n\n    attachments?: (InlineAttachment | AppendedAttachment)[];\n};\n\ninterface PlainTextMailContent extends MailContent {\n    htmlContent?: string;\n\n    plainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n    htmlContent: string;\n\n    plainTextContent?: string;\n}\n\n\nexport interface Mail {\n    mail: PlainTextMailContent | HtmlMailContent;\n\n    recipients: string[];\n\n    from?: string;\n\n    cc?: string[];\n\n    bcc?: string[];\n\n    replyTo?: string[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfo.html":{"url":"classes/SchoolInfo.html","title":"class - SchoolInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/school-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'schools' })\nexport class SchoolInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: SchoolInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                SchoolInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SchoolInfo } from '../entity';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: SchoolInfo): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { MailModule } from './modules/mail/mail.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\nimport { TaskModule } from './modules/task/task.module';\nimport { CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo } from './modules/news/entity';\nimport { Task, Lesson, Course, Submission } from './modules/task/entity';\nimport { CoreModule } from './core/core.module';\nimport { CourseInfo } from './modules/news/entity/course-info.entity';\nimport { TeamInfo } from './modules/news/entity/team-info.entity';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tTaskModule,\n\t\tMailModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: [\n\t\t\t\tNews,\n\t\t\t\tCourseInfo,\n\t\t\t\tCourseNews,\n\t\t\t\tSchoolNews,\n\t\t\t\tTeamNews,\n\t\t\t\tSchoolInfo,\n\t\t\t\tTeamInfo,\n\t\t\t\tUserInfo,\n\t\t\t\tTask,\n\t\t\t\tLesson,\n\t\t\t\tCourse,\n\t\t\t\tSubmission,\n\t\t\t],\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                homework\n                            \n                            \n                                student\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'homeworkId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            student\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'studentId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\nimport { Task } from './task.entity';\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\thomework: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                private\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dueDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lesson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Lesson\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'lessonId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            private\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Course } from './course.entity';\nimport { Lesson } from './lesson.entity';\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate?: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: Lesson;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dashboard')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { PaginationQuery } from '@shared/controller/dto/pagination.query';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { TaskUC } from '../uc/task.uc';\n\nimport { TaskResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n// TODO: swagger doku do not read from combined query object only from passed single parameter in Query(), but this do not allowed optional querys only required querys\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('task')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get('dashboard')\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\tconst [tasks, total] = await this.taskUc.findAllOpenForUser(currentUser.userId, paginationQuery);\n\t\tconst tasksResponse = tasks.map((task) => TaskMapper.mapToResponse(task));\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(tasksResponse, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskResponse } from '../controller/dto';\nimport { Task } from '../entity';\n\nexport class TaskMapper {\n\tstatic mapToResponse(task: Task): TaskResponse {\n\t\tconst dto = new TaskResponse();\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.courseName = task.course?.name;\n\t\tdto.displayColor = task.course?.color;\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nTaskRepo\n\nTaskRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc/task.uc';\nimport { TaskRepo } from './repo/task.repo';\n\n@Module({\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenByStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenByStudent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenByStudent(userId: EntityId, undefined: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { QueryOrder } from '@mikro-orm/core';\nimport { Counted } from '@shared/domain/types';\nimport { Task, Submission, Course, Lesson } from '../entity';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t// WARNING: this is used to deal with the current datamodel, and needs to be changed.\n\t// DO NOT DO THIS AT HOME!!\n\tasync findAllOpenByStudent(userId: EntityId, { limit, skip }: IPagination = {}): Promise> {\n\t\t// todo: handle coursegroups\n\n\t\t// TODO move BL to UC\n\t\t// we have following logical groups:\n\t\t// filter for all news a user might read\n\t\t// filter by tasks not yet done\n\t\t// order by duedate\n\t\t// pagination\n\n\t\tconst coursesOfStudent = await this.em.find(Course, {\n\t\t\tstudents: userId,\n\t\t});\n\t\tconst lessonsOfStudent = await this.em.find(Lesson, {\n\t\t\tcourse: { $in: coursesOfStudent },\n\t\t\thidden: false,\n\t\t});\n\n\t\tconst submissionsOfStudent = await this.em.find(Submission, {\n\t\t\tstudent: userId,\n\t\t});\n\t\tconst homeworksWithSubmissions = submissionsOfStudent.map((submission) => submission.homework.id);\n\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\tconst [usersTasks, total] = await this.em.findAndCount(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t// TODO task query builder, see NewsScope\n\t\t\t\t$and: [\n\t\t\t\t\t// TODO move into a logic group / director\n\t\t\t\t\t{ id: { $nin: homeworksWithSubmissions } },\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ course: { $in: coursesOfStudent } },\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: lessonsOfStudent } }] },\n\t\t\t\t\t{ $or: [{ dueDate: { $gte: oneWeekAgo } }, { dueDate: null }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t// TODO Populate in separate step\n\t\t\t// TODO extract pagination, oderby\n\t\t\t{ populate: ['course'], limit, offset: skip, orderBy: { dueDate: QueryOrder.ASC } }\n\t\t);\n\n\t\treturn [usersTasks, total];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            courseName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            displayColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            duedate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t// status: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenForUser(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { TaskRepo } from '../repo/task.repo';\nimport { Task } from '../entity';\n\n// filter tasks older than 3 weeks\n@Injectable()\nexport class TaskUC {\n\tconstructor(private taskRepo: TaskRepo) {}\n\n\tasync findAllOpenForUser(userId: EntityId, pagination: IPagination): Promise> {\n\t\t// TODO authorization (user conditions -> permissions?)\n\t\t// TODO get permitted tasks...\n\t\t// TODO have BL from repo here\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllOpenByStudent(userId, pagination);\n\t\treturn [tasks, total];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamInfo.html":{"url":"classes/TeamInfo.html","title":"class - TeamInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/team-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'teams' })\nexport class TeamInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            defaultTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : REQUEST_TIMEOUT\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        permissions\n                                \n                                \n                                        schoolId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                    \n                                \n                                \n                                    \n                                        schoolId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModelValue } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/user-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: { firstName: string; lastName: string }) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(userInfo: UserInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userInfo\n                                    \n                                                UserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserInfo } from '../entity';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(userInfo: UserInfo): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = userInfo.id;\n\t\tdto.firstName = userInfo.firstName;\n\t\tdto.lastName = userInfo.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'First name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Last name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\nUnreleased\nAdded\n\nSC-9018; SC-9003 - created schoolsList public endpoint, and jwt secured /schools endpoint\nSC-9093 - make configured default language and timezone available in config service\nSC-9092 - delete S3 files after 7 days from user deletion\nSC-8959 - Add messenger to deletion concept\n\nChanged\n\nremove unneccesary timeout definitions from tests and avoid promise chains\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\n\n[26.4.5] - 2021-06-21\nAdded\n\nSC-9156 - Add maintenance mode for LDAP rewrite\n\n[26.4.4] - 2021-06-16\nChange\n\nrename permission TASK_DASHBOARD_VIEW_V3\n\n[26.4.3] - 2021-06-16\nChange\n\nSC-9139 - Add a check if user roles should be updated or not to the repo\n\n[26.4.2] - 2021-06-16\nFixed\n\nnpm run syncIndex work for not existing collections in the db\n\n[26.4.1] - 2021-06-15\nChange\n\nSC-9029 - Change place of the channel creation for RabbitMQ\n\n[26.4.0] - 2021-06-11\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.1] - 2021-06-14\nAdded\n\nSC-9134 - Add missing mongo indexes for LDAP Sync\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n[26.2.2] - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n[26.2.1] - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n[26.2.0] - 2021-06-01\nAdded\n\nOPS-2418 - Change buildpipelines (Server, Client, Nuxt) to execute E2E tests according QF decision\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\nSC-9004 - Sync env variables between backend and frontend\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches\nAdd run script for sync indexes based on existing and registered schemas.\n\nChanged\n\nSC-8440 - fixed open api validation for manual consent\nSC-9055 - changed Edu-Sharing permissions for Brandenburg Sportinhalt content\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8933 - fix date format on first login\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            interface\n            GlobalConstants\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            usedGlobals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            API_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            ROUTE_PRAEFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/legacyConnection/nestAppHolder.ts\n            \n            class\n            NestAppHolder\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            STRATEGIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            ICurrentUser\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n            \n            variable\n            createMikroOrmModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/interfaces/mail.ts\n            \n            interface\n            AppendedAttachment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/interfaces/mail.ts\n            \n            interface\n            HtmlMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/interfaces/mail.ts\n            \n            interface\n            InlineAttachment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/interfaces/mail.ts\n            \n            interface\n            Mail\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/interfaces/mail.ts\n            \n            interface\n            MailAttachment\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/interfaces/mail.ts\n            \n            interface\n            MailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/interfaces/mail.ts\n            \n            interface\n            PlainTextMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/rabbitMqClient.ts\n            \n            variable\n            rabbitMqClient\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/course-info.entity.ts\n            \n            class\n            CourseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            News\n            \n                23 %\n                (5/21)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            variable\n            NewsTargetModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/school-info.entity.ts\n            \n            class\n            SchoolInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/team-info.entity.ts\n            \n            class\n            TeamInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/user-info.entity.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task.response.ts\n            \n            class\n            TaskResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson.entity.ts\n            \n            class\n            Lesson\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            class\n            TaskMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            CourseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            LessonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            SubmissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            TaskSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            REQUEST_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            controller\n            DelayController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            createTestModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            enableOpenApiDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n            \n            function\n            StringToBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/pagination.interface.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/sorting.ts\n            \n            variable\n            SortOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @golevelup/nestjs-rabbitmq : ^1.17.0\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/microservices : ^7.6.17\n        \n            @nestjs/mongoose : ^7.2.4\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^8.5.0\n        \n            amqp-connection-manager : ^3.2.2\n        \n            amqplib : ^0.8.0\n        \n            arg : ^5.0.0\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.306.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : ^4.7.0\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.28.1\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.12.3\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.8.0\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^3.1.20\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForBusinessError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForFeathersError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForUnknownError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            StringToBoolean\n                        \n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nBased on Node.js and Feathers\nDevelop:  \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nSwagger UI documentation when running the server locally, it is served at http://localhost:3030/docs/.\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages.\n\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\n\nSetup\nYou will need the client as well. For more detailed setup instructions, take a look here. It is written for Windows but the procedure is similar for other OS.\nRun\n\nGo into project folder\nRun mongod\nRun npm start\nRun npm run setup\n\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nTesting\nRun tests\n\nGo into project folder\nrun npm run test\n\nTo run a single test, use npm run mocha-single -- .\nCreate tests\n\nCreate a folder for the \"service\" you're working on in \"/test/services\"\nCreate a file \"user.test.js\" for frontend tests (e.g. clicking a link or check if URL is available)\nCreate a file \"unit.test.js\" for backend tests (e.g. calculating a number)\n\nTry to cover as many methods as possible unit test wise - goal is 100% of course, so one test per method.\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\"This License\" refers to version 3 of the GNU Affero General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n\nThis requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\nNotwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    36 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    21 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\n\nACCEPTED\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes (remove this.timeout and red promise chains)\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FindNewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTargetModelValue   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../sorting.ts)\n                        \n                        \n                            SortOrderValue   (apps/.../sorting.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/news/entity/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    FindNewsTarget\n                \n            \n            \n                \n                    define the news target for find \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news \n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                    define the news target for a specific entity  \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTargetModelValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/sorting.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SortOrderValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_PATH   (apps/.../constants.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            CourseSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            LessonSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            PORT   (apps/.../constants.ts)\n                        \n                        \n                            rabbitMqClient   (apps/.../rabbitMqClient.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            ROUTE_PRAEFIX   (apps/.../constants.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            SortOrder   (apps/.../sorting.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            SubmissionSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            TaskSchema   (apps/.../task.schema.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_PATH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3030\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTE_PRAEFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'v3'\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                        \n                    \n\n                \n                    \n                        Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                        \n                    \n\n                \n                    \n                        Returns the current authenticated user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STRATEGIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['jwt'] as const\n                        \n                    \n\n\n            \n        \n\n    jest.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Config.InitialOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$', 'main.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('ts-jest/utils')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('./tsconfig.json')\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/controller/swagger.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                        \n                    \n\n                \n                    \n                        \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableOpenApiDocs\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/task/repo/task.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LessonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SubmissionSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : submissionSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TaskSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonModel\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponseForHttpException\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                        \n                    \n\n                \n                    \n                        Creates ErrorResponse from NestJS build in technical exceptions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBusinessError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFeathersError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTechnicalError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                        \n                    \n\n                \n                    \n                        Compare helper to detect an error is a build in NestJS http exception.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeErrorLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValidationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createMikroOrmModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTestModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmptyResultQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { $and: [{ _id: false }] }\n                        \n                    \n\n                \n                    \n                        When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                    \n                \n\n            \n        \n\n    apps/server/src/modules/authentication/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JwtConstants\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : externalAuthConfig\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NEWS_SOURCES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['internal', 'rss'] as const\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/entity/news.types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NewsTargetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/server-error-types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NOT_FOUND_ERROR_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IErrorType\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverErrorTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : legacyErrorTypes\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : serverErrorTypes\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/mail/rabbitMqClient.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rabbitMqClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : RabbitMQModule.forRoot(RabbitMQModule, {\n    exchanges: [\n        {\n            name: Configuration.get('MAIL_SEND_EXCHANGE'),\n            type: 'direct',\n        },\n    ],\n    uri: Configuration.get('RABBITMQ_URI'),\n})\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REQUEST_TIMEOUT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/domain/interface/sorting.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SortOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n\tasc: 'asc',\n\tdesc: 'desc',\n} as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/config/database.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            usedGlobals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalConstants\n\n                        \n                    \n                    \n                        \n                            Default value : globals\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : usedGlobals\n                        \n                    \n\n                \n                    \n                        Database URL \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:doc:serve builds code documentation and module relations into /documentation folder and serves it on port :8080\nnest:start starts the nest application // TODO how?\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to statically check the code\n\nnest:lint run eslint to report linter issues and apply formatting\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting \n\nHow to test the application?\n\nnest:test executes all jest  (NestJS) tests, to separate them from existing tests, not use _.test.[ts|js] as filename but instead either *.spec.ts beside tested files or *.e2e-spec.ts in test folder\nnest:test:watch executes changed tests again on save\nnest:test:cov reports coverage results\nnest:test:debug executes tests for debugging\nnest:test:e2e execute e2e tests only\nnest:test:spec execute spec tests (without e2e) only\n\nStatic Code Analysis\nBased on npm run nest:test:all you can ensure the code is accepted to be merged. This executes all tests, checks for linter issues and code coverage. \nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture divides the application into technical ***layers\\* based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into component parts\\ for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to *external consumers *over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Samples\nHandling of function return values\nWhen assigning a value to an expect, separate the function call from the expectation to simplify debugging. This later helps when you not know about the return value type or if it's an promise or not. This is good style not only for tests.\n    // doSomethingCrazy : retValue\n    it('bad sample', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good sample', () => {\n        const result = doSomethingCrazy(x,y,z)\n        expect(result).to... // here we can simply debug\n    })\nPromises and Timouts in tests\nWhen using asynchronous functions and/opr promises, results must be awaited within of an async test function instead of using promise chains. While for expexting error conditions it might be helpful to use catch for extracting a value from an expected error, in every case avoid writing long promise chains.\n\nInstead of using done callback, use async test functions.\nUse await instead of (long) promise chains\nnever manually set a timeout\n\n    // doSomethingCrazy : Promise\n    it('bad async sample', async function (done) => {\n        this.timeout(10000);\n        return doSomethingCrazy(x,y,z).then(result=>{\n            expect(result).to...\n            done() // expected done\n        }).catch(()=>{\n            logger.info(`Could not ... ${error}`);\n            done() // unexpected done, test will always succeed which is wrong\n        })\n    })\n    it('good async sample', async () => {\n        // no timeout set\n        const result = await doSomethingCrazy(x,y,z)\n        expect(result).to...\n    })\nTimeouts must not be used, when async handling is correctly defined!\n\nExpecting errors in tests\nWhen expecting an error, you might take values from an error, test for the error type thrown and must care of promises.\n    // doSomethingCrazy : Promise\n    it('bad async sample expecting an error', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good async sample expecting an error value', async () => {\n        const code = await doSomethingCrazy(x,y,z).catch(err => err.code)\n        expect(code).to...\n    })\n    it('good sample expecting an error type from a sync function', () => {\n        expect(() => doSomethingCrazySync(wrong, param)).toThrow(BadRequestException);\n    })\n    it('good sample expecting an error type from an async function', async () => {\n        await expect(doSomethingCrazySync(wrong, param)).rejects.toThrow(BadRequestException);\n    })Testing Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                        (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead.\n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                           (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as PaginationResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
