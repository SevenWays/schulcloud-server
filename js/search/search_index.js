var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AdminIdAndToken.html",[0,0.512,1,3.965]],["body/interfaces/AdminIdAndToken.html",[0,0.473,1,6.398,2,0.852,3,0.054,4,0.045,5,0.033,6,2.208,7,2.328,8,0.131,9,0.54,10,1.596,11,6.813,12,1.096,13,0.229,14,0.005,15,0.133,16,4.811,17,1.668,18,0.825,19,0.512,20,2.328,21,2.208,22,0.092,23,3.468,24,3.058,25,3.658,26,3.658,27,3.658,28,3.658,29,5.906,30,1.879,31,0.148,32,2.328,33,0.634,34,2.139,35,2.661,36,2.479,37,0.798,38,3.486,39,2.328,40,1.548,41,2.479,42,2.479,43,3.938,44,4.017,45,3.589,46,3.79,47,4.017,48,4.675,49,6.865,50,5.906,51,4.811,52,2.328,53,2.479,54,2.642,55,2.479,56,2.328,57,2.479,58,2.479,59,2.479,60,3.237,61,2.479,62,2.479,63,4.811,64,2.479,65,2.479,66,2.479,67,2.479,68,2.328,69,0.56,70,2.479,71,1.434,72,1.31,73,5.761,74,2.606,75,2.479,76,3.388,77,2.539,78,1.354,79,2.479,80,6.578,81,2.479,82,2.554,83,2.479,84,1.668,85,2.479,86,2.479,87,2.479,88,2.479,89,2.479,90,2.479,91,2.479,92,2.479,93,6.578,94,6.578,95,2.479,96,2.479,97,2.479,98,2.479,99,2.479,100,2.479,101,2.479,102,2.479,103,2.479,104,2.479,105,2.479,106,2.479,107,2.479,108,2.479,109,2.479,110,3.895,111,3.895,112,2.324,113,2.479,114,0.442,115,2.479,116,2.479,117,2.479,118,3.922,119,4.518,120,2.479,121,1.946,122,2.328,123,1.023,124,2.479,125,2.479,126,2.479,127,4.279,128,1.325,129,2.037,130,3.895,131,2.479,132,3.895,133,3.895,134,2.479,135,2.479,136,2.479,137,4.811,138,3.922,139,3.647,140,3.922,141,2.479,142,3.658,143,3.486,144,3.658,145,1.451,146,4.089,147,4.811,148,3.387,149,1.288,150,4.811,151,4.811,152,4.811,153,2.479,154,2.479,155,2.479,156,2.479,157,5.925,158,4.811,159,4.811,160,4.811,161,2.479,162,3.895,163,3.895,164,2.479,165,2.479,166,2.479,167,2.479,168,1.241,169,2.479,170,3.895,171,3.658,172,0.002,173,0.002]],["title/classes/ApiValidationError.html",[31,0.161,174,3.588]],["body/classes/ApiValidationError.html",[3,0.109,4,0.09,5,0.066,8,0.266,9,0.898,12,0.909,13,0.35,14,0.005,15,0.221,19,1.041,22,0.097,30,4.912,31,0.192,33,1.658,34,2.766,37,1.621,69,1.137,71,3.094,84,4.36,114,0.463,172,0.004,173,0.004,174,5.508,175,1.151,176,7.81,177,6.072,178,6.853,179,3.63,180,5.43,181,3.192,182,1.272,183,7.164,184,7.164,185,6.072,186,6.734,187,0.827,188,6.072,189,0.738,190,0.471,191,7.748,192,3.573,193,5.448,194,5.448,195,5.448,196,5.448,197,5.448,198,5.448,199,1.256,200,5.448,201,3.819,202,4.731,203,5.448,204,5.038,205,2.019,206,5.038,207,3.783,208,4.481,209,4.486,210,4.731,211,2.941,212,5.448]],["title/classes/ApiValidationErrorResponse.html",[31,0.161,213,4.222]],["body/classes/ApiValidationErrorResponse.html",[3,0.113,4,0.094,5,0.069,8,0.276,9,0.92,13,0.306,14,0.005,15,0.249,22,0.1,31,0.199,33,1.698,34,2.872,38,4.244,69,1.18,78,1.1,84,4.467,114,0.481,128,1.469,149,1.442,172,0.004,173,0.004,174,6.875,175,1.195,179,3.718,181,2.958,187,0.665,189,0.767,190,0.489,191,7.886,201,5.527,207,3.875,208,5.682,210,4.912,213,6.638,214,8.788,215,6.305,216,1.705,217,5.412,218,5.211,219,5.304,220,8,221,6.305,222,7.291,223,6.305,224,4.912,225,5.657,226,6.305,227,6.305,228,6.305,229,6.305,230,8,231,8,232,6.305,233,8,234,6.305]],["title/interfaces/AppendedAttachment.html",[0,0.512,235,3.314]],["body/interfaces/AppendedAttachment.html",[0,1.012,2,1.928,3,0.121,4,0.101,5,0.074,8,0.296,9,0.96,12,1.104,14,0.005,22,0.107,33,2.067,114,0.515,172,0.004,173,0.004,235,5.908,236,4.571,237,6.172,238,6.587,239,4.571,240,4.571,241,5.442,242,4.571,243,4.571,244,4.571,245,5.908,246,4.401,247,4.571,248,5.442,249,5.652,250,5.652,251,5.442,252,4.934,253,4.401,254,4.571,255,4.571,256,4.571]],["title/modules/AuthModule.html",[257,1.359,258,3.759]],["body/modules/AuthModule.html",[3,0.121,4,0.101,5,0.074,14,0.005,15,0.285,19,1.161,22,0.108,31,0.214,172,0.004,173,0.004,257,2.234,258,7.616,259,2.627,260,3.739,261,6.076,262,6.076,263,6.076,264,6.999,265,7.733,266,7.332,267,4.235,268,3.212,269,2.969,270,6.772,271,3.474,272,3.739,273,8.367,274,5.276,275,6.772,276,6.076,277,5.618,278,6.772,279,5.003,280,5.618,281,6.772,282,6.076,283,6.772]],["title/modules/AuthorizationModule.html",[257,1.359,284,3.588]],["body/modules/AuthorizationModule.html",[3,0.123,4,0.102,5,0.075,14,0.005,15,0.27,19,1.175,22,0.109,31,0.217,172,0.004,173,0.004,257,2.251,259,2.66,260,3.767,267,4.267,268,3.252,269,3.006,271,3.501,272,3.767,284,7.321,285,6.152,286,6.152,287,6.152,288,6.152,289,7.02,290,6.79,291,7.02,292,6.857,293,4.084,294,6.152,295,6.857,296,3.828,297,6.152]],["title/injectables/AuthorizationService.html",[18,0.895,290,3.314]],["body/injectables/AuthorizationService.html",[3,0.082,4,0.068,5,0.05,8,0.201,12,0.936,13,0.283,14,0.005,15,0.212,18,1.135,19,0.784,22,0.073,31,0.145,40,4.601,69,0.857,74,2.531,76,3.29,77,2.311,78,0.887,114,0.619,128,1.357,129,2.442,145,2.404,148,2.171,149,0.825,172,0.003,173,0.003,182,1.051,187,0.675,189,0.987,190,0.63,199,1.377,290,4.203,291,6.265,296,2.555,297,4.107,298,1.522,299,4.576,300,6.709,301,5.791,302,7.476,303,4.576,304,4.576,305,4.576,306,2.911,307,5.007,308,4.862,309,5.915,310,4.442,311,4.576,312,4.059,313,6.454,314,1.958,315,4.768,316,6.454,317,4.576,318,4.206,319,4.107,320,4.576,321,3.699,322,4.552,323,5.791,324,4.203,325,5.355,326,1.145,327,1.692,328,4.653,329,4.552,330,4.576,331,4.576,332,3.797,333,4.576,334,4.576,335,4.576,336,6.454,337,4.576,338,4.576,339,4.576,340,6.454,341,4.576,342,4.576]],["title/classes/BaseEntity.html",[31,0.161,343,3.2]],["body/classes/BaseEntity.html",[3,0.115,4,0.096,5,0.07,8,0.282,9,1.019,10,1.81,12,0.934,13,0.282,14,0.005,15,0.229,22,0.129,31,0.28,149,1.599,172,0.004,173,0.004,175,1.219,179,2.987,187,0.673,314,2.052,343,5.577,344,5.768,345,4.007,346,3.734,347,2.277,348,4.326,349,6.428,350,4.326,351,6.428,352,2.992,353,2.027,354,1.91,355,2.872,356,5.008,357,5.333,358,3.042,359,5.333,360,5.333,361,5.768,362,4.348,363,3.688,364,5.768,365,3.253,366,5.333,367,4.043,368,2.579,369,3.253,370,2.579,371,5.768,372,5.768,373,5.768,374,4.348,375,3.796,376,5.008,377,5.333,378,2.579,379,2.496,380,5.768,381,2.535]],["title/classes/BaseEntityWithTimestamps.html",[31,0.161,358,1.911]],["body/classes/BaseEntityWithTimestamps.html",[3,0.11,4,0.091,5,0.067,8,0.269,9,0.997,10,1.778,12,0.913,13,0.273,14,0.005,15,0.222,22,0.125,31,0.274,149,1.705,172,0.004,173,0.004,175,1.162,179,2.848,187,0.76,314,2.016,343,4.942,344,5.499,345,3.937,346,3.669,347,2.428,348,4.251,350,4.251,352,3.087,353,1.966,354,1.821,355,2.739,356,4.775,357,5.085,358,3.257,359,5.085,360,5.085,361,5.499,362,4.146,363,3.516,364,5.499,365,3.102,366,5.085,367,3.854,368,2.458,369,3.102,370,2.458,371,5.499,372,5.499,373,5.499,374,4.146,375,3.619,376,4.775,377,5.085,378,3.479,379,2.662,380,5.499,381,3.421,382,6.128,383,2.125,384,2.241,385,6.128,386,6.128,387,3.033,388,1.898,389,6.128]],["title/classes/BaseFactory.html",[31,0.161,390,3.588]],["body/classes/BaseFactory.html",[0,0.467,3,0.053,4,0.044,5,0.032,8,0.129,9,0.749,10,1.464,12,0.604,13,0.328,14,0.005,15,0.131,22,0.047,31,0.093,37,2.104,43,2.614,44,2.667,45,3.272,46,2.516,47,2.667,48,2.459,54,2.112,69,1.074,71,1.989,78,1.123,114,0.641,128,1.531,139,4.735,149,1.608,168,1.925,172,0.002,173,0.002,175,0.557,182,0.755,187,0.742,189,1.147,190,0.652,199,1.49,211,2.245,216,1.762,314,2.11,318,3.67,321,2.967,327,1.087,328,4.07,345,1.266,346,1.179,365,3.586,383,2.273,384,2.454,390,3.269,391,2.94,392,7.202,393,2.459,394,4.811,395,4.635,396,5.285,397,6.843,398,3.424,399,5.509,400,3.424,401,3.424,402,3.269,403,2.19,404,4.746,405,4.811,406,6.066,407,5.819,408,2.94,409,3.542,410,4.635,411,6.033,412,2.172,413,4.239,414,2.94,415,3.854,416,4.457,417,3.956,418,4.314,419,2.521,420,5.235,421,2.172,422,1.736,423,2.073,424,5.315,425,2.172,426,2.172,427,3.424,428,6.685,429,2.94,430,3.646,431,3.424,432,2.94,433,3.424,434,2.94,435,3.019,436,1.221,437,2.172,438,5.934,439,2.94,440,2.172,441,4.811,442,4.811,443,2.94,444,5.821,445,3.424,446,3.424,447,2.94,448,4.592,449,2.94,450,3.424,451,2.94,452,3.424,453,3.388,454,2.94,455,2.291,456,1.915,457,4.159,458,3.611,459,3.107,460,2.94,461,2.94,462,2.94,463,2.94,464,2.94,465,2.94,466,4.635,467,2.94,468,2.94,469,1.289,470,5.738,471,2.94,472,7.528,473,5.738,474,2.94,475,2.94,476,2.94,477,2.94,478,4.159,479,2.94,480,2.94,481,2.94,482,2.94,483,2.94]],["title/classes/BaseFile.html",[31,0.161,484,3.442]],["body/classes/BaseFile.html",[0,0.534,3,0.095,4,0.079,5,0.078,8,0.232,9,0.821,10,1.388,12,0.95,13,0.331,14,0.005,15,0.245,22,0.137,31,0.255,33,1.834,123,2.445,145,2.163,149,1.287,172,0.003,173,0.003,175,1.005,187,0.79,190,0.671,192,3.145,205,1.762,314,1.905,345,3.074,346,2.126,347,2.439,348,2.463,350,2.463,352,3.337,353,1.326,354,1.574,358,3.567,378,2.864,379,2.539,381,2.817,383,1.932,384,2.037,387,2.623,388,1.641,484,5.846,485,4.129,486,3.937,487,6.385,488,6.734,489,5.299,490,5.299,491,2.52,492,5.299,493,2.682,494,2.682,495,2.682,496,2.682,497,2.24,498,2.056,499,5.176,500,4.129,501,2.414,502,5.276,503,5.036,504,5.036,505,3.083,506,3.997,507,3.226,508,3.698,509,4.491,510,3.451,511,2.914,512,4.129,513,2.09,514,4.129,515,1.87,516,4.129,517,4.129,518,4.129,519,4.129,520,4.129,521,4.129,522,4.129,523,4.129,524,4.129,525,3.226,526,2.958]],["title/injectables/BaseRepo.html",[18,0.895,527,3.442]],["body/injectables/BaseRepo.html",[3,0.086,4,0.071,5,0.053,8,0.21,13,0.333,14,0.005,15,0.217,18,1.173,19,0.822,22,0.076,31,0.152,69,0.898,71,1.465,74,2.692,77,2.523,78,1.24,114,0.73,128,1.115,129,2.485,168,3.442,172,0.003,173,0.003,182,1.087,187,0.806,189,1.165,190,0.743,199,1.541,298,1.595,314,1.987,321,3.776,326,1.2,343,3.017,353,1.2,355,2.143,424,6.004,527,4.512,528,4.797,529,6.458,530,4.195,531,5.197,532,5.197,533,4.704,534,3.724,535,5.197,536,5.197,537,5.197,538,2.833,539,4.293,540,4.797,541,3.231,542,4.797,543,4.704,544,4.797,545,5.197,546,4.797,547,5.197,548,4.797,549,4.704,550,4.797,551,5.197,552,4.797,553,5.197,554,4.797,555,5.197,556,4.797,557,5.197,558,4.797,559,3.737,560,4.797,561,4.797,562,6.877,563,6.67,564,6.67,565,6.67,566,7.668,567,7.668,568,4.797,569,6.67]],["title/injectables/BsonConverter.html",[18,0.895,570,3.588]],["body/injectables/BsonConverter.html",[3,0.106,4,0.088,5,0.065,8,0.26,13,0.268,14,0.005,15,0.218,18,1.354,19,1.018,22,0.094,31,0.188,78,1.059,114,0.587,128,1.287,172,0.004,173,0.004,182,1.254,187,0.64,189,0.937,190,0.598,199,1.454,216,2.083,298,1.975,328,3.73,570,5.431,571,5.94,572,6.389,573,6.389,574,7.701,575,5.94,576,7.701,577,7.457,578,5.504,579,6.983,580,9.901,581,6.917,582,8.112,583,7.5,584,6.227,585,9.04,586,7.701,587,5.94,588,7.701,589,6,590,6.492,591,5.94,592,6,593,5.94]],["title/classes/BusinessError.html",[31,0.161,178,3.442]],["body/classes/BusinessError.html",[3,0.095,4,0.079,5,0.058,8,0.232,9,0.821,12,0.979,13,0.352,14,0.005,15,0.229,19,0.908,22,0.084,30,5.974,31,0.255,33,1.515,37,1.906,69,1.337,71,3.121,78,0.982,84,4.825,114,0.404,149,0.955,172,0.003,173,0.003,175,1.005,178,4.83,179,4.548,180,5.974,181,3.436,182,1.163,183,7.17,184,7.17,187,0.803,189,0.644,190,0.411,199,1.148,201,5.079,202,6.734,205,1.762,208,3.04,209,5.967,216,1.433,219,4.959,436,2.201,508,4.183,594,5.299,595,4.217,596,4.491,597,5.276,598,4.217,599,4.83,600,4.83,601,3.614,602,7.17,603,3.585,604,6.734,605,7.141,606,5.299,607,5.299,608,5.299,609,5.299,610,5.299,611,5.299,612,5.299,613,5.299,614,5.299,615,3.737,616,5.299,617,4.755,618,7.141,619,5.299,620,3.987,621,7.141,622,7.141,623,5.299]],["title/modules/ConsoleWriterModule.html",[257,1.359,624,3.759]],["body/modules/ConsoleWriterModule.html",[3,0.13,4,0.108,5,0.08,14,0.005,15,0.247,19,1.245,22,0.116,31,0.23,172,0.004,173,0.004,257,2.332,259,2.819,260,3.902,267,4.42,268,3.446,269,3.186,271,3.627,293,4.23,624,7.54,625,6.519,626,6.519,627,6.519,628,6.839,629,6.519,630,5.368,631,7.265,632,4.056,633,6.028]],["title/injectables/ConsoleWriterService.html",[18,0.895,628,3.314]],["body/injectables/ConsoleWriterService.html",[3,0.163,4,0.101,5,0.074,8,0.298,9,0.964,12,0.958,13,0.292,14,0.005,15,0.257,18,1.475,19,1.166,22,0.108,31,0.215,35,2.702,114,0.519,168,3.483,172,0.004,173,0.004,182,1.366,187,0.697,189,0.827,190,0.528,199,1.094,298,2.261,383,1.839,384,1.94,430,3.294,628,5.463,629,8.162,630,6.72,632,4.683,634,6.8,635,9.497,636,8.388,637,6.8,638,4.6,639,8.388,640,9.096,641,6.8,642,3.225,643,9.096,644,6.8,645,3.442,646,6.8,647,6.8]],["title/modules/CoreModule.html",[257,1.359,648,3.759]],["body/modules/CoreModule.html",[3,0.114,4,0.094,5,0.069,14,0.005,15,0.27,19,1.087,22,0.101,31,0.2,34,4.015,172,0.004,173,0.004,208,3.638,216,1.715,257,2.473,259,2.46,260,3.588,267,4.064,268,3.008,269,2.78,272,3.588,601,4.064,648,7.624,649,5.69,650,5.69,651,7.213,652,7.213,653,6.14,654,7.213,655,6.341,656,5.663,657,8.03,658,5.432,659,6.256,660,6.256,661,8.03,662,5.05,663,6.256,664,5.663,665,8.03,666,4.889,667,5.932,668,7.205,669,8.03,670,6.256,671,3.54,672,4.289]],["title/classes/Course.html",[31,0.161,673,1.644]],["body/classes/Course.html",[0,0.357,3,0.064,4,0.053,5,0.039,8,0.338,9,0.827,10,1.042,12,0.969,13,0.32,14,0.005,15,0.23,22,0.085,31,0.112,33,1.138,37,1.431,69,1.004,78,1.062,114,0.678,128,1.291,145,1.801,149,1.565,172,0.002,173,0.002,175,0.673,182,0.873,187,0.824,189,0.432,190,0.6,192,2.619,199,1.306,205,1.18,216,2.09,306,2.619,314,1.181,322,5.729,345,2.307,346,1.424,347,2.422,348,1.65,350,1.65,352,3.105,353,0.888,354,1.055,358,3.168,368,2.15,378,2.15,379,2.444,381,2.114,383,2.489,384,2.477,387,1.757,388,2.612,416,2.232,459,1.556,491,1.892,493,1.796,494,1.796,495,1.796,496,1.796,497,1.5,498,1.377,501,1.617,505,1.355,511,1.448,513,3.425,515,1.892,541,1.719,662,2.232,673,1.732,674,2.945,675,2.916,676,4.206,677,4.709,678,3.425,679,5.607,680,5.031,681,6.329,682,6.329,683,4.868,684,5.795,685,6.457,686,6.457,687,6.457,688,6.457,689,6.409,690,5.607,691,5.36,692,4.81,693,3.549,694,4.81,695,3.549,696,4.81,697,3.549,698,3.371,699,2.653,700,3.549,701,3.549,702,4.111,703,4.946,704,4.176,705,3.549,706,4.81,707,3.549,708,4.81,709,3.549,710,2.765,711,3.549,712,3.549,713,3.626,714,3.549,715,3.549,716,3.549,717,3.549,718,3.549,719,1.796,720,2.622,721,2.765,722,1.684,723,2.232,724,3.371,725,3.78,726,3.185,727,2.765,728,3.185,729,2.401,730,3.185,731,3.185,732,2.945,733,2.622,734,2.622,735,2.401,736,3.185,737,2.401,738,2.945,739,2.765,740,2.622,741,1.528,742,1.982,743,3.185,744,2.916,745,1.757,746,4.81,747,3.185,748,2.503,749,2.232,750,2.765,751,2.765,752,3.185,753,3.185,754,3.185,755,3.185,756,4.81,757,3.185,758,4.81,759,5.032,760,4.81,761,2.765,762,3.185,763,3.185,764,3.185,765,3.185]],["title/controllers/CourseController.html",[766,2.231,767,4.222]],["body/controllers/CourseController.html",[3,0.111,4,0.093,5,0.068,8,0.273,13,0.217,14,0.005,15,0.283,19,1.066,22,0.099,31,0.197,71,1.9,74,2.332,77,2.063,78,0.855,114,0.474,128,1.537,129,1.775,149,1.122,172,0.004,173,0.004,182,1.292,187,0.517,189,0.757,190,0.483,199,1.001,326,1.557,327,2.3,347,1.597,742,4.429,766,2.728,767,6.582,768,2.951,769,6.221,770,3.913,771,7.837,772,5.582,773,5.003,774,6.573,775,6.221,776,5.785,777,3.687,778,4.387,779,2.496,780,4.208,781,4.387,782,3.569,783,6.453,784,5.582,785,4.847,786,2.63,787,5.161,788,6.221,789,6.221,790,4.387,791,6.221,792,4.552,793,6.221,794,6.221,795,6.221,796,6.221,797,4.429,798,4.109,799,4.209,800,6.221]],["title/classes/CourseFactory.html",[31,0.161,801,3.965]],["body/classes/CourseFactory.html",[3,0.071,4,0.059,5,0.043,8,0.174,9,0.67,10,1.342,12,0.614,13,0.338,14,0.005,15,0.215,22,0.063,31,0.125,33,1.236,37,2.03,45,2.419,54,1.808,69,0.743,71,1.779,78,0.949,114,0.698,128,1.415,149,1.05,168,1.648,172,0.003,173,0.003,175,0.753,182,0.949,187,0.801,189,1.161,190,0.696,192,3.434,199,1.443,211,1.922,216,2.191,314,1.785,318,3.017,321,2.654,326,0.993,365,3.493,383,2.29,384,2.496,390,6.857,392,6.799,394,2.932,396,5.324,397,5.617,398,4.304,399,5.463,400,4.304,401,4.304,402,4.108,403,2.223,404,4.888,405,5.099,406,6.457,407,5.478,409,3.169,411,4.304,412,2.932,413,4.304,415,3.754,416,4.34,417,4.245,418,4.202,419,3.169,420,4.304,421,2.932,422,2.344,423,2.799,424,4.646,425,2.932,426,2.932,427,2.932,428,6.972,430,3.343,431,2.932,433,2.932,435,2.585,436,1.648,437,2.932,438,5.726,440,2.932,441,4.304,442,4.304,444,2.932,445,2.932,446,2.932,448,4.108,450,2.932,452,2.932,453,3.44,455,3.092,673,2.23,677,2.216,678,3.451,683,5.143,689,6.308,690,3.092,801,5.377,802,3.561,803,7.603,804,3.092,805,3.969,806,3.969,807,3.092,808,3.092,809,3.092,810,3.092,811,3.092,812,3.092,813,3.092,814,3.092,815,3.092,816,3.092,817,3.561,818,3.969,819,3.092,820,6.193,821,3.561,822,4.833,823,3.561,824,5.825,825,4.833,826,3.561,827,3.561,828,3.561,829,3.561,830,3.561]],["title/classes/CourseGroup.html",[31,0.161,831,3.314]],["body/classes/CourseGroup.html",[0,0.557,3,0.099,4,0.082,5,0.061,8,0.242,9,0.845,10,1.429,12,0.583,13,0.328,14,0.005,15,0.259,22,0.117,31,0.175,33,1.56,69,1.036,78,0.76,114,0.422,145,1.839,149,1.585,172,0.003,173,0.003,175,1.049,182,1.197,187,0.811,189,0.673,190,0.429,192,3.2,199,0.89,205,1.839,314,1.619,345,3.163,346,3.527,347,2.416,348,2.57,350,2.57,352,1.866,353,1.839,354,1.643,355,2.471,358,3.606,378,2.948,379,2.068,381,2.898,383,2.232,384,2.354,387,2.737,388,2.555,459,2.425,493,2.799,494,2.799,495,2.799,496,2.799,497,2.338,498,2.146,501,2.52,505,2.111,513,3.468,515,2.593,673,3.15,680,5.726,702,3.719,703,4.474,704,5.725,719,2.799,741,2.381,750,4.309,751,4.309,831,4.786,832,4.963,833,7.89,834,7.295,835,7.348,836,4.102,837,4.786,838,5.531,839,5.531,840,2.865,841,4.589,842,3.602,843,3.602,844,4.963]],["title/injectables/CourseGroupRepo.html",[18,0.895,845,4.566]],["body/injectables/CourseGroupRepo.html",[3,0.121,4,0.101,5,0.074,8,0.297,13,0.291,14,0.005,15,0.257,18,1.471,19,1.161,22,0.108,31,0.214,69,1.268,71,2.068,74,2.424,77,2.176,78,0.931,114,0.638,128,1.132,129,1.932,172,0.004,173,0.004,182,1.363,187,0.696,189,1.018,190,0.649,199,1.089,298,2.252,306,2.742,326,1.694,327,2.503,353,1.694,355,3.026,538,3.999,539,4.912,541,4.053,673,2.188,831,4.41,841,6.941,845,7.507,846,6.772,847,8.367,848,6.772,849,8.367,850,6.772,851,5.66,852,3.999,853,5.262,854,6.772]],["title/classes/CourseMapper.html",[31,0.161,787,4.222]],["body/classes/CourseMapper.html",[3,0.127,4,0.106,5,0.078,8,0.311,13,0.247,14,0.005,15,0.244,22,0.113,31,0.225,78,0.977,114,0.542,128,1.44,149,1.282,172,0.004,173,0.004,175,1.348,182,1.404,187,0.591,189,0.865,190,0.552,199,1.143,326,1.779,403,3.54,673,3.191,786,3.643,787,7.151,855,7.108,856,8.619,857,8.619,858,7.108,859,7.513,860,4.63,861,7.108,862,7.108,863,7.108,864,7.108,865,7.108,866,7.108,867,7.108,868,7.108]],["title/classes/CourseMetadataListResponse.html",[31,0.161,785,3.965]],["body/classes/CourseMetadataListResponse.html",[3,0.094,4,0.078,5,0.057,8,0.23,9,0.815,10,1.672,12,0.998,13,0.322,14,0.005,15,0.227,22,0.113,31,0.224,33,1.504,37,2.724,69,1.327,114,0.4,172,0.003,173,0.003,175,0.993,181,3.322,187,0.747,189,0.637,190,0.698,192,3.131,216,2.506,306,2.049,326,1.311,347,2.209,379,2.607,388,1.623,436,2.943,620,2.925,673,2.594,677,2.925,679,6.257,683,5.432,759,4.083,761,4.083,779,2.102,782,3.007,785,5.522,792,5.157,797,5.172,798,4.798,859,7.379,869,4.702,870,6.168,871,3.799,872,4.998,873,5.24,874,6.067,875,5.24,876,4.347,877,4.347,878,4.347,879,4.477,880,5.23,881,4.889,882,2.78,883,4.702,884,4.702,885,4.803,886,5.411,887,2.85,888,3.007,889,3.007,890,3.871,891,3.296,892,3.413,893,4.347,894,3.695,895,3.695,896,3.695]],["title/classes/CourseMetadataResponse.html",[31,0.161,859,3.965]],["body/classes/CourseMetadataResponse.html",[3,0.088,4,0.073,5,0.054,8,0.216,9,0.782,10,1.846,12,1.076,13,0.331,14,0.005,15,0.22,22,0.108,31,0.215,33,1.047,37,2.078,69,1.273,114,0.376,172,0.003,173,0.003,175,0.935,181,3.642,187,0.775,189,0.6,190,0.683,216,2.461,306,2.426,326,1.234,347,2.336,379,2.834,436,2.824,620,2.754,673,2.939,677,3.797,679,7.263,683,6.306,759,3.844,761,3.844,779,1.979,782,2.831,785,3.844,792,2.831,797,3.797,798,3.523,859,6.856,869,4.427,870,4.429,871,2.875,872,3.479,879,4.414,880,6.071,881,5.675,882,2.617,883,4.427,884,4.427,885,5.302,886,5.973,887,3.699,888,3.902,889,3.902,890,5.025,891,4.277,892,4.429,893,5.643,894,4.796,895,3.479,896,3.479,897,3.337,898,4.933,899,6.154,900,4.933,901,4.933,902,4.933,903,4.933,904,4.933,905,4.933]],["title/classes/CourseNews.html",[31,0.161,906,3.2]],["body/classes/CourseNews.html",[0,0.335,3,0.06,4,0.112,5,0.036,8,0.146,9,0.586,10,1.206,12,1,13,0.34,14,0.005,15,0.241,22,0.119,31,0.22,33,1.592,43,2.826,44,2.883,45,2.576,46,2.72,47,2.883,48,3.291,78,0.457,114,0.53,123,1.138,145,2.063,149,1.353,172,0.002,173,0.002,175,0.63,181,2.927,182,0.831,187,0.802,189,0.404,190,0.677,192,3.509,199,0.535,205,1.105,306,2.011,307,4.08,308,4.007,310,2.67,314,1.654,329,2.344,345,2.195,346,1.333,347,2.437,348,1.545,350,1.545,352,3.173,353,0.832,354,0.987,358,2.974,365,3.139,370,2.488,378,2.045,379,2.112,381,2.011,383,1.678,384,1.77,387,1.645,388,1.029,403,2.368,459,2.72,486,3.418,493,1.682,494,1.682,495,1.682,496,1.682,497,1.405,498,1.289,501,1.514,505,2.368,507,2.023,508,2.641,509,3.901,513,3.123,515,1.173,526,1.855,620,1.855,673,2.004,678,3.512,698,3.901,699,2.524,722,1.576,723,2.09,749,2.09,836,2.846,840,1.721,906,3.207,907,2.455,908,4.257,909,4.223,910,3.919,911,3.69,912,5.139,913,4.531,914,4.887,915,3.972,916,3.323,917,2.757,918,3.449,919,3.784,920,3.207,921,2.757,922,2.757,923,3.767,924,4.375,925,3.767,926,3.767,927,2.705,928,3.449,929,3.596,930,2.757,931,2.757,932,2.757,933,3.663,934,3.901,935,2.757,936,2.757,937,3.139,938,2.757,939,3.596,940,2.757,941,3.767,942,2.757,943,3.767,944,5.291,945,2.757,946,2.524,947,2.455,948,3.901,949,2.455,950,1.808,951,2.248,952,2.09,953,2.165,954,2.248,955,2.455,956,2.248,957,2.455,958,1.855,959,2.455,960,2.455,961,2.455,962,2.455,963,2.248,964,2.455,965,2.248,966,2.455,967,3.767,968,3.776,969,2.455,970,3.767,971,2.455,972,2.455,973,2.165,974,2.165,975,2.455]],["title/injectables/CourseRepo.html",[18,0.895,976,3.2]],["body/injectables/CourseRepo.html",[3,0.085,4,0.071,5,0.052,8,0.209,13,0.302,14,0.005,15,0.246,18,1.167,19,0.816,22,0.076,31,0.21,33,1.011,69,0.892,71,1.454,72,3.623,74,2.402,76,3.418,77,2.149,78,1.195,114,0.582,128,1.674,129,1.893,149,1.377,172,0.003,173,0.003,182,1.081,187,0.635,189,0.929,190,0.593,199,1.067,298,1.584,306,2.765,326,1.192,327,1.76,353,1.661,354,1.415,355,2.128,379,1.34,409,3.61,436,2.756,491,1.681,511,1.943,538,2.812,539,4.28,541,3.214,673,1.539,680,3.101,681,5.171,682,5.171,683,4.489,739,5.171,740,5.643,742,4.613,798,2.467,852,2.812,853,5.196,976,4.174,977,4.273,978,4.762,979,4.273,980,5.167,981,5.381,982,4.762,983,5.506,984,4.762,985,5.171,986,4.038,987,7.465,988,4.273,989,5.955,990,7.414,991,5.589,992,5.643,993,4.273,994,4.273,995,4.174,996,5.955,997,3.101,998,5.955,999,3.951,1000,3.951,1001,4.273,1002,4.273,1003,4.273,1004,2.659,1005,3.705,1006,5.955,1007,3.951,1008,3.951,1009,3.951,1010,3.358,1011,5.955,1012,5.171,1013,3.358,1014,4.273,1015,4.273]],["title/classes/CourseScope.html",[31,0.161,987,4.222]],["body/classes/CourseScope.html",[3,0.082,4,0.068,5,0.05,8,0.199,9,0.739,13,0.297,14,0.005,15,0.242,18,1.13,19,0.78,22,0.072,31,0.203,33,1.364,35,2.406,71,1.39,72,2.819,74,1.716,76,3.387,77,1.672,78,1.175,114,0.568,128,1.662,129,1.834,149,1.344,168,1.89,172,0.003,173,0.003,175,0.863,182,1.047,187,0.737,189,0.907,190,0.578,192,2.713,199,1.303,306,2.737,326,1.139,327,1.682,353,1.609,354,1.352,355,2.034,379,1.281,383,1.231,384,1.298,491,1.606,511,1.857,539,3.33,541,2.204,673,1.47,680,2.964,681,5.009,682,5.009,683,4.349,740,3.362,742,4.522,777,2.115,798,2.357,852,2.688,853,5.094,976,2.862,977,4.084,980,3.079,981,4.187,983,3.776,985,5.009,986,4.399,987,7.961,988,5.769,989,5.769,990,7.268,991,5.479,992,5.507,993,5.769,994,7.268,995,4.043,996,5.769,997,2.964,998,5.769,999,3.776,1000,3.776,1001,4.084,1002,4.084,1003,4.084,1004,2.541,1005,3.589,1006,5.769,1007,3.776,1008,3.776,1009,3.776,1010,3.21,1011,5.769,1012,5.009,1013,3.21,1014,4.084,1015,4.084,1016,4.75,1017,4.75,1018,6.429,1019,6.429,1020,4.75,1021,3.21,1022,3.546,1023,4.855,1024,3.546,1025,4.551,1026,4.551,1027,4.551,1028,3.362,1029,4.534,1030,3.546]],["title/injectables/CourseUc.html",[18,0.895,783,3.759]],["body/injectables/CourseUc.html",[3,0.12,4,0.1,5,0.073,8,0.293,13,0.289,14,0.005,15,0.267,18,1.46,19,1.147,22,0.106,31,0.211,69,1.252,71,2.043,72,4.14,76,2.361,77,2.16,78,0.92,114,0.633,172,0.004,173,0.004,182,1.353,187,0.69,189,1.01,190,0.644,199,1.076,298,2.224,306,2.73,326,1.674,327,2.473,381,2.639,436,2.778,673,2.161,774,6.15,782,3.838,783,6.134,852,3.95,976,6.223,1004,3.735,1005,3.735,1031,6.689,1032,8.303,1033,6.002,1034,6.689,1035,8.303,1036,6.689,1037,4.357,1038,3.735,1039,6.002,1040,5.212]],["title/classes/CreateNewsParams.html",[31,0.161,1041,3.759]],["body/classes/CreateNewsParams.html",[3,0.098,4,0.081,5,0.06,8,0.239,9,0.837,10,1.416,12,1.024,13,0.317,14,0.005,15,0.232,22,0.087,31,0.23,40,3.772,128,0.912,172,0.003,173,0.003,175,1.035,181,3.368,187,0.758,190,0.565,216,2.63,307,4.057,308,4.149,309,4.99,314,2.192,326,1.366,347,2.34,379,2.05,779,2.189,786,3.079,879,4.235,887,2.968,888,4.179,889,4.179,908,4.24,909,4.148,910,4.51,911,4.349,937,2.762,995,4.58,1041,5.381,1042,8.411,1043,4.528,1044,6.042,1045,4.179,1046,6.535,1047,4.897,1048,5.457,1049,4.743,1050,4.58,1051,5.674,1052,5.381,1053,6.042,1054,5.136,1055,5.457,1056,5.457,1057,5.5,1058,5.457,1059,5.457,1060,6.056,1061,5.674,1062,4.58,1063,5.457,1064,5.457,1065,4.301,1066,6.535,1067,5.381,1068,7.099,1069,3.047,1070,3.849]],["title/controllers/DashboardController.html",[766,2.231,1071,4.222]],["body/controllers/DashboardController.html",[3,0.091,4,0.076,5,0.056,8,0.223,12,0.967,13,0.275,14,0.005,15,0.271,19,0.872,22,0.081,31,0.161,37,2.451,71,1.553,74,2.59,77,2.388,78,1.087,114,0.603,127,5.15,128,1.534,129,2.256,143,4.508,172,0.003,173,0.003,182,1.131,187,0.657,189,0.962,190,0.614,199,1.272,326,1.273,327,1.88,328,2.464,347,2.03,404,4.756,766,2.23,768,2.412,770,3.199,771,6.231,772,4.564,773,5.338,776,6.231,777,2.364,778,3.587,779,2.04,780,3.44,781,3.587,782,2.918,786,3.972,790,3.587,1071,5.762,1072,5.086,1073,4.744,1074,7.096,1075,7.908,1076,5.086,1077,5.086,1078,6.621,1079,6.945,1080,5.086,1081,8.238,1082,5.086,1083,5.018,1084,7.05,1085,6.945,1086,5.086,1087,4.564,1088,5.577,1089,5.842,1090,4.564,1091,3.587,1092,4.22,1093,5.086,1094,5.086,1095,5.086,1096,5.086,1097,5.086,1098,7.908,1099,6.231,1100,5.086,1101,5.086,1102,5.086,1103,5.411,1104,5.086,1105,5.086,1106,5.086,1107,4.564]],["title/classes/DashboardEntity.html",[31,0.161,1108,3.2]],["body/classes/DashboardEntity.html",[0,0.251,3,0.045,4,0.037,5,0.027,8,0.286,9,0.467,10,1.545,12,0.94,13,0.326,14,0.005,15,0.145,19,0.427,22,0.122,31,0.128,35,2.911,37,2.479,69,0.467,76,2.09,78,1.342,114,0.638,128,1.61,143,3.142,148,2.437,149,1.386,168,3.474,172,0.002,173,0.002,175,0.473,181,2.725,182,0.661,187,0.778,189,1.017,190,0.649,199,1.436,306,2.547,384,1.158,388,0.772,403,2.261,459,2.253,469,1.78,491,2.09,515,0.88,620,3.307,675,1.356,676,6.305,713,2.746,720,1.841,799,3.142,880,2.644,881,2.472,882,3.46,885,3.904,886,5.14,897,2.746,950,2.794,953,2.644,958,1.391,1074,3.643,1083,3.498,1108,2.554,1109,1.841,1110,4.262,1111,4.06,1112,4.914,1113,4.06,1114,4.06,1115,4.914,1116,4.914,1117,5.801,1118,4.06,1119,4.914,1120,4.06,1121,4.06,1122,4.06,1123,4.06,1124,4.06,1125,4.615,1126,2.492,1127,2.492,1128,3.475,1129,2.492,1130,2.492,1131,2.492,1132,3.369,1133,2.492,1134,2.492,1135,2.492,1136,3.369,1137,2.492,1138,4.06,1139,3.369,1140,6.413,1141,2.492,1142,5.14,1143,6.413,1144,2.492,1145,2.492,1146,4.554,1147,2.492,1148,3.369,1149,6.413,1150,2.492,1151,2.492,1152,3.369,1153,2.492,1154,4.376,1155,3.369,1156,2.492,1157,3.369,1158,2.492,1159,3.369,1160,2.492,1161,3.369,1162,2.492,1163,3.369,1164,2.492,1165,1.758,1166,1.942,1167,1.841,1168,3.163,1169,1.623,1170,3.369,1171,2.068,1172,3.163,1173,3.369,1174,3.369,1175,3.369,1176,2.068,1177,3.369,1178,2.068,1179,4.101,1180,6.017,1181,2.068,1182,1.623,1183,3.369,1184,2.068,1185,3.369,1186,2.068,1187,3.068,1188,4.976,1189,2.863,1190,3.369,1191,2.068,1192,2.068,1193,2.068,1194,2.068,1195,2.068,1196,3.369,1197,2.068,1198,3.369,1199,1.942,1200,3.369,1201,2.068,1202,1.758,1203,2.068,1204,3.369,1205,2.068,1206,2.068,1207,2.068,1208,1.841,1209,2.068,1210,3.163,1211,5.41,1212,2.068,1213,1.623,1214,1.942,1215,2.068,1216,2.068,1217,2.068,1218,2.068,1219,2.068,1220,2.068,1221,3.369,1222,2.068,1223,2.068,1224,2.068,1225,2.068,1226,3.369,1227,2.068,1228,4.262,1229,2.068,1230,3.369,1231,2.068,1232,2.068,1233,2.068,1234,2.068,1235,2.068,1236,2.068,1237,2.068,1238,2.068,1239,2.068,1240,2.068,1241,2.068,1242,2.644,1243,2.068,1244,2.068,1245,2.068,1246,2.068,1247,2.068,1248,3.369,1249,2.068,1250,2.068,1251,2.068,1252,3.369,1253,2.644,1254,3.369,1255,2.068,1256,2.068,1257,2.068,1258,2.068,1259,2.068,1260,2.068,1261,2.068,1262,4.262,1263,2.068,1264,2.068]],["title/classes/DashboardGridElementModel.html",[31,0.161,1265,3.588]],["body/classes/DashboardGridElementModel.html",[0,0.489,3,0.087,4,0.072,5,0.053,8,0.213,9,0.773,10,1.76,12,0.977,13,0.323,14,0.005,15,0.256,22,0.123,31,0.212,33,1.638,37,2.224,69,0.909,76,2.373,114,0.37,123,2.643,145,2.189,149,1.577,172,0.003,173,0.003,175,0.92,181,2.852,187,0.808,189,0.59,190,0.377,192,3.032,205,2.236,306,1.944,314,1.701,345,2.895,346,2.698,347,2.466,348,2.256,350,2.256,352,3.192,353,1.683,354,1.442,355,2.169,358,3.553,378,2.698,379,1.893,381,2.652,383,2.087,384,2.201,387,2.402,388,2.389,436,2.015,493,2.456,494,2.456,495,2.456,496,2.456,497,2.052,501,2.211,505,2.567,513,3.044,515,1.713,673,1.568,702,3.905,719,2.456,722,2.302,741,2.895,840,2.514,882,3.568,897,4.549,919,2.64,958,2.71,1073,4.884,1188,4.698,1189,3.423,1265,4.742,1266,4.027,1267,6.402,1268,6.402,1269,4.853,1270,6.911,1271,5.579,1272,6.402,1273,4.853,1274,5.579,1275,5.579,1276,4.853,1277,4.853,1278,4.853,1279,4.853,1280,3.283,1281,4.027,1282,4.027,1283,5.579,1284,4.027,1285,5.239,1286,3.161,1287,4.027,1288,4.027,1289,4.027,1290,3.423,1291,4.027]],["title/classes/DashboardGridElementResponse.html",[31,0.161,1292,3.759]],["body/classes/DashboardGridElementResponse.html",[3,0.091,4,0.075,5,0.055,8,0.221,9,0.795,10,1.884,12,1.058,13,0.337,14,0.005,15,0.143,22,0.125,31,0.249,37,2.263,143,3.669,172,0.003,173,0.003,175,0.958,181,3.624,187,0.78,190,0.658,216,2.733,314,1.114,318,4.083,347,2.409,388,1.565,677,4.401,779,2.028,874,3.565,879,4.695,880,5.52,881,5.16,885,5.695,886,6.416,887,4.61,888,4.863,889,4.863,890,5.824,899,6.199,924,3.179,1073,3.861,1083,4.084,1091,3.565,1142,5.33,1179,4.349,1242,3.292,1290,3.565,1292,6.262,1293,4.194,1294,6.54,1295,6.54,1296,6.54,1297,5.055,1298,6.603,1299,5.737,1300,5.055,1301,5.055,1302,5.055,1303,5.055,1304,5.055,1305,5.055]],["title/classes/DashboardGridSubElementResponse.html",[31,0.161,1298,3.965]],["body/classes/DashboardGridSubElementResponse.html",[3,0.098,4,0.081,5,0.06,8,0.239,9,0.836,10,1.913,12,1.07,13,0.326,14,0.005,15,0.154,22,0.13,31,0.259,37,1.942,143,2.89,172,0.003,173,0.003,175,1.033,181,3.675,187,0.727,216,2.747,314,1.201,318,3.768,347,2.244,677,4.572,779,2.186,879,4.744,880,5.692,881,5.321,885,5.699,886,6.42,887,4.754,888,5.015,889,5.015,890,6.051,899,5.912,924,3.427,1073,4.061,1083,3.217,1091,3.842,1142,4.575,1179,3.427,1242,3.548,1290,3.842,1292,6.051,1293,4.52,1294,4.52,1295,4.52,1296,4.52,1298,6.81,1299,4.52,1306,5.448,1307,5.448,1308,5.448,1309,5.448]],["title/classes/DashboardMapper.html",[31,0.161,1092,4.222]],["body/classes/DashboardMapper.html",[3,0.117,4,0.097,5,0.072,8,0.287,13,0.228,14,0.005,15,0.232,22,0.104,31,0.207,78,1.126,114,0.499,128,1.566,149,1.477,172,0.004,173,0.004,175,1.241,182,1.334,187,0.544,189,0.796,190,0.508,199,1.052,326,1.637,403,3.412,786,3.462,860,4.261,871,2.766,1073,3.653,1091,6.607,1092,6.795,1108,5.892,1154,4.834,1210,5.098,1214,5.098,1292,6.05,1310,6.543,1311,5.334,1312,8.189,1313,6.543,1314,5.871,1315,6.543,1316,6.543,1317,6.543,1318,8.189,1319,6.543,1320,6.543,1321,6.543,1322,6.543,1323,6.543,1324,6.543,1325,6.543,1326,6.543,1327,6.543,1328,8.189,1329,6.543,1330,5.871,1331,6.543,1332,6.543]],["title/classes/DashboardModelEntity.html",[31,0.161,1286,3.314]],["body/classes/DashboardModelEntity.html",[0,0.51,3,0.091,4,0.075,5,0.055,8,0.222,9,0.796,10,1.726,12,0.893,13,0.309,14,0.005,15,0.26,22,0.125,31,0.219,33,1.674,37,1.848,69,0.948,76,2.784,114,0.386,123,2.702,145,2.349,149,1.601,172,0.003,173,0.003,175,0.96,181,1.871,187,0.78,189,0.616,190,0.393,192,3.086,205,2.302,306,2.002,314,1.739,345,2.98,346,2.777,347,2.354,348,2.353,350,2.353,352,2.997,353,1.732,354,1.504,355,2.262,358,3.589,378,2.777,379,1.949,381,2.731,383,2.134,384,2.25,387,2.506,388,2.144,459,2.22,493,2.562,494,2.562,495,2.562,496,2.562,497,2.14,501,2.307,505,3.011,513,3.112,515,2.443,673,1.636,702,3.993,719,2.562,722,2.401,741,2.98,840,2.622,882,3.673,897,3.425,919,3.765,958,2.826,1073,4.735,1188,3.082,1189,3.57,1265,3.57,1266,4.2,1267,4.2,1268,4.2,1270,7.036,1271,4.2,1272,6.545,1274,4.2,1275,4.2,1280,3.425,1281,4.2,1282,4.2,1283,5.744,1284,4.2,1285,6.608,1286,4.509,1287,4.2,1288,4.2,1289,5.744,1290,5.563,1291,4.2,1333,5.063,1334,5.063,1335,5.063]],["title/injectables/DashboardModelMapper.html",[18,0.895,1336,3.588]],["body/injectables/DashboardModelMapper.html",[3,0.073,4,0.06,5,0.044,8,0.178,10,0.788,13,0.32,14,0.005,15,0.198,18,1.04,19,0.695,22,0.064,31,0.128,35,2.075,69,0.759,71,1.238,74,2.67,76,1.43,77,2.493,78,1.266,114,0.688,128,1.631,129,2.668,143,2.15,145,1.48,148,1.922,149,1.472,172,0.003,173,0.003,182,0.963,187,0.75,189,1.098,190,0.7,199,1.416,298,1.348,314,0.893,326,1.014,353,1.014,354,1.204,368,1.626,538,2.393,539,3.977,541,2.865,559,3.157,673,2.974,676,5.001,721,3.157,799,3.138,885,3.302,950,3.799,1073,3.899,1083,2.393,1108,4.83,1143,5.673,1146,5.001,1154,2.994,1180,5.415,1188,4.252,1199,3.157,1265,5.759,1286,5.878,1330,6.267,1336,4.171,1337,4.052,1338,5.914,1339,5.914,1340,5.914,1341,5.914,1342,6.984,1343,5.914,1344,5.914,1345,4.052,1346,5.914,1347,4.052,1348,5.914,1349,4.052,1350,7.074,1351,5.914,1352,4.052,1353,5.914,1354,4.052,1355,4.052,1356,4.052,1357,5.914,1358,4.052,1359,5.914,1360,4.052,1361,3.636,1362,3.636,1363,5.914,1364,4.052,1365,4.052,1366,4.052,1367,4.052,1368,4.052,1369,4.052,1370,4.052,1371,4.052,1372,4.052,1373,4.052,1374,4.052,1375,4.001,1376,4.052,1377,2.994,1378,4.052,1379,4.052,1380,4.052,1381,3.157,1382,4.052,1383,4.052,1384,4.052,1385,4.052,1386,4.052,1387,4.287,1388,4.052,1389,4.052,1390,4.052,1391,5.914,1392,4.052,1393,4.052,1394,4.052,1395,4.052,1396,4.052,1397,4.052,1398,4.052,1399,4.052,1400,4.052,1401,4.052,1402,4.052,1403,4.052,1404,4.052,1405,3.362,1406,5.914,1407,4.052,1408,2.741,1409,4.052,1410,4.052,1411,4.052,1412,4.052,1413,4.052,1414,4.052,1415,4.052]],["title/injectables/DashboardRepo.html",[18,0.895,1416,3.759]],["body/injectables/DashboardRepo.html",[0,0.503,3,0.089,4,0.074,5,0.055,8,0.219,10,1.333,13,0.308,14,0.005,15,0.239,18,1.206,19,0.856,22,0.109,31,0.217,69,0.935,71,2.094,74,2.658,76,2.976,77,2.568,78,1.255,114,0.674,128,1.615,129,2.668,145,1.249,149,0.9,172,0.003,173,0.003,182,1.117,187,0.735,189,1.075,190,0.686,199,1.356,211,2.419,298,1.66,306,2.827,314,1.511,326,1.249,346,2.003,353,1.249,355,2.231,368,2.003,396,3.141,508,2.586,527,3.378,530,4.313,533,4.836,538,2.949,539,4.367,541,3.322,543,4.836,549,5.524,559,3.891,675,2.716,885,2.788,1073,5.097,1108,5.991,1146,4.466,1286,3.252,1336,5.946,1350,5.69,1405,4.143,1416,5.067,1417,4.143,1418,6.153,1419,5.69,1420,5.787,1421,4.993,1422,7.028,1423,4.993,1424,6.498,1425,4.993,1426,4.993,1427,4.993,1428,4.481,1429,4.143,1430,5.69,1431,4.143,1432,4.143,1433,5.343,1434,4.481,1435,6.153,1436,4.481,1437,6.153,1438,4.481,1439,7.028,1440,4.481,1441,6.153,1442,4.481,1443,4.481]],["title/classes/DashboardResponse.html",[31,0.161,1091,3.588]],["body/classes/DashboardResponse.html",[3,0.102,4,0.085,5,0.062,8,0.249,9,0.859,10,1.929,12,1.055,13,0.309,14,0.005,15,0.161,22,0.133,31,0.264,37,1.995,143,3.01,172,0.003,173,0.003,175,1.076,181,3.503,187,0.621,216,2.776,314,1.647,318,4.328,347,1.919,388,1.757,677,4.172,779,2.276,874,4.001,879,4.77,880,4.867,881,4.55,885,5.591,886,6.298,887,4.831,888,5.096,889,5.096,890,5.521,899,3.838,924,4.7,1073,4.958,1083,3.351,1091,5.27,1142,4.7,1179,3.568,1242,4.867,1290,5.893,1292,6.562,1293,4.707,1294,4.707,1295,4.707,1296,4.707,1298,6.511,1299,4.707,1444,5.674,1445,5.674]],["title/injectables/DashboardUc.html",[18,0.895,1089,3.759]],["body/injectables/DashboardUc.html",[3,0.088,4,0.073,5,0.054,8,0.216,12,0.819,13,0.306,14,0.005,15,0.237,17,2.75,18,1.194,19,0.844,22,0.078,31,0.156,35,2.613,69,1.272,71,2.075,74,2.573,76,3.552,77,2.365,78,1.069,114,0.693,123,1.687,128,1.47,129,2.658,148,2.337,149,0.888,168,2.046,172,0.003,173,0.003,182,1.107,187,0.731,189,1.07,190,0.683,199,1.348,298,1.638,306,2.973,326,1.233,404,4.028,742,2.75,976,5.86,1000,4.087,1005,2.75,1037,3.208,1038,2.75,1073,5.3,1081,7.523,1089,5.019,1108,5.273,1140,6.194,1142,4.891,1149,6.884,1180,3.474,1416,5.019,1419,5.637,1424,5.637,1433,6.532,1446,4.926,1447,7.777,1448,7.777,1449,6.794,1450,4.926,1451,4.926,1452,4.926,1453,4.926,1454,4.926,1455,4.926,1456,4.926,1457,6.794,1458,4.926,1459,4.42,1460,4.42,1461,4.926,1462,4.926,1463,4.926,1464,4.42,1465,4.926,1466,7.777,1467,6.794,1468,6.794,1469,4.926,1470,4.926,1471,4.926,1472,4.926,1473,4.926,1474,3.838,1475,3.208]],["title/classes/DatabaseManagementConsole.html",[31,0.161,1476,3.965]],["body/classes/DatabaseManagementConsole.html",[0,0.499,3,0.089,4,0.074,5,0.054,8,0.217,12,0.522,13,0.272,14,0.005,15,0.221,22,0.145,31,0.157,35,1.472,69,0.928,72,4.391,74,2.432,77,2.186,78,0.938,114,0.595,123,1.697,128,1.56,129,1.946,172,0.003,173,0.003,175,0.94,182,1.111,187,0.649,189,0.949,190,0.652,199,1.097,216,2.572,268,3.236,327,1.832,347,1.752,388,2.729,491,1.749,505,2.978,506,2.453,511,3.184,628,5.474,630,3.661,632,4.692,633,4.112,642,2.351,871,2.884,1387,2.767,1476,5.315,1477,7.542,1478,4.447,1479,6.122,1480,6.822,1481,4.447,1482,6.078,1483,4.956,1484,5.66,1485,6.122,1486,5.66,1487,4.509,1488,7.128,1489,6.21,1490,4.956,1491,6.122,1492,6.21,1493,4.956,1494,6.424,1495,4.112,1496,3.861,1497,3.861,1498,5.277,1499,3.914,1500,7,1501,4.811,1502,4.607,1503,4.963,1504,4.029,1505,6.122,1506,6.122,1507,4.447,1508,5.66,1509,6.122,1510,6.122,1511,4.112,1512,3.117,1513,5.315,1514,4.447,1515,4.447]],["title/controllers/DatabaseManagementController.html",[766,2.231,1516,4.222]],["body/controllers/DatabaseManagementController.html",[3,0.109,4,0.091,5,0.067,8,0.267,12,1.018,13,0.273,14,0.005,15,0.222,19,1.045,22,0.097,31,0.193,74,2.74,77,2.589,78,1.255,114,0.597,172,0.004,173,0.004,182,1.275,187,0.759,189,0.952,190,0.608,199,1.468,327,2.253,328,2.952,347,2.344,766,2.672,768,2.891,770,3.833,1479,8.191,1482,5.633,1496,4.748,1497,4.748,1516,6.495,1517,9.441,1518,6.094,1519,6.094,1520,7.829,1521,7.025,1522,9.128,1523,6.094,1524,7.829,1525,6.094,1526,6.744,1527,7.829,1528,6.094,1529,5.468,1530,7.829,1531,6.094,1532,7.829,1533,6.094,1534,4.503,1535,6.094,1536,6.094,1537,6.094,1538,6.094,1539,6.094,1540,6.094,1541,6.094]],["title/modules/DatabaseManagementModule.html",[257,1.359,1542,3.759]],["body/modules/DatabaseManagementModule.html",[3,0.13,4,0.108,5,0.08,14,0.005,15,0.248,19,1.248,22,0.116,31,0.23,172,0.004,173,0.004,257,2.335,259,2.825,260,3.908,267,4.426,268,3.454,269,3.193,272,3.908,293,4.236,1487,3.604,1542,7.543,1543,6.534,1544,6.534,1545,6.534,1546,7.105,1547,6.534,1548,7.281,1549,7.281]],["title/injectables/DatabaseManagementService.html",[18,0.895,1546,3.442]],["body/injectables/DatabaseManagementService.html",[3,0.078,4,0.065,5,0.048,8,0.191,12,1.079,13,0.32,14,0.005,15,0.206,18,1.096,19,0.747,22,0.069,31,0.138,35,2.36,69,0.816,74,2.726,77,2.569,78,1.266,114,0.715,123,2.492,128,1.608,129,2.568,172,0.003,173,0.003,182,1.016,187,0.79,189,1.12,190,0.714,199,1.48,298,1.449,327,1.611,353,1.091,355,1.948,456,2.838,469,3.191,505,3.513,538,2.574,539,4.114,541,3.02,577,4.606,590,4.923,592,5.671,799,3.307,1488,4.606,1521,5.594,1526,6.65,1529,5.594,1546,4.217,1547,8.634,1550,4.358,1551,6.234,1552,5.172,1553,6.234,1554,6.234,1555,6.234,1556,7.943,1557,6.234,1558,4.606,1559,5.473,1560,4.358,1561,6.234,1562,4.358,1563,6.234,1564,4.358,1565,6.234,1566,4.358,1567,6.234,1568,4.358,1569,6.234,1570,4.358,1571,4.358,1572,6.234,1573,4.358,1574,4.358,1575,4.358,1576,4.358,1577,4.358,1578,4.358,1579,7.278,1580,4.358,1581,6.234,1582,4.358,1583,4.358,1584,4.358,1585,4.358,1586,6.234,1587,4.358,1588,4.358,1589,4.358,1590,4.358,1591,6.234,1592,4.358,1593,4.358,1594,4.358,1595,4.358,1596,4.358,1597,4.358]],["title/injectables/DatabaseManagementUc.html",[18,0.895,1482,3.314]],["body/injectables/DatabaseManagementUc.html",[0,0.245,3,0.044,4,0.113,5,0.089,8,0.106,9,0.457,12,1.011,13,0.265,14,0.005,15,0.206,18,0.699,19,0.416,22,0.102,31,0.077,34,1.107,35,2.805,37,1.062,69,0.745,74,2.369,77,1.98,78,1.114,114,0.646,123,0.832,128,1.612,129,2.561,148,1.152,149,0.91,172,0.002,173,0.002,182,0.648,187,0.704,189,0.887,190,0.669,199,1.408,216,1.076,272,1.777,293,1.926,298,0.808,318,3.022,328,3.117,369,1.23,379,1.421,383,0.657,384,0.693,388,0.752,393,4.037,436,2.672,469,1.065,491,2.438,505,3.527,506,4.108,530,1.528,570,5.143,572,2.016,573,2.016,577,5.388,579,4.114,581,1.644,583,3.299,584,1.528,589,5.682,590,2.69,592,3.933,595,2.348,638,4.674,660,4.545,724,2.501,871,3.33,892,1.583,950,2.163,980,2.69,995,1.528,997,1.583,1010,1.714,1057,3.669,1187,1.259,1375,2.69,1387,4.398,1482,2.59,1487,4.267,1488,6.704,1489,5.104,1492,5.388,1498,2.69,1499,2.896,1503,3.8,1512,4.954,1513,5.383,1526,5.623,1546,4.933,1552,3.299,1558,2.938,1598,7.448,1599,2.18,1600,4.529,1601,3.977,1602,5.234,1603,3.977,1604,3.977,1605,3.977,1606,4.529,1607,3.977,1608,5.234,1609,2.43,1610,4.872,1611,3.977,1612,3.568,1613,2.43,1614,3.946,1615,5.234,1616,4.84,1617,5.615,1618,5.338,1619,2.43,1620,3.568,1621,3.568,1622,2.43,1623,2.938,1624,3.568,1625,2.43,1626,5.234,1627,3.299,1628,5.104,1629,6.544,1630,3.568,1631,2.43,1632,5.774,1633,2.43,1634,5.774,1635,2.43,1636,3.568,1637,3.299,1638,5.234,1639,3.568,1640,2.43,1641,3.568,1642,3.568,1643,3.799,1644,3.299,1645,2.43,1646,2.43,1647,3.299,1648,1.893,1649,2.016,1650,1.583,1651,2.016,1652,2.016,1653,5.338,1654,5.338,1655,3.299,1656,2.18,1657,2.18,1658,3.568,1659,3.568,1660,3.568,1661,2.18,1662,2.18,1663,2.18,1664,2.18,1665,5.234,1666,2.18,1667,2.18,1668,2.18,1669,2.016,1670,2.18,1671,2.18,1672,2.18,1673,2.016,1674,2.18,1675,5.234,1676,4.529,1677,2.421,1678,2.18,1679,2.18,1680,1.528,1681,1.583,1682,2.18,1683,3.568,1684,3.568,1685,2.18,1686,2.18,1687,2.18,1688,1.394,1689,3.568,1690,2.18,1691,2.18,1692,2.18,1693,3.098,1694,3.568,1695,2.18,1696,3.568,1697,3.568,1698,2.18,1699,2.18,1700,2.282,1701,2.18,1702,2.18,1703,2.016,1704,2.18,1705,1.714,1706,2.016,1707,1.714,1708,1.528,1709,2.18,1710,2.016,1711,2.18,1712,2.18,1713,2.18,1714,2.18,1715,2.18,1716,2.69,1717,2.18,1718,2.18,1719,2.18,1720,2.18,1721,2.18,1722,3.568,1723,2.18,1724,2.18,1725,2.18,1726,2.18,1727,1.357,1728,2.18,1729,2.18,1730,2.18,1731,2.18,1732,2.938,1733,2.18,1734,3.098,1735,2.18,1736,2.18,1737,2.18,1738,2.18]],["title/controllers/DelayController.html",[766,2.231,1739,4.222]],["body/controllers/DelayController.html",[3,0.118,4,0.098,5,0.072,8,0.288,14,0.005,15,0.254,19,1.128,22,0.105,31,0.208,37,1.757,60,4.589,73,5.005,74,2.393,77,2.332,78,1.13,128,1.374,129,1.878,149,1.187,172,0.004,173,0.004,182,1.339,187,0.547,199,1.059,207,3.188,271,2.733,347,1.69,383,2.224,667,6.073,672,5.561,766,3.604,768,3.899,1739,7.437,1740,7.376,1741,5.906,1742,7.789,1743,6.582,1744,6.073,1745,4.876,1746,6.405,1747,5.461,1748,5.906,1749,4.287,1750,5.906,1751,6.82,1752,5.906,1753,5.906,1754,6.582,1755,5.461,1756,3.409,1757,5.906,1758,5.128,1759,3.409,1760,4.287,1761,4.863]],["title/classes/DeleteFilesConsole.html",[31,0.161,1762,4.222]],["body/classes/DeleteFilesConsole.html",[3,0.107,4,0.089,5,0.085,8,0.262,9,0.889,13,0.298,14,0.005,15,0.243,22,0.095,31,0.189,35,2.547,37,2.289,69,1.12,74,2.289,77,2.012,114,0.59,128,1,129,1.707,149,1.395,172,0.004,173,0.004,175,1.134,182,1.26,187,0.713,189,0.941,190,0.6,199,0.962,216,2.319,327,2.212,347,1.536,379,1.684,506,4.487,534,4.787,632,5.061,642,2.838,671,5.368,733,6.697,1486,4.964,1494,6.393,1762,6.419,1763,9.065,1764,5.983,1765,6.942,1766,5.983,1767,7.104,1768,7.737,1769,7.737,1770,8.628,1771,7.694,1772,9.065,1773,7.694,1774,8.574,1775,5.983,1776,8.574,1777,4.048,1778,3.643,1779,5.369,1780,5.983,1781,5.983,1782,5.369,1783,5.983,1784,5.983,1785,5.983,1786,3.643]],["title/injectables/DeleteFilesUc.html",[18,0.895,1767,3.759]],["body/injectables/DeleteFilesUc.html",[3,0.105,4,0.087,5,0.083,8,0.256,12,0.616,13,0.265,14,0.005,15,0.24,18,1.34,19,1.002,22,0.093,31,0.185,35,1.737,43,3.472,44,3.541,45,3.164,46,3.341,69,1.094,74,2.264,77,1.982,114,0.581,128,1.501,129,2.419,145,1.907,172,0.004,173,0.004,182,1.241,187,0.634,189,0.927,190,0.591,199,0.94,269,2.563,298,1.944,327,2.161,328,2.831,379,2.387,469,2.563,506,4.612,671,5.433,1038,3.263,1765,6.838,1767,5.63,1782,8.062,1787,8.479,1788,5.845,1789,5.845,1790,7.059,1791,5.845,1792,7.62,1793,5.845,1794,7.62,1795,7.454,1796,6.838,1797,5.845,1798,5.845,1799,7.62,1800,5.845,1801,7.62,1802,5.845,1803,7.62,1804,7.608,1805,7.62,1806,5.245,1807,5.245,1808,4.318,1809,5.845,1810,5.845,1811,4.554,1812,5.245,1813,5.845,1814,5.845,1815,7.62,1816,4.85,1817,5.845,1818,4.122]],["title/classes/Directory.html",[31,0.161,510,3.314]],["body/classes/Directory.html",[0,0.528,3,0.094,4,0.078,5,0.078,8,0.23,9,0.815,10,1.379,12,0.947,13,0.33,14,0.005,15,0.244,22,0.137,31,0.254,33,1.827,123,2.43,145,2.154,149,1.279,172,0.003,173,0.003,175,0.995,187,0.788,190,0.668,192,3.448,205,1.745,314,1.897,345,3.054,346,2.105,347,2.433,348,2.439,350,2.439,352,3.331,353,1.313,354,1.559,358,3.481,378,2.846,379,2.531,381,2.798,383,1.919,384,2.024,387,2.598,388,1.625,484,6.409,485,4.089,486,3.922,487,6.36,488,6.707,491,2.504,493,2.656,494,2.656,495,2.656,496,2.656,497,2.219,498,2.036,499,5.159,500,4.089,501,2.391,502,5.241,503,5.003,504,5.003,505,3.067,506,3.978,507,3.195,508,3.675,509,4.462,510,4.621,511,2.895,512,4.089,513,2.07,514,4.089,515,1.852,516,4.089,517,4.089,518,4.089,519,4.089,520,4.089,521,4.089,522,4.089,523,4.089,524,4.089,525,3.195,526,2.93,1819,4.709,1820,4.709,1821,4.709]],["title/injectables/DurationLoggingInterceptor.html",[18,0.895,1822,4.566]],["body/injectables/DurationLoggingInterceptor.html",[3,0.115,4,0.096,5,0.07,8,0.281,9,0.93,13,0.223,14,0.005,15,0.263,18,1.422,19,1.1,21,4.74,22,0.102,31,0.203,35,2.632,45,3.679,71,2.706,78,0.882,114,0.489,128,1.072,149,1.458,172,0.004,173,0.004,182,1.318,187,0.672,189,0.78,190,0.498,199,1.032,216,1.735,298,2.133,383,1.735,384,1.83,422,4.777,664,5.704,671,5.193,672,5.472,675,3.489,995,4.035,1746,6.302,1777,4.34,1822,7.258,1823,8.859,1824,6.415,1825,8.089,1826,6.302,1827,7.258,1828,7.258,1829,7.248,1830,8.347,1831,6.415,1832,3.582,1833,7.949,1834,8.089,1835,6.415,1836,5.323,1837,6.415,1838,6.415,1839,8.089,1840,6.415,1841,6.415,1842,6.415]],["title/classes/EncryptedStringType.html",[31,0.161,1843,3.965]],["body/classes/EncryptedStringType.html",[3,0.094,4,0.078,5,0.057,8,0.229,9,0.813,12,1.09,13,0.34,14,0.005,15,0.227,22,0.083,31,0.165,33,1.501,35,2.382,69,0.978,78,1.272,114,0.611,128,1.182,149,1.275,172,0.003,173,0.003,175,0.99,182,1.152,187,0.714,189,0.975,190,0.622,199,1.137,205,1.737,216,1.413,353,1.307,354,1.552,368,2.095,384,2.64,388,2.866,436,2.169,469,3.101,645,2.644,1487,3.5,1716,4.784,1843,5.51,1844,5.223,1845,6.345,1846,6.345,1847,7.194,1848,6.694,1849,8.017,1850,7.071,1851,7.071,1852,7.071,1853,7.071,1854,7.071,1855,5.923,1856,7.071,1857,10.093,1858,5.223,1859,7.071,1860,5.223,1861,3.859,1862,3.533,1863,3.402,1864,4.334,1865,5.223,1866,5.223,1867,7.071,1868,5.223,1869,5.223,1870,7.071,1871,5.923,1872,5.423,1873,6.651,1874,7.071,1875,7.071,1876,5.223,1877,6.345,1878,7.071,1879,5.223]],["title/modules/EncryptionModule.html",[257,1.359,1880,3.965]],["body/modules/EncryptionModule.html",[0,0.71,3,0.126,4,0.105,5,0.077,12,0.742,13,0.245,14,0.005,15,0.243,19,1.208,22,0.136,31,0.223,72,3.09,78,0.969,114,0.537,172,0.004,173,0.004,182,1.148,187,0.586,189,0.857,190,0.547,199,1.133,257,2.467,259,2.734,271,2.927,293,3.414,403,3.272,1759,3.65,1760,4.59,1855,6.827,1880,7.2,1881,6.324,1882,5.491,1883,6.046,1884,7.977,1885,7.047,1886,6.251,1887,6.324,1888,6.324,1889,6.324,1890,6.324]],["title/interfaces/EncryptionModuleOptions.html",[0,0.512,1884,4.222]],["body/interfaces/EncryptionModuleOptions.html",[0,0.72,2,2.041,3,0.128,4,0.107,5,0.078,8,0.314,9,0.995,12,0.98,13,0.249,14,0.005,15,0.245,19,1.226,22,0.138,31,0.226,78,0.984,172,0.004,173,0.004,257,2.483,271,2.971,293,3.466,403,2.731,1759,3.706,1760,4.66,1855,6.872,1880,6.742,1881,6.42,1883,5.046,1884,7.717,1886,5.853,1887,6.42,1888,8.672,1889,6.42,1890,6.42]],["title/modules/ErrorModule.html",[257,1.359,651,3.759]],["body/modules/ErrorModule.html",[3,0.13,4,0.108,5,0.079,14,0.005,15,0.265,19,1.243,22,0.115,31,0.229,172,0.004,173,0.004,216,1.961,257,2.329,259,2.813,271,3.01,324,5.68,383,2.359,642,4.137,651,6.443,666,5.31,670,7.563,1503,5.15,1749,4.722,1759,3.755,1891,7.249,1892,7.826,1893,5.485,1894,6.795,1895,7.249,1896,7.249,1897,5.648]],["title/classes/ErrorResponse.html",[31,0.161,201,3.2]],["body/classes/ErrorResponse.html",[3,0.118,4,0.098,5,0.072,12,1.074,13,0.337,14,0.005,15,0.187,19,1.133,22,0.105,31,0.209,34,4.091,37,2.398,38,4.372,69,1.543,71,2.871,84,5.014,114,0.504,172,0.004,173,0.004,175,1.253,179,4.369,181,3.32,187,0.549,189,0.804,190,0.513,201,5.183,202,5.149,216,2.229,217,6.075,218,5.367,219,4.728,617,5.93,724,5.183,1614,4.47,1898,6.609,1899,6.609,1900,6.609,1901,6.609,1902,5.93,1903,6.609,1904,4.661,1905,5.93,1906,4.304,1907,3.423,1908,4.304,1909,4.882]],["title/injectables/FeathersAuthProvider.html",[18,0.895,291,3.588]],["body/injectables/FeathersAuthProvider.html",[0,0.454,3,0.081,4,0.067,5,0.049,8,0.198,12,0.897,13,0.308,14,0.005,15,0.228,18,1.123,19,0.773,22,0.072,31,0.142,35,2.203,50,3.512,69,0.844,74,2.668,76,3.208,77,2.491,78,1.215,114,0.674,128,1.6,129,2.428,145,2.324,148,2.138,149,0.813,172,0.003,173,0.003,182,1.04,187,0.735,189,1.075,190,0.686,199,1.369,291,4.503,294,4.045,298,1.499,306,2.979,307,4.375,308,4.601,309,4.91,310,3.664,315,4.717,326,1.128,327,1.666,343,4.016,345,1.94,346,2.974,353,1.128,355,2.014,511,1.839,645,3.753,678,1.778,699,4.213,777,2.095,1165,4.503,1744,4.717,1745,2.452,1910,9.09,1911,4.045,1912,6.385,1913,6.653,1914,6.385,1915,6.385,1916,6.653,1917,4.508,1918,5.98,1919,4.508,1920,6.385,1921,4.508,1922,4.045,1923,4.508,1924,6.385,1925,4.508,1926,6.385,1927,4.508,1928,4.508,1929,4.508,1930,6.385,1931,6.385,1932,6.385,1933,4.508,1934,4.508,1935,4.508,1936,6.385,1937,6.385,1938,6.385,1939,4.508,1940,3.33,1941,4.508,1942,4.508,1943,4.508,1944,5.298,1945,4.045,1946,4.508,1947,4.508,1948,2.662]],["title/interfaces/FeathersError.html",[0,0.512,1949,3.759]],["body/interfaces/FeathersError.html",[0,0.748,2,2.119,3,0.133,4,0.111,5,0.081,8,0.326,9,1.017,12,1.068,13,0.357,14,0.005,22,0.118,33,1.878,34,4.032,37,2.524,172,0.004,173,0.004,179,4.548,1949,6.539,1950,7.43,1951,7.43,1952,8.782]],["title/modules/FeathersModule.html",[257,1.359,289,3.588]],["body/modules/FeathersModule.html",[3,0.121,4,0.1,5,0.074,14,0.005,15,0.236,19,1.156,22,0.107,31,0.213,60,4.659,172,0.004,173,0.004,216,1.824,257,2.528,259,3.516,260,3.729,267,4.224,268,3.199,269,2.957,271,3.466,289,7.087,293,4.042,296,5.06,393,4.427,430,4.042,645,4.224,1918,7.038,1953,6.051,1954,6.051,1955,6.051,1956,6.744,1957,5.645,1958,4.928,1959,4.659,1960,4.539,1961,5.885,1962,6.166,1963,5.885,1964,5.885,1965,6.924,1966,6.744]],["title/interfaces/FeathersService.html",[0,0.512,1967,4.222]],["body/interfaces/FeathersService.html",[0,0.527,2,1.492,3,0.094,4,0.078,5,0.057,8,0.229,10,1.376,12,0.906,13,0.299,14,0.005,15,0.243,17,2.921,18,1.245,19,0.897,22,0.137,30,4.452,31,0.165,35,1.554,43,3.225,44,3.29,45,2.94,46,3.104,47,3.29,48,3.756,60,5.015,77,2.236,78,0.719,114,0.54,128,1.183,148,2.481,149,0.943,172,0.003,173,0.003,182,1.153,187,0.667,189,0.861,190,0.549,199,1.139,211,2.534,218,3.407,257,1.397,259,2.03,296,4.48,328,3.886,375,3.089,393,2.775,404,4.796,430,2.534,436,2.94,458,5.516,601,3.583,645,4.874,986,3.29,1677,3.185,1749,3.407,1918,3.539,1948,3.089,1957,3.539,1958,5.304,1959,2.921,1960,4.886,1961,3.689,1962,3.865,1963,3.689,1964,3.689,1965,4.341,1967,7.133,1968,6.657,1969,4.076,1970,4.8,1971,7.714,1972,5.816,1973,6.352,1974,7.855,1975,5.232,1976,6.352,1977,5.232,1978,4.694,1979,3.539,1980,4.341,1981,5.873,1982,4.341,1983,3.689,1984,4.694,1985,4.694,1986,4.694,1987,6.352,1988,4.694,1989,4.341,1990,4.789,1991,4.341,1992,3.539,1993,4.694,1994,4.694,1995,4.694,1996,4.341,1997,3.539,1998,4.694]],["title/injectables/FeathersServiceProvider.html",[18,0.895,1918,3.442]],["body/injectables/FeathersServiceProvider.html",[0,0.528,3,0.094,4,0.078,5,0.057,8,0.23,10,1.019,12,0.906,13,0.299,14,0.005,15,0.243,17,2.925,18,1.246,19,0.898,22,0.137,30,4.457,31,0.166,35,1.557,43,3.229,44,3.294,45,2.943,46,3.107,47,3.294,48,3.76,60,4.803,69,0.981,77,1.843,78,0.72,114,0.54,128,1.184,148,2.485,149,0.945,172,0.003,173,0.003,182,1.154,187,0.668,189,0.862,190,0.55,199,0.843,211,2.538,216,1.417,218,3.413,257,1.399,259,2.749,296,4.803,298,1.742,328,3.89,375,3.094,393,3.76,404,4.159,430,3.433,458,5.522,601,3.587,645,4.876,986,3.294,1643,3.413,1677,3.19,1749,3.413,1918,4.794,1948,3.094,1957,4.794,1958,5.08,1959,3.956,1960,5.31,1961,4.998,1962,5.236,1963,4.998,1964,4.998,1965,5.88,1967,7.137,1968,6.662,1969,4.083,1970,2.925,1971,6.359,1972,4.794,1973,4.702,1974,6.662,1976,4.702,1978,4.702,1979,3.545,1980,4.347,1981,5.88,1982,4.347,1983,4.998,1984,4.702,1985,4.702,1986,6.359,1987,6.359,1988,4.702,1989,4.347,1990,4.794,1991,4.347,1992,3.545,1993,4.702,1994,4.702,1995,4.702,1996,4.347,1997,3.545,1998,4.702,1999,7.087,2000,5.24,2001,5.24,2002,5.24]],["title/classes/File.html",[5,0.056,31,0.161]],["body/classes/File.html",[0,0.494,3,0.088,4,0.073,5,0.085,8,0.215,9,0.779,10,1.317,12,0.98,13,0.343,14,0.005,15,0.237,22,0.133,31,0.245,33,1.776,69,0.918,114,0.374,123,2.32,145,2.094,149,1.221,172,0.003,173,0.003,175,0.93,187,0.818,189,0.596,190,0.681,192,3.387,205,1.631,314,1.844,345,2.915,346,1.967,347,2.502,348,2.279,350,2.279,352,3.349,353,1.227,354,1.457,358,3.41,378,2.717,379,2.472,381,2.672,383,1.832,384,1.932,387,2.427,388,1.519,459,2.15,484,6.295,485,3.821,486,3.812,487,6.182,488,6.519,491,2.39,493,2.482,494,2.482,495,2.482,496,2.482,497,2.073,498,1.903,499,5.441,500,3.821,501,2.234,502,6.182,503,5.901,504,5.901,505,2.961,506,3.84,507,2.986,508,3.508,509,4.26,510,3.194,511,2.764,512,5.277,513,2.672,514,5.277,515,2.39,516,3.821,517,3.821,518,3.821,519,3.821,520,3.821,521,3.821,522,3.821,523,3.821,524,3.821,525,2.986,526,2.738,1819,4.4,1820,4.4,1821,4.4,2003,6.773,2004,4.904,2005,4.904]],["title/injectables/FileStorageAdapter.html",[18,0.895,2006,3.759]],["body/injectables/FileStorageAdapter.html",[3,0.117,4,0.097,5,0.109,8,0.286,13,0.227,14,0.005,15,0.253,18,1.438,19,1.119,22,0.104,31,0.206,74,2.385,77,2.128,78,0.898,114,0.498,123,2.801,128,1.493,129,1.863,149,1.475,172,0.004,173,0.004,182,1.332,187,0.543,189,0.794,190,0.507,199,1.05,298,2.171,326,1.634,417,3.646,499,5.125,503,5.768,504,6.299,2006,6.043,2007,5.859,2008,7.339,2009,7.339,2010,6.53,2011,8.014,2012,8.179,2013,5.859,2014,6.53,2015,6.53,2016,7.339,2017,5.859,2018,6.53,2019,6.53,2020,5.418,2021,6.53,2022,6.53,2023,6.53,2024,5.088,2025,6.53,2026,5.088,2027,6.53,2028,6.53,2029,6.53,2030,5.088,2031,6.53]],["title/injectables/FileSystemAdapter.html",[18,0.895,1610,3.588]],["body/injectables/FileSystemAdapter.html",[3,0.063,4,0.052,5,0.103,8,0.154,9,0.61,12,1.079,13,0.301,14,0.005,15,0.217,18,0.933,19,0.601,22,0.056,31,0.111,35,1.904,69,1.2,74,2.614,77,2.419,78,1.111,114,0.64,128,1.351,129,2.191,172,0.002,173,0.002,182,0.865,187,0.75,189,1.021,190,0.652,199,1.452,216,1.934,298,1.165,328,4.067,370,1.406,506,2.627,510,3.457,578,3.232,615,3.744,638,6.205,724,5.439,910,3.538,997,4.656,1053,4.404,1387,4.828,1489,3.922,1498,3.591,1512,5.848,1558,3.922,1610,3.744,1628,2.589,1643,6.293,1654,5.931,1655,7.175,1669,6.706,1680,5.439,1708,2.204,1872,3.591,2032,7.611,2033,7.611,2034,3.144,2035,7.253,2036,5.308,2037,5.308,2038,5.308,2039,6.408,2040,6.408,2041,5.308,2042,6.408,2043,6.408,2044,5.308,2045,5.308,2046,3.504,2047,5.282,2048,5.308,2049,3.504,2050,4.404,2051,7.149,2052,7.682,2053,5.308,2054,5.308,2055,4.763,2056,3.744,2057,7.149,2058,8.648,2059,5.308,2060,3.504,2061,6.408,2062,3.504,2063,5.308,2064,4.404,2065,6.408,2066,3.504,2067,3.457,2068,6.408,2069,6.408,2070,6.415,2071,4.763,2072,5.308,2073,3.504,2074,5.308,2075,5.308,2076,4.404,2077,6.408,2078,3.504,2079,3.922,2080,3.457,2081,3.744,2082,5.308,2083,3.504,2084,3.504,2085,3.144,2086,4.763,2087,3.504,2088,3.504,2089,4.763,2090,3.504,2091,3.504,2092,3.504,2093,6.408,2094,3.504,2095,3.504,2096,3.504,2097,3.504,2098,3.504,2099,5.308,2100,3.504,2101,3.504,2102,2.73,2103,2.907,2104,3.504,2105,3.504,2106,2.907,2107,3.504]],["title/modules/FileSystemModule.html",[257,1.359,2108,3.759]],["body/modules/FileSystemModule.html",[3,0.13,4,0.108,5,0.096,14,0.005,15,0.247,19,1.245,22,0.116,31,0.23,172,0.004,173,0.004,257,2.332,259,2.819,260,3.902,267,4.42,268,3.446,269,3.186,271,3.627,293,4.23,1610,7.405,2032,6.028,2033,6.028,2108,7.54,2109,6.519,2110,6.519,2111,6.519,2112,7.265,2113,7.265]],["title/modules/FilesModule.html",[257,1.359,2114,3.588]],["body/modules/FilesModule.html",[3,0.119,4,0.099,5,0.072,14,0.005,15,0.279,19,1.135,22,0.105,31,0.209,172,0.004,173,0.004,257,2.203,259,2.569,260,3.687,267,4.176,268,3.141,269,2.904,271,3.426,272,3.687,653,6.208,1038,3.697,1762,6.846,1767,7.292,1777,4.479,1778,4.031,1790,7.292,2006,7.292,2114,7.374,2115,5.942,2116,5.942,2117,6.622,2118,7.69,2119,6.622,2120,5.942,2121,6.622,2122,6.622]],["title/injectables/FilesRepo.html",[18,0.895,1790,3.759]],["body/injectables/FilesRepo.html",[3,0.08,4,0.067,5,0.099,8,0.197,9,0.732,13,0.34,14,0.005,15,0.241,18,1.119,19,0.769,22,0.071,31,0.142,33,1.351,69,0.841,71,1.371,74,2.681,77,2.454,78,0.617,114,0.738,128,1.236,129,2.296,168,2.644,172,0.003,173,0.003,182,1.037,187,0.819,189,1.177,190,0.751,192,3.434,199,1.557,298,1.493,314,1.774,321,3.668,326,1.123,327,1.66,353,1.123,355,2.006,379,2.082,383,1.214,384,1.281,396,2.823,424,5.815,484,5.446,487,3.317,499,3.653,506,3.151,527,6.611,529,5.764,530,4.004,531,4.961,532,4.961,533,4.49,534,3.554,535,4.961,536,4.961,537,4.961,539,4.17,541,3.583,543,3.166,545,3.498,547,3.498,549,3.166,551,3.498,553,3.498,555,3.498,557,3.498,1790,4.704,2006,6.522,2008,5.713,2009,5.713,2120,4.028,2123,4.489,2124,6.638,2125,6.367,2126,4.489,2127,4.489,2128,4.489,2129,6.367,2130,4.489,2131,6.367,2132,3.724,2133,3.724,2134,3.724,2135,3.724,2136,3.724,2137,3.724,2138,3.724,2139,3.724,2140,3.724,2141,4.489,2142,4.028,2143,4.489,2144,6.367,2145,4.028,2146,4.489,2147,4.489,2148,4.489,2149,4.704,2150,4.489,2151,4.028,2152,4.489,2153,4.489]],["title/interfaces/GlobalConstants.html",[0,0.512,2154,4.222]],["body/interfaces/GlobalConstants.html",[0,0.716,2,2.028,3,0.127,4,0.106,5,0.078,8,0.311,9,0.991,12,1.088,13,0.323,14,0.005,15,0.201,22,0.113,128,1.44,172,0.004,173,0.004,190,0.748,1487,3.518,2154,7.696,2155,6.378,2156,8.195,2157,8.195,2158,8.195,2159,7.734,2160,7.108,2161,7.734,2162,5.538]],["title/classes/GlobalErrorFilter.html",[31,0.161,1894,3.965]],["body/classes/GlobalErrorFilter.html",[0,0.354,3,0.063,4,0.052,5,0.039,8,0.154,9,0.612,13,0.282,14,0.005,15,0.245,19,0.603,22,0.056,31,0.168,34,4.736,35,1.909,38,4.938,43,2.426,44,2.475,45,2.211,46,2.335,47,1.635,71,1.962,78,1.319,84,2.973,114,0.49,128,1.681,138,2.38,139,2.213,140,2.38,149,1.46,168,2.668,172,0.002,173,0.002,174,5.053,175,0.667,178,4.847,179,3.33,181,2.375,182,1.047,187,0.534,189,0.648,190,0.413,199,1.152,201,5.775,207,1.704,208,3.056,213,2.92,217,2.38,219,2.019,224,2.742,225,3.158,296,3.587,328,2.58,352,1.187,370,1.412,383,0.952,384,1.004,388,1.09,399,3.242,403,2.452,417,3.587,424,4.646,430,1.704,511,1.436,590,5.206,596,3.349,602,5.944,642,2.526,671,4.835,675,2.897,1362,3.158,1377,2.6,1648,2.742,1693,2.742,1700,3.686,1777,2.38,1808,2.6,1811,5.996,1893,4.84,1894,4.149,1949,5.293,1952,3.158,1959,1.965,1979,2.38,2047,2.6,2149,6.213,2163,5.944,2164,2.742,2165,6.425,2166,5.765,2167,5.71,2168,5.325,2169,3.519,2170,5.325,2171,6.425,2172,7.165,2173,3.519,2174,6.425,2175,3.519,2176,3.158,2177,3.519,2178,3.519,2179,3.158,2180,3.158,2181,3.158,2182,3.158,2183,2.742,2184,3.158,2185,4.346,2186,2.38,2187,3.158,2188,3.158,2189,4.779,2190,3.158,2191,2.92,2192,3.158,2193,3.158,2194,3.158,2195,3.158,2196,3.158,2197,4.418,2198,3.519,2199,3.519,2200,4.418,2201,3.519,2202,3.519,2203,3.519,2204,4.418,2205,3.519,2206,3.519,2207,5.325,2208,3.519,2209,3.519,2210,4.779,2211,2.742,2212,3.158,2213,2.38,2214,2.38,2215,4.779,2216,2.92,2217,4.779,2218,3.158,2219,4.149,2220,3.158,2221,3.158,2222,2.92,2223,3.158,2224,3.158,2225,3.158,2226,2.742,2227,3.158,2228,3.158,2229,3.158,2230,3.158,2231,6.906,2232,3.158,2233,6.906,2234,3.158,2235,3.158,2236,3.158,2237,3.519,2238,3.519,2239,3.519,2240,5.325,2241,3.519,2242,3.519]],["title/classes/GlobalValidationPipe.html",[31,0.161,2243,4.222]],["body/classes/GlobalValidationPipe.html",[3,0.111,4,0.093,5,0.068,9,0.715,13,0.304,14,0.005,15,0.225,19,1.066,22,0.099,31,0.276,33,1.684,69,1.635,78,0.855,123,2.991,146,5.594,149,1.122,172,0.004,173,0.004,174,4.387,175,1.18,186,5.861,187,0.517,205,2.069,208,5.278,216,1.683,219,3.569,224,4.847,347,2.037,370,3.182,383,2.146,404,3.222,415,4.315,511,2.539,534,3.473,595,4.685,666,4.83,777,2.891,786,3.692,871,2.63,879,2.891,1069,4.429,1408,4.208,1499,4.552,1502,3.674,1504,3.674,1907,3.222,1990,4.208,1997,4.208,2243,6.582,2244,7.933,2245,6.221,2246,6.181,2247,7.118,2248,6.582,2249,8.734,2250,6.221,2251,5.861,2252,5.161,2253,6.221,2254,6.221,2255,6.221,2256,6.221,2257,6.221,2258,5.161,2259,4.387,2260,4.596,2261,6.221,2262,4.596,2263,6.221,2264,5.582,2265,5.582,2266,4.847,2267,6.221,2268,6.221]],["title/classes/GridElement.html",[31,0.161,1180,3.588]],["body/classes/GridElement.html",[0,0.259,3,0.046,4,0.038,5,0.028,8,0.29,9,0.479,10,1.605,12,0.984,13,0.323,14,0.005,15,0.149,19,0.441,22,0.124,31,0.132,35,2.638,37,2.428,69,0.482,76,1.47,78,1.348,114,0.593,128,1.618,143,3.201,148,2.49,149,1.403,168,3.507,172,0.002,173,0.002,175,0.488,181,3.183,182,0.679,187,0.764,189,0.946,190,0.604,199,1.385,306,2.656,383,0.696,384,1.497,388,0.797,403,3.286,409,2.266,459,1.827,469,1.827,491,2.504,515,1.47,620,3.369,675,2.266,676,6.43,713,2.818,720,1.9,799,3.201,880,2.713,881,2.536,882,3.517,885,3.369,886,5.055,897,1.74,950,3.859,953,2.713,958,1.436,1083,3.563,1108,1.618,1109,1.9,1110,2.134,1112,2.134,1115,2.134,1116,2.134,1117,5.887,1119,2.134,1125,3.246,1128,2.818,1132,2.134,1136,2.134,1139,2.134,1140,5.242,1142,4.169,1143,5.938,1146,3.93,1148,2.134,1149,4.898,1152,2.134,1154,3.878,1155,2.134,1157,2.134,1159,2.134,1161,2.134,1163,2.134,1165,1.814,1166,2.004,1167,1.9,1168,3.246,1169,1.675,1170,5.5,1171,5.006,1172,4.09,1173,5.5,1174,4.355,1175,5.5,1176,3.456,1177,4.355,1178,2.134,1179,4.698,1180,6.478,1181,4.355,1182,1.675,1183,3.456,1184,2.134,1185,3.456,1186,2.134,1187,3.125,1188,5.406,1189,2.938,1190,3.456,1191,2.134,1192,3.456,1193,3.456,1194,3.456,1195,3.456,1196,3.456,1197,2.134,1198,3.456,1199,2.004,1200,3.456,1201,2.134,1202,1.814,1203,2.134,1204,3.456,1205,2.134,1206,2.134,1207,3.456,1208,1.9,1209,2.134,1210,3.246,1211,5.5,1212,2.134,1213,1.675,1214,2.004,1215,2.134,1216,2.134,1217,2.134,1218,2.134,1219,2.134,1220,2.134,1221,3.456,1222,2.134,1223,2.134,1224,2.134,1225,2.134,1226,3.456,1227,2.134,1228,4.355,1229,2.134,1230,3.456,1231,2.134,1232,2.134,1233,2.134,1234,2.134,1235,2.134,1236,2.134,1237,2.134,1238,2.134,1239,2.134,1240,2.134,1241,2.134,1242,2.713,1243,2.134,1244,2.134,1245,2.134,1246,2.134,1247,2.134,1248,3.456,1249,2.134,1250,2.134,1251,2.134,1252,3.456,1253,2.713,1254,3.456,1255,2.134,1256,2.134,1257,2.134,1258,2.134,1259,2.134,1260,2.134,1261,2.134,1262,4.355,1263,2.134,1264,2.134,2269,3.738,2270,4.165,2271,4.165,2272,4.165,2273,4.165,2274,3.738,2275,3.738,2276,2.572,2277,2.572,2278,2.572,2279,2.572,2280,2.572,2281,2.572,2282,2.308,2283,2.572,2284,2.572,2285,2.572,2286,2.572,2287,2.572,2288,2.572,2289,2.572,2290,2.572,2291,2.572,2292,2.572,2293,2.572]],["title/interfaces/HtmlMailContent.html",[0,0.512,251,3.314]],["body/interfaces/HtmlMailContent.html",[0,1.007,2,1.878,3,0.118,4,0.098,5,0.072,8,0.288,9,0.945,12,1.112,13,0.286,14,0.005,22,0.105,33,2.051,114,0.502,172,0.004,173,0.004,190,0.638,235,5.354,236,4.453,237,5.838,238,5.561,239,4.453,240,4.453,241,5.354,242,4.453,243,4.453,244,4.453,245,6.115,246,4.287,247,4.453,248,5.354,249,6.537,250,6.537,251,5.838,252,4.854,253,4.287,254,4.453,255,4.453,256,4.453]],["title/interfaces/ICollectionFilePath.html",[0,0.512,1653,4.222]],["body/interfaces/ICollectionFilePath.html",[0,0.308,2,0.874,3,0.055,4,0.119,5,0.084,8,0.134,9,0.55,12,0.984,13,0.167,14,0.005,15,0.227,18,0.842,19,0.525,22,0.106,31,0.097,34,1.396,35,2.586,37,1.278,69,0.574,74,1.929,77,1.732,78,1.197,114,0.508,123,1.049,128,1.664,129,2.69,148,1.453,149,1.062,172,0.003,173,0.002,187,0.255,190,0.457,199,1.232,272,1.369,293,1.484,318,2.479,328,3.5,369,1.55,379,1.347,388,0.949,393,3.834,469,1.343,491,1.689,505,3.529,506,3.791,530,1.927,570,4.155,572,2.542,573,2.542,577,5.913,579,4.155,581,2.072,583,3.972,584,1.927,589,5.63,590,2.072,592,4.591,595,1.809,638,5.181,660,3.73,724,3.011,871,3.238,892,1.995,950,1.666,980,2.072,995,1.927,997,1.995,1010,2.16,1057,3.011,1187,1.587,1375,3.238,1387,4.034,1482,1.995,1487,4.099,1488,6.658,1489,4.921,1492,4.921,1498,2.072,1499,2.747,1503,3.479,1512,4.189,1513,4.591,1526,6.553,1546,3.986,1552,3.972,1598,2.749,1599,2.749,1600,2.749,1602,2.749,1606,2.749,1608,2.749,1610,4.155,1612,2.749,1614,3.238,1615,5.287,1616,3.972,1617,5.181,1618,4.888,1620,2.749,1621,2.749,1623,2.263,1624,2.749,1626,4.295,1627,2.542,1628,4.353,1629,6.873,1630,2.749,1632,5.287,1634,5.287,1636,2.749,1637,2.542,1638,4.295,1639,2.749,1641,2.749,1642,2.749,1643,3.118,1644,2.542,1647,2.542,1648,2.387,1649,2.542,1650,1.995,1651,2.542,1652,2.542,1653,6.355,1654,6.87,1655,3.972,1656,2.749,1657,2.749,1658,4.295,1659,4.295,1660,4.295,1661,2.749,1662,2.749,1663,2.749,1664,2.749,1665,5.976,1666,2.749,1667,2.749,1668,2.749,1669,2.542,1670,2.749,1671,2.749,1672,2.749,1673,2.542,1674,2.749,1675,5.976,1676,5.287,1677,2.914,1678,2.749,1679,2.749,1680,1.927,1681,1.995,1682,2.749,1683,4.295,1684,4.295,1685,2.749,1686,2.749,1687,2.749,1688,1.758,1689,4.295,1690,2.749,1691,2.749,1692,2.749,1693,3.73,1694,4.295,1695,2.749,1696,4.295,1697,4.295,1698,2.749,1699,2.749,1700,2.747,1701,2.749,1702,2.749,1703,2.542,1704,2.749,1705,2.16,1706,2.542,1707,2.16,1708,1.927,1709,2.749,1710,2.542,1711,2.749,1712,2.749,1713,2.749,1714,2.749,1715,2.749,1716,3.238,1717,2.749,1718,2.749,1719,2.749,1720,2.749,1721,2.749,1722,4.295,1723,2.749,1724,2.749,1725,2.749,1726,2.749,1727,1.71,1728,2.749,1729,2.749,1730,2.749,1731,2.749,1732,3.537,1733,2.749,1734,3.73,1735,2.749,1736,2.749,1737,2.749,1738,2.749]],["title/interfaces/ICourseGroupProperties.html",[0,0.512,834,4.222]],["body/interfaces/ICourseGroupProperties.html",[0,0.654,2,1.852,3,0.116,4,0.097,5,0.071,8,0.284,9,0.937,13,0.325,14,0.005,15,0.272,22,0.13,31,0.205,33,1.378,78,0.893,145,2.338,149,1.17,172,0.004,173,0.004,190,0.632,205,2.159,314,1.796,346,3.269,353,2.039,354,1.929,355,2.901,358,3.061,388,2.01,497,2.744,498,2.518,501,2.957,505,2.478,513,3.214,515,2.291,673,3.309,680,6.268,702,3.285,703,3.952,704,5.058,719,3.285,741,2.794,750,5.058,751,5.058,831,4.228,832,5.825,833,5.825,834,7.39,836,3.624,837,4.228,840,3.362,841,5.386,842,4.228,843,4.228,844,5.825]],["title/interfaces/ICourseProperties.html",[0,0.512,690,3.965]],["body/interfaces/ICourseProperties.html",[0,0.434,2,1.23,3,0.077,4,0.064,5,0.047,8,0.367,9,0.909,12,1.031,13,0.334,14,0.005,15,0.247,22,0.098,31,0.136,33,0.915,37,1.151,69,0.807,78,1.151,114,0.713,128,1.399,145,2.373,149,1.305,172,0.003,173,0.003,190,0.775,205,1.434,216,2.357,306,2.594,314,1.364,322,6.143,352,2.94,353,1.079,354,1.281,358,2.324,368,2.482,379,2.584,383,1.957,388,2.241,416,2.712,491,1.522,497,1.823,498,1.673,501,1.965,505,1.646,511,1.76,513,3.118,515,1.522,541,2.089,662,2.712,673,1.393,674,3.578,675,2.346,676,4.03,677,5.125,678,3.741,679,6.521,680,5.674,681,6.991,682,6.991,683,5.662,685,3.87,686,3.87,687,3.87,688,3.87,689,5.133,690,5.637,692,3.87,694,3.87,696,3.87,698,2.712,699,2.134,702,3.662,703,4.405,704,3.36,706,3.87,708,3.87,713,2.917,719,2.183,720,3.186,721,3.36,722,2.046,723,2.712,724,3.891,725,4.363,726,3.87,727,3.36,728,3.87,729,2.917,730,3.87,731,3.87,732,3.578,733,3.186,734,3.186,735,2.917,736,3.87,737,2.917,738,3.578,739,3.36,740,3.186,741,1.856,742,2.408,743,3.87,744,3.365,745,2.134,746,5.552,747,3.87,748,3.041,749,2.712,750,3.36,751,3.36,752,3.87,753,3.87,754,3.87,755,3.87,756,5.552,757,3.87,758,5.552,759,5.637,760,5.552,761,3.36,762,3.87,763,3.87,764,3.87,765,3.87]],["title/interfaces/ICreateNews.html",[0,0.512,2294,3.759]],["body/interfaces/ICreateNews.html",[0,0.97,2,1.719,3,0.108,4,0.09,5,0.066,8,0.264,9,0.894,10,1.172,12,1.015,13,0.355,14,0.005,15,0.257,22,0.15,172,0.004,173,0.004,181,3.36,190,0.668,216,1.63,306,2.488,307,3.847,308,4.355,309,5.238,314,1.328,379,2.422,409,4.228,453,3.559,491,2.127,673,2.78,678,3.394,742,3.365,908,4.07,909,4.463,910,4.499,911,4.822,937,3.051,946,4.259,948,3.791,2294,5.743,2295,4.696,2296,6.975,2297,5.408,2298,5.408,2299,5.408,2300,4.251,2301,4.251,2302,4.251,2303,4.453,2304,5.408,2305,4.453,2306,4.077]],["title/interfaces/ICurrentUser.html",[0,0.512,773,2.768]],["body/interfaces/ICurrentUser.html",[0,0.874,2,1.752,3,0.11,4,0.091,5,0.067,8,0.269,9,0.904,10,1.882,12,1.119,13,0.343,14,0.005,15,0.174,22,0.146,76,3.23,114,0.468,145,2.29,172,0.004,173,0.004,310,3.386,322,5.548,378,2.463,379,2.214,381,2.422,699,4.872,773,4.279,2307,4.784,2308,5.962,2309,5.266,2310,5.812,2311,5.894,2312,4.741,2313,6.763,2314,5.812,2315,5.094,2316,5.548,2317,3.862,2318,3.862,2319,4.536]],["title/interfaces/IDashboardModelProperties.html",[0,0.512,1285,3.965]],["body/interfaces/IDashboardModelProperties.html",[0,0.58,2,1.644,3,0.103,4,0.086,5,0.063,8,0.253,9,0.868,10,1.85,12,0.977,13,0.263,14,0.005,15,0.269,22,0.134,31,0.239,33,1.602,37,2.016,76,2.665,123,2.586,145,2.513,149,1.361,172,0.004,173,0.004,181,2.131,205,2.511,306,2.584,314,1.856,346,2.312,352,3.015,353,1.889,354,1.712,355,2.575,358,3.163,388,1.785,497,2.436,501,2.626,505,2.882,513,2.978,515,2.034,673,1.862,702,3.821,719,2.917,722,2.734,741,3.25,840,2.985,882,4.006,897,3.899,919,3.135,958,3.218,1073,4.701,1188,3.509,1189,4.064,1265,4.064,1266,4.782,1267,4.782,1268,4.782,1270,6.986,1271,4.782,1272,6.264,1274,4.782,1275,4.782,1280,3.899,1281,4.782,1282,4.782,1283,6.264,1284,4.782,1285,6.561,1286,3.754,1287,4.782,1288,4.782,1289,4.782,1290,4.064,1291,4.782]],["title/interfaces/IDashboardRepo.html",[0,0.512,1433,3.965]],["body/interfaces/IDashboardRepo.html",[0,0.535,2,1.517,3,0.095,4,0.079,5,0.058,8,0.233,10,1.391,13,0.282,14,0.005,15,0.245,18,1.258,19,0.911,22,0.114,31,0.226,71,2.185,74,2.31,76,3.054,77,2.574,78,1.279,114,0.617,128,1.636,129,2.712,145,1.33,149,0.959,172,0.003,173,0.003,182,1.166,187,0.673,189,0.984,190,0.628,199,1.301,211,2.575,306,2.861,314,1.172,326,1.33,346,2.133,353,1.33,355,2.376,368,2.133,396,3.344,508,2.754,527,3.596,533,5.047,539,3.707,541,2.575,543,3.749,549,5.705,559,4.142,675,2.892,885,2.968,1073,5.194,1108,5.851,1146,4.661,1286,3.462,1336,5.047,1350,5.937,1405,4.411,1416,3.928,1417,4.411,1418,6.421,1419,5.937,1420,3.928,1422,7.259,1424,6.711,1428,4.77,1429,4.411,1430,5.937,1431,4.411,1432,4.411,1433,6.303,1434,4.77,1435,6.421,1436,4.77,1437,6.421,1438,4.77,1439,7.259,1440,4.77,1441,6.421,1442,4.77,1443,4.77,2320,5.316,2321,5.316,2322,5.316]],["title/interfaces/IErrorType.html",[0,0.512,604,3.965]],["body/interfaces/IErrorType.html",[0,0.75,2,2.124,3,0.133,4,0.111,5,0.082,8,0.326,9,1.019,12,1.096,13,0.357,14,0.005,22,0.118,71,2.89,172,0.004,173,0.004,181,3.621,209,7.236,604,6.905,2323,7.446,2324,7.446]],["title/interfaces/IFileProperties.html",[0,0.512,502,3.759]],["body/interfaces/IFileProperties.html",[0,0.58,2,1.644,3,0.103,4,0.086,5,0.083,8,0.253,9,0.868,12,1.036,13,0.338,14,0.005,15,0.253,22,0.142,31,0.266,33,1.787,123,2.586,145,2.321,172,0.004,173,0.004,190,0.694,205,1.917,314,1.969,352,3.212,353,1.442,354,1.712,358,2.836,379,2.515,484,5.696,485,4.49,486,4.226,487,6.853,488,5.883,491,2.034,497,2.436,498,2.236,499,5.761,500,4.49,501,2.626,502,6.221,503,6.542,504,6.542,505,3.214,506,4.168,507,3.509,508,3.911,509,4.749,510,3.754,511,3.081,512,4.49,513,2.273,514,4.49,515,2.034,516,4.49,517,4.49,518,4.49,519,4.49,520,4.49,521,4.49,522,4.49,523,4.49,524,4.49,525,3.509,526,3.218]],["title/interfaces/IFindOptions.html",[0,0.512,981,3.314]],["body/interfaces/IFindOptions.html",[0,0.872,2,2.046,3,0.128,4,0.107,5,0.078,8,0.314,9,0.996,13,0.324,14,0.005,22,0.154,37,2.313,172,0.004,173,0.004,190,0.751,453,4.234,797,4.003,798,3.714,937,3.629,981,5.643,1004,5.399,1005,5.399,1037,4.67,1732,6.401,2325,5.587,2326,5.587,2327,8.024,2328,7.535,2329,7.188]],["title/interfaces/IGridElement.html",[0,0.512,1143,3.759]],["body/interfaces/IGridElement.html",[0,0.291,2,0.824,3,0.052,4,0.043,5,0.032,8,0.308,9,0.525,10,1.453,12,0.961,13,0.298,14,0.005,15,0.161,19,0.495,22,0.129,31,0.144,35,2.594,37,2.488,76,1.613,78,1.368,114,0.432,128,1.645,143,3.421,148,2.69,149,1.463,168,3.625,172,0.002,173,0.002,181,2.893,182,0.745,187,0.621,189,0.69,190,0.44,199,1.202,306,2.524,384,1.304,388,0.895,403,2.461,417,3.6,459,1.267,469,2.004,491,2.637,515,1.019,620,3.6,675,1.571,676,6.292,713,3.092,720,2.134,799,3.421,880,2.977,881,2.783,882,3.727,885,3.6,886,5.255,897,1.954,950,3.085,953,2.977,958,1.613,1083,3.808,1108,1.817,1109,2.134,1110,2.397,1112,2.397,1115,2.397,1116,2.397,1117,6.199,1119,2.397,1125,3.561,1128,3.092,1132,2.397,1136,2.397,1139,2.397,1140,5.52,1142,4.419,1143,6.173,1146,4.2,1148,2.397,1149,5.19,1152,2.397,1154,4.19,1155,2.397,1157,2.397,1159,2.397,1161,2.397,1163,2.397,1165,2.037,1166,2.251,1167,2.134,1168,3.561,1169,1.881,1170,5.829,1171,5.35,1172,3.561,1173,5.829,1174,4.706,1175,5.829,1176,3.792,1177,4.706,1178,2.397,1179,4.419,1180,6.262,1181,2.397,1182,1.881,1183,3.792,1184,2.397,1185,3.792,1186,2.397,1187,3.34,1188,5.21,1189,3.223,1190,3.792,1191,2.397,1192,2.397,1193,2.397,1194,2.397,1195,2.397,1196,3.792,1197,2.397,1198,3.792,1199,2.251,1200,3.792,1201,2.397,1202,2.037,1203,2.397,1204,3.792,1205,2.397,1206,2.397,1207,3.792,1208,2.134,1209,2.397,1210,3.561,1211,5.829,1212,2.397,1213,1.881,1214,2.251,1215,2.397,1216,2.397,1217,2.397,1218,2.397,1219,2.397,1220,2.397,1221,3.792,1222,2.397,1223,2.397,1224,2.397,1225,2.397,1226,3.792,1227,2.397,1228,4.706,1229,2.397,1230,3.792,1231,2.397,1232,2.397,1233,2.397,1234,2.397,1235,2.397,1236,2.397,1237,2.397,1238,2.397,1239,2.397,1240,2.397,1241,2.397,1242,2.977,1243,2.397,1244,2.397,1245,2.397,1246,2.397,1247,2.397,1248,3.792,1249,2.397,1250,2.397,1251,2.397,1252,3.792,1253,2.977,1254,3.792,1255,2.397,1256,2.397,1257,2.397,1258,2.397,1259,2.397,1260,2.397,1261,2.397,1262,4.706,1263,2.397,1264,2.397,2269,4.101,2274,4.101,2275,4.101,2282,2.592,2330,2.889,2331,2.889,2332,2.889,2333,2.889,2334,2.889,2335,2.889]],["title/interfaces/ILearnroom.html",[0,0.512,676,3.314]],["body/interfaces/ILearnroom.html",[0,0.776,2,2.199,3,0.138,4,0.115,5,0.084,8,0.338,9,1.04,13,0.268,14,0.005,15,0.218,22,0.123,172,0.004,173,0.004,417,5.05,676,5.891,684,8.887,713,6.119,1167,5.695,2336,7.708]],["title/interfaces/ILessonProperties.html",[0,0.512,2337,3.965]],["body/interfaces/ILessonProperties.html",[0,0.655,2,1.855,3,0.117,4,0.097,5,0.071,8,0.391,9,0.938,12,0.985,13,0.325,14,0.005,15,0.252,22,0.13,31,0.205,33,1.38,114,0.749,172,0.004,173,0.004,190,0.633,205,2.163,314,1.798,352,3.008,353,1.627,354,1.932,358,3.064,388,2.014,491,3.146,497,2.749,498,2.523,511,2.654,513,2.566,515,2.295,673,3.31,741,2.8,744,3.538,745,3.219,836,3.631,837,4.236,840,3.369,842,4.236,843,4.236,2337,6.946,2338,5.836,2339,6.514,2340,4.805,2341,3.538,2342,5.396,2343,7.321,2344,5.836]],["title/interfaces/ILogger.html",[0,0.512,2167,3.588]],["body/interfaces/ILogger.html",[0,0.629,2,1.781,3,0.112,4,0.093,5,0.068,8,0.274,12,1.106,13,0.331,14,0.005,22,0.099,34,3.623,84,5.311,114,0.725,172,0.004,173,0.004,182,1.295,187,0.791,189,1.157,190,0.784,199,1.53,436,4.038,1832,5.818,2167,5.608,2345,6.245,2346,6.196,2347,5.608,2348,7.952,2349,7.952,2350,6.245,2351,6.245,2352,7.135,2353,7.259,2354,6.245,2355,7.135,2356,6.245,2357,6.245,2358,6.245,2359,7.135,2360,6.245,2361,5.603,2362,5.603]],["title/interfaces/INewsProperties.html",[0,0.512,944,3.588]],["body/interfaces/INewsProperties.html",[0,0.403,2,1.141,3,0.072,4,0.126,5,0.044,8,0.175,9,0.673,10,0.777,12,1.046,13,0.339,14,0.005,15,0.254,22,0.129,31,0.241,33,1.619,43,3.158,44,3.221,45,2.878,46,3.039,47,3.221,48,3.677,78,0.55,114,0.447,123,1.369,145,2.295,149,1.25,172,0.003,173,0.003,181,3.137,190,0.698,205,1.329,306,2.696,307,3.776,308,3.508,310,1.721,314,1.79,329,2.819,352,2.959,353,1,354,1.188,358,2.2,365,3.508,370,2.78,379,2.148,403,1.526,459,1.753,486,3.866,497,1.69,498,1.551,501,1.822,505,2.235,507,2.434,508,3.033,509,4.359,513,2.734,515,1.411,526,2.232,620,2.232,673,1.892,678,3.771,698,3.683,699,1.979,722,1.896,723,2.514,749,2.514,836,2.232,840,2.071,906,2.514,907,2.954,908,4.073,909,4.423,910,4.2,911,4.309,912,6,913,5.29,914,5.527,918,2.704,919,3.186,920,2.514,923,2.954,924,3.683,925,2.954,926,2.954,927,2.121,928,2.704,929,2.819,933,4.506,934,4.799,937,2.964,939,2.819,941,2.954,943,2.954,944,5.381,946,2.899,947,2.954,948,5.108,949,2.954,950,2.175,951,2.704,952,2.514,953,2.604,954,2.704,955,2.954,956,2.704,957,2.954,958,2.232,959,2.954,960,2.954,961,2.954,962,2.954,963,2.704,964,2.954,965,2.704,966,2.954,967,4.327,968,4.219,969,2.954,970,4.327,971,2.954,972,2.954,973,2.604,974,2.604,975,2.954]],["title/interfaces/INewsScope.html",[0,0.512,2305,3.759]],["body/interfaces/INewsScope.html",[0,0.975,2,1.755,3,0.11,4,0.092,5,0.067,8,0.27,9,0.905,10,1.196,12,0.83,13,0.351,14,0.005,15,0.259,22,0.151,172,0.004,173,0.004,181,2.274,190,0.752,216,1.664,306,2.512,307,3.898,308,4.397,309,5.577,314,1.356,379,1.731,409,4.284,453,3.633,491,3.066,673,2.807,678,3.427,742,3.434,908,4.022,909,4.491,910,3.045,911,3.263,937,3.113,946,4.3,948,3.869,2294,4.545,2295,4.793,2296,5.52,2297,5.52,2298,5.52,2299,5.52,2300,4.338,2301,4.338,2302,4.338,2303,4.545,2304,7.067,2305,5.819,2306,6.196]],["title/interfaces/IPagination.html",[0,0.512,2328,3.965]],["body/interfaces/IPagination.html",[0,0.872,2,2.046,3,0.128,4,0.107,5,0.078,8,0.314,9,0.996,13,0.324,14,0.005,22,0.154,37,2.686,172,0.004,173,0.004,190,0.751,453,4.234,797,5.399,798,5.009,937,3.629,981,4.67,1004,4.003,1005,4.003,1037,4.67,1732,6.401,2325,5.587,2326,5.587,2327,7.188,2328,7.254,2329,7.188]],["title/interfaces/IResolvedUser.html",[0,0.512,2313,3.759]],["body/interfaces/IResolvedUser.html",[0,0.868,2,1.726,3,0.108,4,0.09,5,0.066,8,0.265,9,0.896,10,1.907,12,1.117,13,0.352,14,0.005,15,0.171,22,0.145,76,2.135,114,0.461,145,1.514,172,0.004,173,0.004,310,4.055,322,4.266,378,3.652,379,2.714,381,3.591,699,4.773,773,3.29,2307,4.713,2308,3.94,2309,5.245,2310,4.469,2311,5.248,2312,4.464,2313,6.368,2314,4.469,2315,5.019,2316,6.419,2317,5.725,2318,5.725,2319,4.469]],["title/interfaces/IRole.html",[0,0.512,2316,3.588]],["body/interfaces/IRole.html",[0,0.901,2,1.87,3,0.117,4,0.098,5,0.072,8,0.287,9,0.943,10,1.942,12,1.114,13,0.326,14,0.005,15,0.186,22,0.149,76,2.314,114,0.715,145,1.64,172,0.004,173,0.004,310,3.53,322,4.623,378,2.63,379,2.308,381,2.586,699,4.429,773,3.566,2307,5.108,2308,4.27,2309,4.867,2310,4.844,2311,5.447,2312,4.634,2313,6.058,2314,4.844,2315,5.439,2316,6.31,2317,4.123,2318,4.123,2319,4.844]],["title/interfaces/IRoleProperties.html",[0,0.512,2363,4.222]],["body/interfaces/IRoleProperties.html",[0,0.618,2,1.752,3,0.11,4,0.091,5,0.067,8,0.38,9,0.904,12,1.05,13,0.319,14,0.005,15,0.223,22,0.125,31,0.194,33,1.303,114,0.738,149,1.565,172,0.004,173,0.004,190,0.71,205,2.042,310,4.073,314,1.734,352,2.929,353,1.536,354,1.824,358,2.955,368,2.463,417,3.428,498,2.382,505,2.343,513,2.422,515,2.167,702,4.393,719,3.981,741,2.643,744,3.34,745,3.039,927,3.257,937,3.981,1069,3.428,1182,3.999,1501,4.33,1904,5.548,2064,5.094,2260,4.536,2309,5.521,2312,4.901,2363,7.201,2364,5.509,2365,5.509,2366,5.094,2367,6.129,2368,7.059,2369,4.784,2370,5.509,2371,4.784]],["title/interfaces/ISchoolProperties.html",[0,0.512,2372,4.222]],["body/interfaces/ISchoolProperties.html",[0,0.73,2,2.068,3,0.13,4,0.108,5,0.079,8,0.318,9,1.002,12,1.022,13,0.252,14,0.005,15,0.247,22,0.139,31,0.229,33,1.539,114,0.757,172,0.004,173,0.004,205,2.411,314,1.922,343,5.485,352,2.943,353,1.814,354,2.154,498,2.813,515,2.558,678,2.86,741,3.12,744,3.943,745,3.588,2300,5.112,2372,7.761,2373,6.505]],["title/interfaces/IStorageProviderProperties.html",[0,0.512,2374,4.222]],["body/interfaces/IStorageProviderProperties.html",[0,0.648,2,1.837,3,0.115,4,0.096,5,0.07,8,0.282,9,0.932,12,1.104,13,0.334,14,0.005,15,0.251,22,0.129,31,0.203,33,1.367,172,0.004,173,0.004,190,0.629,205,2.142,314,1.787,352,3.24,353,1.612,354,1.913,358,3.046,498,2.499,499,3.695,513,2.54,515,2.273,741,2.772,1843,6.318,2020,7.966,2024,7.481,2026,7.637,2374,7.363,2375,5.779,2376,7.966,2377,5.779,2378,5.779,2379,5.779,2380,5.779,2381,5.779,2382,5.779,2383,5.779,2384,5.779,2385,5.779,2386,5.779]],["title/interfaces/ISubmissionProperties.html",[0,0.512,2387,3.965]],["body/interfaces/ISubmissionProperties.html",[0,0.462,2,1.309,3,0.082,4,0.068,5,0.102,8,0.201,9,0.743,12,0.999,13,0.344,14,0.005,15,0.259,22,0.103,31,0.145,33,0.974,37,2.288,78,0.889,128,1.081,145,2.334,149,1.35,172,0.003,173,0.003,190,0.761,205,1.526,306,1.87,314,1.425,352,2.743,353,1.148,354,1.363,358,2.429,388,2.518,459,2.012,469,3.283,491,1.62,497,1.94,498,1.78,501,2.091,505,1.752,513,3.507,515,1.62,702,3.79,703,2.794,719,2.323,722,2.177,741,1.975,831,6.39,919,2.496,958,2.562,1253,4.212,1948,5.061,2387,5.834,2388,4.118,2389,6.678,2390,7.69,2391,7.111,2392,8.198,2393,6.015,2394,8.198,2395,4.56,2396,7.74,2397,4.118,2398,4.118,2399,4.118,2400,2.989,2401,2.794,2402,4.118,2403,4.118,2404,4.118,2405,4.118,2406,4.118,2407,5.803,2408,5.803,2409,4.118,2410,3.576,2411,4.118,2412,4.118,2413,4.118,2414,4.118,2415,4.118,2416,3.236,2417,4.118,2418,6.719,2419,4.118,2420,5.803,2421,4.118,2422,5.281,2423,4.118,2424,4.118,2425,4.118,2426,4.118,2427,4.118]],["title/interfaces/ITaskProperties.html",[0,0.512,2428,3.588]],["body/interfaces/ITaskProperties.html",[0,0.5,2,0.917,3,0.058,4,0.048,5,0.035,8,0.299,9,0.698,10,0.966,12,0.858,13,0.325,14,0.005,15,0.231,22,0.117,31,0.157,33,0.682,35,2.5,37,2.086,54,1.464,76,1.753,78,1.253,82,4.43,114,0.673,123,1.1,128,1.656,145,2.105,149,1.232,172,0.002,173,0.002,187,0.267,190,0.738,205,1.068,216,1.643,306,2.355,314,1.338,352,2.493,353,1.243,354,0.955,358,1.866,368,2.741,369,1.626,370,1.289,375,1.897,379,2.368,388,1.881,393,2.635,469,2.663,486,3.366,491,2.969,497,1.358,498,1.247,501,1.464,505,1.226,511,2.027,513,2.695,515,1.134,525,1.956,526,1.794,578,1.956,595,1.897,673,2.85,677,3.391,702,2.514,703,1.956,719,1.626,722,1.524,725,2.266,735,2.173,737,2.173,741,1.383,744,1.748,745,1.59,836,1.794,837,2.093,840,1.664,842,4.451,843,2.093,894,2.266,919,1.748,991,5.691,1049,2.093,1187,3.146,1280,2.173,1487,2.459,1786,4.958,1948,1.897,2081,2.266,2341,4.798,2395,3.863,2400,5.48,2401,4.498,2416,2.266,2422,3.503,2428,4.283,2429,2.374,2430,5.21,2431,4.913,2432,2.503,2433,2.503,2434,4.998,2435,6.216,2436,5.459,2437,5.933,2438,5.509,2439,2.173,2440,2.503,2441,2.266,2442,4.487,2443,2.503,2444,2.503,2445,2.374,2446,2.503,2447,2.503,2448,2.503,2449,2.503,2450,2.503,2451,2.503,2452,2.503,2453,2.503,2454,2.503,2455,3.87,2456,3.87,2457,3.87,2458,2.503,2459,2.503,2460,2.503,2461,2.503,2462,2.503,2463,3.503,2464,1.956,2465,2.503,2466,2.503,2467,3.87,2468,4.732,2469,2.503,2470,3.87,2471,2.503,2472,2.503,2473,2.503,2474,2.503,2475,4.732,2476,2.503,2477,2.503,2478,2.503,2479,2.503,2480,2.503,2481,2.503,2482,2.503,2483,5.049,2484,2.503,2485,2.503,2486,2.503,2487,2.266,2488,3.87,2489,2.503,2490,2.503,2491,2.503,2492,2.503,2493,2.503,2494,3.67,2495,1.844,2496,2.266,2497,2.503,2498,2.503,2499,2.503,2500,2.503,2501,2.503,2502,2.503,2503,2.503,2504,2.503,2505,3.87,2506,2.503,2507,2.503,2508,2.503,2509,2.503,2510,1.897,2511,1.748,2512,3.67,2513,2.503,2514,5.324,2515,2.503,2516,2.503,2517,2.503]],["title/interfaces/ITaskStatus.html",[0,0.512,2434,3.442]],["body/interfaces/ITaskStatus.html",[0,0.517,2,0.958,3,0.06,4,0.05,5,0.037,8,0.306,9,0.717,10,0.999,12,0.794,13,0.311,14,0.005,15,0.234,22,0.12,31,0.162,33,0.713,35,2.239,37,2.459,54,1.53,76,1.813,78,1.266,82,4.5,114,0.631,123,1.15,128,1.665,145,1.75,149,1.261,172,0.002,173,0.002,187,0.279,205,1.116,216,1.689,306,2.392,314,1.376,352,2.543,353,1.286,354,0.997,358,1.93,368,2.805,369,1.699,370,1.347,375,1.983,379,1.968,388,1.933,393,2.726,469,2.737,486,2.341,491,3.15,497,1.419,498,1.303,501,1.53,505,1.281,511,2.097,513,2.758,515,1.185,525,2.044,526,1.874,578,2.044,595,1.983,673,2.435,677,3.485,702,2.601,703,2.044,719,1.699,722,1.592,725,2.368,735,2.271,737,2.271,741,1.445,744,1.826,745,1.662,836,1.874,837,2.187,840,1.739,842,4.555,843,2.187,894,2.368,919,1.826,991,6.141,1049,2.187,1187,3.233,1280,2.271,1487,2.543,1786,4.258,1948,1.983,2081,2.368,2341,4.1,2395,3.924,2400,4.909,2401,3.8,2416,2.368,2422,3.624,2428,3.624,2429,2.48,2430,3.624,2431,3.926,2432,2.616,2433,2.616,2434,5.378,2435,6.707,2436,6.305,2437,6.403,2438,6.169,2439,2.271,2440,2.616,2441,2.368,2442,4.612,2443,2.616,2444,2.616,2445,2.48,2446,2.616,2447,2.616,2448,2.616,2449,2.616,2450,2.616,2451,2.616,2452,2.616,2453,2.616,2454,2.616,2455,4.004,2456,4.004,2457,4.004,2458,2.616,2459,2.616,2460,2.616,2461,2.616,2462,2.616,2463,3.624,2464,2.044,2465,2.616,2466,2.616,2467,4.004,2468,4.864,2469,2.616,2470,4.004,2471,2.616,2472,2.616,2473,2.616,2474,2.616,2475,4.864,2476,2.616,2477,2.616,2478,2.616,2479,2.616,2480,2.616,2481,2.616,2482,2.616,2483,5.167,2484,2.616,2485,2.616,2486,2.616,2487,2.368,2488,4.004,2489,2.616,2490,2.616,2491,2.616,2492,2.616,2493,2.616,2494,3.796,2495,1.926,2496,2.368,2497,2.616,2498,2.616,2499,2.616,2500,2.616,2501,2.616,2502,2.616,2503,2.616,2504,2.616,2505,4.004,2506,2.616,2507,2.616,2508,2.616,2509,2.616,2510,1.983,2511,1.826,2512,3.796,2513,2.616,2514,5.449,2515,2.616,2516,2.616,2517,2.616]],["title/interfaces/ITeamProperties.html",[0,0.512,2518,4.222]],["body/interfaces/ITeamProperties.html",[0,0.73,2,2.068,3,0.13,4,0.108,5,0.079,8,0.318,9,1.002,12,1.022,13,0.252,14,0.005,15,0.247,22,0.139,31,0.229,33,1.539,114,0.757,172,0.004,173,0.004,205,2.411,314,1.922,343,5.485,352,2.943,353,1.814,354,2.154,498,2.813,515,2.558,741,3.12,744,3.943,745,3.588,946,3.588,2301,5.112,2518,7.761,2519,6.505]],["title/interfaces/IUserProperties.html",[0,0.512,2520,4.222]],["body/interfaces/IUserProperties.html",[0,0.595,2,1.685,3,0.106,4,0.088,5,0.065,8,0.41,9,0.882,12,1.076,13,0.34,14,0.005,15,0.255,22,0.122,31,0.187,33,1.254,114,0.65,121,6.09,145,1.478,149,1.065,172,0.004,173,0.004,190,0.7,205,1.965,314,1.691,352,3.044,353,1.478,354,1.755,358,2.882,388,1.83,497,2.497,498,2.292,505,2.255,513,3.027,515,2.085,678,3.978,698,3.716,699,2.924,702,2.99,719,2.99,723,3.716,741,2.543,748,4.167,749,3.716,1904,5.412,2309,5.212,2311,3.597,2312,4.673,2317,5.881,2318,5.881,2367,4.603,2371,4.603,2520,7.071,2521,5.301,2522,5.301,2523,5.301,2524,5.301,2525,5.301,2526,4.902,2527,5.301,2528,4.902,2529,5.301,2530,5.301,2531,5.301]],["title/interfaces/InlineAttachment.html",[0,0.512,241,3.314]],["body/interfaces/InlineAttachment.html",[0,1.009,2,1.901,3,0.119,4,0.099,5,0.073,8,0.292,9,0.952,12,1.108,13,0.232,14,0.005,22,0.106,33,2.058,114,0.508,172,0.004,173,0.004,235,5.394,236,4.507,237,6.141,238,6.56,239,4.507,240,4.507,241,5.87,242,4.507,243,6.378,244,4.507,245,5.87,246,4.339,247,4.507,248,5.394,249,5.603,250,5.603,251,5.394,252,4.891,253,4.339,254,4.507,255,4.507,256,4.507]],["title/modules/InterceptorModule.html",[257,1.359,652,3.759]],["body/modules/InterceptorModule.html",[3,0.121,4,0.101,5,0.074,14,0.005,15,0.257,19,1.161,22,0.108,31,0.214,54,3.812,172,0.004,173,0.004,216,1.832,224,5.276,257,2.234,259,2.627,271,2.812,367,5.262,368,2.717,430,4.593,534,3.781,652,6.181,666,5.094,667,6.708,672,5.66,871,3.537,1499,4.8,1681,5.449,1749,4.41,1759,4.333,1897,6.519,2532,6.772,2533,6.941,2534,6.181,2535,5.262,2536,9.483,2537,6.181,2538,7.507,2539,7.868,2540,4.581]],["title/injectables/JwtAuthGuard.html",[18,0.895,2541,4.222]],["body/injectables/JwtAuthGuard.html",[3,0.14,4,0.116,5,0.086,14,0.005,15,0.258,18,1.603,19,1.34,22,0.124,31,0.247,33,1.659,172,0.004,173,0.004,274,6.091,298,2.6,2541,7.567,2542,7.818,2543,7.818,2544,7.818,2545,7.818]],["title/interfaces/JwtConstants.html",[0,0.512,279,3.759]],["body/interfaces/JwtConstants.html",[0,0.675,2,1.912,3,0.12,4,0.1,5,0.073,8,0.294,9,0.956,12,1.077,13,0.329,14,0.005,15,0.19,22,0.132,76,2.366,123,2.296,128,1.389,172,0.004,173,0.004,279,6.981,296,3.742,368,2.689,409,4.522,1387,3.742,2308,5.415,2546,6.014,2547,8.717,2548,8.06,2549,7.46,2550,6.703,2551,6.703,2552,6.014,2553,6.898,2554,5.561,2555,5.222,2556,4.727,2557,6.703,2558,6.014,2559,6.014,2560,6.014,2561,6.703,2562,6.014,2563,5.222,2564,5.222,2565,6.703,2566,6.014,2567,6.703,2568,6.014,2569,6.014,2570,6.703,2571,6.703,2572,6.014,2573,6.014]],["title/interfaces/JwtPayload.html",[0,0.512,2574,4.222]],["body/interfaces/JwtPayload.html",[0,0.664,2,1.881,3,0.118,4,0.098,5,0.072,8,0.289,9,0.946,12,1.093,13,0.343,14,0.005,15,0.187,22,0.105,33,1.747,37,2.633,172,0.004,173,0.004,326,1.65,368,3.769,773,4.88,2558,8.43,2559,8.43,2560,8.43,2562,8.43,2563,7.32,2564,7.32,2568,7.385,2569,7.385,2574,6.829,2575,6.595,2576,6.595,2577,7.385]],["title/injectables/JwtStrategy.html",[18,0.895,265,3.965]],["body/injectables/JwtStrategy.html",[3,0.106,4,0.088,5,0.065,8,0.258,13,0.267,14,0.005,15,0.276,18,1.348,19,1.011,22,0.094,31,0.186,33,1.252,35,1.752,69,1.104,71,2.341,74,2.273,76,2.081,77,1.994,78,0.811,112,2.919,114,0.584,128,1.281,129,2.187,145,1.476,172,0.004,173,0.004,182,1.249,187,0.637,189,0.932,190,0.595,199,0.949,205,1.961,265,5.972,266,7.205,274,4.595,277,4.893,279,4.357,280,4.893,282,5.292,298,1.961,327,2.18,368,3.075,369,4.31,415,3.208,511,2.407,997,3.841,1688,3.384,2258,4.893,2308,3.841,2312,3.055,2534,5.663,2564,5.972,2574,7.48,2578,5.898,2579,5.898,2580,7.076,2581,5.898,2582,7.665,2583,5.898,2584,9.015,2585,5.898,2586,4.893,2587,5.292,2588,6.005,2589,5.898,2590,5.898,2591,5.898,2592,5.898,2593,5.898,2594,5.898,2595,5.898,2596,5.898,2597,5.898,2598,5.898,2599,5.292,2600,5.898,2601,4.992,2602,5.898,2603,5.898,2604,4.893,2605,5.898,2606,5.292,2607,5.292,2608,5.898,2609,5.898]],["title/injectables/JwtValidationAdapter.html",[18,0.895,266,3.759]],["body/injectables/JwtValidationAdapter.html",[3,0.101,4,0.084,5,0.062,8,0.247,10,1.723,12,1.069,13,0.259,14,0.005,15,0.211,18,1.309,19,0.968,22,0.09,31,0.178,43,3.393,44,3.461,45,3.093,46,3.266,47,3.461,48,3.951,49,5.803,74,2.527,77,2.306,114,0.568,128,1.245,129,2.125,172,0.003,173,0.003,182,1.213,187,0.619,189,0.906,190,0.578,199,1.198,216,1.527,266,5.502,298,1.877,328,3.607,367,5.575,369,3.77,422,5.234,511,2.303,578,4.534,1050,4.684,1502,4.398,1727,4.158,2258,6.179,2308,5.773,2310,5.502,2311,4.534,2564,7.721,2577,6.683,2588,6.907,2610,7.479,2611,5.065,2612,7.448,2613,7.448,2614,7.448,2615,5.645,2616,7.448,2617,5.645,2618,7.448,2619,6.179,2620,5.803,2621,7.448,2622,7.448,2623,6.683,2624,6.683,2625,5.645,2626,7.448,2627,5.645,2628,5.645,2629,5.645,2630,5.645,2631,5.645,2632,5.645]],["title/modules/LearnroomModule.html",[257,1.359,2633,3.759]],["body/modules/LearnroomModule.html",[3,0.118,4,0.098,5,0.072,14,0.005,15,0.279,19,1.126,22,0.104,31,0.208,172,0.004,173,0.004,257,2.192,259,2.549,260,3.669,267,4.155,268,3.116,269,2.88,271,3.409,272,2.935,767,7.43,768,3.894,783,7.278,784,5.894,976,6.195,1038,3.667,1071,7.43,1089,7.278,1090,5.894,1336,6.947,1416,6.066,1759,3.402,1897,5.118,2633,7.66,2634,5.894,2635,5.894,2636,6.569,2637,6.569,2638,6.569,2639,6.569]],["title/classes/Lesson.html",[31,0.161,2341,2.768]],["body/classes/Lesson.html",[0,0.567,3,0.101,4,0.084,5,0.062,8,0.365,9,0.855,10,1.446,12,0.933,13,0.329,14,0.005,15,0.236,22,0.118,31,0.178,33,1.579,69,1.055,114,0.721,149,1.341,172,0.003,173,0.003,175,1.068,187,0.814,189,0.685,190,0.437,192,3.224,205,1.874,314,1.64,345,3.202,346,2.26,347,2.477,348,2.619,350,2.619,352,3.107,353,1.41,354,1.674,358,3.623,378,2.984,379,2.094,381,2.934,383,2.253,384,2.376,387,2.789,388,2.304,459,2.471,491,1.989,493,2.852,494,2.852,495,2.852,496,2.852,497,2.382,498,2.186,511,3.036,513,2.934,515,2.625,673,3.163,710,4.39,741,2.426,744,3.065,745,2.789,836,4.153,837,4.845,840,2.919,842,3.67,843,3.67,2337,6.901,2338,5.056,2339,5.992,2340,4.163,2341,4.046,2342,4.675,2343,6.675,2344,5.056,2640,7.439,2641,5.635,2642,5.635,2643,5.635]],["title/classes/LessonFactory.html",[31,0.161,2644,4.222]],["body/classes/LessonFactory.html",[3,0.078,4,0.065,5,0.047,8,0.19,9,0.713,10,1.41,12,0.654,13,0.343,14,0.005,15,0.205,22,0.069,31,0.137,33,1.317,37,2.114,45,2.576,54,1.973,69,0.811,71,1.895,78,0.595,114,0.713,128,0.724,168,1.798,172,0.003,173,0.003,175,0.821,182,1.011,187,0.799,189,1.181,190,0.713,192,3.497,199,1.478,211,2.097,216,1.962,314,1.847,318,3.214,321,2.827,326,1.083,365,3.67,383,2.36,384,2.563,390,6.958,392,6.906,394,3.199,396,5.486,397,5.851,398,4.584,399,5.594,400,4.584,401,4.584,402,4.376,403,2.368,404,4.846,405,5.357,406,6.48,407,5.67,409,3.375,411,4.584,412,3.199,413,4.584,415,3.944,416,4.561,417,4.421,418,4.415,419,3.375,420,4.584,421,3.199,422,2.557,423,3.053,424,4.81,425,3.199,426,3.199,427,3.199,428,6.789,430,3.512,431,3.199,433,3.199,435,2.82,436,1.798,437,3.199,438,5.901,440,3.199,441,4.584,442,4.584,444,3.199,445,3.199,446,3.199,448,4.376,450,3.199,452,3.199,453,3.664,673,2.902,801,3.373,804,3.373,807,3.373,808,3.373,809,3.373,810,3.373,811,3.373,812,3.373,813,3.373,814,3.373,815,3.373,816,3.373,819,3.373,2337,3.373,2341,3.375,2644,6.016,2645,3.885,2646,4.33,2647,3.885,2648,5.567,2649,3.885]],["title/injectables/LessonRepo.html",[18,0.895,2650,3.759]],["body/injectables/LessonRepo.html",[3,0.115,4,0.095,5,0.07,8,0.281,13,0.324,14,0.005,15,0.263,18,1.42,19,1.098,22,0.102,31,0.202,69,1.199,71,1.955,74,2.363,77,2.101,78,0.88,114,0.616,128,1.35,129,2.305,149,1.154,172,0.004,173,0.004,182,1.316,187,0.672,189,0.983,190,0.627,199,1.03,298,2.129,306,2.688,326,1.602,327,2.367,353,1.602,355,2.861,388,1.983,409,4.394,436,2.659,491,2.26,538,3.781,539,4.815,541,3.913,673,2.069,851,4.331,852,3.781,853,5.081,980,5.987,986,3.755,1012,4.989,2339,4.331,2340,5.969,2341,4.394,2342,6.703,2650,5.969,2651,6.403,2652,6.403,2653,8.079,2654,6.403,2655,6.703,2656,6.403,2657,6.403,2658,6.403,2659,6.403,2660,6.403]],["title/classes/LessonScope.html",[31,0.161,2655,4.222]],["body/classes/LessonScope.html",[3,0.11,4,0.091,5,0.067,8,0.269,9,0.904,13,0.329,14,0.005,15,0.223,22,0.098,31,0.194,33,1.67,35,2.719,78,1.082,114,0.662,168,2.55,172,0.004,173,0.004,175,1.164,182,1.281,187,0.787,189,1.056,190,0.674,192,3.159,199,1.396,306,2.647,326,1.536,383,1.661,384,1.752,491,3.063,673,1.984,777,2.853,851,5.321,986,4.575,992,5.812,1016,5.812,1017,5.812,1020,5.812,1021,4.33,1022,4.784,1023,5.653,1024,4.784,1028,4.536,1029,5.548,1030,4.784,2339,4.153,2341,3.34,2655,8.032,2661,8.68,2662,5.094,2663,7.059,2664,7.866,2665,7.059,2666,5.509,2667,7.866,2668,6.14,2669,7.866,2670,5.509]],["title/injectables/Logger.html",[18,0.895,671,2.841]],["body/injectables/Logger.html",[3,0.12,4,0.1,5,0.074,14,0.005,15,0.236,18,1.463,19,1.151,22,0.107,31,0.212,33,1.767,172,0.004,173,0.004,182,1.094,298,2.234,324,4.374,328,4.032,370,2.694,383,1.817,407,4.543,415,3.653,601,3.399,645,3.399,671,5.427,675,4.528,871,3.519,986,3.869,1727,3.75,1756,3.479,1832,5.05,1873,5.572,1908,4.374,1961,4.737,1990,4.543,2080,4.374,2102,5.233,2167,6.669,2347,6.379,2671,6.716,2672,9.456,2673,6.716,2674,6.716,2675,4.962,2676,5.572,2677,5.572,2678,4.543,2679,7.469,2680,4.962,2681,6.716,2682,6.716,2683,4.962,2684,6.027,2685,4.543,2686,6.716,2687,6.716,2688,6.716]],["title/modules/LoggerModule.html",[257,1.359,653,3.2]],["body/modules/LoggerModule.html",[3,0.131,4,0.109,5,0.08,14,0.005,15,0.248,19,1.254,22,0.116,31,0.231,172,0.004,173,0.004,257,2.341,259,2.838,260,3.918,267,4.438,268,3.469,269,3.207,271,3.641,293,4.247,653,6.427,671,5.867,2689,6.563,2690,6.563,2691,6.563,2692,7.314,2693,7.314]],["title/interfaces/Mail.html",[0,0.512,252,3.005]],["body/interfaces/Mail.html",[0,0.992,2,1.761,3,0.111,4,0.092,5,0.068,8,0.271,9,0.907,12,1.117,13,0.337,14,0.005,22,0.098,33,1.947,114,0.471,172,0.004,173,0.004,190,0.775,235,5.142,236,4.177,237,5.668,238,5.34,239,4.177,240,4.177,241,5.142,242,4.177,243,4.177,244,4.177,245,5.668,246,4.021,247,4.177,248,5.974,249,5.34,250,5.34,251,5.974,252,5.725,253,5.974,254,6.205,255,6.205,256,6.205]],["title/interfaces/MailAttachment.html",[0,0.512,237,3.314]],["body/interfaces/MailAttachment.html",[0,1.005,2,1.867,3,0.117,4,0.097,5,0.072,8,0.287,9,0.941,12,1.115,13,0.311,14,0.005,22,0.104,33,1.988,114,0.714,172,0.004,173,0.004,235,5.334,236,4.426,237,6.102,238,5.54,239,6.337,240,6.337,241,5.334,242,4.426,243,4.426,244,4.426,245,5.822,246,4.261,247,4.426,248,5.334,249,5.54,250,5.54,251,5.334,252,4.836,253,4.261,254,4.426,255,4.426,256,4.426]],["title/interfaces/MailContent.html",[0,0.512,245,3.314]],["body/interfaces/MailContent.html",[0,1.006,2,1.87,3,0.117,4,0.098,5,0.072,8,0.287,9,0.943,12,1.106,13,0.285,14,0.005,22,0.104,33,1.99,114,0.5,172,0.004,173,0.004,190,0.636,235,6.106,236,4.435,237,5.827,238,5.547,239,4.435,240,4.435,241,6.106,242,4.435,243,4.435,244,4.435,245,6.106,246,6.106,247,6.342,248,5.34,249,5.547,250,5.547,251,5.34,252,4.842,253,4.27,254,4.435,255,4.435,256,4.435]],["title/modules/MailModule.html",[257,1.359,2694,3.588]],["body/modules/MailModule.html",[0,0.645,3,0.115,4,0.095,5,0.07,12,0.932,13,0.308,14,0.005,15,0.251,19,1.098,22,0.102,24,5.262,31,0.202,72,3.542,78,1.111,114,0.616,128,1.35,172,0.004,173,0.004,182,1.043,187,0.532,189,0.779,190,0.497,199,1.03,257,2.363,259,2.484,271,2.659,272,2.861,293,3.101,403,3.084,1759,3.316,1760,4.17,1882,4.989,1883,5.697,1886,5.987,2694,6.242,2695,4.989,2696,7.712,2697,6.403,2698,7.344,2699,4.73,2700,4.515,2701,6.539,2702,5.745,2703,5.969,2704,5.969,2705,6.295,2706,5.312,2707,5.312,2708,5.312,2709,5.312,2710,6.703,2711,4.989,2712,5.312,2713,5.745,2714,5.745,2715,5.745]],["title/interfaces/MailModuleOptions.html",[0,0.512,2696,4.222]],["body/interfaces/MailModuleOptions.html",[0,0.636,2,1.802,3,0.113,4,0.094,5,0.069,8,0.277,9,0.921,12,1.066,13,0.332,14,0.005,15,0.249,19,1.083,22,0.1,24,6.217,31,0.2,72,2.77,78,1.101,114,0.482,128,1.339,172,0.004,173,0.004,257,2.348,271,2.623,272,2.823,293,3.06,403,2.411,1759,3.272,1760,4.114,1883,4.455,1886,5.418,2694,5.649,2695,4.922,2696,7.298,2698,7.298,2699,4.667,2700,4.455,2701,6.499,2702,5.668,2703,7.052,2704,7.052,2705,6.241,2706,5.241,2707,5.241,2708,5.241,2709,5.241,2710,6.646,2711,4.922,2712,5.241,2713,5.668,2714,5.668,2715,5.668]],["title/injectables/MailService.html",[18,0.895,2701,3.759]],["body/injectables/MailService.html",[0,0.663,3,0.118,4,0.098,5,0.072,8,0.288,12,0.866,13,0.286,14,0.005,15,0.254,17,3.675,18,1.445,19,1.128,22,0.105,31,0.208,35,2.442,69,1.539,71,2.51,72,3.931,73,5.457,74,2.393,77,2.138,114,0.627,123,2.254,129,1.878,172,0.004,173,0.004,182,1.339,187,0.683,189,1,190,0.638,199,1.059,252,5.544,298,2.189,871,3.475,2699,4.863,2700,4.642,2701,6.073,2703,4.863,2704,4.863,2716,5.906,2717,7.376,2718,6.582,2719,8.843,2720,7.789,2721,6.582,2722,7.376,2723,6.582,2724,5.906,2725,5.906,2726,5.906,2727,5.906,2728,5.461]],["title/interfaces/MailServiceOptions.html",[0,0.512,2720,4.222]],["body/interfaces/MailServiceOptions.html",[0,0.693,2,1.964,3,0.123,4,0.103,5,0.075,8,0.302,9,0.972,12,1.05,13,0.294,14,0.005,15,0.259,17,3.844,18,1.486,19,1.18,22,0.109,31,0.218,35,2.511,69,1.289,71,2.581,72,3.019,73,4.192,74,1.838,77,1.791,123,2.358,129,1.964,172,0.004,173,0.004,252,4.991,871,2.91,2699,5.087,2700,4.856,2701,5.087,2703,7.047,2704,7.047,2716,6.178,2719,8.207,2720,7.589,2722,6.178,2724,6.178,2725,6.178,2726,6.178,2727,6.178,2728,5.712]],["title/modules/ManagementModule.html",[257,1.359,2729,3.759]],["body/modules/ManagementModule.html",[3,0.098,4,0.082,5,0.06,12,0.578,13,0.191,14,0.005,15,0.286,19,0.94,22,0.087,31,0.173,43,2.499,44,2.549,45,2.278,46,2.405,47,2.549,78,0.754,118,3.71,138,3.71,139,3.449,140,3.71,145,1.372,149,0.989,172,0.003,173,0.003,257,2.194,259,2.128,260,3.265,267,3.698,268,2.601,269,2.405,271,3.412,272,3.265,321,2.499,326,1.372,353,1.828,354,1.629,368,2.2,570,6.62,584,3.449,628,6.113,632,3.062,768,3.466,1165,3.868,1475,3.572,1476,5.693,1482,6.113,1496,4.273,1497,4.273,1516,6.818,1542,6.935,1546,6.35,1649,4.55,1650,3.572,1651,4.55,1652,4.55,1756,2.841,1959,3.062,2108,6.935,2156,6.062,2157,6.062,2158,6.062,2729,7.612,2730,4.921,2731,5.485,2732,4.921,2733,5.485,2734,4.273,2735,4.273,2736,6.557,2737,6.557,2738,5.693,2739,4.921,2740,5.485,2741,5.485,2742,5.485,2743,5.485,2744,5.485,2745,4.55,2746,5.485,2747,4.273,2748,4.052,2749,4.921,2750,6.557,2751,4.921,2752,4.55,2753,5.485]],["title/modules/MongoMemoryDatabaseModule.html",[257,1.359,2754,3.965]],["body/modules/MongoMemoryDatabaseModule.html",[3,0.09,4,0.075,5,0.055,13,0.24,14,0.005,15,0.265,17,3.849,19,0.862,22,0.134,31,0.159,35,2.336,69,0.942,71,1.537,72,3.709,74,2.366,77,2.045,78,1.163,114,0.384,128,1.529,129,2.528,172,0.003,173,0.003,182,0.82,187,0.573,189,0.612,190,0.391,199,1.109,257,2.258,259,1.952,271,2.089,272,2.248,293,2.437,321,2.292,326,1.259,353,1.725,354,1.495,356,3.92,368,2.018,403,2.631,422,4.071,436,2.089,456,3.277,469,2.206,584,5.573,666,3.063,675,2.737,722,2.387,1559,3.277,1749,3.277,1756,3.571,1759,3.571,1882,3.92,1883,4.862,1886,5.722,1970,2.809,2213,3.404,2464,3.063,2620,3.92,2685,3.404,2734,6.591,2735,3.92,2738,5.371,2748,5.093,2754,6.127,2755,6.524,2756,7.301,2757,7.056,2758,4.515,2759,7.59,2760,5.032,2761,8.861,2762,5.032,2763,6.186,2764,6.186,2765,7.056,2766,8.212,2767,5.032,2768,6.186,2769,4.515,2770,6.186,2771,4.515,2772,4.515,2773,4.515,2774,4.175,2775,3.548,2776,3.717,2777,3.92,2778,4.175,2779,3.717,2780,4.515,2781,4.175,2782,4.175,2783,4.515,2784,4.515,2785,4.515,2786,4.515,2787,4.515,2788,4.515,2789,5.032,2790,5.032,2791,4.515,2792,6.894,2793,6.186,2794,3.717,2795,3.92,2796,4.515,2797,5.032,2798,5.032]],["title/classes/MoveElementParams.html",[31,0.161,1078,3.965]],["body/classes/MoveElementParams.html",[3,0.12,4,0.099,5,0.073,8,0.293,9,1.037,13,0.289,14,0.005,15,0.235,22,0.132,31,0.298,37,2.409,112,3.304,143,3.542,172,0.004,173,0.004,175,1.266,187,0.689,190,0.518,216,1.806,347,2.129,415,3.631,598,3.942,779,2.678,786,2.822,879,4.509,908,2.772,1045,3.83,1065,4.897,1067,6.127,1069,3.727,1078,6.461,1083,3.942,1142,4.199,1179,4.199,1208,4.932,1387,3.727,2302,4.708,2799,5.99,2800,8.05,2801,8.293,2802,6.676,2803,6.676,2804,8.095,2805,8.467,2806,5.539,2807,5.539,2808,5.539,2809,4.708,2810,5.201,2811,7.485,2812,5.539]],["title/classes/MoveElementPosition.html",[31,0.161,2800,4.222]],["body/classes/MoveElementPosition.html",[3,0.112,4,0.093,5,0.068,8,0.273,9,1.058,13,0.304,14,0.005,15,0.225,22,0.126,31,0.3,37,2.595,112,3.931,143,4.638,172,0.004,173,0.004,175,1.182,187,0.727,190,0.714,216,2.149,347,2.244,415,4.32,598,4.69,779,2.5,786,3.357,879,4.418,908,3.298,1045,4.557,1065,4.69,1067,5.868,1069,3.48,1078,4.856,1083,5.162,1142,4.995,1179,4.995,1208,6.458,1387,4.434,2302,5.601,2799,5.593,2800,7.637,2804,7.844,2805,8.259,2806,5.171,2807,6.589,2808,6.589,2809,5.601,2810,6.188,2811,7.253,2812,6.589,2813,6.233,2814,6.233,2815,7.942,2816,6.233,2817,6.233]],["title/classes/News.html",[31,0.161,908,2.113]],["body/classes/News.html",[0,0.338,3,0.06,4,0.112,5,0.037,8,0.147,9,0.591,10,1.36,12,1.002,13,0.342,14,0.005,15,0.242,22,0.12,31,0.221,33,1.6,43,2.846,44,2.903,45,2.594,46,2.739,47,2.903,48,3.314,69,0.629,78,0.462,114,0.606,123,1.151,145,2.071,149,1.36,172,0.002,173,0.002,175,0.637,181,2.94,182,0.838,187,0.808,189,0.625,190,0.693,192,2.546,199,0.541,205,1.118,306,2.023,307,4.096,308,4.025,310,2.689,314,1.662,329,2.37,345,2.213,346,1.348,347,2.42,348,1.562,350,1.562,352,3.18,353,0.841,354,0.998,358,3.108,365,3.161,370,2.506,378,2.063,379,2.123,381,2.028,383,1.69,384,1.782,387,1.663,388,1.041,403,2.384,459,3.068,486,3.436,493,1.701,494,1.701,495,1.701,496,1.701,497,1.421,498,1.304,501,1.531,505,2.671,507,2.046,508,2.663,509,3.928,513,3.137,515,1.815,526,1.876,620,1.876,673,1.661,678,3.522,698,3.928,699,2.545,722,1.594,723,2.114,749,2.114,836,1.876,840,1.741,906,2.114,907,2.483,908,4.104,909,4.235,910,3.936,911,3.712,912,5.169,913,4.557,914,4.911,915,4.007,918,3.479,919,3.806,920,3.234,923,3.799,924,4.401,925,3.799,926,3.799,927,2.728,928,3.479,929,3.626,933,3.688,934,3.928,937,3.161,939,3.626,941,3.799,943,3.799,944,5.837,946,2.545,947,2.483,948,4.401,949,2.483,950,2.797,951,3.479,952,3.234,953,2.189,954,2.273,955,2.483,956,2.273,957,2.483,958,1.876,959,2.483,960,2.483,961,2.483,962,2.483,963,2.273,964,2.483,965,2.273,966,2.483,967,3.799,968,3.803,969,2.483,970,3.799,971,2.483,972,2.483,973,2.189,974,2.189,975,2.483,2818,5.142,2819,3.361,2820,3.361,2821,3.361,2822,3.361,2823,3.361,2824,3.361,2825,3.361,2826,3.361,2827,3.361,2828,3.361,2829,3.361,2830,3.361]],["title/controllers/NewsController.html",[766,2.231,2831,4.222]],["body/controllers/NewsController.html",[3,0.07,4,0.058,5,0.043,8,0.172,9,0.664,10,1.123,12,0.961,13,0.28,14,0.005,15,0.253,19,0.672,22,0.062,31,0.124,38,3.063,40,2.991,71,1.198,74,2.61,77,2.414,78,1.108,114,0.614,127,4.464,128,1.551,129,2.299,145,2.238,146,2.766,149,0.707,172,0.003,173,0.003,182,0.941,187,0.67,189,0.98,190,0.625,199,1.296,314,1.273,326,0.981,327,1.45,328,2.797,347,2.069,404,4.366,678,2.982,766,1.72,768,1.86,770,2.467,773,5.354,774,4.924,776,6.26,777,3.185,778,2.766,779,1.573,780,2.653,781,2.766,782,2.25,786,3.684,790,2.766,853,3.632,908,4.133,927,3.063,946,2.858,951,3.906,986,3.745,1004,4.221,1041,5.585,1087,3.519,1088,5.683,1099,6.15,1103,6.278,1534,5.063,1617,3.906,1680,3.632,1700,4.338,1707,5.944,1957,2.653,2067,4.924,2496,2.766,2599,5.181,2831,4.791,2832,3.922,2833,5.063,2834,6.853,2835,5.953,2836,3.922,2837,3.922,2838,3.922,2839,5.774,2840,3.922,2841,7.563,2842,3.254,2843,5.585,2844,3.922,2845,4.791,2846,3.922,2847,5.774,2848,3.922,2849,5.181,2850,5.774,2851,3.922,2852,5.89,2853,5.774,2854,3.922,2855,4.636,2856,3.519,2857,2.766,2858,2.897,2859,3.056,2860,3.519,2861,3.519,2862,3.922,2863,3.519,2864,3.519,2865,3.519,2866,3.519,2867,6.272,2868,3.254,2869,3.519,2870,3.519,2871,3.519,2872,3.519,2873,3.519,2874,3.254,2875,3.922,2876,3.922,2877,3.922,2878,3.922,2879,5.774,2880,3.922]],["title/classes/NewsFilterQuery.html",[31,0.161,2843,3.759]],["body/classes/NewsFilterQuery.html",[3,0.107,4,0.089,5,0.066,8,0.263,9,0.89,10,1.506,12,0.955,13,0.299,14,0.005,15,0.257,22,0.095,31,0.245,40,4.012,128,1.002,172,0.004,173,0.004,175,1.137,187,0.713,190,0.747,216,2.541,307,4.649,308,4.343,309,5.225,326,1.5,347,2.203,491,2.734,779,2.405,887,3.261,888,4.444,889,4.444,908,3.995,909,4.303,937,3.034,980,5.24,1054,5.463,1057,5.705,1060,6.34,1061,6.035,1062,4.872,1065,5.357,1067,6.702,1068,6.035,1069,3.347,1070,4.227,2306,5.805,2843,5.723,2881,8.14,2882,5.379,2883,5.994,2884,5.723,2885,6.95,2886,5.994,2887,5.994,2888,5.994,2889,5.994,2890,7.746,2891,5.994,2892,7.746,2893,5.994,2894,7.746,2895,6.95,2896,5.994,2897,5.994]],["title/classes/NewsListResponse.html",[31,0.161,2857,3.588]],["body/classes/NewsListResponse.html",[3,0.075,4,0.128,5,0.046,8,0.182,9,0.693,10,1.673,12,0.958,13,0.322,14,0.005,15,0.244,22,0.096,31,0.19,33,1.279,37,2.635,40,2.155,69,1.129,114,0.541,128,1.185,145,1.945,172,0.003,173,0.003,175,0.789,181,2.874,187,0.686,189,0.506,190,0.64,192,2.829,216,2.687,307,3.509,308,3.051,309,4.316,310,3.346,314,2.1,318,2.155,326,1.041,347,1.996,378,2.844,379,1.996,381,2.797,388,1.288,419,2.263,436,2.503,486,3.23,525,2.533,620,2.322,673,1.344,678,3.394,748,2.934,779,1.669,782,2.387,792,4.735,797,4.804,798,4.457,870,5.781,871,3.488,872,4.251,874,5.483,876,3.451,877,3.451,878,3.451,879,4.555,882,2.207,887,3.279,888,3.459,889,3.459,895,2.934,896,2.934,908,3.958,909,4.21,910,3.848,911,3.761,913,4.617,914,4.617,933,2.456,934,2.616,937,3.051,946,2.059,950,3.279,954,2.814,956,2.814,963,2.814,965,2.814,1049,2.709,1050,2.616,1051,3.241,1052,3.073,1057,3.791,1060,4.454,1061,3.241,1062,2.616,1065,4.591,1070,2.934,1253,2.709,1623,3.073,2080,2.709,2252,3.451,2369,3.241,2835,3.073,2857,4.251,2858,6.716,2898,3.241,2899,4.16,2900,4.16,2901,4.454,2902,5.882,2903,4.454,2904,5.238,2905,5.001,2906,5.001,2907,3.733,2908,3.733,2909,3.733,2910,3.733,2911,3.733,2912,3.241,2913,3.241,2914,3.451,2915,3.241,2916,5.001]],["title/classes/NewsMapper.html",[31,0.161,2859,3.965]],["body/classes/NewsMapper.html",[3,0.09,4,0.103,5,0.055,8,0.221,10,0.98,13,0.295,14,0.005,15,0.251,22,0.08,31,0.159,78,1.164,114,0.645,128,1.567,145,1.261,149,0.909,172,0.003,173,0.003,175,0.955,181,2.909,182,1.124,187,0.704,189,1.029,190,0.657,199,1.361,307,3.895,308,3.983,309,4.791,310,2.169,326,1.261,378,2.022,381,1.988,403,3.805,404,3.574,486,3.144,678,3.104,777,3.207,786,4.035,860,3.282,908,3.682,909,4.015,910,3.895,911,4.175,913,3.282,1041,6.254,1107,6.192,1311,4.495,2294,5.814,2303,5.814,2305,6.254,2306,3.409,2843,6.254,2852,6.595,2858,6.254,2859,5.377,2917,5.039,2918,6.901,2919,6.901,2920,6.901,2921,6.901,2922,5.039,2923,6.901,2924,5.039,2925,6.901,2926,5.039,2927,6.901,2928,5.039,2929,4.181,2930,7.87,2931,4.181,2932,4.181,2933,5.039,2934,5.039,2935,5.039,2936,4.522,2937,5.039,2938,5.039,2939,4.522,2940,5.039,2941,5.039,2942,4.522,2943,4.522,2944,5.039,2945,5.039,2946,4.522,2947,5.039,2948,5.039,2949,5.039,2950,6.901,2951,5.039,2952,5.039,2953,5.039,2954,5.039,2955,6.901,2956,6.901,2957,5.039,2958,5.039]],["title/modules/NewsModule.html",[257,1.359,2959,3.759]],["body/modules/NewsModule.html",[3,0.111,4,0.093,5,0.068,14,0.005,15,0.279,19,1.066,22,0.099,31,0.197,172,0.004,173,0.004,257,2.118,259,2.414,260,3.545,267,4.015,268,2.951,269,2.728,271,3.294,272,3.545,284,6.851,293,3.842,363,3.569,653,6.11,768,3.763,1038,3.473,1559,4.052,1777,4.208,2251,4.596,2831,7.631,2835,4.596,2855,6.963,2856,5.582,2959,7.639,2960,5.582,2961,5.582,2962,6.221,2963,5.582,2964,6.851,2965,6.221,2966,7.246,2967,6.221,2968,6.221,2969,6.221,2970,6.221,2971,6.221,2972,4.387,2973,4.208,2974,7.933,2975,6.221,2976,6.221,2977,6.221,2978,4.596]],["title/injectables/NewsRepo.html",[18,0.895,2964,3.588]],["body/injectables/NewsRepo.html",[3,0.065,4,0.054,5,0.04,8,0.159,9,0.628,10,1.062,13,0.326,14,0.005,15,0.241,18,0.96,19,0.624,22,0.058,31,0.115,33,1.159,35,1.948,72,3.924,74,2.643,77,2.407,78,0.902,114,0.706,128,1.495,129,2.496,149,0.656,168,2.268,172,0.003,173,0.003,182,0.89,187,0.788,189,1.126,190,0.718,192,3.257,199,1.508,298,1.21,306,2.107,314,1.606,318,3.396,321,3.32,326,0.911,328,3.176,353,1.367,354,1.081,383,0.985,384,1.038,424,5.649,436,2.268,486,2.489,491,2.314,507,4.437,527,6.342,529,5.109,530,3.436,531,4.256,532,4.256,533,3.852,534,3.05,535,4.256,536,4.256,537,4.256,543,2.567,545,2.836,547,2.836,549,2.567,551,2.836,553,2.836,555,2.836,557,2.836,577,4.036,615,5.139,678,3.235,722,1.726,777,2.539,852,2.149,853,3.436,906,4.124,908,3.937,909,4.244,914,3.558,951,4.93,973,4.271,974,4.271,981,5.54,985,4.256,986,2.539,1004,3.05,1005,3.05,1010,2.567,1023,4.746,1045,3.134,1242,4.746,1503,2.149,1940,4.845,1970,3.05,2124,5.884,2132,3.02,2133,3.02,2134,3.02,2135,3.02,2136,3.02,2137,3.02,2138,3.02,2139,3.02,2140,3.02,2149,4.845,2151,4.902,2306,4.93,2833,4.845,2884,2.689,2964,3.852,2979,3.64,2980,5.463,2981,4.902,2982,3.64,2983,5.384,2984,3.64,2985,5.463,2986,3.64,2987,7.288,2988,7.288,2989,4.902,2990,3.64,2991,3.64,2992,3.64,2993,3.64,2994,4.532,2995,3.64,2996,3.64,2997,5.463,2998,3.64,2999,5.463,3000,3.64,3001,3.64,3002,5.463,3003,3.64,3004,3.64,3005,3.266,3006,3.64,3007,2.689,3008,2.37,3009,6.557,3010,3.64,3011,3.64,3012,3.64]],["title/classes/NewsResponse.html",[31,0.161,2858,3.759]],["body/classes/NewsResponse.html",[3,0.062,4,0.134,5,0.038,8,0.151,9,0.604,10,1.778,12,1.015,13,0.345,14,0.005,15,0.228,22,0.084,31,0.166,33,0.734,37,1.697,40,2.721,69,0.984,114,0.582,128,1.062,145,2.091,172,0.002,173,0.002,175,0.655,181,3.089,187,0.801,189,0.42,190,0.649,216,2.671,307,3.779,308,3.216,309,4.649,310,3.597,314,2.196,318,2.721,326,0.865,347,2.455,378,3.063,379,2.263,381,3.012,419,2.857,486,3.479,525,2.104,603,2.338,620,1.93,673,1.697,678,3.548,748,2.437,779,1.386,782,1.983,792,1.983,797,2.933,798,2.721,870,3.421,871,2.221,872,2.437,879,4.404,882,1.834,887,3.456,888,4.073,889,4.073,895,2.437,896,2.437,899,6.085,908,4.137,909,4.397,910,4.136,911,4.051,913,4.973,914,4.973,933,2.041,934,2.174,937,3.216,946,2.6,950,3.861,954,2.338,956,2.338,963,2.338,965,2.338,1049,3.421,1050,3.304,1051,4.093,1052,3.881,1057,4.465,1060,4.695,1061,4.093,1062,3.304,1065,4.192,1070,2.437,1253,2.251,1623,3.881,2080,3.421,2252,4.358,2369,2.693,2835,3.881,2857,2.437,2858,6.362,2898,2.693,2901,4.695,2902,5.272,2903,4.695,2904,5.641,2905,5.272,2906,5.272,2907,3.101,2908,3.101,2909,3.101,2910,3.101,2911,3.101,2912,2.693,2913,2.693,2914,4.358,2915,4.093,2916,5.89,3013,3.456,3014,3.456,3015,3.456,3016,3.456,3017,3.456,3018,3.456,3019,3.456,3020,3.456,3021,3.456,3022,3.456,3023,4.714,3024,3.456,3025,3.456,3026,2.693,3027,3.456,3028,3.456,3029,3.456,3030,3.456,3031,3.456,3032,3.456]],["title/classes/NewsScope.html",[31,0.161,2994,4.222]],["body/classes/NewsScope.html",[3,0.098,4,0.081,5,0.06,8,0.239,9,0.837,13,0.317,14,0.005,15,0.258,22,0.087,31,0.172,33,1.546,35,2.598,78,1.127,114,0.625,128,1.217,149,0.984,168,2.266,172,0.003,173,0.003,175,1.035,182,1.186,187,0.758,189,0.997,190,0.636,192,2.983,199,1.318,307,2.701,312,3.432,326,1.366,353,1.366,354,1.621,379,1.536,383,1.476,384,1.557,469,2.393,491,2.893,777,4.064,799,2.895,908,3.024,909,2.588,911,2.895,986,4.447,992,5.381,995,5.155,1016,5.381,1017,5.381,1020,5.381,1021,3.849,1022,4.252,1023,5.934,1024,4.252,1028,4.032,1029,5.136,1030,4.252,1187,2.827,1503,3.223,1872,3.692,1940,4.032,1945,4.897,2145,4.897,2306,4.927,2662,4.528,2983,6.461,2994,7.777,3033,7.355,3034,7.283,3035,7.283,3036,7.283,3037,5.457,3038,7.283,3039,4.897,3040,4.528,3041,5.381,3042,5.457,3043,5.457,3044,5.457,3045,7.283,3046,5.457,3047,5.457,3048,5.457,3049,5.457,3050,5.457]],["title/interfaces/NewsTargetFilter.html",[0,0.512,2983,3.759]],["body/interfaces/NewsTargetFilter.html",[0,0.758,2,2.149,3,0.135,4,0.112,5,0.082,8,0.33,9,1.026,13,0.311,14,0.005,15,0.213,22,0.12,172,0.004,173,0.004,306,2.842,307,4.866,308,4.975,326,1.885,909,3.572,1944,8.156,2983,6.592,3033,6.758,3051,7.532]],["title/injectables/NewsUc.html",[18,0.895,2855,3.442]],["body/injectables/NewsUc.html",[3,0.047,4,0.039,5,0.029,8,0.115,9,0.486,10,1.615,12,0.56,13,0.301,14,0.005,15,0.203,18,0.744,19,0.449,22,0.042,31,0.083,35,2.713,40,1.358,43,1.194,44,1.218,45,1.089,46,1.149,54,2.423,69,0.491,72,3.138,74,2.581,76,3.442,77,2.32,78,1.142,114,0.633,128,1.555,129,2.712,145,1.791,149,0.959,172,0.002,173,0.002,182,0.689,187,0.706,189,1.01,190,0.645,199,1.435,216,0.709,290,4.904,298,0.872,306,2.914,307,4.111,308,3.088,309,4.584,310,3.786,326,0.656,327,0.969,328,4.321,379,1.717,383,1.811,384,1.517,388,1.647,403,2.029,404,4.19,436,1.756,459,1.855,469,1.149,486,1.194,491,1.876,534,1.464,590,1.773,671,3.406,678,1.034,699,3.313,852,1.548,908,4.156,909,3.175,911,4.157,927,4.157,928,2.861,981,3.974,986,3.641,1004,1.464,1037,1.707,1038,1.464,1040,2.043,1054,4.303,1062,1.649,1070,1.849,1167,1.937,1375,2.861,1504,1.548,1688,1.504,1700,2.427,1707,2.983,1777,1.773,1779,2.352,1806,2.352,1807,2.352,1913,3.795,1922,3.795,1940,5.563,1944,3.509,1948,3.14,1970,2.361,2030,2.043,2080,1.707,2167,3.75,2294,4.508,2303,4.508,2305,5.563,2306,4.528,2311,2.575,2680,3.125,2835,3.928,2855,2.861,2868,3.509,2936,2.352,2939,2.352,2942,5.475,2943,5.475,2946,3.795,2964,5.047,2983,3.125,3052,2.352,3053,4.23,3054,4.23,3055,4.23,3056,4.23,3057,5.317,3058,2.621,3059,4.23,3060,4.23,3061,2.621,3062,4.23,3063,2.621,3064,4.23,3065,2.621,3066,4.23,3067,5.317,3068,4.771,3069,3.75,3070,4.23,3071,2.621,3072,4.23,3073,2.621,3074,2.621,3075,4.23,3076,2.621,3077,3.296,3078,2.621,3079,5.317,3080,2.621,3081,4.23,3082,2.621,3083,2.621,3084,3.509,3085,5.062,3086,2.621,3087,2.352,3088,2.621,3089,6.101,3090,2.621,3091,4.23,3092,2.621,3093,4.23,3094,2.621,3095,5.475,3096,2.621,3097,2.621,3098,2.621,3099,4.23,3100,4.23,3101,2.621,3102,2.621,3103,4.23,3104,2.621,3105,2.621,3106,5.317,3107,2.621,3108,4.23,3109,2.621,3110,2.621,3111,2.621,3112,2.621,3113,2.621,3114,2.621,3115,2.352,3116,4.23,3117,2.621,3118,2.621,3119,2.621,3120,4.23,3121,2.621,3122,2.621,3123,2.621,3124,2.621,3125,2.621]],["title/interfaces/Options.html",[0,0.512,72,2.231]],["body/interfaces/Options.html",[0,0.55,2,1.557,3,0.098,4,0.081,5,0.06,8,0.239,9,0.837,12,0.863,13,0.253,14,0.005,15,0.232,22,0.139,31,0.172,35,1.621,72,4.11,74,1.944,77,1.894,78,1.001,123,1.869,128,1.599,129,2.078,172,0.003,173,0.003,190,0.707,216,2.536,268,2.588,327,2.017,388,2.538,491,2.893,505,3.578,506,2.701,511,3.345,628,4.743,630,4.032,632,4.883,633,4.528,642,2.588,871,2.307,1387,3.047,1476,4.252,1477,4.897,1478,4.897,1482,5.339,1484,4.528,1485,4.897,1487,4.329,1488,7.07,1489,5.381,1491,4.897,1492,5.381,1494,6.61,1495,4.528,1496,4.252,1497,4.252,1498,6.341,1499,4.179,1500,7.355,1501,5.136,1502,4.84,1503,5.165,1504,4.301,1505,6.535,1506,6.535,1507,4.897,1508,6.042,1509,6.535,1510,6.535,1511,4.528,1512,3.432,1513,5.674,1514,4.897,1515,4.897]],["title/classes/PaginationQuery.html",[31,0.161,774,3.314]],["body/classes/PaginationQuery.html",[3,0.118,4,0.098,5,0.072,8,0.289,9,0.946,13,0.286,14,0.005,15,0.233,22,0.105,31,0.26,37,2.633,172,0.004,173,0.004,175,1.25,187,0.684,190,0.729,216,2.226,347,2.113,383,2.226,384,2.348,469,3.609,774,5.36,779,2.646,797,5.009,798,5.008,1053,6.829,1065,5.298,1069,3.682,1187,4.263,1242,5.36,2264,7.385,2806,5.472,2811,5.472,3126,6.595,3127,7.795,3128,6.595,3129,4.722,3130,8.23,3131,7.385,3132,8.23,3133,6.595,3134,6.595,3135,7.385,3136,6.595,3137,8.972,3138,6.595,3139,6.595,3140,6.595]],["title/classes/PaginationResponse.html",[31,0.161,870,3.314]],["body/classes/PaginationResponse.html",[3,0.112,4,0.093,5,0.068,8,0.274,9,0.914,13,0.348,14,0.005,15,0.177,22,0.099,31,0.197,37,2.821,69,1.169,114,0.476,172,0.004,173,0.004,175,1.184,187,0.791,189,0.759,190,0.738,347,2.365,424,4.563,436,3.302,508,4.771,779,2.505,792,5.458,797,5.517,798,5.118,870,5.179,871,3.698,874,6.17,879,4.519,3141,6.245,3142,7.952,3143,6.245,3144,6.245,3145,6.245,3146,6.245,3147,6.245,3148,6.245,3149,6.245,3150,6.245]],["title/injectables/ParseObjectIdPipe.html",[18,0.895,1088,3.588]],["body/injectables/ParseObjectIdPipe.html",[3,0.125,4,0.104,5,0.077,8,0.307,12,1.036,13,0.244,14,0.005,15,0.261,18,1.501,19,1.2,22,0.111,31,0.221,78,0.963,114,0.534,128,1.17,148,3.321,149,1.263,172,0.004,173,0.004,182,1.391,187,0.582,189,0.852,190,0.543,199,1.126,298,2.329,306,2.025,326,1.752,346,3.426,353,1.752,355,3.129,384,2.436,419,4.645,675,3.809,1088,6.023,1166,5.456,1408,5.777,3151,8.54,3152,6.283,3153,8.54,3154,7.002,3155,8.54,3156,8.54,3157,7.002,3158,7.002]],["title/classes/PatchGroupParams.html",[31,0.161,1084,4.222]],["body/classes/PatchGroupParams.html",[3,0.128,4,0.106,5,0.078,8,0.312,9,0.992,12,0.909,13,0.248,14,0.005,15,0.244,22,0.113,31,0.273,114,0.658,172,0.004,173,0.004,175,1.351,181,3.654,187,0.592,216,2.335,347,1.829,779,2.858,786,3.648,879,4.011,885,5.388,886,6.069,1046,6.392,1068,6.724,1069,3.977,1084,7.16,1179,6.069,3159,7.124,3160,8.63,3161,7.124]],["title/interfaces/PlainTextMailContent.html",[0,0.512,248,3.314]],["body/interfaces/PlainTextMailContent.html",[0,1.007,2,1.878,3,0.118,4,0.098,5,0.072,8,0.288,9,0.945,12,1.112,13,0.286,14,0.005,22,0.105,33,2.051,114,0.502,172,0.004,173,0.004,190,0.638,235,5.354,236,4.453,237,5.838,238,5.561,239,4.453,240,4.453,241,5.354,242,4.453,243,4.453,244,4.453,245,6.115,246,4.287,247,4.453,248,5.838,249,6.537,250,6.537,251,5.354,252,4.854,253,4.287,254,4.453,255,4.453,256,4.453]],["title/classes/ResolvedUser.html",[31,0.161,2601,3.314]],["body/classes/ResolvedUser.html",[3,0.11,4,0.092,5,0.067,8,0.27,9,0.905,10,1.689,12,1.069,13,0.351,14,0.005,15,0.223,22,0.125,31,0.194,172,0.004,173,0.004,175,1.166,187,0.829,310,3.74,326,1.539,347,2.561,378,3.485,379,2.578,381,3.427,675,4.284,699,4.3,779,2.468,879,4.863,2309,4.725,2312,4.5,2313,6.418,2316,5.554,2317,5.464,2318,5.464,2601,5.129,3162,5.52,3163,6.151,3164,6.151,3165,6.151,3166,6.151,3167,6.151,3168,6.151,3169,6.151,3170,6.151]],["title/classes/ResolvedUserMapper.html",[31,0.161,3171,4.222]],["body/classes/ResolvedUserMapper.html",[3,0.116,4,0.097,5,0.071,8,0.284,10,1.259,12,0.937,13,0.225,14,0.005,15,0.23,22,0.103,31,0.205,78,0.891,114,0.621,128,1.083,145,2.407,149,1.168,172,0.004,173,0.004,175,1.228,182,1.326,187,0.539,189,0.788,190,0.503,199,1.042,310,4.018,326,1.621,383,1.752,384,1.848,403,3.397,786,3.44,860,4.219,1311,5.301,1314,5.813,2309,4.841,2312,4.835,2601,6.08,3171,6.753,3172,6.478,3173,7.303,3174,6.478,3175,5.048,3176,6.478,3177,5.813,3178,6.478,3179,5.813,3180,6.478,3181,6.478,3182,6.478,3183,6.478,3184,6.478,3185,6.478,3186,6.478,3187,5.813,3188,6.478,3189,5.813,3190,6.478]],["title/classes/RocketChatError.html",[31,0.161,32,3.965]],["body/classes/RocketChatError.html",[0,0.463,1,6.116,3,0.052,4,0.043,5,0.032,6,5.21,7,2.269,8,0.128,9,0.529,10,1.371,11,5.851,12,1.09,13,0.261,14,0.005,15,0.13,16,4.73,17,1.626,18,0.809,19,0.499,20,2.269,21,2.151,22,0.091,23,3.398,24,2.996,25,3.584,26,3.584,27,3.584,28,3.584,29,6.116,30,1.831,31,0.145,32,3.584,33,0.976,34,2.597,35,2.819,36,4.73,37,1.228,38,3.977,39,2.269,40,1.508,41,4.73,42,3.816,43,3.908,44,3.986,45,3.562,46,3.761,47,3.986,48,4.642,49,6.817,50,5.841,51,4.73,52,2.269,53,2.416,54,2.597,55,2.416,56,2.269,57,2.416,58,2.416,59,2.416,60,3.183,61,2.416,62,2.416,63,4.73,64,2.416,65,2.416,66,2.416,67,2.416,68,2.269,69,0.861,70,2.416,71,1.405,72,1.277,73,5.732,74,2.596,75,2.416,76,3.373,77,2.529,78,1.35,79,2.416,80,6.513,81,2.416,82,2.502,83,2.416,84,1.626,85,2.416,86,2.416,87,2.416,88,2.416,89,2.416,90,2.416,91,2.416,92,2.416,93,6.513,94,6.513,95,2.416,96,2.416,97,2.416,98,2.416,99,2.416,100,2.416,101,2.416,102,2.416,103,2.416,104,2.416,105,2.416,106,2.416,107,2.416,108,2.416,109,2.416,110,3.816,111,3.816,112,2.277,113,2.416,114,0.494,115,2.416,116,2.416,117,2.416,118,3.857,119,4.442,120,2.416,121,1.896,122,2.269,123,0.997,124,2.416,125,2.416,126,2.416,127,4.218,128,1.312,129,2.012,130,3.816,131,2.416,132,3.816,133,3.816,134,2.416,135,2.416,136,2.416,137,4.73,138,3.857,139,3.586,140,3.857,141,2.416,142,3.584,143,3.436,144,3.584,145,1.427,146,4.021,147,4.73,148,3.345,149,1.272,150,4.73,151,4.73,152,4.73,153,2.416,154,2.416,155,2.416,156,2.416,157,5.851,158,4.73,159,4.73,160,4.73,161,2.416,162,3.816,163,3.816,164,2.416,165,2.416,166,2.416,167,2.416,168,1.209,169,2.416,170,3.816,171,3.584,172,0.002,173,0.002,175,0.552,187,0.538,189,0.354,190,0.226,1377,2.151,3191,4.599,3192,2.912,3193,2.912]],["title/modules/RocketChatModule.html",[257,1.359,3194,3.759]],["body/modules/RocketChatModule.html",[3,0.126,4,0.105,5,0.077,6,6.334,13,0.245,14,0.005,15,0.243,19,1.208,22,0.112,23,7.104,31,0.223,68,7.2,72,3.759,78,0.969,114,0.537,172,0.004,173,0.004,182,1.148,187,0.586,189,0.857,190,0.547,199,1.133,257,2.467,259,2.734,271,2.927,272,3.149,293,3.414,403,3.272,1759,3.65,1760,4.59,1882,5.491,1883,6.046,1886,6.251,3194,6.827,3195,7.047,3196,7.047,3197,8.574,3198,7.047,3199,7.047,3200,7.047]],["title/interfaces/RocketChatOptions.html",[0,0.512,23,3.759]],["body/interfaces/RocketChatOptions.html",[0,0.462,1,6.112,2,0.829,3,0.052,4,0.043,5,0.032,6,2.147,7,2.265,8,0.127,9,0.528,10,1.37,11,5.846,12,1.099,13,0.273,14,0.005,15,0.13,16,4.725,17,1.623,18,0.807,19,0.498,20,2.265,21,2.147,22,0.091,23,4.207,24,4.589,25,5.49,26,5.49,27,5.49,28,5.49,29,5.837,30,1.828,31,0.145,32,2.265,33,0.617,34,2.093,35,2.642,36,2.411,37,0.776,38,3.433,39,2.265,40,1.505,41,2.411,42,2.411,43,3.906,44,3.984,45,3.56,46,3.759,47,3.984,48,4.64,49,6.814,50,5.837,51,4.725,52,2.265,53,2.411,54,2.594,55,2.411,56,2.265,57,2.411,58,2.411,59,2.411,60,3.179,61,2.411,62,2.411,63,4.725,64,2.411,65,2.411,66,2.411,67,2.411,68,2.265,69,0.544,70,2.411,71,1.403,72,1.274,73,5.731,74,2.596,75,2.411,76,3.372,77,2.529,78,1.349,79,2.411,80,6.508,81,2.411,82,2.498,83,2.411,84,1.623,85,2.411,86,2.411,87,2.411,88,2.411,89,2.411,90,2.411,91,2.411,92,2.411,93,6.508,94,6.508,95,2.411,96,2.411,97,2.411,98,2.411,99,2.411,100,2.411,101,2.411,102,2.411,103,2.411,104,2.411,105,2.411,106,2.411,107,2.411,108,2.411,109,2.411,110,3.811,111,3.811,112,2.273,113,2.411,114,0.434,115,2.411,116,2.411,117,2.411,118,3.852,119,4.437,120,2.411,121,1.893,122,2.265,123,0.995,124,2.411,125,2.411,126,2.411,127,4.214,128,1.311,129,2.01,130,3.811,131,2.411,132,3.811,133,3.811,134,2.411,135,2.411,136,2.411,137,4.725,138,3.852,139,3.582,140,3.852,141,2.411,142,3.579,143,3.433,144,3.579,145,1.425,146,4.016,147,4.725,148,3.342,149,1.27,150,4.725,151,4.725,152,4.725,153,2.411,154,2.411,155,2.411,156,2.411,157,5.846,158,4.725,159,4.725,160,4.725,161,2.411,162,3.811,163,3.811,164,2.411,165,2.411,166,2.411,167,2.411,168,1.207,169,2.411,170,3.811,171,3.579,172,0.002,173,0.002,190,0.665]],["title/classes/Role.html",[31,0.161,2312,2.636]],["body/classes/Role.html",[0,0.539,3,0.096,4,0.08,5,0.059,8,0.356,9,0.826,10,1.397,12,1.003,13,0.324,14,0.005,15,0.203,22,0.114,31,0.169,33,1.525,69,1.002,114,0.711,149,1.68,172,0.003,173,0.003,175,1.014,187,0.805,189,0.651,190,0.415,192,3.158,205,1.779,310,3.735,314,1.584,345,3.094,346,2.146,347,2.445,348,2.487,350,2.487,352,3.054,353,1.339,354,1.59,358,3.576,368,2.146,378,2.883,379,2.023,381,2.835,383,2.347,384,2.475,387,2.648,388,1.657,417,2.987,459,2.346,493,2.708,494,2.708,495,2.708,496,2.708,498,2.076,505,2.042,513,2.111,515,2.537,702,4.391,719,3.638,741,2.303,744,2.91,745,2.648,927,2.839,937,3.638,1069,2.987,1182,3.485,1501,3.773,1904,5.069,2064,4.439,2260,3.953,2309,5.333,2312,4.494,2363,7.199,2364,4.801,2365,4.801,2366,4.439,2367,6.324,2368,6.449,2369,4.169,2370,4.801,2371,4.169,3201,7.187,3202,4.801,3203,5.351,3204,5.351,3205,5.351]],["title/injectables/RoleRepo.html",[18,0.895,3206,3.759]],["body/injectables/RoleRepo.html",[3,0.103,4,0.086,5,0.063,8,0.252,9,0.867,10,1.636,12,0.886,13,0.323,14,0.005,15,0.238,18,1.326,19,0.986,22,0.091,31,0.182,37,1.536,69,1.077,71,1.757,74,2.656,77,2.475,78,1.037,114,0.725,128,1.406,129,2.4,172,0.003,173,0.003,182,1.229,187,0.771,189,1.086,190,0.693,199,1.353,298,1.913,306,2.803,310,2.476,326,1.44,327,2.127,353,1.44,355,2.571,383,1.556,384,1.641,469,2.523,538,3.397,539,4.625,541,3.653,2312,5.021,3206,5.572,3207,5.753,3208,9.271,3209,6.767,3210,7.542,3211,7.542,3212,7.542,3213,6.767,3214,5.753,3215,7.542,3216,5.753,3217,7.542,3218,5.753,3219,7.542,3220,7.542,3221,7.542,3222,5.753]],["title/injectables/RoleUC.html",[18,0.895,3223,3.759]],["body/injectables/RoleUC.html",[3,0.118,4,0.098,5,0.072,8,0.289,12,0.695,13,0.286,14,0.005,15,0.254,18,1.447,19,1.131,22,0.105,31,0.208,69,1.235,71,2.014,74,2.395,77,2.141,78,0.907,114,0.628,128,1.102,129,1.881,149,1.189,172,0.004,173,0.004,182,1.341,187,0.684,189,1.001,190,0.639,199,1.061,298,2.193,310,4.162,326,1.65,327,2.438,1038,3.682,1375,4.461,2309,4.477,2312,4.866,2319,4.873,3206,7.285,3223,6.081,3224,6.595,3225,8.23,3226,6.595,3227,6.595,3228,8.23,3229,6.595,3230,6.595,3231,6.595,3232,6.595,3233,6.595,3234,6.595,3235,6.595]],["title/classes/School.html",[31,0.161,678,2.007]],["body/classes/School.html",[0,0.669,3,0.119,4,0.099,5,0.073,8,0.291,9,0.951,10,1.608,12,0.992,13,0.328,14,0.005,15,0.234,22,0.132,31,0.21,33,1.756,69,1.245,114,0.739,172,0.004,173,0.004,175,1.261,187,0.783,189,0.809,190,0.516,192,3.01,205,2.211,314,1.823,343,6.095,345,3.561,346,2.667,347,2.312,348,3.09,350,3.09,352,3.039,353,1.664,354,1.975,459,2.915,498,2.579,515,2.919,678,3.263,741,2.862,744,3.616,745,3.291,2300,4.689,2372,7.817,2373,5.966,3236,8.272,3237,5.966,3238,5.966]],["title/classes/SchoolInfoMapper.html",[31,0.161,2929,4.222]],["body/classes/SchoolInfoMapper.html",[3,0.128,4,0.107,5,0.078,8,0.314,10,1.394,13,0.25,14,0.005,15,0.245,22,0.114,31,0.227,78,0.986,114,0.661,128,1.198,149,1.293,172,0.004,173,0.004,175,1.359,182,1.411,187,0.596,189,0.872,190,0.556,199,1.153,326,1.794,403,3.554,678,3.815,786,3.662,860,4.67,1311,5.643,2901,7.145,2929,7.188,3239,8.664,3240,5.949,3241,8.664,3242,5.949,3243,7.17,3244,7.17,3245,7.17]],["title/classes/SchoolInfoResponse.html",[31,0.161,2901,3.759]],["body/classes/SchoolInfoResponse.html",[3,0.12,4,0.1,5,0.073,8,0.293,9,0.954,10,1.95,12,0.995,13,0.314,14,0.005,15,0.189,22,0.106,31,0.211,69,1.555,114,0.773,172,0.004,173,0.004,175,1.268,187,0.751,189,0.814,190,0.519,216,2.443,314,2.081,347,2.132,603,4.525,678,3.725,745,3.311,779,2.683,879,4.196,882,3.549,887,3.638,888,4.764,889,4.764,899,4.525,2901,7.173,3026,5.212,3246,9.442,3247,5.55,3248,5.55,3249,6.002,3250,6.002]],["title/classes/SchoolNews.html",[31,0.161,973,3.314]],["body/classes/SchoolNews.html",[0,0.335,3,0.06,4,0.112,5,0.036,8,0.146,9,0.586,10,1.206,12,1,13,0.34,14,0.005,15,0.241,22,0.119,31,0.22,33,1.592,43,2.826,44,2.883,45,2.576,46,2.72,47,2.883,48,3.291,78,0.457,114,0.53,123,1.138,145,2.063,149,1.353,172,0.002,173,0.002,175,0.63,181,2.927,182,0.831,187,0.802,189,0.404,190,0.677,192,3.509,199,0.535,205,1.105,306,2.011,307,4.08,308,4.007,310,2.67,314,1.654,329,2.344,345,2.195,346,1.333,347,2.437,348,1.545,350,1.545,352,3.173,353,0.832,354,0.987,358,2.974,365,3.139,370,2.488,378,2.045,379,2.112,381,2.011,383,1.678,384,1.77,387,1.645,388,1.029,403,2.368,459,2.72,486,3.418,493,1.682,494,1.682,495,1.682,496,1.682,497,1.405,498,1.289,501,1.514,505,2.368,507,2.023,508,2.641,509,3.901,513,3.123,515,1.173,526,1.855,620,1.855,673,1.647,678,3.572,698,4.375,699,2.524,722,1.576,723,2.09,749,2.09,836,1.855,840,1.721,906,2.09,907,2.455,908,4.257,909,4.223,910,3.919,911,3.69,912,5.139,913,4.531,914,4.887,915,3.972,917,2.757,918,3.449,919,3.784,920,3.207,921,2.757,922,2.757,923,3.767,924,4.375,925,3.767,926,3.767,927,2.705,928,3.449,929,3.596,930,2.757,931,2.757,932,2.757,933,3.663,934,3.901,935,2.757,936,2.757,937,3.139,938,2.757,939,3.596,940,2.757,941,3.767,942,2.757,943,3.767,944,5.291,945,2.757,946,2.524,947,2.455,948,3.901,949,2.455,950,1.808,951,2.248,952,2.09,953,2.165,954,2.248,955,2.455,956,2.248,957,2.455,958,1.855,959,2.455,960,2.455,961,2.455,962,2.455,963,2.248,964,2.455,965,2.248,966,2.455,967,3.767,968,3.776,969,2.455,970,3.767,971,2.455,972,2.455,973,3.321,974,2.165,975,2.455,3251,3.323]],["title/classes/Scope.html",[31,0.161,986,2.365]],["body/classes/Scope.html",[3,0.108,4,0.09,5,0.066,8,0.264,9,0.892,13,0.335,14,0.005,15,0.22,22,0.096,31,0.19,35,2.861,69,1.126,78,1.068,114,0.592,128,1.005,168,3.224,172,0.004,173,0.004,175,1.141,182,1.265,187,0.782,189,0.944,190,0.603,199,0.968,353,1.505,354,1.787,383,1.627,384,1.716,469,2.638,777,4.475,986,3.608,1016,6.351,1017,6.351,1020,5.736,1021,6.791,1023,6.533,1028,5.736,1029,6.406,1187,3.116,1253,3.918,1558,5.736,3040,7.132,3252,5.398,3253,7.764,3254,7.764,3255,6.967,3256,6.016,3257,6.016,3258,6.016,3259,6.016,3260,6.016,3261,6.016,3262,7.764,3263,7.764,3264,6.016,3265,6.016,3266,6.016]],["title/classes/ServerConsole.html",[31,0.161,3267,4.222]],["body/classes/ServerConsole.html",[3,0.109,4,0.091,5,0.067,8,0.268,12,0.912,13,0.273,14,0.005,15,0.222,22,0.097,31,0.193,69,1.143,78,1.078,114,0.598,168,3.793,172,0.004,173,0.004,175,1.158,182,1.277,187,0.72,189,0.953,190,0.608,199,1.261,207,2.957,216,2.555,269,3.437,327,2.257,347,2.013,628,5.949,632,5.559,642,2.896,1481,5.479,1484,6.503,1486,6.503,1494,6.817,1742,7.578,1745,5.416,1756,4.484,1972,6.179,1992,5.856,2535,5.745,2739,5.479,3267,6.503,3268,6.106,3269,7.838,3270,6.106,3271,6.748,3272,6.106,3273,7.838,3274,6.107,3275,6.106,3276,7.033,3277,6.106,3278,6.106]],["title/modules/ServerConsoleModule.html",[257,1.359,3279,3.759]],["body/modules/ServerConsoleModule.html",[3,0.121,4,0.1,5,0.074,14,0.005,15,0.28,19,1.154,22,0.107,31,0.213,172,0.004,173,0.004,257,2.225,259,2.611,260,3.724,267,4.218,268,3.192,269,2.951,271,3.461,272,3.724,624,7.321,630,4.972,632,4.653,642,3.192,1495,5.584,1959,3.757,2114,6.989,2511,3.661,2729,7.321,3267,6.915,3279,7.609,3280,6.039,3281,6.73,3282,6.73,3283,8.335,3284,6.73,3285,6.73,3286,6.73,3287,6.73]],["title/controllers/ServerController.html",[766,2.231,3288,4.222]],["body/controllers/ServerController.html",[3,0.132,4,0.11,5,0.081,8,0.323,12,0.927,14,0.005,15,0.208,19,1.262,22,0.117,31,0.233,60,4.915,73,5.36,78,1.012,172,0.004,173,0.004,182,1.434,187,0.612,199,1.184,207,3.566,347,1.891,383,2.381,766,3.86,768,3.492,1742,8.095,1744,6.504,1745,4.788,1755,6.109,1756,3.814,3288,7.304,3289,7.363,3290,7.363]],["title/modules/ServerModule.html",[257,1.359,3291,3.759]],["body/modules/ServerModule.html",[3,0.089,4,0.074,5,0.054,12,1.016,13,0.172,14,0.005,15,0.288,19,0.847,22,0.079,24,4.434,25,3.85,26,3.85,27,3.85,28,3.85,31,0.156,43,2.251,44,2.296,45,2.052,46,2.166,47,2.296,72,2.985,78,0.679,118,3.342,123,1.692,138,3.342,139,3.107,140,3.342,145,1.236,149,0.891,172,0.003,173,0.003,211,2.393,257,1.818,258,6.724,259,1.917,260,3.042,264,6.418,267,3.446,268,2.344,269,2.166,272,3.042,277,4.099,321,2.251,326,1.236,353,1.704,354,1.468,368,1.982,370,1.982,584,4.282,648,6.724,768,3.229,1165,3.484,1475,3.218,1861,3.65,1862,3.342,1863,3.218,1864,4.099,2114,6.418,2156,5.648,2157,5.648,2158,5.648,2346,3.85,2511,2.687,2633,6.724,2694,6.209,2703,3.65,2704,3.65,2734,3.85,2735,3.85,2736,6.109,2737,6.109,2738,5.304,2745,4.099,2748,3.65,2749,4.433,2750,6.109,2751,4.433,2752,4.099,2959,6.724,3194,6.505,3288,6.462,3291,7.662,3292,4.433,3293,4.433,3294,6.724,3295,4.941,3296,4.941,3297,4.941,3298,4.941,3299,4.941,3300,4.941,3301,4.941,3302,4.941,3303,4.941,3304,4.941,3305,3.85,3306,4.941,3307,4.941,3308,4.941,3309,4.941,3310,4.941,3311,4.941,3312,4.941,3313,4.941,3314,4.941,3315,4.941,3316,3.65,3317,4.941,3318,4.433,3319,4.099,3320,4.941]],["title/classes/StorageProvider.html",[31,0.161,499,2.92]],["body/classes/StorageProvider.html",[0,0.559,3,0.099,4,0.083,5,0.061,8,0.243,9,0.846,10,1.432,12,1.073,13,0.344,14,0.005,15,0.234,22,0.117,31,0.175,33,1.563,69,1.039,114,0.423,149,1.328,172,0.003,173,0.003,175,1.052,187,0.821,189,0.675,190,0.641,192,3.204,205,1.845,314,1.623,345,3.17,346,2.226,347,2.506,348,2.579,350,2.579,352,3.333,353,1.389,354,1.649,358,3.609,378,2.954,379,2.073,381,2.905,383,1.992,384,2.101,387,2.747,388,1.718,459,2.433,493,2.809,494,2.809,495,2.809,496,2.809,498,2.153,499,4.225,513,2.189,515,2.599,741,2.389,1843,6.44,2020,7.305,2024,6.86,2026,7.338,2374,7.305,2375,4.979,2376,7.305,2377,4.979,2378,4.979,2379,4.979,2380,4.979,2381,4.979,2382,4.979,2383,4.979,2384,4.979,2385,4.979,2386,4.979,3321,7.364,3322,5.549,3323,5.549,3324,5.549,3325,5.549]],["title/injectables/StorageProviderRepo.html",[18,0.895,2118,3.965]],["body/injectables/StorageProviderRepo.html",[3,0.094,4,0.078,5,0.057,8,0.23,10,1.378,13,0.34,14,0.005,15,0.227,18,1.246,19,0.898,22,0.083,31,0.166,33,1.504,74,2.696,77,2.464,78,0.72,114,0.744,128,0.876,129,1.495,168,2.943,172,0.003,173,0.003,182,1.154,187,0.821,189,1.187,190,0.758,192,3.553,199,1.587,298,1.742,306,2.487,314,1.896,321,3.919,326,1.311,424,5.921,499,4.607,527,6.787,529,6.257,530,4.457,531,5.522,532,5.522,533,4.998,534,3.956,535,5.522,536,5.522,537,5.522,543,3.695,545,4.083,547,4.083,549,3.695,551,4.083,553,4.083,555,4.083,557,4.083,2118,5.522,2132,4.347,2133,4.347,2134,4.347,2135,4.347,2136,4.347,2137,4.347,2138,4.347,2139,4.347,2140,4.347,2142,4.702,2981,6.359,2989,6.359,3326,5.24,3327,5.24,3328,5.24]],["title/classes/Submission.html",[31,0.161,2401,3.098]],["body/classes/Submission.html",[0,0.392,3,0.07,4,0.058,5,0.082,8,0.17,9,0.66,10,1.116,12,0.94,13,0.334,14,0.005,15,0.246,22,0.091,31,0.123,33,1.218,37,2.01,69,0.728,78,0.789,114,0.297,128,0.959,145,2.009,149,1.608,172,0.003,173,0.003,175,0.737,182,0.935,187,0.817,189,0.473,190,0.529,192,2.74,199,0.923,205,1.293,306,1.972,314,1.265,345,2.47,346,1.56,347,2.466,348,1.808,350,1.808,352,3.01,353,0.973,354,1.156,358,3.264,378,2.302,379,1.615,381,2.264,383,2.172,384,2.291,387,1.925,388,2.763,459,2.516,469,2.991,491,2.025,493,1.968,494,1.968,495,1.968,496,1.968,497,1.644,498,1.509,501,1.772,505,1.484,513,3.75,515,2.025,702,4.253,703,3.494,719,1.968,722,1.845,741,1.674,831,6.033,919,3.122,958,2.171,1253,3.738,1948,5.268,2387,5.867,2388,3.49,2389,5.867,2390,6.756,2391,6.247,2392,7.54,2393,5.432,2394,7.54,2395,4.231,2396,7.402,2397,3.49,2398,3.49,2399,3.49,2400,2.533,2401,3.494,2402,5.15,2403,5.15,2404,5.15,2405,5.15,2406,5.15,2407,5.15,2408,6.756,2409,5.15,2410,3.03,2411,5.15,2412,3.49,2413,3.49,2414,3.49,2415,3.49,2416,2.743,2417,3.49,2418,6.12,2419,3.49,2420,5.15,2421,3.49,2422,5.926,2423,3.49,2424,3.49,2425,3.49,2426,6.756,2427,3.49,3329,5.739,3330,3.889,3331,3.889,3332,3.889,3333,3.889,3334,3.889,3335,3.889,3336,3.889,3337,3.889,3338,3.889,3339,3.889]],["title/classes/SubmissionFactory.html",[31,0.161,3340,4.222]],["body/classes/SubmissionFactory.html",[3,0.076,4,0.063,5,0.046,8,0.185,9,0.701,10,1.391,12,0.643,13,0.342,14,0.005,15,0.235,22,0.067,31,0.134,33,1.295,37,2.092,45,2.533,54,1.927,69,0.792,71,1.863,78,0.839,114,0.696,128,1.02,168,1.756,172,0.003,173,0.003,175,0.802,182,0.994,187,0.804,189,1.175,190,0.709,192,3.48,199,1.469,211,2.049,216,1.936,314,1.831,318,3.16,321,2.78,326,1.058,365,3.622,383,2.341,384,2.545,390,6.932,392,6.878,394,3.125,396,5.443,397,5.788,398,4.507,399,5.559,400,4.507,401,4.507,402,4.302,403,2.329,404,4.818,405,5.287,406,6.44,407,5.619,409,3.318,411,4.507,412,3.125,413,4.507,415,3.893,416,4.501,417,4.374,418,4.357,419,3.318,420,4.507,421,3.125,422,2.498,423,2.983,424,4.766,425,3.125,426,3.125,427,3.125,428,6.978,430,3.466,431,3.125,433,3.125,435,2.755,436,1.756,437,3.125,438,5.854,440,3.125,441,4.507,442,4.507,444,3.125,445,3.125,446,3.125,448,4.302,450,3.125,452,3.125,453,3.603,455,3.295,638,2.861,804,3.295,807,3.295,808,3.295,809,3.295,810,3.295,811,3.295,812,3.295,813,3.295,814,3.295,815,3.295,816,3.295,819,3.295,825,3.509,2387,3.295,2389,4.753,2391,3.509,2393,2.861,2395,2.006,2401,3.714,2437,5.858,3340,5.938,3341,3.795,3342,4.229,3343,3.295,3344,4.229,3345,3.795,3346,4.229,3347,3.795,3348,3.795,3349,3.795]],["title/injectables/SubmissionRepo.html",[18,0.895,3350,4.566]],["body/injectables/SubmissionRepo.html",[3,0.1,4,0.083,5,0.061,8,0.245,13,0.307,14,0.005,15,0.25,18,1.302,19,0.959,22,0.089,31,0.177,35,2.466,69,1.048,71,1.709,74,2.641,76,3.243,77,2.456,78,1.141,114,0.674,128,1.476,129,2.52,172,0.003,173,0.003,182,1.206,187,0.734,189,1.074,190,0.686,199,1.335,298,1.861,306,2.888,326,1.4,327,2.069,353,1.853,354,1.663,355,2.501,368,2.245,538,3.305,539,4.575,541,3.587,680,3.645,740,5.471,777,3.442,799,3.929,831,4.823,852,3.305,853,4.658,979,6.645,986,2.601,1023,3.645,2183,4.361,2393,3.786,2395,2.655,2396,4.643,2400,4.823,2401,3.407,2511,3.044,3350,6.645,3351,5.597,3352,7.406,3353,7.406,3354,5.597,3355,7.406,3356,5.597,3357,7.406,3358,5.597,3359,7.406,3360,5.597,3361,7.406,3362,5.597,3363,7.406,3364,5.597]],["title/injectables/SymetricKeyEncryptionService.html",[18,0.895,1855,3.759]],["body/injectables/SymetricKeyEncryptionService.html",[3,0.119,4,0.099,5,0.073,8,0.292,12,1.098,13,0.314,14,0.005,15,0.234,17,3.719,18,1.456,19,1.142,22,0.106,31,0.21,35,1.979,69,1.247,71,2.035,73,6.018,78,1.139,114,0.687,172,0.004,173,0.004,182,1.349,187,0.749,189,1.096,190,0.699,199,1.332,298,2.215,729,4.507,871,3.501,1847,7.432,1855,6.119,1877,7.432,2030,6.453,3365,6.662,3366,6.662,3367,6.662,3368,8.282,3369,6.662,3370,8.282,3371,6.662,3372,6.662,3373,5.978,3374,6.662,3375,6.662,3376,6.662,3377,6.662,3378,6.662]],["title/classes/TargetInfoMapper.html",[31,0.161,2931,4.222]],["body/classes/TargetInfoMapper.html",[3,0.128,4,0.107,5,0.078,8,0.314,10,1.391,13,0.249,14,0.005,15,0.245,22,0.114,31,0.226,78,0.984,114,0.66,128,1.196,149,1.29,172,0.004,173,0.004,175,1.357,182,1.41,187,0.595,189,0.87,190,0.555,199,1.151,326,1.79,403,3.55,786,3.658,909,3.394,948,6.078,1311,5.635,2902,5.936,2903,7.14,2931,7.179,3240,5.936,3242,5.936,3379,8.653,3380,8.653,3381,7.155,3382,7.155,3383,7.155]],["title/classes/TargetInfoResponse.html",[31,0.161,2903,3.759]],["body/classes/TargetInfoResponse.html",[3,0.12,4,0.1,5,0.073,8,0.293,9,0.954,10,1.95,12,0.995,13,0.314,14,0.005,15,0.189,22,0.106,31,0.211,69,1.555,114,0.773,172,0.004,173,0.004,175,1.268,187,0.751,189,0.814,190,0.519,216,2.443,314,2.081,347,2.132,603,4.525,745,3.311,779,2.683,879,4.196,882,3.549,887,3.638,888,4.764,889,4.764,899,4.525,909,4.479,2903,7.173,3026,5.212,3247,5.55,3248,5.55,3249,6.002,3250,6.002,3384,9.442]],["title/classes/Task.html",[31,0.161,2395,2.413]],["body/classes/Task.html",[0,0.425,3,0.047,4,0.039,5,0.029,8,0.267,9,0.61,10,1.183,12,0.792,13,0.324,14,0.005,15,0.213,22,0.106,31,0.133,33,0.895,35,2.4,37,2.157,54,1.19,69,0.489,76,2.521,78,1.189,82,4.089,114,0.68,123,1.444,128,1.606,145,1.672,149,1.411,172,0.002,173,0.002,175,0.495,182,0.687,187,0.814,189,0.812,190,0.7,192,2.215,199,1.39,205,0.868,216,1.434,306,2.664,314,1.169,345,1.815,346,1.047,347,2.256,348,1.213,350,1.213,352,2.8,353,1.055,354,0.776,358,2.823,368,2.442,369,1.322,370,1.047,375,1.542,378,1.691,379,2.202,381,1.663,383,1.807,384,1.906,387,1.292,388,2.069,393,2.237,459,1.145,469,2.325,486,2.773,491,2.851,493,1.322,494,1.322,495,1.322,496,1.322,497,1.104,498,1.013,501,1.19,505,0.997,511,1.721,513,3.086,515,1.488,525,1.59,526,1.458,578,1.59,595,1.542,673,2.527,677,2.961,702,3.081,703,1.59,710,2.034,719,1.322,722,1.238,725,1.841,735,1.766,737,1.766,741,1.124,744,1.42,745,1.292,836,2.354,837,2.746,840,1.352,842,3.965,843,1.701,894,2.973,919,2.293,991,5.292,1049,1.701,1187,2.747,1280,1.766,1487,2.087,1786,4.349,1948,1.542,2081,1.841,2341,4.255,2395,3.832,2400,4.896,2401,3.706,2416,1.841,2422,2.973,2428,4.293,2429,1.929,2430,4.293,2431,4.201,2432,2.034,2433,2.034,2434,5.085,2435,5.78,2436,4.935,2437,5.517,2438,5.698,2439,1.766,2440,2.034,2441,1.841,2442,4.497,2443,2.034,2444,2.034,2445,3.115,2446,3.285,2447,3.285,2448,3.285,2449,2.034,2450,2.034,2451,2.034,2452,2.034,2453,2.034,2454,2.034,2455,3.285,2456,3.285,2457,3.285,2458,2.034,2459,2.034,2460,2.034,2461,4.743,2462,2.034,2463,2.973,2464,1.59,2465,2.034,2466,4.743,2467,3.285,2468,4.132,2469,2.034,2470,3.285,2471,4.743,2472,2.034,2473,2.034,2474,4.743,2475,4.132,2476,2.034,2477,2.034,2478,2.034,2479,4.743,2480,2.034,2481,2.034,2482,2.034,2483,4.497,2484,2.034,2485,4.743,2486,2.034,2487,1.841,2488,3.285,2489,2.034,2490,3.285,2491,2.034,2492,2.034,2493,2.034,2494,3.115,2495,1.498,2496,1.841,2497,2.034,2498,2.034,2499,2.034,2500,3.285,2501,2.034,2502,3.285,2503,2.034,2504,3.285,2505,3.285,2506,2.034,2507,2.034,2508,2.034,2509,2.034,2510,1.542,2511,1.42,2512,3.115,2513,4.743,2514,4.743,2515,2.034,2516,2.034,2517,2.034,3385,4.216,3386,4.216,3387,4.216,3388,4.216,3389,4.216,3390,2.611,3391,2.611,3392,2.611,3393,2.611,3394,2.611,3395,2.611,3396,2.611,3397,2.611,3398,2.611,3399,2.611,3400,2.611,3401,2.611,3402,2.611,3403,2.611,3404,2.611,3405,2.611,3406,2.611,3407,2.611,3408,2.611,3409,2.611,3410,2.611]],["title/injectables/TaskAuthorizationService.html",[18,0.895,3411,3.759]],["body/injectables/TaskAuthorizationService.html",[3,0.075,4,0.062,5,0.046,8,0.184,13,0.3,14,0.005,15,0.202,18,1.066,19,0.718,22,0.096,31,0.132,35,2.643,69,0.785,71,1.851,74,2.303,76,3.14,77,2.029,78,1.186,114,0.658,123,2.439,128,1.575,129,2.031,145,1.049,172,0.003,173,0.003,182,0.987,187,0.717,189,1.049,190,0.67,199,1.331,298,1.394,306,2.875,314,0.924,326,1.049,327,1.55,436,2.517,491,3.215,511,2.906,673,3.23,742,4.356,777,1.948,851,4.1,927,4.391,937,2.121,976,5.426,1033,3.761,1038,2.34,1039,3.761,1375,2.835,1501,4.275,1503,2.475,1727,2.34,2067,4.637,2079,5.261,2259,2.956,2339,4.1,2341,2.28,2395,4.22,2534,3.097,2650,6.573,3411,4.478,3412,3.761,3413,6.062,3414,6.062,3415,6.062,3416,6.062,3417,6.062,3418,4.192,3419,6.062,3420,8.277,3421,7.381,3422,4.192,3423,6.062,3424,4.192,3425,6.062,3426,4.192,3427,6.062,3428,4.192,3429,6.062,3430,4.192,3431,4.192,3432,6.062,3433,3.266,3434,4.192,3435,4.192,3436,7.802,3437,5.439,3438,4.192,3439,5.439,3440,4.192,3441,5.439,3442,7.12,3443,4.192,3444,6.062,3445,4.192,3446,4.192,3447,5.439,3448,4.192,3449,4.192,3450,4.192,3451,3.761,3452,4.192,3453,4.192,3454,6.062,3455,6.062,3456,4.192,3457,4.192,3458,6.062,3459,7.741,3460,4.192,3461,4.192,3462,4.192,3463,6.062,3464,4.192,3465,7.802,3466,7.12]],["title/controllers/TaskController.html",[766,2.231,3467,4.222]],["body/controllers/TaskController.html",[3,0.098,4,0.081,5,0.06,8,0.239,13,0.253,14,0.005,15,0.275,19,0.935,22,0.087,31,0.172,71,1.667,74,2.503,77,2.275,78,1.203,114,0.555,128,1.625,129,2.078,149,1.313,172,0.003,173,0.003,182,1.186,187,0.605,189,0.886,190,0.565,199,1.171,326,1.366,327,2.017,347,1.87,766,2.393,768,2.588,770,3.432,773,5.205,774,6.73,776,6.019,777,3.809,778,3.849,779,2.189,780,3.692,781,3.849,782,3.131,786,2.307,790,3.849,792,5.018,797,4.883,798,4.53,799,4.64,2833,6.056,2842,4.528,3467,6.042,3468,5.457,3469,4.032,3470,7.355,3471,5.457,3472,4.897,3473,7.283,3474,5.457,3475,6.056,3476,5.457,3477,4.252,3478,4.528,3479,5.457,3480,5.457,3481,5.457,3482,7.283,3483,5.457,3484,7.283,3485,5.457,3486,5.457,3487,7.283,3488,5.457,3489,5.457,3490,5.457]],["title/classes/TaskFactory.html",[31,0.161,3343,3.965]],["body/classes/TaskFactory.html",[3,0.073,4,0.061,5,0.045,8,0.179,9,0.683,10,1.363,12,0.626,13,0.345,14,0.005,15,0.218,22,0.065,31,0.129,33,1.261,35,2.288,37,2.056,45,2.467,54,1.858,69,1.112,71,1.814,78,0.964,114,0.714,123,2.035,128,1.171,145,2.138,168,1.693,172,0.003,173,0.003,175,0.773,182,0.968,187,0.805,189,1.178,190,0.715,192,3.454,199,1.454,211,1.975,216,1.896,314,1.804,318,3.077,321,2.707,326,1.02,365,3.548,383,2.386,384,2.517,390,6.889,392,6.833,394,3.012,396,5.374,397,5.69,398,4.389,399,5.504,400,4.389,401,4.389,402,4.19,403,2.268,404,4.851,405,5.178,406,6.376,407,5.538,409,3.232,411,4.389,412,3.012,413,4.389,415,3.812,416,4.408,417,4.3,418,4.267,419,3.232,420,4.389,421,3.012,422,2.408,423,2.875,424,4.697,425,3.012,426,3.012,427,3.012,428,7.012,430,3.395,431,3.012,433,3.012,435,2.656,436,1.693,437,3.012,438,5.781,440,3.012,441,4.389,442,4.389,444,3.012,445,3.012,446,3.012,448,4.19,450,3.012,452,3.012,453,3.508,455,3.177,511,2.424,804,3.177,807,3.177,808,3.177,809,3.177,810,3.177,811,3.177,812,3.177,813,3.177,814,3.177,815,3.177,816,3.177,819,3.177,825,4.929,1745,2.218,1786,4.267,2395,2.818,2428,2.875,2495,2.339,3343,5.461,3491,3.659,3492,6.39,3493,4.077,3494,5.941,3495,4.077,3496,4.077,3497,3.659,3498,2.875]],["title/classes/TaskListResponse.html",[31,0.161,3477,3.965]],["body/classes/TaskListResponse.html",[3,0.096,4,0.08,5,0.058,8,0.234,9,0.825,10,1.577,12,0.981,13,0.324,14,0.005,15,0.23,22,0.114,31,0.227,33,1.524,37,2.731,69,1.344,82,4.411,114,0.661,172,0.003,173,0.003,175,1.013,187,0.752,189,0.65,190,0.702,192,3.156,207,2.588,216,1.445,347,2.226,378,3.253,379,2.441,381,3.199,388,1.654,436,2.981,745,2.644,779,2.143,782,3.065,786,2.258,792,5.191,797,5.201,798,4.825,870,6.199,871,3.824,872,5.063,874,6.115,876,4.432,877,4.432,878,4.432,879,4.497,881,3.252,882,2.834,895,3.767,896,3.767,1045,3.065,1065,5.342,2395,3.405,2430,3.767,2431,3.36,2441,3.767,2912,4.162,2913,4.162,3477,5.594,3499,4.793,3500,7.539,3501,5.342,3502,5.342,3503,7.194,3504,5.304,3505,4.432,3506,4.793,3507,3.36,3508,6.728,3509,4.793]],["title/classes/TaskMapper.html",[31,0.161,3478,4.222]],["body/classes/TaskMapper.html",[3,0.118,4,0.098,5,0.072,8,0.29,10,1.285,13,0.23,14,0.005,15,0.254,22,0.105,31,0.209,78,0.909,82,4.482,114,0.628,128,1.571,149,1.192,172,0.004,173,0.004,175,1.253,182,1.342,187,0.549,189,0.804,190,0.513,199,1.063,326,1.654,378,2.651,381,2.607,403,3.428,786,3.483,860,4.304,1311,5.367,2395,3.909,2439,6.36,3478,6.837,3500,7.325,3508,5.483,3510,6.609,3511,8.241,3512,6.609,3513,8.241,3514,5.483,3515,6.609,3516,6.609,3517,6.609,3518,8.241,3519,6.609,3520,6.609,3521,6.609,3522,6.609,3523,6.609,3524,6.609,3525,6.609,3526,6.609,3527,6.609,3528,6.609,3529,6.609,3530,6.609,3531,6.609,3532,6.609]],["title/modules/TaskModule.html",[257,1.359,3294,3.759]],["body/modules/TaskModule.html",[3,0.119,4,0.099,5,0.073,14,0.005,15,0.274,19,1.142,22,0.106,31,0.21,172,0.004,173,0.004,257,2.211,259,2.585,260,3.701,267,4.192,268,3.16,269,2.921,271,3.439,272,2.977,768,3.928,976,6.217,1038,3.719,1778,4.056,2650,7.303,3294,7.73,3411,7.303,3467,7.478,3475,7.303,3533,5.978,3534,5.978,3535,7.303,3536,6.662,3537,6.662,3538,6.662]],["title/injectables/TaskRepo.html",[18,0.895,3535,3.759]],["body/injectables/TaskRepo.html",[3,0.07,4,0.058,5,0.043,8,0.171,13,0.323,14,0.005,15,0.228,18,1.011,19,0.668,22,0.062,31,0.123,35,2.029,69,0.73,71,1.191,72,4.213,74,2.433,76,1.376,77,2.188,78,0.939,114,0.575,123,1.969,128,1.643,129,2.293,149,1.671,172,0.003,173,0.003,182,0.937,187,0.627,189,0.917,190,0.585,199,1.212,216,1.055,298,1.296,306,2.68,318,3.904,326,0.976,327,1.441,328,3.308,353,1.439,354,1.158,355,1.742,379,1.097,384,1.112,388,1.78,409,4.575,436,3.13,491,2.029,538,2.302,539,3.904,541,2.785,673,2.207,742,4.208,777,2.672,798,2.978,851,2.637,852,2.302,853,4.741,920,3.616,980,5.689,981,6.037,985,4.479,986,3.174,1004,4.208,1005,4.208,1007,4.77,1008,4.77,1009,4.77,1010,4.054,1012,3.037,1023,4.91,1037,2.539,1040,3.037,1786,2.373,1970,3.813,2340,4.247,2341,4.372,2395,3.575,2400,3.744,2410,5.873,2431,2.452,2483,2.88,2487,4.054,3469,5.569,3492,3.234,3535,4.247,3539,3.898,3540,6.83,3541,6.83,3542,5.749,3543,3.898,3544,3.898,3545,3.898,3546,5.159,3547,8.698,3548,5.749,3549,3.898,3550,3.898,3551,5.749,3552,3.898,3553,6.978,3554,3.498,3555,3.498,3556,3.498,3557,3.498,3558,8.038,3559,3.898,3560,3.898,3561,3.898,3562,3.898,3563,3.898,3564,3.898,3565,3.898,3566,3.898,3567,3.898,3568,3.898,3569,3.898,3570,3.898,3571,3.898,3572,3.498,3573,2.749,3574,3.898,3575,3.898,3576,3.898,3577,3.898,3578,3.898,3579,3.898,3580,3.898,3581,3.898,3582,3.898,3583,3.898,3584,3.898,3585,3.898,3586,5.749,3587,3.898,3588,3.234,3589,3.234,3590,3.898,3591,3.898,3592,3.898,3593,3.898,3594,3.898,3595,3.898,3596,3.898,3597,3.898,3598,3.898,3599,3.898,3600,3.898,3601,3.898,3602,3.898,3603,3.898,3604,3.898,3605,5.749,3606,3.898,3607,5.749,3608,3.898]],["title/classes/TaskResponse.html",[31,0.161,3500,3.965]],["body/classes/TaskResponse.html",[3,0.089,4,0.074,5,0.054,8,0.217,9,0.785,10,1.714,12,1.048,13,0.346,14,0.005,15,0.221,22,0.109,31,0.216,33,1.053,37,2.085,69,1.279,82,4.797,114,0.695,172,0.003,173,0.003,175,0.941,187,0.82,189,0.604,190,0.749,207,3.308,216,2.275,347,2.508,378,3.538,379,2.677,381,3.478,383,1.343,384,1.416,603,3.357,745,2.457,779,1.991,782,2.848,786,2.887,792,2.848,797,3.813,798,3.537,870,4.448,871,2.887,872,3.5,879,4.622,881,4.753,882,2.633,895,3.5,896,3.5,1045,3.918,1065,5.617,2395,3.703,2430,5.506,2431,4.911,2441,3.5,2912,3.867,2913,3.867,3477,3.867,3499,4.454,3500,7.411,3503,6.978,3504,5.768,3505,4.118,3506,6.128,3507,4.295,3508,7.316,3509,4.454,3609,4.963,3610,4.963,3611,6.829,3612,4.963,3613,4.963,3614,4.963,3615,4.963,3616,4.963,3617,4.963,3618,4.963,3619,4.963,3620,4.963,3621,4.963]],["title/classes/TaskScope.html",[31,0.161,3553,4.222]],["body/classes/TaskScope.html",[3,0.079,4,0.065,5,0.048,8,0.192,9,0.84,13,0.331,14,0.005,15,0.177,22,0.07,31,0.139,33,1.329,35,2.603,76,2.578,78,1.24,114,0.703,123,2.502,128,0.733,168,1.822,172,0.003,173,0.003,175,0.832,182,1.02,187,0.801,189,1.121,190,0.728,192,2.658,199,1.483,306,2.894,326,1.098,374,2.968,379,2.056,383,1.187,384,2.499,388,1.359,486,2.854,491,3.183,511,2.556,673,2.024,777,2.911,851,4.237,920,3.939,986,4.191,992,6.663,999,3.64,1016,4.628,1017,4.628,1020,4.628,1021,3.094,1022,3.418,1023,4.758,1024,3.418,1028,3.241,1029,4.417,1030,3.418,1786,3.813,1871,3.241,1948,4.975,2341,3.973,2395,2.081,2431,5.011,2438,4.417,2445,4.628,2662,3.64,2663,5.62,2665,5.62,2666,3.937,2670,3.937,3039,3.937,3553,8.304,3588,5.197,3589,5.197,3622,9.221,3623,6.264,3624,6.264,3625,6.264,3626,6.264,3627,6.264,3628,6.264,3629,4.387,3630,4.387,3631,6.264,3632,6.264,3633,4.387,3634,6.264,3635,6.264,3636,4.387,3637,6.264,3638,4.387,3639,6.264,3640,4.387,3641,3.241,3642,3.418,3643,3.418,3644,4.387]],["title/classes/TaskStatusMapper.html",[31,0.161,3514,4.222]],["body/classes/TaskStatusMapper.html",[3,0.13,4,0.108,5,0.079,8,0.317,13,0.252,14,0.005,15,0.247,22,0.115,31,0.229,78,0.995,82,3.935,114,0.552,128,1.209,149,1.304,172,0.004,173,0.004,175,1.371,182,1.419,187,0.601,189,0.88,190,0.561,199,1.163,326,1.81,403,3.567,786,3.682,1311,5.673,2434,6.562,3504,6.905,3505,6.001,3514,7.226,3645,8.71,3646,7.233,3647,8.71,3648,7.233,3649,7.233,3650,7.233]],["title/classes/TaskStatusResponse.html",[31,0.161,3504,3.759]],["body/classes/TaskStatusResponse.html",[3,0.113,4,0.094,5,0.069,8,0.275,9,0.917,13,0.339,14,0.005,15,0.178,22,0.1,31,0.198,37,2.6,69,1.494,114,0.479,172,0.004,173,0.004,175,1.191,187,0.81,189,0.764,190,0.487,347,2.447,491,3.258,603,4.248,779,2.519,879,4.764,991,6.446,2435,7.04,2436,7.04,2437,6.72,2438,6.72,2494,4.64,3504,7.04,3651,9.894,3652,6.28,3653,6.28,3654,6.28,3655,6.28,3656,6.28,3657,6.28,3658,6.28,3659,6.28,3660,6.28,3661,6.28,3662,6.28]],["title/injectables/TaskUC.html",[18,0.895,3475,3.759]],["body/injectables/TaskUC.html",[3,0.057,4,0.047,5,0.035,8,0.14,13,0.271,14,0.005,15,0.193,18,0.867,19,0.546,22,0.078,31,0.101,35,2.77,38,3.608,69,0.596,71,1.507,74,2.429,76,2.961,77,2.182,78,1.184,82,4.563,114,0.594,128,1.672,129,2.556,148,2.34,149,1.403,172,0.002,173,0.002,182,0.804,187,0.675,189,0.947,190,0.604,199,1.252,207,1.543,290,4.43,298,1.059,306,2.347,310,1.371,325,5.011,326,0.797,327,1.177,368,3.122,369,1.612,370,1.979,379,1.7,384,1.408,436,1.323,491,1.741,511,2.465,600,2.155,645,1.612,735,2.155,739,3.844,742,4.108,773,4.787,776,4.278,792,4.466,851,3.338,852,2.914,920,3.103,927,3.608,937,1.612,983,4.094,1004,5.344,1005,2.755,1037,2.074,1038,1.778,1040,2.482,1169,2.074,1187,1.65,1464,2.858,1559,2.074,1688,1.827,1778,1.939,1786,3.004,1832,1.778,1906,2.074,1959,1.778,1960,1.732,1972,3.338,1997,2.155,2328,7.181,2340,4.462,2395,2.34,2431,4.278,2434,3.338,2439,2.155,2495,1.827,2833,3.645,2842,4.094,3131,2.858,3411,5.025,3421,2.643,3437,4.427,3439,5.419,3441,6.103,3447,6.103,3459,4.427,3469,4.462,3470,4.427,3472,4.427,3475,3.645,3492,2.643,3535,5.751,3554,4.427,3555,4.427,3556,4.427,3557,4.427,3588,4.094,3589,2.643,3663,2.858,3664,6.04,3665,6.802,3666,4.934,3667,3.185,3668,3.185,3669,3.185,3670,3.185,3671,4.934,3672,3.185,3673,3.185,3674,3.185,3675,4.934,3676,6.103,3677,3.185,3678,3.185,3679,2.858,3680,4.427,3681,2.858,3682,2.858,3683,2.643,3684,4.934,3685,2.246,3686,2.643,3687,2.353,3688,2.246,3689,3.185,3690,2.246,3691,3.185,3692,2.643,3693,4.094,3694,4.934,3695,6.802,3696,4.934,3697,4.934,3698,6.04,3699,6.04,3700,4.934,3701,4.934,3702,4.934,3703,6.802,3704,3.185,3705,7.784,3706,6.04,3707,3.185,3708,4.934,3709,2.643,3710,2.643,3711,4.934,3712,6.04,3713,2.858,3714,2.246,3715,2.858,3716,3.185,3717,2.858,3718,2.482,3719,3.185,3720,3.185,3721,6.802,3722,4.934,3723,3.185,3724,6.802,3725,4.934,3726,4.934,3727,4.934,3728,3.185,3729,2.074,3730,2.858,3731,2.155,3732,2.353,3733,3.185,3734,4.934,3735,3.185,3736,2.858]],["title/classes/TaskWithStatusVo.html",[31,0.161,2439,3.442]],["body/classes/TaskWithStatusVo.html",[0,0.519,3,0.06,4,0.05,5,0.037,8,0.307,9,0.72,10,1.003,12,0.796,13,0.298,14,0.005,15,0.235,22,0.12,31,0.163,33,0.716,35,2.245,37,2.127,54,1.537,69,0.632,76,1.821,78,1.268,82,4.944,114,0.652,123,1.156,128,1.666,145,1.755,149,1.264,172,0.002,173,0.002,175,0.64,187,0.583,189,0.41,190,0.262,205,1.122,216,1.694,306,2.396,314,1.38,352,2.549,353,1.291,354,1.003,358,1.937,368,2.813,369,1.708,370,1.354,375,1.993,379,1.974,388,1.939,393,2.737,469,2.746,486,2.35,491,2.811,497,1.426,498,1.309,501,1.537,505,1.288,511,2.105,513,2.766,515,1.191,525,2.054,526,1.884,578,2.054,595,1.993,673,2.441,677,3.496,702,2.611,703,2.054,719,1.708,722,1.601,725,2.38,735,2.283,737,2.283,741,1.453,744,1.836,745,1.67,836,1.884,837,2.198,840,1.748,842,4.567,843,2.198,894,2.38,919,1.836,991,5.782,1049,2.198,1187,3.243,1280,2.283,1487,2.553,1786,4.269,1948,1.993,2081,2.38,2341,4.109,2395,4.427,2400,4.92,2401,3.812,2416,2.38,2422,3.638,2428,3.638,2429,2.493,2430,3.638,2431,3.938,2432,2.629,2433,2.629,2434,5.782,2435,6.315,2436,5.581,2437,6.028,2438,5.618,2439,3.489,2440,4.019,2441,2.38,2442,4.626,2443,2.629,2444,2.629,2445,2.493,2446,2.629,2447,2.629,2448,2.629,2449,2.629,2450,2.629,2451,2.629,2452,2.629,2453,2.629,2454,2.629,2455,4.019,2456,4.019,2457,4.019,2458,2.629,2459,2.629,2460,2.629,2461,2.629,2462,2.629,2463,3.638,2464,2.054,2465,2.629,2466,2.629,2467,4.019,2468,4.879,2469,2.629,2470,4.019,2471,2.629,2472,2.629,2473,2.629,2474,2.629,2475,4.879,2476,2.629,2477,2.629,2478,2.629,2479,2.629,2480,2.629,2481,2.629,2482,2.629,2483,5.18,2484,2.629,2485,2.629,2486,2.629,2487,2.38,2488,4.019,2489,2.629,2490,2.629,2491,2.629,2492,2.629,2493,2.629,2494,3.811,2495,1.936,2496,2.38,2497,2.629,2498,2.629,2499,2.629,2500,2.629,2501,2.629,2502,2.629,2503,2.629,2504,2.629,2505,4.019,2506,2.629,2507,2.629,2508,2.629,2509,2.629,2510,1.993,2511,1.836,2512,3.811,2513,2.629,2514,5.463,2515,2.629,2516,2.629,2517,2.629,3737,5.158,3738,3.375]],["title/classes/Team.html",[31,0.161,946,2.518]],["body/classes/Team.html",[0,0.669,3,0.119,4,0.099,5,0.073,8,0.291,9,0.951,10,1.608,12,0.992,13,0.328,14,0.005,15,0.234,22,0.132,31,0.21,33,1.756,69,1.245,114,0.739,172,0.004,173,0.004,175,1.261,187,0.783,189,0.809,190,0.516,192,3.01,205,2.211,314,1.823,343,6.095,345,3.561,346,2.667,347,2.312,348,3.09,350,3.09,352,3.039,353,1.664,354,1.975,459,2.915,498,2.579,515,2.919,741,2.862,744,3.616,745,3.291,946,4.094,2301,4.689,2518,7.817,2519,5.966,3237,5.966,3238,5.966,3739,8.272]],["title/classes/TeamNews.html",[31,0.161,974,3.314]],["body/classes/TeamNews.html",[0,0.335,3,0.06,4,0.112,5,0.036,8,0.146,9,0.586,10,1.206,12,1,13,0.34,14,0.005,15,0.241,22,0.119,31,0.22,33,1.592,43,2.826,44,2.883,45,2.576,46,2.72,47,2.883,48,3.291,78,0.457,114,0.53,123,1.138,145,2.063,149,1.353,172,0.002,173,0.002,175,0.63,181,2.927,182,0.831,187,0.802,189,0.404,190,0.677,192,3.509,199,0.535,205,1.105,306,2.011,307,4.08,308,4.007,310,2.67,314,1.654,329,2.344,345,2.195,346,1.333,347,2.437,348,1.545,350,1.545,352,3.173,353,0.832,354,0.987,358,2.974,365,3.139,370,2.488,378,2.045,379,2.112,381,2.011,383,1.678,384,1.77,387,1.645,388,1.029,403,2.368,459,2.72,486,3.418,493,1.682,494,1.682,495,1.682,496,1.682,497,1.405,498,1.289,501,1.514,505,2.368,507,2.023,508,2.641,509,3.901,513,3.123,515,1.173,526,1.855,620,1.855,673,1.647,678,3.512,698,3.901,699,2.524,722,1.576,723,2.09,749,2.09,836,1.855,840,1.721,906,2.09,907,2.455,908,4.257,909,4.223,910,3.919,911,3.69,912,5.139,913,4.531,914,4.887,915,3.972,917,2.757,918,3.449,919,3.784,920,3.207,921,2.757,922,2.757,923,3.767,924,4.375,925,3.767,926,3.767,927,2.705,928,3.449,929,3.596,930,2.757,931,2.757,932,2.757,933,3.663,934,3.901,935,2.757,936,2.757,937,3.139,938,2.757,939,3.596,940,2.757,941,3.767,942,2.757,943,3.767,944,5.291,945,2.757,946,3.07,947,2.455,948,3.901,949,2.455,950,1.808,951,2.248,952,2.09,953,2.165,954,2.248,955,2.455,956,2.248,957,2.455,958,1.855,959,2.455,960,2.455,961,2.455,962,2.455,963,2.248,964,2.455,965,2.248,966,2.455,967,3.767,968,3.776,969,2.455,970,3.767,971,2.455,972,2.455,973,2.165,974,3.321,975,3.767,3740,3.323]],["title/controllers/TeamNewsController.html",[766,2.231,2966,4.222]],["body/controllers/TeamNewsController.html",[3,0.103,4,0.085,5,0.063,8,0.251,12,0.885,13,0.2,14,0.005,15,0.278,19,0.983,22,0.091,31,0.181,38,3.992,71,1.751,74,2.242,77,1.957,78,0.788,112,2.838,114,0.437,128,1.404,129,1.636,145,1.883,149,1.034,172,0.003,173,0.003,182,1.226,187,0.477,189,0.697,190,0.445,199,0.922,326,1.435,327,2.119,328,2.777,347,1.472,766,2.514,768,2.719,770,3.606,773,4.851,774,5.808,776,5.824,777,3.903,778,4.043,779,2.3,780,3.878,781,4.043,782,3.289,786,2.423,790,4.043,853,4.732,908,3.125,946,4.584,986,3.903,1004,4.979,1088,5.306,1103,4.467,1503,3.386,1680,5.283,1734,4.467,1778,3.49,2301,4.043,2843,6.588,2845,6.243,2855,5.682,2857,4.043,2859,4.467,2860,5.144,2861,5.144,2867,4.757,2868,4.757,2869,5.144,2870,5.144,2871,5.144,2872,5.144,2873,5.144,2966,6.243,3741,7.524,3742,5.733,3743,8.399,3744,5.733,3745,7.524,3746,5.733,3747,8.399,3748,5.733,3749,5.733,3750,5.144,3751,5.733,3752,5.733]],["title/classes/TestBootstrapConsole.html",[31,0.161,3753,4.566]],["body/classes/TestBootstrapConsole.html",[3,0.124,4,0.103,5,0.076,8,0.303,12,0.728,14,0.005,15,0.24,22,0.135,31,0.218,33,1.799,43,3.15,44,3.213,45,2.871,46,3.032,47,3.213,48,3.668,74,1.846,77,2.384,78,1.165,128,1.416,129,1.972,172,0.004,173,0.004,175,1.311,182,1.38,187,0.575,199,1.112,272,3.09,632,4.731,642,3.28,1700,5.481,1745,3.761,1747,5.736,1748,6.204,1758,5.387,1761,5.108,2106,5.736,2973,4.677,3274,6.603,3753,7.604,3754,6.204,3755,9.164,3756,6.914,3757,7.604,3758,6.914,3759,5.736,3760,6.204,3761,6.204,3762,6.204,3763,6.204]],["title/injectables/TimeoutInterceptor.html",[18,0.895,2539,4.222]],["body/injectables/TimeoutInterceptor.html",[3,0.099,4,0.083,5,0.061,8,0.243,9,0.846,13,0.288,14,0.005,15,0.249,18,1.295,19,0.951,20,4.324,21,4.1,22,0.088,31,0.175,35,2.456,37,2.514,43,2.528,44,2.579,45,3.656,46,2.433,47,2.579,48,2.944,54,2.528,78,1.211,114,0.562,168,2.304,172,0.003,173,0.003,182,1.2,187,0.762,189,0.896,190,0.683,199,1.184,216,1.501,280,4.604,298,1.845,383,1.501,384,1.583,396,5.198,403,3.155,458,4.324,672,4.982,675,3.018,766,3.229,1558,5.441,1680,4.632,1746,5.738,1751,6.11,1812,4.979,1827,6.608,1828,6.608,1829,6.86,1830,7.9,1832,3.098,1833,7.417,1836,4.604,1959,4.112,1960,4.006,2149,4.1,2537,6.958,2539,6.11,2795,5.738,3764,5.549,3765,7.364,3766,5.738,3767,5.194,3768,6.11,3769,8.266,3770,8.266,3771,5.549,3772,5.549,3773,7.417,3774,5.549,3775,5.549,3776,5.549,3777,5.549,3778,5.549,3779,7.364,3780,7.364,3781,5.549,3782,7.364,3783,5.549,3784,5.549,3785,5.549,3786,5.549,3787,5.549,3788,7.364,3789,5.549,3790,5.549]],["title/classes/UpdateNewsParams.html",[31,0.161,2852,3.965]],["body/classes/UpdateNewsParams.html",[3,0.11,4,0.092,5,0.067,8,0.27,9,1.054,12,0.965,13,0.303,14,0.005,15,0.223,22,0.098,31,0.29,172,0.004,173,0.004,175,1.168,181,3.502,187,0.723,190,0.612,216,2.48,314,2.136,347,2.233,379,2.22,415,4.289,779,2.472,786,3.333,908,4.143,910,4.689,911,4.613,1043,5.113,1045,4.524,1047,5.53,1049,5.136,1050,4.959,1051,6.144,1052,5.826,1065,5.413,1066,7.075,1067,6.772,1068,6.775,1069,3.441,1387,4.402,2302,5.561,2807,6.542,2808,6.542,2809,5.561,2810,6.144,2852,6.144,3791,9.166,3792,7.885,3793,6.163,3794,6.163,3795,6.163]],["title/classes/User.html",[31,0.161,145,1.273]],["body/classes/User.html",[0,0.511,3,0.091,4,0.076,5,0.056,8,0.389,9,0.797,10,1.347,12,1.033,13,0.337,14,0.005,15,0.24,22,0.11,31,0.16,33,1.471,69,0.949,114,0.647,121,5.527,145,1.734,149,1.53,172,0.003,173,0.003,175,0.961,187,0.815,189,0.617,190,0.69,192,3.088,205,1.686,314,1.527,345,2.983,346,2.034,347,2.49,348,2.356,350,2.356,352,3.169,353,1.269,354,1.506,358,3.527,378,2.78,379,1.951,381,2.734,383,2.136,384,2.252,387,2.51,388,2.445,459,2.223,493,2.566,494,2.566,495,2.566,496,2.566,497,2.143,498,1.967,505,1.935,513,3.347,515,2.446,678,3.771,698,3.189,699,3.43,702,3.507,710,5.399,719,2.566,723,3.189,741,2.182,748,3.576,749,3.189,1904,4.887,2309,4.989,2311,3.087,2312,3.589,2317,5.337,2318,5.337,2367,3.951,2371,3.951,2520,7.041,2521,4.55,2522,4.55,2523,4.55,2524,4.55,2525,4.55,2526,4.207,2527,4.55,2528,4.207,2529,4.55,2530,4.55,2531,4.55,3202,4.55,3796,6.93,3797,5.07,3798,5.07,3799,5.07,3800,5.07,3801,5.07,3802,5.07,3803,5.07]],["title/controllers/UserController.html",[766,2.231,3804,4.222]],["body/controllers/UserController.html",[3,0.123,4,0.102,5,0.075,8,0.3,13,0.238,14,0.005,15,0.282,19,1.173,22,0.109,31,0.216,71,2.09,74,2.435,77,2.19,78,0.941,114,0.522,145,1.712,172,0.004,173,0.004,182,1.372,187,0.569,189,0.832,190,0.531,199,1.1,326,1.712,327,2.529,347,1.757,766,3,768,3.245,770,4.303,773,5.177,776,5.737,778,4.825,779,2.745,780,4.628,781,4.825,790,4.825,1778,4.166,2601,4.456,3804,6.986,3805,6.842,3806,6.842,3807,8.42,3808,6.842,3809,6.433,3810,6.842,3811,6.842,3812,6.842,3813,6.842,3814,6.842]],["title/injectables/UserFacade.html",[18,0.895,2580,3.759]],["body/injectables/UserFacade.html",[3,0.123,4,0.102,5,0.075,8,0.3,13,0.293,14,0.005,15,0.27,18,1.482,19,1.175,22,0.109,31,0.217,69,1.284,71,2.094,74,2.438,76,2.42,77,2.193,78,0.943,114,0.643,128,1.146,129,1.956,172,0.004,173,0.004,182,1.373,187,0.701,189,1.025,190,0.654,199,1.103,298,2.28,306,2.754,326,1.716,327,2.535,860,4.466,2580,6.229,2601,5.946,3809,7.02,3815,6.857,3816,8.431,3817,6.857,3818,6.857,3819,8.431,3820,6.857,3821,6.857,3822,6.857]],["title/classes/UserInfoMapper.html",[31,0.161,2932,4.222]],["body/classes/UserInfoMapper.html",[3,0.128,4,0.106,5,0.078,8,0.313,10,1.388,13,0.248,14,0.005,15,0.245,22,0.113,31,0.226,78,0.982,114,0.544,128,1.193,145,2.475,149,1.287,172,0.004,173,0.004,175,1.354,182,1.408,187,0.594,189,0.868,190,0.554,199,1.148,326,1.786,403,3.547,786,3.653,860,4.65,1311,5.628,2317,4.49,2318,4.49,2904,7.135,2932,7.169,3173,7.754,3175,5.563,3177,6.406,3179,6.406,3240,5.923,3242,5.923,3823,8.641]],["title/classes/UserInfoResponse.html",[31,0.161,2904,3.759]],["body/classes/UserInfoResponse.html",[3,0.113,4,0.094,5,0.069,8,0.276,9,0.918,10,1.924,12,1.026,13,0.322,14,0.005,15,0.178,22,0.1,31,0.199,69,1.496,114,0.727,145,2.438,172,0.004,173,0.004,175,1.193,187,0.768,189,0.765,190,0.74,216,2.499,314,1.761,347,2.254,603,4.257,779,2.524,879,3.714,882,3.338,887,3.423,888,4.585,889,4.585,1065,5.185,2317,5.996,2318,5.996,2526,5.221,2528,5.221,2904,7.044,3023,7.17,3026,4.903,3069,5.635,3247,5.221,3248,5.221,3824,9.534,3825,6.292,3826,6.292,3827,7.991,3828,6.292]],["title/modules/UserModule.html",[257,1.359,264,3.588]],["body/modules/UserModule.html",[3,0.117,4,0.097,5,0.072,14,0.005,15,0.273,19,1.122,22,0.104,31,0.207,172,0.004,173,0.004,257,2.186,259,2.538,260,3.66,264,7.387,267,4.145,268,3.103,269,2.869,271,3.401,293,3.967,766,2.869,768,3.884,1038,3.653,1778,3.983,2580,7.656,3206,7.27,3223,7.27,3804,7.417,3809,6.94,3829,5.871,3830,5.871,3831,5.871,3832,6.94,3833,6.543,3834,6.543]],["title/injectables/UserRepo.html",[18,0.895,3832,3.588]],["body/injectables/UserRepo.html",[3,0.123,4,0.102,5,0.075,8,0.3,10,1.639,13,0.293,14,0.005,15,0.258,18,1.482,19,1.175,22,0.109,31,0.217,69,1.284,71,2.094,74,2.438,77,2.193,78,0.943,114,0.643,128,1.146,129,1.956,145,2.284,172,0.004,173,0.004,182,1.373,187,0.701,189,1.025,190,0.654,199,1.103,298,2.28,306,2.754,326,1.716,327,2.535,353,1.716,355,3.064,538,4.049,539,4.933,541,4.084,3209,7.565,3213,7.565,3832,5.946,3835,6.857,3836,6.857,3837,6.857,3838,6.857]],["title/injectables/UserUC.html",[18,0.895,3809,3.588]],["body/injectables/UserUC.html",[3,0.113,4,0.094,5,0.069,8,0.275,13,0.278,14,0.005,15,0.276,18,1.403,19,1.077,22,0.1,31,0.198,35,1.866,69,1.176,71,2.437,74,2.342,76,2.216,77,2.076,78,0.864,114,0.609,128,1.543,129,2.277,145,1.572,172,0.004,173,0.004,182,1.3,187,0.664,189,0.971,190,0.619,199,1.01,298,2.089,306,2.669,326,1.572,327,2.322,368,2.519,645,3.179,1038,3.506,1420,4.64,2309,4.341,2311,3.824,2601,5.714,3171,5.211,3223,7.31,3693,5.211,3710,5.211,3731,4.248,3809,5.628,3832,6.868,3839,6.28,3840,7.981,3841,6.28,3842,6.28,3843,7.981,3844,6.28,3845,6.28,3846,6.28,3847,5.636,3848,5.211,3849,4.893,3850,6.28,3851,6.28,3852,5.636,3853,6.28,3854,5.636,3855,6.28,3856,6.28]],["title/classes/ValidationError.html",[31,0.161,186,3.759]],["body/classes/ValidationError.html",[3,0.109,4,0.091,5,0.067,8,0.268,9,0.901,12,1.018,13,0.35,14,0.005,15,0.222,19,1.047,22,0.097,30,5.941,31,0.193,33,1.664,34,2.782,37,1.63,69,1.143,71,3.097,84,5.274,114,0.466,172,0.004,173,0.004,175,1.158,178,6.859,179,3.643,180,6.08,181,3.2,182,1.277,183,7.183,184,7.183,186,5.791,187,0.828,189,0.743,190,0.474,192,3.578,193,5.479,194,5.479,195,5.479,196,5.479,197,5.479,198,5.479,199,1.261,200,5.479,201,3.84,202,4.757,203,5.479,204,5.066,205,2.03,208,3.503,209,4.511,212,5.479,436,2.535,3857,6.106,3858,6.106,3859,6.106,3860,6.106]],["title/classes/ValidationErrorDetailResponse.html",[31,0.161,222,4.222]],["body/classes/ValidationErrorDetailResponse.html",[3,0.136,4,0.113,5,0.083,12,1.073,13,0.263,14,0.005,22,0.12,31,0.239,34,4.076,69,1.417,71,2.311,114,0.577,172,0.004,173,0.004,175,1.435,187,0.629,189,0.92,190,0.587,204,6.277,219,5.466,222,7.423,3861,8.947,3862,7.566,3863,7.566,3864,7.566,3865,8.028]],["title/modules/ValidationModule.html",[257,1.359,654,3.759]],["body/modules/ValidationModule.html",[3,0.136,4,0.113,5,0.083,14,0.005,15,0.27,19,1.3,22,0.121,31,0.24,172,0.004,173,0.004,257,2.392,259,2.942,271,3.149,654,6.619,668,8.039,1749,4.939,1759,3.928,1897,5.909,2243,7.433,3866,7.584,3867,7.584,3868,7.584]],["title/dependencies.html",[260,2.735,3869,3.812]],["body/dependencies.html",[4,0.062,5,0.066,10,0.812,13,0.145,14,0.005,19,0.716,24,2.72,31,0.191,43,2.754,74,1.614,77,2.026,121,2.72,127,2.72,172,0.003,173,0.003,207,2.023,260,1.866,274,3.253,276,3.747,296,3.967,321,1.902,353,1.778,354,1.241,355,1.866,456,2.72,589,3.253,599,4.806,632,2.331,642,1.981,645,2.113,656,2.945,658,2.825,729,2.825,779,1.675,918,4.089,934,2.626,1069,3.967,1128,2.825,1381,3.253,1460,3.747,1648,3.253,1707,2.945,1749,2.72,1836,3.464,1862,2.825,1863,3.937,1864,3.464,1960,3.288,1979,5.268,1980,3.464,2013,3.747,2067,2.72,2089,3.747,2556,2.945,2587,6.375,2588,2.945,2623,3.747,2699,3.085,2700,2.945,2735,3.253,2794,3.085,3068,3.747,3274,3.253,3316,6.851,3373,3.747,3870,6.045,3871,8.886,3872,5.424,3873,4.176,3874,4.176,3875,4.176,3876,4.176,3877,4.176,3878,6.045,3879,4.176,3880,7.788,3881,4.176,3882,4.176,3883,4.176,3884,4.176,3885,4.176,3886,4.176,3887,4.176,3888,4.176,3889,4.176,3890,4.176,3891,3.464,3892,6.045,3893,4.176,3894,6.045,3895,4.176,3896,6.045,3897,4.176,3898,4.176,3899,4.176,3900,4.176,3901,4.176,3902,4.176,3903,6.045,3904,4.176,3905,6.045,3906,4.176,3907,4.176,3908,4.176,3909,4.176,3910,4.176,3911,4.176,3912,4.176,3913,4.176,3914,3.747,3915,4.176,3916,4.176,3917,4.176,3918,4.176,3919,6.045,3920,4.176,3921,4.176,3922,4.176,3923,7.105,3924,7.788,3925,4.176,3926,4.176,3927,4.176,3928,6.045,3929,4.176,3930,6.045,3931,6.045,3932,4.176,3933,4.71,3934,4.176,3935,4.176,3936,3.085,3937,4.176,3938,3.085,3939,4.176,3940,4.176,3941,5.424,3942,4.176,3943,4.176,3944,4.176,3945,4.176,3946,6.045,3947,4.176,3948,4.176,3949,4.176,3950,4.176,3951,4.176,3952,4.176,3953,4.176,3954,4.176,3955,4.176,3956,4.176,3957,4.176,3958,4.176,3959,4.176,3960,4.176,3961,4.176,3962,4.176,3963,4.176,3964,6.045,3965,5.424,3966,4.176,3967,4.176,3968,4.176,3969,4.176,3970,3.747,3971,4.176,3972,4.176,3973,6.045,3974,4.176,3975,4.176,3976,4.176,3977,4.176,3978,4.176,3979,4.176,3980,4.176,3981,4.176,3982,4.176,3983,4.176,3984,4.176,3985,4.176,3986,4.176,3987,6.045,3988,4.176,3989,4.176,3990,4.176,3991,4.176,3992,4.176,3993,4.176,3994,4.176,3995,4.176,3996,6.045,3997,3.747,3998,4.176,3999,4.176,4000,4.176,4001,4.176,4002,4.176,4003,4.176,4004,4.176,4005,4.176,4006,4.176,4007,3.747,4008,4.176,4009,4.176,4010,4.176,4011,4.176,4012,4.176,4013,4.176,4014,4.176,4015,4.176,4016,3.464,4017,4.176,4018,4.176,4019,4.176,4020,4.176,4021,4.176,4022,4.176,4023,4.176,4024,4.176,4025,4.176,4026,4.176,4027,4.176,4028,4.176,4029,4.176,4030,4.176,4031,4.176]],["title/miscellaneous/enumerations.html",[4032,2.767,4033,5.492]],["body/miscellaneous/enumerations.html",[8,0.316,14,0.005,172,0.004,173,0.004,308,4.403,384,2.933,673,3.017,678,2.847,721,6.777,742,4.03,946,3.572,1037,5.665,1732,6.426,2067,4.701,2079,5.332,2295,5.624,2300,5.09,2301,5.09,2325,5.624,2326,6.777,2329,7.217,3412,6.476,3421,7.217,3663,6.476,3676,7.805,3679,6.476,3680,6.476,3681,6.476,3682,6.476,4032,4.701,4033,6.476,4034,6.476,4035,6.476,4036,6.476,4037,7.218,4038,7.218,4039,6.476]],["title/miscellaneous/functions.html",[4032,2.767,4040,4.522]],["body/miscellaneous/functions.html",[8,0.238,12,0.919,13,0.304,14,0.005,34,3.725,38,2.881,114,0.666,123,1.86,139,5.142,143,4.631,172,0.003,173,0.003,178,4.91,189,1.062,190,0.677,199,1.463,201,4.565,207,2.63,314,1.197,321,3.725,362,3.673,370,2.178,374,3.673,384,2.071,423,3.83,436,2.255,469,2.381,491,1.916,499,4.691,511,2.216,638,6.153,786,2.295,918,6.465,952,3.415,1083,5.154,1187,2.813,1408,4.91,1756,3.76,1795,4.505,1873,4.505,1949,5.363,1958,4.287,1983,3.83,2007,4.873,2011,4.873,2016,4.873,2035,6.513,2050,4.505,2055,4.873,2071,4.873,2163,4.505,2164,6.801,2197,4.505,2200,4.505,2204,4.505,2222,6.022,2226,5.656,2495,3.116,2535,3.415,2677,4.505,2884,4.012,2895,7.337,3271,6.041,3503,6.784,3759,7.766,3938,4.012,4032,3.537,4040,4.012,4041,5.43,4042,5.43,4043,7.259,4044,7.337,4045,7.259,4046,7.259,4047,5.43,4048,5.43,4049,7.259,4050,5.43,4051,7.259,4052,5.43,4053,5.43,4054,5.43,4055,7.242,4056,4.873,4057,7.259,4058,4.873,4059,5.43,4060,5.43,4061,4.873,4062,4.505,4063,7.259,4064,7.259,4065,7.259,4066,4.873,4067,5.43,4068,4.873,4069,7.337,4070,4.873,4071,5.43,4072,5.43,4073,4.505,4074,4.873,4075,4.873,4076,5.43,4077,5.43,4078,7.259,4079,5.43,4080,5.43]],["title/index.html",[8,0.186,3714,2.996,4081,3.525]],["body/index.html",[10,0.882,14,0.004,34,2.923,37,1.987,54,2.068,84,2.534,114,0.489,149,0.818,172,0.003,173,0.003,179,3.459,180,2.855,181,1.678,207,3.108,211,3.108,216,1.228,218,2.956,260,2.028,296,4.765,324,2.956,356,3.536,362,5.472,363,3.681,366,5.323,367,2.855,369,2.297,370,1.821,374,3.07,383,1.228,393,3.404,402,3.201,418,2.763,534,2.534,600,4.34,601,4.997,642,4.048,662,2.855,664,3.201,734,3.353,770,4.681,891,2.855,908,2.664,929,3.201,933,2.68,968,3.906,1005,2.534,1045,2.604,1050,2.855,1169,2.956,1475,2.956,1499,5.083,1512,2.855,1614,3.07,1628,5.977,1643,6.059,1650,2.956,1700,4.27,1705,3.201,1716,4.34,1727,3.582,1744,3.353,1745,2.469,1756,3.323,1832,2.534,1861,3.353,1862,3.07,1863,4.179,1909,5.499,1958,2.68,1960,3.49,1970,2.534,1979,5.472,1981,3.766,1990,4.34,2067,2.956,2214,4.34,2219,3.536,2259,3.201,2510,2.68,2540,3.07,2552,4.073,2781,3.766,2884,3.353,3007,4.74,3008,2.956,3069,3.201,3135,4.073,3573,3.201,3642,3.536,3685,3.201,3687,4.74,3729,4.847,3938,3.353,4082,3.536,4083,7.351,4084,5.757,4085,4.539,4086,4.74,4087,3.536,4088,3.201,4089,3.766,4090,3.536,4091,4.073,4092,3.766,4093,3.536,4094,5.323,4095,4.34,4096,4.073,4097,4.539,4098,5.757,4099,5.977,4100,4.073,4101,3.766,4102,5.757,4103,5.323,4104,4.539,4105,4.539,4106,4.539,4107,3.536,4108,5.249,4109,3.766,4110,3.766,4111,6.416,4112,4.073,4113,3.766,4114,6.416,4115,4.073,4116,4.073,4117,3.353,4118,3.766,4119,7.443,4120,5.249,4121,4.073,4122,4.539,4123,4.073,4124,7.443,4125,4.999,4126,4.539,4127,3.766,4128,4.999,4129,3.536,4130,4.073,4131,4.539,4132,4.539,4133,4.539,4134,4.539,4135,4.073,4136,3.353,4137,3.536,4138,4.539,4139,4.073,4140,6.416,4141,6.416,4142,3.353,4143,9.108,4144,6.678,4145,8.535,4146,8.09,4147,4.539,4148,4.539,4149,4.539,4150,4.539,4151,6.416,4152,5.323,4153,4.073,4154,4.539,4155,3.766,4156,4.539,4157,6.416,4158,4.539,4159,4.073,4160,4.073,4161,6.416,4162,6.416,4163,3.353,4164,3.353,4165,3.766,4166,4.539,4167,5.323,4168,4.539,4169,3.536,4170,4.539,4171,3.536,4172,4.539,4173,4.073,4174,4.073,4175,4.073,4176,3.766,4177,4.999,4178,5.757,4179,4.539,4180,4.073,4181,4.539,4182,4.073,4183,4.539,4184,3.766,4185,3.353]],["title/license.html",[3714,2.996,4081,3.525,4186,3.812]],["body/license.html",[0,0.451,2,0.714,4,0.136,5,0.02,14,0.001,15,0.028,31,0.031,35,0.293,37,0.482,40,1.607,45,0.409,46,0.432,56,1.408,60,2.699,72,0.432,73,4.983,78,0.135,82,0.536,112,2.94,118,0.666,127,0.641,145,1.636,149,0.872,168,0.409,172,0.001,173,0.001,179,4.017,180,0.619,182,0.16,187,0.082,211,1.503,218,1.177,246,0.641,252,0.582,253,2.654,269,0.432,310,2.342,312,1.951,314,0.398,318,0.936,323,2.247,324,4.009,352,0.332,357,3.714,370,2.963,375,5.847,379,0.277,393,2.162,415,0.536,418,1.889,419,4.018,430,1.503,435,0.641,438,0.666,457,1.622,478,6.992,506,1.535,534,1.009,578,0.6,596,0.619,598,1.067,601,0.498,615,0.695,645,0.915,658,0.666,663,0.767,678,0.388,724,0.619,727,1.951,732,0.817,798,0.936,799,0.959,822,0.817,871,1.058,891,0.619,892,0.641,910,0.487,924,0.619,927,2.887,928,0.666,952,2.277,986,0.458,1005,1.009,1045,1.437,1050,1.951,1052,0.728,1054,2.188,1062,0.619,1169,1.631,1182,2.654,1187,1.875,1202,2.554,1213,0.641,1377,1.335,1474,5.565,1475,0.641,1501,2.554,1502,1.832,1504,1.067,1617,1.222,1647,0.817,1650,2.358,1677,3.472,1680,1.575,1681,3.868,1688,2.338,1710,0.817,1716,1.694,1727,1.398,1756,2.953,1759,2.111,1771,0.884,1773,1.622,1796,2.247,1818,2.188,1832,0.55,1871,3.571,1906,2.02,1907,3.291,1909,3.571,1957,1.694,1970,1.009,1979,1.222,1997,0.666,2030,0.767,2056,0.695,2076,4.011,2186,1.222,2251,0.728,2260,2.292,2262,1.335,2311,3.472,2463,0.695,2495,1.78,2510,3.213,2511,1.687,2512,0.728,2553,0.817,2556,1.766,2604,0.817,2620,4.627,2675,0.728,2678,0.666,2680,0.728,2747,0.767,2775,0.695,2776,3.308,2778,0.817,2779,3.011,2782,2.077,2794,2.292,2810,4.015,2874,0.817,2884,4.388,2973,0.666,3007,1.335,3008,2.654,3069,0.695,3077,0.767,3127,2.077,3255,0.884,3271,1.335,3276,0.884,3451,2.247,3498,1.766,3573,3.409,3641,1.335,3683,2.574,3686,0.817,3688,1.274,3690,1.766,3709,1.499,3710,3.004,3713,2.247,3718,0.767,3729,2.654,3736,2.247,3750,1.622,3767,2.188,3847,2.247,3848,0.817,3852,0.884,3872,1.622,3938,0.728,4058,2.783,4061,0.884,4066,0.884,4068,0.884,4069,0.884,4074,0.884,4083,0.817,4092,0.817,4099,4.02,4100,0.884,4103,7.383,4108,3.157,4117,5.277,4118,6.846,4120,0.695,4121,2.247,4127,3.714,4129,0.767,4136,1.85,4152,0.817,4160,0.884,4163,1.85,4167,2.574,4169,1.408,4177,1.951,4180,1.622,4186,8.95,4187,6.862,4188,6.706,4189,5.923,4190,7.619,4191,3.714,4192,0.985,4193,0.985,4194,2.504,4195,8.114,4196,5.564,4197,5.999,4198,3.621,4199,0.985,4200,0.985,4201,1.807,4202,3.621,4203,2.504,4204,2.504,4205,5.939,4206,0.884,4207,0.985,4208,0.985,4209,1.622,4210,3.621,4211,3.714,4212,1.807,4213,1.807,4214,5.702,4215,4.834,4216,0.985,4217,0.985,4218,4.075,4219,1.622,4220,2.417,4221,0.884,4222,0.884,4223,5.117,4224,8.86,4225,2.504,4226,2.247,4227,0.985,4228,0.985,4229,3.102,4230,5.154,4231,0.985,4232,5.154,4233,0.985,4234,3.621,4235,0.728,4236,0.985,4237,3.102,4238,0.817,4239,5.866,4240,0.817,4241,0.884,4242,0.884,4243,5.441,4244,5.702,4245,3.621,4246,5.939,4247,0.985,4248,1.807,4249,0.985,4250,0.985,4251,2.247,4252,0.985,4253,0.985,4254,0.985,4255,0.985,4256,1.622,4257,0.985,4258,0.985,4259,3.102,4260,0.985,4261,0.884,4262,2.504,4263,6.862,4264,0.985,4265,0.985,4266,0.985,4267,2.077,4268,2.504,4269,1.622,4270,0.985,4271,0.985,4272,2.247,4273,0.767,4274,1.807,4275,1.807,4276,2.504,4277,0.985,4278,5.107,4279,3.621,4280,3.621,4281,4.075,4282,2.077,4283,2.504,4284,1.807,4285,0.985,4286,0.985,4287,0.985,4288,2.504,4289,0.985,4290,0.985,4291,1.807,4292,0.985,4293,1.807,4294,0.985,4295,0.985,4296,3.102,4297,0.884,4298,1.807,4299,8.82,4300,2.504,4301,5.154,4302,2.783,4303,1.408,4304,0.985,4305,1.807,4306,2.504,4307,5.154,4308,5.441,4309,2.783,4310,0.985,4311,3.102,4312,1.807,4313,3.102,4314,0.985,4315,2.504,4316,0.767,4317,7.879,4318,1.622,4319,0.985,4320,4.834,4321,0.985,4322,2.247,4323,2.874,4324,0.985,4325,6.537,4326,2.247,4327,1.807,4328,5.702,4329,4.075,4330,0.985,4331,1.807,4332,4.477,4333,0.985,4334,6.156,4335,1.807,4336,0.985,4337,0.817,4338,0.985,4339,2.504,4340,0.985,4341,0.985,4342,0.985,4343,0.817,4344,5.117,4345,2.504,4346,2.783,4347,0.985,4348,0.985,4349,0.985,4350,1.622,4351,5.441,4352,0.884,4353,1.622,4354,0.817,4355,0.817,4356,2.247,4357,2.504,4358,2.504,4359,0.817,4360,0.985,4361,3.249,4362,3.004,4363,0.884,4364,1.274,4365,2.247,4366,0.985,4367,0.884,4368,0.985,4369,0.985,4370,1.622,4371,0.985,4372,7.144,4373,2.247,4374,0.728,4375,3.657,4376,4.731,4377,1.807,4378,1.807,4379,3.004,4380,0.985,4381,0.728,4382,0.985,4383,0.985,4384,1.807,4385,3.004,4386,0.985,4387,1.499,4388,0.985,4389,0.767,4390,3.004,4391,0.985,4392,2.292,4393,0.817,4394,4.477,4395,2.574,4396,0.985,4397,3.249,4398,0.985,4399,0.985,4400,0.985,4401,0.985,4402,0.985,4403,0.985,4404,2.504,4405,0.985,4406,0.985,4407,1.622,4408,1.807,4409,1.807,4410,0.985,4411,6.156,4412,1.622,4413,0.985,4414,0.985,4415,0.884,4416,0.985,4417,0.985,4418,2.504,4419,0.884,4420,0.985,4421,5.866,4422,0.767,4423,0.985,4424,0.985,4425,0.985,4426,3.621,4427,3.657,4428,0.985,4429,0.985,4430,2.504,4431,0.985,4432,0.985,4433,3.102,4434,0.985,4435,1.807,4436,0.985,4437,0.985,4438,0.985,4439,0.985,4440,0.985,4441,0.985,4442,1.807,4443,0.985,4444,0.985,4445,0.985,4446,1.807,4447,0.985,4448,0.985,4449,0.985,4450,0.985,4451,0.985,4452,1.807,4453,1.807,4454,4.624,4455,0.985,4456,4.075,4457,0.985,4458,0.985,4459,1.622,4460,2.504,4461,3.102,4462,3.102,4463,3.102,4464,0.985,4465,3.249,4466,3.249,4467,0.985,4468,2.504,4469,0.985,4470,1.807,4471,0.985,4472,1.622,4473,3.621,4474,1.807,4475,3.102,4476,3.102,4477,0.985,4478,2.504,4479,3.249,4480,0.985,4481,0.985,4482,2.077,4483,3.714,4484,1.807,4485,0.728,4486,0.985,4487,0.884,4488,0.985,4489,0.985,4490,0.985,4491,2.247,4492,0.985,4493,0.985,4494,1.622,4495,0.985,4496,0.985,4497,1.807,4498,0.985,4499,2.504,4500,0.985,4501,0.884,4502,2.077,4503,1.807,4504,4.075,4505,6.628,4506,2.504,4507,1.807,4508,1.807,4509,1.807,4510,1.807,4511,3.102,4512,1.622,4513,0.884,4514,0.985,4515,0.985,4516,0.985,4517,3.657,4518,1.807,4519,0.985,4520,0.985,4521,0.985,4522,0.985,4523,1.807,4524,0.985,4525,1.807,4526,0.985,4527,0.985,4528,3.571,4529,0.985,4530,5.117,4531,0.884,4532,0.985,4533,0.985,4534,0.985,4535,1.807,4536,0.985,4537,2.675,4538,3.102,4539,1.807,4540,0.884,4541,0.985,4542,1.622,4543,0.985,4544,0.985,4545,0.985,4546,1.807,4547,0.985,4548,0.985,4549,0.817,4550,2.783,4551,0.985,4552,1.807,4553,1.807,4554,0.985,4555,0.985,4556,2.247,4557,0.985,4558,0.985,4559,0.985,4560,0.985,4561,3.102,4562,0.985,4563,0.985,4564,0.884,4565,0.884,4566,2.077,4567,0.985,4568,0.884,4569,0.985,4570,0.985,4571,0.985,4572,3.621,4573,0.985,4574,0.985,4575,0.884,4576,3.102,4577,0.985,4578,0.985,4579,0.985,4580,0.985,4581,0.985,4582,0.985,4583,0.884,4584,3.714,4585,0.985,4586,3.102,4587,0.985,4588,0.985,4589,2.504,4590,0.985,4591,0.817,4592,2.504,4593,0.985,4594,1.807,4595,0.985,4596,0.985,4597,0.985,4598,0.985,4599,0.985,4600,0.985,4601,0.985,4602,0.767,4603,0.884,4604,0.985,4605,1.622,4606,0.985,4607,0.728,4608,1.807,4609,0.884,4610,0.985,4611,3.102,4612,0.985,4613,0.985,4614,1.807,4615,2.504,4616,2.504,4617,0.817,4618,1.807,4619,0.985,4620,2.504,4621,4.477,4622,0.985,4623,1.807,4624,1.622,4625,0.985,4626,1.807,4627,0.985,4628,0.985,4629,0.985,4630,1.807,4631,0.985,4632,3.102,4633,2.504,4634,0.985,4635,3.621,4636,0.985,4637,0.985,4638,0.985,4639,0.985,4640,0.985,4641,1.807,4642,1.807,4643,1.622,4644,2.504,4645,0.884,4646,1.807,4647,0.985,4648,2.504,4649,0.985,4650,1.499,4651,0.985,4652,1.807,4653,0.985,4654,0.985,4655,1.807,4656,7.602,4657,2.504,4658,0.985,4659,3.621,4660,5.441,4661,2.504,4662,0.985,4663,0.985,4664,0.985,4665,3.102,4666,0.817,4667,0.985,4668,0.985,4669,0.985,4670,0.985,4671,0.985,4672,0.985,4673,0.985,4674,0.985,4675,0.985,4676,3.102,4677,1.807,4678,0.985,4679,0.985,4680,2.504,4681,0.985,4682,1.807,4683,2.504,4684,0.884,4685,1.807,4686,0.985,4687,0.985,4688,0.985,4689,0.985,4690,1.807,4691,2.504,4692,0.884,4693,0.985,4694,0.985,4695,1.807,4696,0.985,4697,0.884,4698,0.985,4699,0.985,4700,0.985,4701,2.504,4702,1.807,4703,0.884,4704,0.985,4705,0.985,4706,3.102,4707,0.985,4708,2.504,4709,0.985,4710,0.985,4711,1.807,4712,0.985,4713,0.985,4714,0.985,4715,2.504,4716,1.807,4717,1.807,4718,0.985,4719,1.807,4720,4.477,4721,1.622,4722,2.504,4723,3.102,4724,0.884,4725,0.985,4726,1.807,4727,0.985,4728,2.504,4729,0.985,4730,1.622,4731,0.985,4732,0.985,4733,0.985,4734,0.985,4735,0.985,4736,2.504,4737,1.807,4738,0.985,4739,0.884,4740,0.985,4741,0.985,4742,1.807,4743,1.807,4744,0.985,4745,1.622,4746,0.985,4747,0.985,4748,0.817,4749,0.985,4750,2.504,4751,0.985,4752,0.985,4753,0.985,4754,0.985,4755,1.807,4756,2.504,4757,0.985,4758,0.985,4759,0.985,4760,0.985,4761,1.807,4762,0.985,4763,0.985,4764,0.985,4765,0.985,4766,0.985,4767,0.985,4768,0.985,4769,0.985,4770,0.767,4771,0.985,4772,0.985,4773,0.985,4774,0.985,4775,0.985,4776,3.102,4777,0.985,4778,0.985,4779,1.807,4780,0.985,4781,0.985,4782,0.985,4783,0.985,4784,0.985,4785,0.985,4786,0.985,4787,0.817,4788,0.985,4789,0.985,4790,0.985,4791,0.884,4792,1.807,4793,0.985,4794,0.985,4795,0.985,4796,0.985,4797,1.622,4798,1.807,4799,0.985,4800,0.817,4801,0.985,4802,0.884,4803,0.884,4804,0.817,4805,0.695,4806,0.985,4807,1.807,4808,1.807,4809,0.985,4810,1.622,4811,0.985,4812,0.985,4813,0.985,4814,2.504,4815,1.499,4816,0.985,4817,1.622,4818,1.807,4819,1.807,4820,0.985,4821,0.817,4822,0.985,4823,0.884,4824,0.985,4825,0.884,4826,1.499,4827,0.985,4828,0.985,4829,0.985,4830,1.807,4831,0.985,4832,0.985,4833,2.504,4834,0.985,4835,0.985,4836,0.985,4837,0.985,4838,0.985,4839,0.985,4840,0.985,4841,0.985,4842,0.985,4843,0.884,4844,0.985,4845,0.817,4846,0.985,4847,0.985,4848,0.884,4849,0.985,4850,0.985,4851,0.985,4852,0.985,4853,0.985,4854,0.985,4855,0.985,4856,0.985,4857,0.985,4858,0.767,4859,0.884,4860,1.807,4861,1.622,4862,0.985,4863,0.985,4864,0.817,4865,0.985,4866,0.985,4867,0.985,4868,0.985,4869,0.985,4870,0.985,4871,0.985,4872,0.884,4873,0.767,4874,0.985,4875,0.817,4876,0.985,4877,0.985,4878,0.985,4879,0.985,4880,0.985,4881,0.985]],["title/modules.html",[259,2.695]],["body/modules.html",[14,0.004,172,0.004,173,0.004,258,4.805,259,2.523,264,4.587,284,4.587,289,4.587,624,4.805,648,4.805,651,4.805,652,4.805,653,4.091,654,4.805,1542,4.805,1677,6.071,1880,5.068,2108,4.805,2114,4.587,2556,7.402,2633,4.805,2694,4.587,2729,4.805,2754,5.068,2959,4.805,3194,4.805,3279,4.805,3291,4.805,3294,4.805,4882,10.496,4883,10.496,4884,9.537,4885,9.971]],["title/overview.html",[4886,5.413]],["body/overview.html",[2,1.132,14,0.005,172,0.003,173,0.003,175,0.753,258,6.765,259,1.54,260,2.603,261,3.561,262,3.561,263,3.561,264,6.908,265,5.377,266,5.099,267,2.948,268,1.883,269,1.74,284,6.564,285,3.561,286,3.561,287,3.561,288,3.561,289,5.969,290,5.697,291,4.867,298,1.32,570,4.867,624,6.254,625,3.561,626,3.561,627,3.561,628,5.844,648,6.972,649,3.561,650,3.561,651,5.099,652,5.099,653,5.643,654,5.099,671,4.884,768,1.883,783,5.099,976,4.782,1089,5.099,1336,4.867,1482,4.495,1542,6.254,1543,3.561,1544,3.561,1545,3.561,1546,6.07,1610,6.169,1767,5.099,1790,5.099,1918,5.917,1953,3.561,1954,3.561,1955,3.561,2006,5.099,2108,6.254,2109,3.561,2110,3.561,2111,3.561,2114,6.857,2115,3.561,2116,3.561,2118,5.377,2580,6.463,2633,6.972,2634,3.561,2635,3.561,2650,5.099,2689,3.561,2690,3.561,2691,3.561,2694,4.867,2729,7.237,2730,3.561,2732,3.561,2855,5.917,2959,7.053,2960,3.561,2961,3.561,2963,3.561,2964,4.867,3194,5.099,3206,5.099,3223,5.099,3279,6.629,3280,3.561,3291,7.432,3292,3.561,3293,3.561,3294,7.123,3411,5.099,3475,5.099,3533,3.561,3534,3.561,3535,5.099,3809,4.867,3829,3.561,3830,3.561,3831,3.561,3832,4.867,4886,3.092,4887,3.969,4888,3.969,4889,3.969,4890,3.969,4891,3.969]],["title/todo.html",[368,1.704,3714,2.996,4081,3.525]],["body/todo.html",[2,1.237,5,0.047,9,0.498,10,1.207,12,0.457,13,0.216,14,0.005,17,2.42,31,0.137,34,2.829,40,2.245,44,2.886,69,0.812,72,3.182,74,1.937,77,1.128,112,2.146,114,0.474,144,3.378,145,1.554,172,0.003,173,0.003,179,2.015,207,3.515,208,2.487,210,3.378,211,4.062,219,2.487,257,2.239,269,2.723,272,1.937,293,2.1,296,3.467,314,2.026,321,1.975,326,1.085,359,6.021,362,4.201,363,5.274,368,1.739,369,3.673,370,3.179,383,2.144,399,2.639,415,2.358,419,2.358,430,2.1,486,1.975,506,4.151,510,2.824,534,5.366,541,3.008,579,4.38,584,2.727,595,3.667,656,4.38,662,3.906,666,2.639,667,3.203,670,3.378,671,2.42,733,5.361,766,1.901,770,2.727,786,2.625,799,2.3,891,2.727,908,1.8,968,2.639,1045,3.563,1381,3.378,1487,2.146,1499,2.487,1502,2.56,1503,2.56,1504,2.56,1559,4.726,1617,2.933,1643,4.726,1681,2.824,1688,2.487,1708,2.727,1716,4.201,1745,4.888,1756,2.245,1778,2.639,1832,3.467,1845,3.89,1861,3.203,1863,4.045,1871,3.203,1893,2.727,1908,4.045,1958,4.285,1960,3.378,1970,4.051,1991,5.153,2103,3.597,2162,3.378,2164,3.378,2185,2.933,2213,5.673,2214,4.201,2246,6.535,2251,3.203,2266,3.378,2347,4.38,2464,2.639,2537,3.203,2554,3.597,2556,3.057,2586,3.597,2588,3.057,2604,5.153,2606,3.89,2675,3.203,2685,2.933,2763,6.511,2775,3.057,2776,3.203,2794,3.203,2915,3.378,2972,3.057,2973,2.933,3008,2.824,3316,5.361,3641,3.203,3731,5.36,3849,3.378,3869,3.89,3965,3.89,3997,3.89,4087,4.839,4088,3.057,4109,3.597,4110,3.597,4113,3.597,4155,3.597,4164,3.203,4171,3.378,4184,3.597,4220,3.378,4235,3.203,4309,3.89,4355,3.597,4367,3.89,4374,3.203,4381,5.361,4415,3.89,4459,3.89,4549,3.597,4666,3.597,4858,4.839,4892,3.597,4893,4.335,4894,3.89,4895,3.89,4896,3.378,4897,3.597,4898,4.335,4899,4.335,4900,3.89,4901,5.573,4902,4.588,4903,3.89,4904,4.335,4905,7.526,4906,4.335,4907,4.335,4908,3.378,4909,4.335,4910,4.335,4911,4.335,4912,4.335,4913,3.203,4914,4.335,4915,3.597,4916,4.335,4917,3.89,4918,4.335,4919,3.89,4920,4.335,4921,4.335,4922,4.335,4923,4.335,4924,4.335,4925,4.335,4926,4.335,4927,4.335,4928,4.335,4929,4.335,4930,4.335,4931,4.335,4932,3.89,4933,4.335,4934,4.335,4935,3.89,4936,4.335,4937,4.335,4938,4.335,4939,4.335,4940,4.335,4941,3.89,4942,4.335,4943,3.203,4944,3.89,4945,3.89,4946,4.335,4947,4.335,4948,3.89,4949,3.89,4950,3.89,4951,4.335,4952,3.89,4953,3.597,4954,4.335,4955,4.335,4956,4.335,4957,4.335,4958,4.335,4959,3.597,4960,4.335,4961,6.511,4962,4.335,4963,4.335,4964,4.335,4965,4.335,4966,4.335,4967,4.335,4968,3.597,4969,4.335,4970,6.21,4971,3.89,4972,4.335]],["title/miscellaneous/typealiases.html",[4032,2.767,4973,6.12]],["body/miscellaneous/typealiases.html",[0,0.563,6,4.128,7,5.764,8,0.245,10,1.086,12,0.588,13,0.353,14,0.005,29,5.764,30,5.216,37,1.492,72,3.244,112,2.765,118,3.779,145,1.398,172,0.003,173,0.003,257,1.975,306,2.139,314,1.231,409,5.316,424,4.758,453,4.368,673,1.805,678,2.204,713,5.004,792,3.206,852,4.897,893,4.635,908,3.072,927,3.925,946,2.765,948,4.653,1021,5.217,1029,5.217,1109,4.128,1125,5.764,1140,5.465,1146,4.818,1149,5.465,1172,5.764,1559,3.639,1848,4.353,1968,4.635,1969,6.462,1974,6.137,1982,6.137,2295,4.353,2302,3.94,2303,5.465,2307,4.353,2312,3.832,2316,3.94,2319,5.465,2325,4.353,2326,5.764,2327,6.137,2366,4.635,2429,4.128,2442,5.465,2695,4.353,2705,5.764,2706,6.137,2748,4.128,2755,4.635,2756,5.764,2759,6.638,2794,5.465,2898,4.353,2906,6.137,3052,5.013,3084,4.635,3085,4.635,3162,5.013,3252,5.013,4032,3.639,4034,5.013,4035,6.638,4036,5.013,4039,5.013,4540,5.013,4974,5.587,4975,7.398,4976,7.398,4977,5.587,4978,8.24,4979,7.398,4980,5.587,4981,7.398,4982,7.398,4983,5.587,4984,5.587,4985,5.587,4986,5.013,4987,5.587,4988,5.013,4989,6.638,4990,5.013,4991,5.587,4992,7.398,4993,5.587,4994,7.398,4995,5.587,4996,5.013,4997,5.587,4998,5.013,4999,5.587,5000,5.587,5001,3.94,5002,5.013,5003,5.587,5004,5.013,5005,5.587,5006,5.587,5007,5.587]],["title/miscellaneous/variables.html",[4032,2.767,5008,4.769]],["body/miscellaneous/variables.html",[5,0.03,8,0.067,9,0.177,12,0.456,13,0.28,14,0.005,17,0.859,22,0.057,24,1.002,34,4.31,35,1.07,37,0.962,38,2.297,43,1.229,44,1.254,45,1.12,46,1.183,47,1.254,48,0.816,54,0.701,69,0.288,72,1.58,74,1.447,76,1.272,77,1.281,78,1.286,114,0.518,121,1.757,123,1.482,128,1.528,129,1.77,138,1.041,139,0.968,140,1.041,143,0.816,145,1.946,148,1.28,149,1.402,168,1.12,172,0.001,173,0.001,174,1.903,178,1.825,179,1.254,181,2.004,182,0.251,199,0.247,201,2.266,207,1.307,208,0.883,209,1.137,216,0.975,217,1.825,219,0.883,257,0.411,271,1.12,279,2.662,296,2.011,306,0.445,310,1.551,312,0.968,321,0.701,325,1.277,345,0.662,346,1.082,347,0.395,352,0.519,363,1.548,367,0.968,368,0.617,370,0.617,379,1.014,383,2.702,384,2.833,388,0.476,399,2.194,404,1.397,406,6.411,409,0.837,416,0.968,419,1.468,430,0.745,448,1.085,469,0.675,484,1.041,486,2.243,499,2.484,503,1.903,504,3.053,506,0.762,510,1.757,511,1.767,539,0.797,541,0.745,579,1.085,584,3.097,590,3.331,596,1.697,598,0.909,601,0.779,602,2.989,604,1.199,632,2.011,642,1.28,666,0.937,667,1.137,671,2.417,672,1.825,673,2.194,674,1.277,677,1.506,678,3.067,699,0.762,729,1.041,737,1.041,738,1.277,766,0.675,768,0.73,773,1.96,776,3.41,777,1.254,780,1.825,799,0.816,801,2.102,802,1.381,817,2.421,820,2.421,821,1.381,822,2.238,823,1.381,826,1.381,827,1.381,828,1.381,829,5.242,830,1.381,831,1.002,879,0.715,885,0.859,906,0.968,908,2.426,909,1.709,910,2.683,911,1.911,933,0.909,934,0.968,946,1.335,973,1.002,974,1.002,1042,1.381,1043,2.238,1045,1.548,1060,4.005,1070,2.541,1073,1.506,1109,1.137,1146,1.002,1168,2.102,1169,1.002,1182,1.002,1202,1.085,1265,1.085,1286,1.002,1375,1.041,1377,1.137,1387,0.859,1408,1.041,1417,1.277,1429,2.238,1430,2.238,1431,1.277,1432,1.277,1475,1.757,1487,0.762,1498,1.041,1499,0.883,1502,0.909,1504,0.909,1526,1.137,1623,2.662,1628,1.137,1643,1.002,1681,1.002,1693,1.199,1700,2.067,1727,0.859,1739,1.277,1740,1.381,1741,3.233,1744,1.137,1745,3.178,1746,1.199,1750,2.421,1751,2.238,1752,1.381,1753,1.381,1756,1.397,1757,2.421,1758,1.199,1759,1.866,1760,1.002,1761,1.137,1808,1.137,1811,1.199,1829,1.199,1832,1.506,1862,1.041,1863,1.757,1872,1.041,1886,1.041,1893,2.723,1908,1.002,1949,1.993,1958,0.909,1959,0.859,1960,1.468,1970,0.859,1989,1.277,1996,1.277,1997,1.041,2024,2.102,2026,1.199,2032,1.277,2033,1.277,2034,2.421,2047,1.137,2086,1.381,2103,1.277,2106,1.277,2149,4.005,2154,1.277,2155,1.381,2159,1.381,2161,3.233,2162,1.199,2163,1.277,2164,4.834,2166,2.421,2167,2.541,2179,2.421,2180,1.381,2181,2.421,2182,1.381,2183,1.199,2184,2.421,2185,2.437,2186,1.041,2187,2.421,2188,1.381,2189,2.421,2190,1.381,2191,1.277,2192,1.381,2193,1.381,2194,1.381,2195,1.381,2196,1.381,2197,1.277,2200,1.277,2204,1.277,2210,2.421,2211,1.199,2212,1.381,2213,1.041,2214,2.437,2215,2.421,2216,1.277,2217,2.421,2218,1.381,2219,2.102,2220,1.381,2221,1.381,2222,1.277,2223,2.421,2224,1.381,2225,1.381,2226,1.199,2227,1.381,2228,1.381,2229,1.381,2230,1.381,2231,4.418,2232,2.421,2233,4.418,2234,1.381,2235,1.381,2236,1.381,2248,2.238,2308,1.757,2309,3.374,2312,2.55,2314,1.137,2317,0.968,2318,0.968,2341,1.468,2376,1.277,2389,2.102,2393,1.041,2395,1.709,2401,1.643,2464,1.643,2495,0.883,2511,1.96,2546,1.381,2547,1.381,2548,2.238,2549,1.381,2566,1.381,2572,1.381,2573,1.381,2586,1.277,2588,3.473,2601,1.757,2610,1.381,2611,2.421,2624,1.381,2644,2.238,2645,1.381,2647,1.381,2648,2.421,2649,3.233,2678,1.041,2685,1.825,2695,1.199,2698,2.238,2705,1.199,2707,2.238,2708,1.277,2709,1.277,2710,1.277,2711,1.199,2712,1.277,2734,2.102,2738,2.807,2748,1.993,2752,1.277,2755,1.277,2756,2.807,2757,1.381,2758,2.421,2764,1.381,2766,3.884,2768,2.421,2769,1.381,2770,2.421,2771,1.381,2772,1.381,2773,1.381,2774,1.277,2775,1.085,2776,1.137,2777,1.199,2778,1.277,2779,1.137,2780,1.381,2781,1.277,2782,1.277,2783,1.381,2784,1.381,2785,1.381,2786,1.381,2787,1.381,2788,1.381,2809,1.085,2881,1.381,2882,2.421,2898,1.199,2905,2.238,2972,1.085,2973,2.437,3040,2.238,3127,1.277,3175,1.199,3187,1.381,3189,1.381,3274,2.102,3279,1.137,3305,4.552,3340,2.238,3341,1.381,3343,2.102,3345,2.421,3347,1.381,3348,1.381,3349,5.242,3491,1.381,3497,1.381,3498,1.085,3507,1.697,3685,3.823,3754,1.381,3757,2.421,3759,2.989,3760,1.381,3761,1.381,3762,1.381,3763,1.381,3766,1.199,3773,2.421,3854,1.381,3914,1.381,3936,2.662,4032,1.002,4040,1.993,4044,5.242,4055,1.277,4082,2.102,4089,1.277,4091,1.381,4108,2.541,4113,2.238,4125,1.199,4142,2.662,4169,1.199,4175,1.381,4337,1.277,4374,1.137,4381,1.137,4385,1.277,4800,1.277,4817,1.381,4897,1.277,4908,3.373,4915,2.989,4943,1.137,4948,2.421,4961,1.381,4978,1.381,4986,1.381,4988,2.421,4989,3.884,4990,3.233,4998,1.381,5004,1.381,5008,1.199,5009,1.539,5010,4.329,5011,1.539,5012,2.698,5013,1.539,5014,2.698,5015,3.884,5016,2.698,5017,2.698,5018,2.698,5019,1.539,5020,2.698,5021,3.603,5022,2.698,5023,4.329,5024,2.698,5025,1.539,5026,1.539,5027,2.698,5028,2.698,5029,1.539,5030,2.698,5031,2.698,5032,1.539,5033,2.698,5034,1.539,5035,4.329,5036,1.539,5037,2.698,5038,3.603,5039,4.329,5040,2.698,5041,1.539,5042,1.539,5043,2.698,5044,3.603,5045,2.698,5046,1.539,5047,2.698,5048,1.539,5049,1.539,5050,1.539,5051,1.539,5052,2.698,5053,1.539,5054,2.698,5055,2.698,5056,1.539,5057,1.539,5058,1.539,5059,1.539,5060,1.539,5061,1.539,5062,2.698,5063,1.539,5064,1.539,5065,1.539,5066,2.698,5067,1.137,5068,1.381,5069,1.539,5070,1.539,5071,1.539,5072,1.381,5073,1.539,5074,1.539,5075,1.381,5076,1.539,5077,1.539,5078,1.539,5079,1.539,5080,1.539,5081,1.539,5082,1.539,5083,1.539,5084,1.539,5085,1.539,5086,2.238,5087,1.381,5088,2.698,5089,1.381,5090,1.381,5091,1.539,5092,1.539,5093,1.539,5094,1.381,5095,1.539,5096,2.421,5097,1.539,5098,1.539,5099,1.539,5100,1.539,5101,1.539,5102,1.381,5103,1.539,5104,2.698,5105,3.233,5106,1.539,5107,1.381,5108,1.539,5109,1.539,5110,1.539,5111,1.539,5112,1.539,5113,1.539,5114,1.539,5115,1.539,5116,1.539,5117,1.539,5118,1.539,5119,1.539,5120,1.539,5121,1.539,5122,1.539,5123,1.539,5124,1.539,5125,1.539,5126,1.539,5127,1.539,5128,1.539,5129,1.539,5130,1.539,5131,1.539,5132,1.539,5133,1.539,5134,1.539,5135,1.539,5136,1.539,5137,1.539,5138,1.539,5139,1.539,5140,1.539,5141,1.539,5142,1.539,5143,1.539,5144,1.539,5145,2.698,5146,2.698,5147,1.381,5148,1.539,5149,2.698,5150,1.539,5151,1.539,5152,1.539,5153,1.539,5154,1.539,5155,2.698,5156,1.539,5157,1.539,5158,1.539,5159,1.539,5160,1.539,5161,1.539,5162,1.539,5163,1.539,5164,1.539,5165,1.539,5166,1.539,5167,1.539,5168,1.539,5169,1.539,5170,1.539,5171,1.539,5172,1.539,5173,1.539,5174,1.539,5175,1.539,5176,1.539,5177,1.539,5178,1.539,5179,1.539,5180,1.539]],["title/additional-documentation/nestjs-application.html",[601,1.845,642,1.729,1907,1.888,3129,2.092]],["body/additional-documentation/nestjs-application.html",[2,1.062,14,0.004,33,0.79,40,1.928,43,3.357,47,2.582,112,1.842,114,0.284,172,0.003,173,0.003,179,3.843,180,3.494,211,3.569,257,1.483,259,1.444,268,1.765,296,3.101,312,3.494,324,2.424,363,5.515,369,2.811,370,3.533,383,1.007,393,1.975,399,4.486,403,2.537,404,1.928,430,2.691,456,3.618,506,1.842,534,2.078,579,3.917,597,2.75,598,2.198,599,2.518,601,4.708,632,4.402,642,4.27,645,1.884,659,2.9,727,2.9,729,2.518,871,2.809,891,4.635,892,3.618,910,1.842,1013,2.625,1054,3.917,1057,2.341,1387,4.114,1475,3.618,1492,4.104,1494,3.917,1499,2.136,1502,2.198,1504,3.28,1508,4.609,1512,4.635,1559,2.424,1614,2.518,1673,3.088,1677,2.266,1681,4.328,1708,2.341,1727,2.078,1745,4.498,1756,3.817,1761,2.75,1808,2.75,1818,3.917,1862,2.518,1863,2.424,1907,1.928,1908,2.424,1909,4.104,1958,3.28,1960,2.025,1970,3.101,1979,2.518,1997,2.518,2056,2.625,2102,2.9,2213,4.985,2219,2.9,2259,3.917,2346,2.9,2510,2.198,2533,3.088,2540,3.758,2676,3.088,2678,2.518,2700,5.197,2717,3.34,2777,2.9,2791,3.34,2915,2.9,2972,5.56,2973,4.985,2978,2.75,3129,3.187,3318,3.34,3319,4.609,3507,2.341,3573,3.917,3688,2.625,3692,3.088,3714,3.917,3767,3.917,3936,2.75,3941,3.34,4007,3.34,4016,3.088,4070,3.34,4082,2.9,4083,3.088,4086,2.75,4087,7.419,4089,4.609,4090,2.9,4093,2.9,4096,3.34,4107,5.178,4108,6.927,4125,2.9,4136,2.75,4144,3.34,4155,3.088,4164,2.75,4169,6.143,4185,2.75,4190,3.34,4196,3.088,4206,3.34,4337,3.088,4363,4.984,4364,2.625,4373,3.34,4374,4.91,4421,3.34,4528,2.75,4537,4.104,4575,5.963,4607,2.75,4650,3.088,4697,3.34,4703,3.34,4821,4.609,4845,3.088,4873,2.9,4884,3.34,4886,2.9,4905,3.34,4908,6.862,4941,4.984,4943,5.444,4944,4.984,4949,5.963,4950,5.963,5001,3.917,5015,3.34,5086,4.609,5087,4.984,5089,3.34,5090,3.34,5094,4.984,5105,3.34,5181,3.722,5182,3.088,5183,3.722,5184,5.333,5185,3.722,5186,3.722,5187,3.722,5188,3.722,5189,3.722,5190,3.722,5191,3.722,5192,3.722,5193,5.555,5194,3.722,5195,3.722,5196,3.722,5197,4.984,5198,5.555,5199,7.369,5200,3.722,5201,3.722,5202,3.722,5203,3.34,5204,3.088,5205,3.722,5206,7.369,5207,3.722,5208,3.34,5209,3.722,5210,3.722,5211,3.722,5212,8.27,5213,3.722,5214,3.722,5215,3.722,5216,3.722,5217,3.722,5218,5.555,5219,3.722,5220,3.722,5221,3.722,5222,3.722,5223,5.555,5224,3.722,5225,3.722,5226,4.984,5227,4.609,5228,5.555,5229,3.722,5230,3.722,5231,3.722,5232,3.722,5233,5.555,5234,3.722,5235,3.722,5236,3.722,5237,3.722,5238,4.609,5239,3.722,5240,3.722,5241,3.722,5242,3.722,5243,3.34,5244,3.722,5245,3.722,5246,4.984,5247,6.646,5248,3.722,5249,3.722,5250,3.722,5251,6.646,5252,4.984,5253,3.722,5254,3.722,5255,3.722,5256,3.722,5257,3.722,5258,3.722,5259,3.722,5260,5.555,5261,3.722,5262,5.555,5263,4.609,5264,3.34,5265,3.722,5266,6.646,5267,5.555,5268,3.722,5269,3.722,5270,3.722,5271,3.34,5272,3.722,5273,3.34,5274,3.722,5275,3.722,5276,3.722,5277,3.722,5278,3.722,5279,3.722,5280,3.722,5281,3.722]],["title/additional-documentation/nestjs-application/software-architecture.html",[1907,1.888,3129,2.092,4095,2.466,4197,2.841]],["body/additional-documentation/nestjs-application/software-architecture.html",[0,0.647,2,0.692,4,0.036,5,0.036,10,1.062,14,0.002,34,3.043,37,0.364,38,1.287,39,1.89,40,4.463,46,0.598,54,1.809,60,4.578,73,0.83,78,0.188,84,0.761,112,2.884,114,0.185,123,0.467,142,1.063,145,1.865,148,0.647,149,0.591,171,1.89,172,0.001,173,0.001,175,0.621,179,3.599,180,2.06,187,0.419,189,0.398,205,0.807,207,3.751,208,2.611,210,1.063,211,1.586,217,1.641,219,2.278,260,2.034,269,1.064,272,0.609,293,0.661,310,1.044,312,2.06,314,0.722,315,1.008,321,0.621,324,2.586,332,1.132,362,5.727,363,0.783,365,0.69,368,0.547,369,1.228,370,3.205,374,0.923,375,1.934,383,0.369,384,0.934,393,2.414,416,0.858,418,1.994,419,0.742,422,3.441,430,1.923,438,0.923,456,0.888,508,0.706,534,0.761,596,6.064,597,1.008,598,2.345,599,4.806,601,3.984,615,0.962,632,0.761,645,4.151,658,3.942,659,1.89,662,3.436,663,1.063,664,4.533,666,0.83,673,0.441,680,1.58,722,0.647,742,1.829,777,1.845,797,0.761,799,0.724,871,3.814,887,0.742,909,1.15,910,1.2,927,1.287,933,1.934,946,0.675,950,0.742,968,1.477,986,0.634,995,0.858,1004,0.761,1005,0.761,1013,0.962,1044,1.132,1050,1.525,1057,3.171,1062,1.525,1128,2.216,1182,2.133,1213,0.888,1408,0.923,1459,1.224,1474,1.89,1487,3.042,1499,1.392,1502,1.432,1504,1.432,1511,1.132,1512,0.858,1559,2.964,1627,2.717,1650,4.854,1677,1.477,1688,0.783,1700,2.278,1705,2.8,1708,2.497,1727,0.761,1745,1.782,1759,3.184,1770,4.083,1818,3.852,1826,5.009,1832,4.395,1861,1.008,1862,2.216,1863,2.133,1871,2.42,1872,0.923,1893,0.858,1906,3.558,1907,1.696,1909,4.749,1958,1.934,1959,3.05,1960,4.853,1962,1.792,1972,2.216,1983,2.31,2047,1.008,2050,3.294,2056,0.962,2067,0.888,2079,1.008,2080,0.888,2102,1.063,2185,4.518,2186,0.923,2191,1.132,2211,1.063,2214,0.923,2266,4.54,2300,0.962,2309,1.319,2311,3.326,2312,0.706,2314,1.008,2339,0.923,2347,2.31,2353,4.183,2393,0.923,2410,1.89,2463,0.962,2487,0.962,2495,3.134,2510,2.687,2511,1.319,2534,1.008,2535,2.497,2537,1.008,2538,5.515,2540,0.923,2548,1.132,2553,1.132,2555,3.928,2563,1.063,2607,1.224,2619,1.132,2620,3.546,2675,2.42,2678,1.641,2680,2.934,2683,1.792,2711,1.063,2728,1.132,2774,1.132,2775,0.962,2776,3.362,2779,2.42,2795,1.063,2809,1.71,2849,2.176,2978,1.008,3007,4.541,3008,3.284,3041,1.008,3077,1.063,3129,0.783,3271,1.008,3469,2.42,3498,3.555,3507,3.171,3573,1.71,3643,1.063,3685,0.962,3687,3.362,3688,0.962,3690,2.8,3692,1.132,3709,1.132,3715,1.224,3718,2.552,3729,2.586,3732,7.053,3766,1.063,3767,0.962,3768,1.132,3933,1.063,4016,2.012,4056,2.176,4062,2.012,4075,1.224,4082,2.552,4084,1.224,4086,1.792,4087,1.89,4088,1.71,4095,5.828,4099,3.725,4107,1.063,4110,4.532,4112,2.176,4117,2.934,4120,0.962,4127,2.012,4128,6.596,4129,2.552,4130,1.224,4137,7.102,4142,1.792,4163,1.008,4164,1.008,4171,1.063,4173,1.224,4174,2.176,4177,1.89,4178,1.224,4185,1.792,4189,3.928,4196,2.012,4197,1.063,4209,2.176,4211,1.132,4214,1.224,4219,1.224,4220,2.552,4223,1.224,4226,1.224,4235,1.008,4239,1.224,4240,2.717,4251,1.224,4256,2.176,4267,4.183,4269,1.224,4272,2.176,4273,1.89,4282,1.132,4297,1.224,4302,1.224,4303,5.009,4316,3.094,4323,0.962,4326,1.224,4343,1.132,4344,2.176,4346,2.939,4350,1.224,4352,1.224,4353,1.224,4359,2.012,4361,1.224,4362,7.941,4364,2.31,4372,1.224,4375,1.224,4376,2.012,4379,5.895,4381,1.008,4387,1.132,4389,3.546,4390,1.132,4392,3.362,4393,2.012,4395,1.132,4397,1.224,4422,3.094,4427,1.224,4454,1.224,4472,1.224,4482,1.132,4483,1.132,4485,1.008,4502,1.132,4505,1.224,4513,1.224,4517,2.176,4528,1.008,4530,1.224,4531,1.224,4537,2.42,4550,1.224,4564,2.176,4565,4.083,4566,2.012,4584,3.294,4591,1.132,4602,3.094,4603,3.563,4605,1.224,4607,1.008,4609,1.224,4617,1.132,4624,1.224,4643,1.224,4645,1.224,4650,1.132,4692,4.524,4721,1.224,4730,1.224,4739,1.224,4748,4.532,4770,5.379,4787,1.132,4797,1.224,4802,1.224,4803,1.224,4804,2.012,4805,4.533,4815,1.132,4826,3.294,4848,2.176,4859,1.224,4875,1.132,4886,1.063,4892,2.012,4895,1.224,4896,3.928,4901,1.224,4902,1.008,4903,1.224,4913,1.008,4945,1.224,4952,2.176,4971,1.224,5002,2.176,5008,1.063,5184,0.923,5197,1.224,5204,1.132,5227,1.132,5238,1.132,5282,1.364,5283,1.364,5284,5.993,5285,6.147,5286,2.425,5287,3.275,5288,2.939,5289,4.835,5290,2.425,5291,2.939,5292,5.462,5293,1.364,5294,1.364,5295,3.094,5296,3.563,5297,1.364,5298,1.364,5299,1.364,5300,1.364,5301,2.425,5302,2.425,5303,1.364,5304,1.364,5305,4.551,5306,1.364,5307,2.425,5308,1.364,5309,3.275,5310,2.425,5311,1.364,5312,1.364,5313,1.364,5314,1.364,5315,1.364,5316,1.364,5317,1.364,5318,1.224,5319,2.425,5320,2.425,5321,5.042,5322,1.364,5323,1.364,5324,2.425,5325,2.425,5326,3.971,5327,3.275,5328,3.971,5329,1.364,5330,3.563,5331,3.563,5332,1.364,5333,2.176,5334,1.364,5335,1.364,5336,1.364,5337,1.364,5338,1.364,5339,1.132,5340,2.717,5341,1.364,5342,1.224,5343,1.364,5344,1.364,5345,7.744,5346,2.425,5347,1.364,5348,7.695,5349,1.364,5350,2.176,5351,1.364,5352,1.364,5353,2.425,5354,1.132,5355,4.541,5356,6.147,5357,6.428,5358,1.364,5359,2.939,5360,2.176,5361,2.425,5362,1.364,5363,1.364,5364,4.083,5365,1.364,5366,1.364,5367,1.364,5368,2.939,5369,3.294,5370,2.425,5371,1.364,5372,1.063,5373,4.551,5374,1.364,5375,1.364,5376,3.275,5377,1.364,5378,1.224,5379,1.364,5380,2.717,5381,1.364,5382,1.364,5383,1.364,5384,1.224,5385,2.939,5386,1.364,5387,1.364,5388,1.364,5389,1.224,5390,2.425,5391,1.364,5392,3.275,5393,1.364,5394,1.364,5395,1.224,5396,2.939,5397,1.364,5398,3.094,5399,2.425,5400,1.364,5401,2.425,5402,3.275,5403,1.364,5404,1.364,5405,1.364,5406,2.012,5407,2.425,5408,3.275,5409,1.364,5410,1.364,5411,1.364,5412,1.364,5413,1.364,5414,1.364,5415,1.364,5416,1.224,5417,1.364,5418,2.425,5419,1.364,5420,1.364,5421,6.147,5422,1.364,5423,2.425,5424,1.224,5425,1.132,5426,1.364,5427,1.364,5428,1.364,5429,1.364,5430,1.364,5431,1.364,5432,1.063,5433,1.364,5434,1.364,5435,1.364,5436,1.364,5437,3.275,5438,1.364,5439,2.425,5440,3.275,5441,1.364,5442,1.364,5443,1.364,5444,1.364,5445,2.425,5446,1.364,5447,1.364,5448,1.364,5449,2.176,5450,1.364,5451,1.224,5452,1.364,5453,1.364,5454,2.425,5455,1.364,5456,1.224,5457,1.364,5458,1.364,5459,2.425,5460,1.364,5461,1.364,5462,1.224,5463,2.176,5464,1.364,5465,1.364,5466,1.224,5467,1.364,5468,1.364,5469,2.425,5470,1.364,5471,1.364,5472,1.364,5473,1.364,5474,1.364,5475,1.364,5476,1.224,5477,1.364,5478,1.364,5479,3.971,5480,1.364,5481,1.364,5482,1.224,5483,1.224,5484,3.275,5485,1.364,5486,1.364,5487,1.364,5488,1.364,5489,1.364,5490,1.364,5491,2.425,5492,1.224,5493,1.364,5494,3.275,5495,1.364,5496,1.364,5497,1.364,5498,2.425,5499,1.364,5500,1.224,5501,1.364,5502,3.275,5503,2.425,5504,1.364,5505,1.364,5506,1.364,5507,1.364,5508,1.364,5509,1.364,5510,1.364,5511,1.364,5512,1.224,5513,2.425,5514,1.364,5515,1.364,5516,1.364,5517,1.224,5518,1.364,5519,1.364,5520,1.364,5521,1.364,5522,1.364,5523,8.383,5524,1.364,5525,1.364,5526,1.364,5527,1.224,5528,1.364,5529,1.364,5530,2.425,5531,1.364,5532,3.275,5533,1.364,5534,1.364,5535,1.364,5536,1.364,5537,1.364,5538,1.364,5539,1.364,5540,1.224,5541,1.224,5542,1.364,5543,1.364,5544,1.364,5545,1.364,5546,1.224,5547,1.364,5548,1.364,5549,1.364,5550,1.364,5551,2.425,5552,4.551,5553,1.364,5554,1.364,5555,2.552,5556,1.364,5557,2.176,5558,1.364,5559,1.132,5560,1.364,5561,1.364,5562,4.551,5563,1.364,5564,1.364,5565,1.364,5566,1.364,5567,1.364,5568,1.364,5569,1.364,5570,1.364,5571,1.364,5572,1.364,5573,1.364,5574,1.364,5575,1.364,5576,1.364,5577,2.425,5578,1.364,5579,1.364,5580,1.364,5581,2.425,5582,1.364,5583,1.364,5584,1.364,5585,2.425,5586,1.364,5587,1.364,5588,1.364,5589,1.364,5590,1.224,5591,2.425,5592,1.364,5593,2.425,5594,1.364,5595,1.364,5596,1.364,5597,1.224,5598,2.425]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[179,1.484,1907,1.654,3129,1.832,4095,2.16,5355,2.359]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.25,2,1.156,3,0.045,4,0.037,5,0.092,9,0.59,10,0.483,13,0.141,14,0.005,15,0.115,17,2.263,18,0.437,22,0.111,31,0.264,38,1.319,40,3.064,47,1.156,60,4.112,69,0.466,74,1.082,77,1.054,78,0.705,112,3.457,114,0.586,127,1.62,128,0.988,129,1.156,145,1.63,146,3.617,149,0.731,172,0.002,173,0.002,175,0.471,179,1.883,187,0.638,207,3.383,208,2.943,211,1.963,218,3.852,219,1.427,257,2.478,259,3.243,260,1.111,271,1.683,272,1.811,284,1.754,289,3.617,290,2.639,291,4.171,293,3.383,296,3.636,312,1.564,314,1.623,315,1.837,321,3.619,327,0.919,347,1.672,352,0.839,363,2.943,365,3.535,367,3.72,370,3.778,376,1.938,377,2.063,383,0.673,399,1.514,404,1.288,419,2.204,430,2.865,453,1.468,506,2.539,508,2.099,530,1.564,562,2.063,578,2.467,581,1.682,582,2.231,595,1.468,596,3.72,598,3.029,600,2.741,601,1.259,638,1.682,642,3.089,645,4.316,656,3.617,666,2.467,672,1.682,678,2.023,722,2.433,734,2.994,766,3.367,768,3.089,773,2.204,774,1.62,776,2.549,777,1.156,786,3.113,799,2.721,871,3.357,891,1.564,892,2.639,908,2.13,910,2.006,933,2.393,968,1.514,1041,1.837,1045,1.427,1054,3.617,1057,2.549,1062,1.564,1069,2.864,1088,1.754,1103,1.938,1128,2.741,1188,1.514,1213,1.62,1408,1.682,1420,4.812,1487,1.231,1502,1.468,1504,2.393,1512,3.72,1534,1.837,1614,1.682,1616,2.063,1617,4.406,1618,4.256,1644,2.063,1650,1.62,1677,1.514,1680,1.564,1688,2.325,1700,3.394,1708,1.564,1727,2.864,1745,2.204,1756,1.288,1778,1.514,1826,3.996,1846,2.231,1893,1.564,1906,4.242,1907,2.657,1908,1.62,1911,2.231,1916,2.231,1918,4.725,1957,1.682,1958,3.846,1959,3.9,1961,3.617,1962,1.837,1963,1.754,1964,1.754,1969,1.938,1970,1.388,1972,1.682,1983,1.754,1992,1.682,2081,1.754,2176,2.231,2185,1.682,2214,3.47,2246,3.158,2259,1.754,2262,1.837,2266,3.996,2339,2.741,2395,1.18,2495,1.427,2510,3.846,2511,1.353,2534,1.837,2535,2.549,2541,2.063,2555,1.938,2563,1.938,2588,1.754,2619,2.063,2683,2.994,2685,1.682,2747,3.996,2775,2.858,2863,2.231,2864,2.231,2865,2.231,2866,2.231,2867,2.063,2874,2.063,2914,2.063,2972,1.754,3007,2.994,3008,1.62,3041,1.837,3069,1.754,3152,2.231,3305,1.938,3316,1.837,3507,1.564,3546,2.231,3573,2.858,3642,1.938,3643,1.938,3685,2.858,3688,2.858,3690,1.754,3693,2.063,3729,2.639,3730,2.231,3731,5.373,3732,5.673,3832,1.754,3848,2.063,3849,3.996,3936,4.812,4055,2.063,4062,2.063,4088,5.601,4092,2.063,4095,3.47,4099,1.837,4107,1.938,4109,2.063,4117,1.837,4120,1.754,4128,1.938,4135,2.231,4136,1.837,4137,3.996,4153,2.231,4163,1.837,4165,2.063,4167,2.063,4176,2.063,4177,4.609,4182,2.231,4184,2.063,4222,2.231,4238,2.063,4241,2.231,4273,1.938,4303,1.938,4318,2.231,4323,1.754,4343,2.063,4354,2.063,4356,2.231,4364,1.754,4381,5.16,4385,2.063,4387,2.063,4389,3.996,4392,1.837,4395,2.063,4422,1.938,4465,2.231,4482,2.063,4485,1.837,4528,1.837,4584,2.063,4591,2.063,4602,3.158,4607,1.837,4724,4.602,4770,3.158,4805,1.754,4825,2.231,4875,2.063,4896,4.609,4897,4.256,4902,1.837,4913,2.994,4915,4.256,4953,2.063,4968,4.256,5001,3.617,5008,1.938,5067,2.994,5072,2.231,5096,2.231,5102,2.231,5184,2.741,5203,2.231,5204,2.063,5208,2.231,5263,3.362,5284,2.231,5295,1.938,5331,2.231,5348,7.506,5350,2.231,5354,3.362,5355,4.812,5368,2.231,5372,1.938,5378,2.231,5380,2.063,5389,2.231,5395,2.231,5398,1.938,5406,2.063,5416,3.636,5424,4.602,5432,1.938,5463,4.602,5466,3.636,5483,4.602,5492,3.636,5540,3.636,5546,2.231,5555,1.938,5557,5.307,5599,2.063,5600,2.231,5601,2.487,5602,5.129,5603,2.487,5604,6.609,5605,3.362,5606,2.487,5607,2.487,5608,4.053,5609,5.915,5610,2.487,5611,2.487,5612,2.487,5613,2.487,5614,2.487,5615,2.487,5616,2.487,5617,4.053,5618,2.487,5619,2.487,5620,2.487,5621,2.487,5622,2.231,5623,4.053,5624,2.487,5625,2.487,5626,2.487,5627,2.487,5628,2.231,5629,2.487,5630,2.487,5631,2.231,5632,4.053,5633,2.487,5634,2.487,5635,2.487,5636,2.063,5637,2.487,5638,2.487,5639,2.487,5640,2.487,5641,2.487,5642,2.487,5643,2.487,5644,2.487,5645,4.053,5646,4.053,5647,2.487,5648,2.231,5649,3.362,5650,3.636,5651,2.487,5652,2.487,5653,2.487,5654,2.487,5655,2.487,5656,2.487,5657,2.487,5658,2.487,5659,2.487,5660,2.487,5661,2.487,5662,2.487,5663,2.487,5664,2.487,5665,2.487,5666,2.487,5667,2.487,5668,2.487,5669,2.487,5670,2.487,5671,2.487,5672,2.487,5673,2.487,5674,2.487,5675,2.487,5676,2.487,5677,2.063,5678,2.487,5679,2.487,5680,2.487,5681,2.487,5682,2.487,5683,2.487,5684,2.487,5685,2.487,5686,2.231,5687,2.487,5688,2.487,5689,2.231,5690,2.487,5691,2.231,5692,2.487,5693,2.487,5694,2.487,5695,2.231,5696,2.487,5697,2.487,5698,2.487,5699,2.487,5700,2.487,5701,2.231,5702,2.231]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[1907,1.654,3129,1.832,3731,2.16,5295,2.488,5703,2.866]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[0,0.402,12,0.42,14,0.005,34,1.817,54,1.817,60,2.227,74,1.065,77,1.037,78,0.804,112,3.425,121,3.808,128,0.977,129,2.315,145,2.332,148,1.892,149,1.374,172,0.003,173,0.003,179,2.717,180,3.677,187,0.332,206,3.309,211,3.352,218,2.598,269,1.749,306,1.69,314,1.288,321,3.863,332,4.85,347,1.024,365,2.959,368,1.6,369,2.959,370,3.789,417,2.227,418,3.559,422,2.355,430,2.832,459,1.749,469,1.749,486,1.817,530,2.508,562,4.85,581,2.698,596,5.51,597,5.113,598,2.355,599,2.698,600,2.698,601,4.292,642,2.773,645,2.019,656,2.813,659,4.555,662,2.508,663,3.107,664,2.813,678,2.73,699,2.894,734,4.319,777,2.717,871,3.43,920,3.677,927,2.116,995,2.508,997,2.598,1013,2.813,1044,5.742,1062,4.793,1213,3.808,1387,2.227,1494,2.813,1534,2.947,1681,2.598,1700,3.354,1705,2.813,1708,3.677,1716,2.698,1727,3.264,1808,2.947,1832,2.227,1872,2.698,1893,2.508,1906,5.852,1959,5.118,1963,2.813,1964,2.813,1992,2.698,2047,2.947,2080,4.507,2185,2.698,2259,2.813,2262,2.947,2395,1.892,2464,2.428,2495,2.288,2510,3.452,2978,2.947,3077,3.107,3087,3.579,3115,3.579,3175,3.107,3316,2.947,3433,3.107,3469,2.947,3498,5.98,3641,2.947,3687,2.947,3690,2.813,3717,3.579,3729,2.598,3731,6.632,3732,2.947,3891,3.309,3933,3.107,3938,2.947,4040,2.947,4088,2.813,4090,3.107,4095,5.155,4108,2.813,4117,2.947,4118,4.85,4120,2.813,4185,2.947,4189,3.107,4191,3.309,4238,4.85,4273,3.107,4278,3.309,4282,3.309,4316,4.555,4323,2.813,4359,3.309,4364,4.123,4376,3.309,4392,2.947,4485,2.947,4528,4.319,4537,4.319,4583,3.579,4602,5.392,4607,2.947,4748,3.309,4770,3.107,4791,3.579,4805,2.813,4826,3.309,4845,3.309,4858,3.107,4872,5.246,4873,3.107,4892,3.309,4902,4.319,4913,4.319,4959,3.309,5001,2.813,5067,2.947,5182,3.309,5263,3.309,5291,3.579,5295,4.555,5296,3.579,5339,3.309,5348,6.322,5372,6.322,5398,3.107,5451,3.579,5456,3.579,5482,3.579,5512,3.579,5527,3.579,5541,3.579,5559,3.309,5599,3.309,5604,5.246,5622,5.246,5649,3.309,5686,3.579,5689,3.579,5703,3.579,5704,3.988,5705,3.988,5706,3.988,5707,3.988,5708,3.988,5709,3.988,5710,3.988,5711,3.988,5712,5.846,5713,3.988,5714,3.988,5715,3.988,5716,3.988,5717,3.988,5718,3.988,5719,3.988,5720,3.988,5721,3.988,5722,3.988,5723,3.988,5724,3.988,5725,3.988,5726,3.988,5727,3.579,5728,3.988,5729,3.988,5730,3.579,5731,3.988,5732,3.579,5733,3.988,5734,3.988,5735,3.988,5736,3.988,5737,3.988,5738,3.988,5739,3.988,5740,5.246,5741,3.988,5742,3.988,5743,3.988,5744,3.988,5745,3.988,5746,3.579,5747,3.988,5748,3.988,5749,3.988,5750,3.988,5751,3.988,5752,3.988,5753,3.988,5754,3.988,5755,3.988,5756,3.988,5757,3.988,5758,3.988,5759,3.988,5760,3.988,5761,3.988,5762,3.988,5763,3.988,5764,3.988,5765,3.988,5766,3.988,5767,3.988,5768,3.988,5769,3.988,5770,5.846,5771,3.988,5772,3.309,5773,3.988,5774,6.921,5775,3.579,5776,3.988,5777,3.988,5778,3.988,5779,3.988,5780,3.309]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[658,2.16,1907,1.654,3129,1.832,4805,2.252,5289,2.65]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.675,12,1.011,13,0.289,14,0.005,15,0.218,18,0.85,22,0.077,31,0.212,34,3.979,35,1.436,37,1.79,38,2.563,54,3.054,69,0.905,74,1.29,84,2.698,112,3.318,114,0.368,172,0.004,173,0.003,179,3.578,180,3.039,181,1.786,186,4.953,206,4.009,207,3.247,208,4.417,217,3.269,219,5.011,257,2.332,272,2.996,312,3.039,324,5.014,360,4.009,363,2.772,365,3.896,367,3.039,370,3.335,383,2.363,392,3.408,407,3.269,508,2.503,578,2.942,581,3.269,596,5.493,597,3.57,598,3.959,599,3.269,601,2.446,642,3.18,645,3.393,653,4.216,656,3.408,658,4.535,662,3.039,664,5.864,670,3.765,671,5.276,724,4.216,871,2.043,891,3.039,952,3.039,1050,4.216,1487,2.392,1503,2.853,1504,3.959,1637,4.009,1688,2.772,1756,2.503,1777,4.535,1786,2.942,1816,5.562,1832,5.357,1892,4.336,1893,4.216,1894,3.765,1902,4.336,1906,3.147,1907,3.472,1908,5.014,1960,2.628,1961,3.408,1992,3.269,2185,5.207,2186,6.392,2213,4.535,2216,4.009,2347,4.728,2352,4.336,2353,4.009,2355,4.336,2359,4.336,2361,4.336,2362,4.336,2496,4.728,2511,2.628,2535,3.039,2555,3.765,2675,3.57,2678,3.269,2683,4.953,2685,4.535,3095,4.336,3271,3.57,3642,3.765,3643,3.765,3729,3.147,3865,4.336,4086,3.57,4142,3.57,4152,4.009,4370,4.336,4501,4.336,4805,3.408,5184,3.269,5252,4.336,5289,5.562,5425,4.009,5432,3.765,5476,4.336,5605,4.009,5631,4.336,5636,4.009,5701,4.336,5780,4.009,5781,4.832,5782,8.315,5783,4.832,5784,4.832,5785,8.315,5786,4.336,5787,4.832,5788,4.832,5789,7.698,5790,4.832,5791,4.832,5792,4.832,5793,6.704,5794,4.832,5795,4.832,5796,4.832,5797,4.336,5798,4.832,5799,6.704,5800,4.832,5801,4.832,5802,4.832,5803,4.832,5804,4.832,5805,4.832,5806,4.832,5807,4.832,5808,4.832,5809,4.832,5810,4.832]],["title/additional-documentation/nestjs-application/testing.html",[1907,2.2,2540,2.874,3129,2.437]],["body/additional-documentation/nestjs-application/testing.html",[13,0.169,14,0.005,15,0.088,31,0.099,34,3.672,38,2.901,40,0.943,45,0.756,46,0.799,52,1.419,54,2.214,60,3.053,74,2.257,76,0.643,77,1.552,78,0.752,82,0.991,112,2.706,114,0.313,119,1.419,122,1.419,123,0.624,128,1.32,129,2.442,145,1.026,148,1.945,149,0.563,172,0.002,173,0.001,175,0.345,179,2.965,187,0.404,189,0.222,199,0.293,207,0.882,217,2.773,219,1.045,257,2.008,259,1.212,260,1.832,269,0.799,271,1.703,272,1.832,290,2.034,300,1.635,301,1.635,307,0.902,310,0.784,312,4.586,314,0.401,315,2.308,319,1.635,321,1.868,353,0.456,363,5.531,365,1.581,367,1.146,369,2.075,370,3.474,374,2.113,376,1.419,383,1.315,384,1.386,417,4.581,418,3.329,419,0.991,422,2.87,430,3.09,435,1.186,456,1.186,511,0.743,539,1.618,541,1.986,581,3.699,595,1.076,596,2.579,598,1.844,600,2.113,601,2.767,642,0.864,645,2.46,653,1.146,660,1.419,662,1.964,673,0.589,699,0.902,724,1.146,729,2.113,733,1.346,766,2.131,768,0.864,786,0.77,792,1.045,799,2.901,871,3.179,887,0.991,892,3.885,906,1.146,908,2.477,939,1.285,952,1.146,968,2.496,986,1.452,997,1.186,1004,1.744,1005,1.017,1013,4.747,1169,2.034,1187,2.832,1188,1.109,1202,3.427,1213,1.186,1361,1.635,1381,1.419,1420,1.346,1474,1.419,1475,2.67,1487,3.722,1498,2.773,1499,1.045,1534,2.308,1617,1.232,1643,1.186,1650,2.034,1677,1.902,1680,1.146,1688,1.045,1700,3.423,1703,1.511,1705,1.285,1706,1.511,1707,1.285,1708,3.439,1745,5.243,1747,4.949,1756,0.943,1758,4.26,1759,2.832,1760,3.165,1761,4.039,1778,1.109,1804,1.635,1811,2.433,1816,1.511,1826,1.419,1829,1.419,1832,1.744,1848,2.433,1872,2.773,1893,2.579,1904,2.203,1905,2.803,1906,4.155,1908,1.186,1940,1.346,1957,1.232,1959,1.017,1960,2.23,1972,2.113,1983,1.285,1990,2.113,1992,4.553,2017,1.635,2056,1.285,2067,1.186,2076,2.591,2079,1.346,2080,1.186,2085,4.361,2162,1.419,2183,1.419,2186,1.232,2211,1.419,2213,4.035,2214,3.287,2226,2.433,2247,1.635,2251,1.346,2262,1.346,2265,1.635,2308,1.186,2309,0.991,2310,1.346,2346,1.419,2347,1.285,2393,1.232,2464,3.632,2510,1.076,2511,0.991,2533,1.511,2535,1.964,2537,2.308,2540,5.978,2554,1.511,2676,1.511,2677,1.511,2678,1.232,2679,1.635,2680,3.59,2683,1.346,2685,2.773,2745,1.511,2754,2.433,2756,2.433,2765,1.635,2777,1.419,2779,1.346,2793,2.803,2795,1.419,2796,1.635,2812,1.511,2833,2.308,2841,1.635,2845,1.511,2855,1.232,2857,1.285,2885,1.635,2916,1.511,2964,2.891,2972,3.856,2973,2.773,2978,4.039,3008,1.186,3041,3.59,3069,1.285,3084,1.511,3085,1.511,3291,2.308,3319,1.511,3433,1.419,3498,2.891,3507,1.964,3572,2.803,3641,2.308,3683,1.511,3685,2.203,3686,1.511,3687,2.308,3688,1.285,3690,1.285,3714,1.285,3718,1.419,3729,1.186,3731,1.232,3732,5.195,3766,4.648,3767,1.285,3768,1.511,3849,6.28,3891,1.511,3933,1.419,3970,1.635,4040,4.713,4073,1.511,4088,3.427,4090,4.26,4098,1.635,4099,4.407,4101,1.511,4102,1.635,4103,2.591,4108,1.285,4116,1.635,4120,1.285,4123,1.635,4128,1.419,4129,3.194,4136,2.308,4137,1.419,4142,2.308,4159,1.635,4163,2.308,4164,2.308,4171,5.478,4176,1.511,4189,1.419,4191,3.402,4197,1.419,4211,1.511,4220,1.419,4221,1.635,4235,1.346,4240,1.511,4242,1.635,4261,1.635,4267,1.511,4278,3.402,4303,1.419,4316,2.433,4322,1.635,4323,1.285,4354,1.511,4362,1.511,4364,3.427,4365,1.635,4379,2.591,4389,3.786,4390,1.511,4393,1.511,4412,1.635,4419,1.635,4422,1.419,4466,1.635,4479,1.635,4483,1.511,4485,1.346,4491,1.635,4494,1.635,4512,1.635,4537,2.308,4542,1.635,4549,1.511,4556,1.635,4566,2.591,4568,6.543,4617,1.511,4666,1.511,4745,1.635,4810,1.635,4815,1.511,4821,1.511,4823,1.635,4843,4.361,4858,1.419,4864,3.402,4896,3.194,4900,1.635,4902,1.346,4913,3.59,4919,1.635,4932,3.679,4935,1.635,4943,2.308,4953,1.511,4959,1.511,4968,1.511,4996,1.635,5001,1.285,5067,2.308,5075,1.635,5107,1.635,5147,2.803,5182,1.511,5184,5.453,5226,1.635,5238,1.511,5243,1.635,5264,1.635,5288,1.635,5318,1.635,5330,1.635,5340,2.591,5342,1.635,5348,5.682,5354,1.511,5355,4.039,5359,1.635,5360,1.635,5364,1.635,5369,1.511,5372,2.433,5380,1.511,5384,4.361,5385,1.635,5398,1.419,5406,1.511,5425,1.511,5432,4.648,5500,1.635,5517,1.635,5555,1.419,5559,3.402,5597,2.803,5599,4.032,5600,1.635,5605,1.511,5628,1.635,5636,1.511,5648,1.635,5649,1.511,5650,1.635,5691,1.635,5695,1.635,5727,1.635,5730,2.803,5732,1.635,5740,1.635,5775,1.635,5780,2.591,5786,1.635,5797,1.635,5811,3.123,5812,1.822,5813,1.822,5814,5.725,5815,1.822,5816,1.822,5817,6.38,5818,1.822,5819,1.822,5820,4.1,5821,1.822,5822,1.822,5823,2.803,5824,1.822,5825,1.822,5826,1.822,5827,1.822,5828,1.822,5829,1.822,5830,1.635,5831,3.123,5832,1.822,5833,1.822,5834,1.822,5835,1.822,5836,1.822,5837,1.822,5838,1.822,5839,1.822,5840,1.822,5841,1.822,5842,1.822,5843,1.822,5844,1.822,5845,1.822,5846,1.822,5847,1.822,5848,1.822,5849,1.822,5850,1.822,5851,1.822,5852,1.822,5853,1.822,5854,1.822,5855,1.822,5856,1.822,5857,1.822,5858,1.822,5859,4.1,5860,1.822,5861,4.1,5862,3.123,5863,5.468,5864,3.123,5865,4.1,5866,1.822,5867,1.822,5868,1.822,5869,3.123,5870,1.822,5871,1.822,5872,1.822,5873,1.822,5874,1.822,5875,1.822,5876,1.822,5877,1.822,5878,1.822,5879,5.965,5880,1.822,5881,1.822,5882,1.822,5883,1.822,5884,1.822,5885,1.822,5886,1.822,5887,1.822,5888,1.822,5889,1.822,5890,1.822,5891,1.822,5892,1.822,5893,5.468,5894,3.123,5895,1.822,5896,3.123,5897,1.822,5898,1.822,5899,1.822,5900,3.123,5901,1.822,5902,1.822,5903,4.1,5904,3.123,5905,3.123,5906,1.822,5907,1.822,5908,4.86,5909,1.822,5910,1.822,5911,1.822,5912,1.822,5913,1.822,5914,1.822,5915,1.822,5916,1.822,5917,1.822,5918,3.123,5919,3.123,5920,1.822,5921,3.123,5922,1.822,5923,1.822,5924,1.822,5925,1.822,5926,1.822,5927,3.123,5928,3.123,5929,1.822,5930,3.123,5931,1.822,5932,1.822,5933,1.822,5934,1.822,5935,1.822,5936,3.123,5937,1.822,5938,1.822,5939,1.822,5940,1.822,5941,1.822,5942,1.822,5943,3.123,5944,4.86,5945,1.822,5946,1.822,5947,1.822,5948,1.822,5949,1.822,5950,1.822,5951,3.123,5952,1.822,5953,1.822,5954,1.822,5955,1.822,5956,1.822,5957,1.822,5958,1.822,5959,1.822,5960,1.822,5961,1.635,5962,1.822,5963,3.123,5964,1.822,5965,1.822,5966,1.822,5967,1.822,5968,1.822,5969,1.822,5970,1.822,5971,1.822,5972,1.822,5973,1.822,5974,1.822,5975,1.822,5976,1.822,5977,1.822,5978,1.822,5979,1.822,5980,1.822,5981,1.822,5982,1.822,5983,1.822,5984,1.822,5985,1.822,5986,1.822,5987,1.822,5988,1.822,5989,1.822,5990,1.822,5991,1.822,5992,1.822,5993,1.822,5994,1.822,5995,1.822,5996,1.822]],["title/additional-documentation/nestjs-application/decisions.html",[1907,2.2,3129,2.437,5772,3.525]],["body/additional-documentation/nestjs-application/decisions.html",[9,1.012,10,1.432,14,0.004,31,0.175,47,3.423,112,2.747,172,0.003,173,0.003,175,1.567,179,2.579,187,0.612,207,2.688,271,2.304,314,1.822,321,4.011,345,2.389,347,1.891,352,2.485,353,1.389,362,3.754,370,3.855,375,3.277,383,1.501,393,2.944,415,3.018,435,3.614,456,5.383,505,2.118,584,3.49,599,3.754,601,3.727,642,2.632,768,2.632,871,3.113,986,2.579,1069,3.098,1128,3.754,1188,3.379,1487,2.747,1502,3.277,1614,3.754,1688,3.184,1727,4.915,1755,4.604,1756,2.874,1759,2.874,1795,4.604,1818,3.914,1848,4.324,1958,3.277,1960,4.006,1963,5.194,1964,3.914,1990,3.754,2056,3.914,2070,4.979,2186,3.754,2246,5.738,2248,4.604,2260,4.1,2464,3.379,2535,3.49,2540,3.754,2556,5.829,2684,4.979,3005,6.608,3008,4.796,3041,5.441,3507,5.198,3936,4.1,4073,4.604,4086,4.1,4095,3.754,4101,6.11,4125,5.738,4165,4.604,4185,4.1,4235,4.1,4323,3.914,4392,4.1,4407,4.979,4502,4.604,4787,4.604,4800,4.604,4864,4.604,4873,4.324,5068,4.979,5184,3.754,5227,6.858,5246,4.979,5333,4.979,5339,6.11,5340,4.604,5355,4.1,5369,4.604,5396,6.608,5462,4.979,5555,4.324,5590,4.979,5677,6.11,5702,4.979,5746,4.979,5772,6.11,5814,4.979,5823,4.979,5830,4.979,5961,4.979,5997,5.549,5998,8.266,5999,7.364,6000,5.549,6001,5.549,6002,9.162,6003,5.549,6004,5.549,6005,5.549,6006,5.549,6007,5.549,6008,5.549,6009,5.549,6010,5.549,6011,5.549,6012,5.549,6013,7.364,6014,5.549,6015,5.549,6016,5.549,6017,5.549,6018,5.549,6019,5.549,6020,5.549,6021,5.549,6022,5.549,6023,5.549,6024,5.549,6025,5.549,6026,5.549,6027,5.549,6028,5.549,6029,5.549,6030,5.549]],["title/additional-documentation/nestjs-application/vscode.html",[1907,2.2,3129,2.437,4093,3.31]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.095,14,0.004,112,3.565,172,0.004,173,0.004,211,4.208,363,4.984,506,4.3,600,4.872,601,4.397,615,5.079,642,4.12,658,4.872,891,4.529,1734,5.611,1745,3.917,1818,5.079,1970,4.85,2747,5.611,2809,5.079,3433,5.611,3507,4.529,3767,5.079,4093,6.768,4139,7.795,4374,5.321,4487,6.462,4684,6.462,4804,5.975,4861,8.37,4894,6.462,4908,5.611,4943,6.418,5001,5.079,5067,5.321,5086,5.975,5184,4.872,5271,6.462,5273,6.462,5677,7.207,6031,7.202,6032,7.202,6033,7.202,6034,7.202,6035,7.202,6036,7.202,6037,7.202,6038,7.202,6039,7.202]],["title/additional-documentation/nestjs-application/git.html",[1907,2.2,3129,2.437,4094,3.525]],["body/additional-documentation/nestjs-application/git.html",[14,0.004,46,3.478,54,3.613,172,0.004,173,0.004,666,4.829,2511,4.314,2535,4.988,3305,6.18,4094,8.059,4115,7.117,4355,6.58,4917,8.253,5449,7.117,6040,7.931,6041,7.931,6042,7.931,6043,7.931]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":469,"title":{},"body":{"classes/BaseFactory.html":{},"classes/DashboardEntity.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"classes/EncryptedStringType.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":3958,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":3998,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":4009,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":3911,"title":{},"body":{"dependencies.html":{}}}],["0.24.0",{"_index":3901,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":3910,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":3986,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":4022,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":4013,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":3978,"title":{},"body":{"dependencies.html":{}}}],["0.5.4",{"_index":3963,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3969,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":4012,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":3894,"title":{},"body":{"dependencies.html":{}}}],["0.8.1",{"_index":3972,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":3961,"title":{},"body":{"dependencies.html":{}}}],["0000d224816abba584714c9c",{"_index":5970,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":5972,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1",{"_index":1187,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/Scope.html":{},"classes/Task.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":3987,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4001,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":3945,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":3927,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":3982,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":5918,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":3942,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":4031,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":3999,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":3906,"title":{},"body":{"dependencies.html":{}}}],["1.18.1",{"_index":3876,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":5919,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":3903,"title":{},"body":{"dependencies.html":{}}}],["1.28.1",{"_index":3948,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":3877,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":3917,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3127,"title":{},"body":{"classes/PaginationQuery.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":823,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":4435,"title":{},"body":{"license.html":{}}}],["13",{"_index":4876,"title":{},"body":{"license.html":{}}}],["13.1.0",{"_index":3989,"title":{},"body":{"dependencies.html":{}}}],["14.14",{"_index":2104,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["15",{"_index":4623,"title":{},"body":{"license.html":{}}}],["15672:15672",{"_index":5195,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["16",{"_index":4624,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":3943,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":4192,"title":{},"body":{"license.html":{}}}],["1996",{"_index":4441,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":6021,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":6020,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":1202,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":4006,"title":{},"body":{"dependencies.html":{}}}],["2.1041.0",{"_index":3899,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":3960,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":3983,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":3946,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":3921,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":4439,"title":{},"body":{"license.html":{}}}],["2007",{"_index":4194,"title":{},"body":{"license.html":{}}}],["23",{"_index":4887,"title":{},"body":{"overview.html":{}}}],["24",{"_index":821,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["28",{"_index":4772,"title":{},"body":{"license.html":{}}}],["2auth",{"_index":4937,"title":{},"body":{"todo.html":{}}}],["3",{"_index":4191,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":3996,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":4002,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":5963,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":3992,"title":{},"body":{"dependencies.html":{}}}],["3.1.20",{"_index":3980,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":4029,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":3892,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":4003,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":4672,"title":{},"body":{"license.html":{}}}],["3030/docs",{"_index":5261,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["3030/v3/docs",{"_index":5255,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["4",{"_index":1169,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"injectables/TaskUC.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":3924,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":4017,"title":{},"body":{"dependencies.html":{}}}],["4.13.2",{"_index":3937,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":3935,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":3955,"title":{},"body":{"dependencies.html":{}}}],["4.2",{"_index":2767,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["4.2.0",{"_index":3934,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":3913,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":3879,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":3871,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":3878,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":3907,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":5187,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["404",{"_index":4952,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["409/bad",{"_index":5809,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":2216,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["41",{"_index":4889,"title":{},"body":{"overview.html":{}}}],["47",{"_index":4891,"title":{},"body":{"overview.html":{}}}],["5",{"_index":3686,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":3896,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":3897,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":3939,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":3885,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":3985,"title":{},"body":{"dependencies.html":{}}}],["5.13.9",{"_index":3962,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":5800,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5672",{"_index":5200,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5672:5672",{"_index":5194,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":5971,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":5977,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":3919,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":3887,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":3940,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":3994,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":822,"title":{},"body":{"classes/CourseFactory.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["60000",{"_index":3219,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["699615164",{"_index":4927,"title":{},"body":{"todo.html":{}}}],["6b",{"_index":4524,"title":{},"body":{"license.html":{}}}],["6d",{"_index":4544,"title":{},"body":{"license.html":{}}}],["7",{"_index":3736,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{}}}],["7.0.0",{"_index":3923,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":3932,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":4004,"title":{},"body":{"dependencies.html":{}}}],["79",{"_index":4890,"title":{},"body":{"overview.html":{}}}],["8",{"_index":2069,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["8.0.0",{"_index":3881,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":3883,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":3915,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":3880,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":4026,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":3950,"title":{},"body":{"dependencies.html":{}}}],["8.8.2",{"_index":3889,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":5105,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["8080",{"_index":5229,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["9",{"_index":4888,"title":{},"body":{"overview.html":{}}}],["9229",{"_index":5221,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["99",{"_index":3132,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":4151,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":889,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":2176,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_${now.getdate()}_${now.gethours()}_${now.getminutes()}_${now.getseconds",{"_index":1663,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":2194,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":2206,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":5601,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":2195,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":2208,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":5235,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":345,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["_id.$oid",{"_index":1730,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_operator",{"_index":1016,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_queries",{"_index":1017,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_timeout",{"_index":3769,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.getmetadata().title",{"_index":1184,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["a.m",{"_index":4181,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":5855,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":4591,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":4177,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":4464,"title":{},"body":{"license.html":{}}}],["absolut",{"_index":3689,"title":{},"body":{"injectables/TaskUC.html":{}}}],["absolute",{"_index":1647,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["abstract",{"_index":508,"title":{},"body":{"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DashboardRepo.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/PaginationResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstractbootstrapconsole",{"_index":3755,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["abstraction",{"_index":5513,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":737,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":4677,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":4676,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":4912,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":423,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":60,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/ServerController.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["access,@typescript",{"_index":51,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["accessable",{"_index":5588,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":929,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"index.html":{}}}],["accessible",{"_index":4269,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":5373,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accesskeyid",{"_index":2024,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":1558,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"classes/Scope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":4506,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":4856,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":4271,"title":{},"body":{"license.html":{}}}],["accord",{"_index":4463,"title":{},"body":{"license.html":{}}}],["according",{"_index":4848,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":2310,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":2308,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["achieve",{"_index":4859,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":4402,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":4726,"title":{},"body":{"license.html":{}}}],["act",{"_index":5854,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":1996,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":4684,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["active",{"_index":2609,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activecourses",{"_index":743,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["activecourses'})@property",{"_index":711,"title":{},"body":{"classes/Course.html":{}}}],["activities",{"_index":4315,"title":{},"body":{"license.html":{}}}],["activity",{"_index":4766,"title":{},"body":{"license.html":{}}}],["actors",{"_index":5712,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":4748,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":4565,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":4294,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":5345,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":2511,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":5129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1727,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/TaskAuthorizationService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["addgroupmoderator(groupname",{"_index":101,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adding",{"_index":416,"title":{},"body":{"classes/BaseFactory.html":{},"classes/Course.html":{},"classes/CourseFactory.html":{},"interfaces/ICourseProperties.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":1907,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":3642,"title":{},"body":{"classes/TaskScope.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":5213,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":1020,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addquery(query",{"_index":1028,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addreferences",{"_index":2269,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["addreferences(anotherreference",{"_index":1176,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["address",{"_index":4803,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addressed",{"_index":4290,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":5423,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addroom",{"_index":1111,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["addroom(room",{"_index":1132,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["adds",{"_index":1627,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addtokentowhitelist",{"_index":2627,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtokentowhitelist(redisidentifier",{"_index":2632,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist",{"_index":2612,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist(accountid",{"_index":2614,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["adhere",{"_index":5737,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["admin",{"_index":3692,"title":{},"body":{"injectables/TaskUC.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adminid",{"_index":27,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{}}}],["adminidandtoken",{"_index":1,"title":{"interfaces/AdminIdAndToken.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adminidandtoken.id",{"_index":133,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adminidandtoken.token",{"_index":132,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adminpassword",{"_index":26,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{}}}],["admintoken",{"_index":28,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{}}}],["adminuser",{"_index":25,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{}}}],["adopted",{"_index":4438,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":4599,"title":{},"body":{"license.html":{}}}],["advised",{"_index":4844,"title":{},"body":{"license.html":{}}}],["affects",{"_index":4600,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4188,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":4707,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":4399,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":5926,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":5930,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterbuild",{"_index":398,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["afterbuild(afterbuildfn",{"_index":412,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["afterbuildfn",{"_index":421,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["afterduedateornone",{"_index":3589,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["afterduedateornone(duedate",{"_index":3628,"title":{},"body":{"classes/TaskScope.html":{}}}],["aftereach",{"_index":5849,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":5979,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":5847,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":4070,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":3688,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":5487,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":4491,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregates",{"_index":5367,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agile",{"_index":5341,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":5590,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["ago",{"_index":1774,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["agpl",{"_index":4880,"title":{},"body":{"license.html":{}}}],["agree",{"_index":4785,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":4832,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":5709,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":4736,"title":{},"body":{"license.html":{}}}],["aims",{"_index":5282,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":3888,"title":{},"body":{"dependencies.html":{}}}],["algorithm",{"_index":2570,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":4974,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":5336,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["all('seed",{"_index":1532,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["all_entities",{"_index":2738,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["allcollections",{"_index":5077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allcollections.map(async",{"_index":5079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allcollectionswithfilepaths",{"_index":1675,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.filter",{"_index":1685,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.map((file",{"_index":1691,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["alleging",{"_index":4714,"title":{},"body":{"license.html":{}}}],["allforcreator",{"_index":3580,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforcreator.addquery(allforfinishedcoursesandlessonsforcreator.query",{"_index":3582,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforcreator.addquery(closedforcreator.query",{"_index":3581,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessons",{"_index":3569,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessons.addquery(parentsfinished.query",{"_index":3570,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessons.bydraft(false",{"_index":3571,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessonsforcreator",{"_index":3577,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessonsforcreator.addquery(parentsfinished.query",{"_index":3578,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessonsforcreator.bycreatorid(parentids.creatorid",{"_index":3579,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allow",{"_index":3433,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":3690,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":2809,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allrooms",{"_index":1112,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["alone",{"_index":5845,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":4466,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":615,"title":{},"body":{"classes/BusinessError.html":{},"injectables/FileSystemAdapter.html":{},"injectables/NewsRepo.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":4252,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":4520,"title":{},"body":{"license.html":{}}}],["always",{"_index":5369,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":5002,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amp",{"_index":4072,"title":{},"body":{"miscellaneous/functions.html":{}}}],["amqp",{"_index":3890,"title":{},"body":{"dependencies.html":{}}}],["amqpconnection",{"_index":2719,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["amqplib",{"_index":3893,"title":{},"body":{"dependencies.html":{}}}],["analysis",{"_index":5252,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":4021,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":4678,"title":{},"body":{"license.html":{}}}],["and/opr",{"_index":5868,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["and/or",{"_index":4245,"title":{},"body":{"license.html":{}}}],["ang",{"_index":6003,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["annotations",{"_index":5611,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":5593,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":5331,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anothernewsid",{"_index":5953,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["anotherreference",{"_index":2282,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["anti",{"_index":4425,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":4476,"title":{},"body":{"license.html":{}}}],["anything",{"_index":4302,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":5664,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":207,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api/v1",{"_index":4104,"title":{},"body":{"index.html":{}}}],["api/v3",{"_index":4105,"title":{},"body":{"index.html":{}}}],["api/v3/news",{"_index":4114,"title":{},"body":{"index.html":{}}}],["api_validation_error",{"_index":206,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":5063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":879,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GlobalValidationPipe.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty()@decodehtmlentities",{"_index":3611,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apiproperty({description",{"_index":899,"title":{},"body":{"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{}}}],["apiproperty({enum",{"_index":3028,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":3026,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({type",{"_index":874,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsListResponse.html":{},"classes/PaginationResponse.html":{},"classes/TaskListResponse.html":{}}}],["apipropertyoptional",{"_index":1065,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional()@decodehtmlentities",{"_index":3614,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apipropertyoptional({description",{"_index":3023,"title":{},"body":{"classes/NewsResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional({type",{"_index":3021,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":5305,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":778,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["apitags('courses",{"_index":789,"title":{},"body":{"controllers/CourseController.html":{}}}],["apitags('dashboard",{"_index":1094,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apitags('news",{"_index":2861,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["apitags('task",{"_index":3480,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('user",{"_index":3811,"title":{},"body":{"controllers/UserController.html":{}}}],["apivalidationerror",{"_index":174,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":2268,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":229,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":213,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["apivalidationerrorresponse(error",{"_index":2198,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["app",{"_index":2214,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":5981,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":5975,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":670,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":669,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":667,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":668,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["append",{"_index":4972,"title":{},"body":{"todo.html":{}}}],["appendedattachment",{"_index":235,"title":{"interfaces/AppendedAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["applicable",{"_index":4307,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":5223,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":601,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["applications",{"_index":4086,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":1616,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":4809,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1681,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":5064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":5984,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":5321,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":4127,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":4458,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":4852,"title":{},"body":{"license.html":{}}}],["apps",{"_index":5113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":5099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../all",{"_index":5009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":4990,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../bootstrap.console.ts",{"_index":5032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../clean",{"_index":5013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../console.ts",{"_index":5011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":5035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":4977,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course.entity.ts",{"_index":5026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../course.factory.ts",{"_index":5017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../coursegroup.factory.ts",{"_index":5019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":5023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../dashboard.entity.ts",{"_index":4978,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../dashboard.repo.ts",{"_index":5034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":5055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../decode",{"_index":4048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../empty",{"_index":5029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":4980,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":4982,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../file",{"_index":5057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file.factory.ts",{"_index":5028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../filestorage.adapter.ts",{"_index":4047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../find",{"_index":4036,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":4044,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../jwt",{"_index":5056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../learnroom.types.ts",{"_index":4034,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../lesson.factory.ts",{"_index":5036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../mail.module.ts",{"_index":4986,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":4041,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../management.ts",{"_index":4042,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":5025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":5050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.factory.ts",{"_index":5021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":4988,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":4035,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../news.uc.ts",{"_index":4985,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../resolveduser.dto.ts",{"_index":4987,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../rocket",{"_index":4983,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../role.factory.ts",{"_index":5041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../school.factory.ts",{"_index":5042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../scope.ts",{"_index":4979,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":5038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../setup",{"_index":5046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../storageprovider.factory.ts",{"_index":5048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":4050,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../submission.factory.ts",{"_index":5049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../swagger.ts",{"_index":5016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.authorization.service.ts",{"_index":4038,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../task.entity.ts",{"_index":4991,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../task.factory.ts",{"_index":5051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.uc.ts",{"_index":4037,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../team.factory.ts",{"_index":5053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../types.ts",{"_index":4976,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../user.factory.ts",{"_index":5058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../user.ts",{"_index":4984,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../value",{"_index":4993,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":5208,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":5265,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":5108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":5270,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":5117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":2155,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/console.module.ts",{"_index":3282,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["apps/server/src/console/console.ts",{"_index":5073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/console/server.console.ts",{"_index":3268,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:11",{"_index":3272,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:17",{"_index":3275,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:6",{"_index":3270,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts",{"_index":3754,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts:5",{"_index":3756,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":655,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":214,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":1898,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":1900,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":3861,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":1891,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":2163,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":2323,"title":{},"body":{"interfaces/IErrorType.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":1950,"title":{},"body":{"interfaces/FeathersError.html":{}}}],["apps/server/src/core/error/server",{"_index":5158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":2532,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":2345,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":2356,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":2354,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":2360,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":2351,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":2358,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":2692,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":2671,"title":{},"body":{"injectables/Logger.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":2244,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":3866,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":4052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/management.ts",{"_index":4053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":2546,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":5004,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":2542,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":2575,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt",{"_index":2610,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":2578,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10",{"_index":2581,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20",{"_index":2583,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":292,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":299,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:16",{"_index":317,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:32",{"_index":311,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:52",{"_index":320,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:6",{"_index":304,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":1910,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["apps/server/src/modules/files/files.module.ts",{"_index":2119,"title":{},"body":{"modules/FilesModule.html":{}}}],["apps/server/src/modules/files/job/delete",{"_index":1763,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["apps/server/src/modules/files/uc/delete",{"_index":1787,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["apps/server/src/modules/learnroom/controller/course.controller.ts",{"_index":769,"title":{},"body":{"controllers/CourseController.html":{}}}],["apps/server/src/modules/learnroom/controller/course.controller.ts:17",{"_index":775,"title":{},"body":{"controllers/CourseController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts",{"_index":1072,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:17",{"_index":1076,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:24",{"_index":1080,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:40",{"_index":1086,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts",{"_index":869,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:26",{"_index":901,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:31",{"_index":904,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:36",{"_index":902,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:41",{"_index":900,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:46",{"_index":903,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:5",{"_index":898,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:51",{"_index":905,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:54",{"_index":873,"title":{},"body":{"classes/CourseMetadataListResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts",{"_index":1293,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:13",{"_index":1309,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:18",{"_index":1308,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:23",{"_index":1306,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:31",{"_index":1301,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:36",{"_index":1303,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:41",{"_index":1302,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:46",{"_index":1297,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:51",{"_index":1304,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:56",{"_index":1305,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:62",{"_index":1300,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:70",{"_index":1445,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:76",{"_index":1444,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:8",{"_index":1307,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts",{"_index":2799,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:13",{"_index":2816,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:18",{"_index":2817,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:24",{"_index":2814,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:30",{"_index":2802,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:34",{"_index":2803,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/patchgroup.params.ts",{"_index":3159,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/patchgroup.params.ts:12",{"_index":3161,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["apps/server/src/modules/learnroom/learnroom.module.ts",{"_index":2636,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["apps/server/src/modules/learnroom/mapper/course.mapper.ts",{"_index":855,"title":{},"body":{"classes/CourseMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/course.mapper.ts:5",{"_index":858,"title":{},"body":{"classes/CourseMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts",{"_index":1310,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5",{"_index":1313,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts",{"_index":1031,"title":{},"body":{"injectables/CourseUc.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts:10",{"_index":1036,"title":{},"body":{"injectables/CourseUc.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts:7",{"_index":1034,"title":{},"body":{"injectables/CourseUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts",{"_index":1446,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:13",{"_index":1452,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:25",{"_index":1454,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:40",{"_index":1456,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:56",{"_index":1458,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:7",{"_index":1451,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/management/console/database",{"_index":1477,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["apps/server/src/modules/management/controller/database",{"_index":1517,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts",{"_index":571,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:11",{"_index":587,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:21",{"_index":575,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/management.module.ts",{"_index":2733,"title":{},"body":{"modules/ManagementModule.html":{}}}],["apps/server/src/modules/management/uc/database",{"_index":1598,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":1042,"title":{},"body":{"classes/CreateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":2881,"title":{},"body":{"classes/NewsFilterQuery.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":2898,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:101",{"_index":3020,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:106",{"_index":3016,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:111",{"_index":3032,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:116",{"_index":3015,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:12",{"_index":3013,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:121",{"_index":3031,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:126",{"_index":3019,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:129",{"_index":2899,"title":{},"body":{"classes/NewsListResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:51",{"_index":3018,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:56",{"_index":3030,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:61",{"_index":3014,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:66",{"_index":3017,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:73",{"_index":3022,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:78",{"_index":3024,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:85",{"_index":3029,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:91",{"_index":3027,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:96",{"_index":3025,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":3246,"title":{},"body":{"classes/SchoolInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/target",{"_index":3384,"title":{},"body":{"classes/TargetInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":3791,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":3824,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":2832,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:21",{"_index":2837,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:35",{"_index":2844,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:56",{"_index":2848,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:70",{"_index":2854,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:84",{"_index":2840,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/team",{"_index":3741,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":2917,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:37",{"_index":2924,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:51",{"_index":2922,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:64",{"_index":2928,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:8",{"_index":2926,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":3239,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["apps/server/src/modules/news/mapper/target",{"_index":3379,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":3823,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":2965,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":3052,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:119",{"_index":3082,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:143",{"_index":3063,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:154",{"_index":3074,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:174",{"_index":3080,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:192",{"_index":3073,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:202",{"_index":3076,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:21",{"_index":3059,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:34",{"_index":3061,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:64",{"_index":3065,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:95",{"_index":3071,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/rocketchat/rocket",{"_index":6,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/controller/dto/task",{"_index":3651,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":3499,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:19",{"_index":3618,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":3619,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":3610,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:29",{"_index":3617,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:33",{"_index":3612,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:37",{"_index":3615,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:40",{"_index":3616,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:43",{"_index":3613,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:46",{"_index":3621,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:49",{"_index":3620,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:52",{"_index":3501,"title":{},"body":{"classes/TaskListResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":3609,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":3468,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:19",{"_index":3471,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:33",{"_index":3474,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/mapper/task",{"_index":3645,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":3510,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:6",{"_index":3512,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":3536,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts",{"_index":3412,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:11",{"_index":3418,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:16",{"_index":3422,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:28",{"_index":3424,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:47",{"_index":3428,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:55",{"_index":3426,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:61",{"_index":3430,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":3663,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:110",{"_index":3673,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:139",{"_index":3677,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:14",{"_index":3668,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:146",{"_index":3674,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:20",{"_index":3670,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:68",{"_index":3669,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:82",{"_index":3672,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts",{"_index":3162,"title":{},"body":{"classes/ResolvedUser.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:11",{"_index":3166,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:14",{"_index":3165,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:17",{"_index":3163,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:20",{"_index":3170,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:23",{"_index":3168,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:26",{"_index":3167,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:29",{"_index":3169,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:8",{"_index":3164,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts",{"_index":3805,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts:17",{"_index":3808,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts",{"_index":3172,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts:5",{"_index":3174,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts",{"_index":3224,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:10",{"_index":3229,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:7",{"_index":3227,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts",{"_index":3839,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:10",{"_index":3842,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:13",{"_index":3844,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/user.facade.ts",{"_index":3815,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:11",{"_index":3818,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:14",{"_index":3820,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.module.ts",{"_index":3833,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/server/src/server.controller.ts",{"_index":3289,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":3290,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":3295,"title":{},"body":{"modules/ServerModule.html":{}}}],["apps/server/src/shared/$1",{"_index":5116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":176,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":594,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":606,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":609,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":608,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":607,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:19",{"_index":605,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:34",{"_index":610,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:38",{"_index":611,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts",{"_index":3857,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts:4",{"_index":3859,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":5162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":1823,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":1740,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":3764,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":3774,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":3772,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":3771,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":3776,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":3778,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":3126,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":3133,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":3136,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":3141,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:11",{"_index":3144,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:14",{"_index":3147,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:17",{"_index":3146,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:20",{"_index":3145,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":3143,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":3151,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":5123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/decode",{"_index":4054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":4079,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/all",{"_index":5059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":344,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":351,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":382,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":386,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":385,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":389,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":349,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts",{"_index":674,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:108",{"_index":712,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:36",{"_index":697,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:39",{"_index":695,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:42",{"_index":700,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:45",{"_index":705,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:48",{"_index":709,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:51",{"_index":707,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:55",{"_index":693,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:58",{"_index":701,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:62",{"_index":691,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:77",{"_index":714,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:81",{"_index":716,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:87",{"_index":715,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:93",{"_index":717,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:99",{"_index":718,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts",{"_index":832,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:15",{"_index":838,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:18",{"_index":835,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:26",{"_index":839,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts",{"_index":1109,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:100",{"_index":2287,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:120",{"_index":2291,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:124",{"_index":2293,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:14",{"_index":2333,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:143",{"_index":1130,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:145",{"_index":1127,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:147",{"_index":1129,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:149",{"_index":1131,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:151",{"_index":1153,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:158",{"_index":1160,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:16",{"_index":2334,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:162",{"_index":1126,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:175",{"_index":1147,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:179",{"_index":1151,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:18",{"_index":2331,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:183",{"_index":1145,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:195",{"_index":1141,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:20",{"_index":2330,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:203",{"_index":1158,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:213",{"_index":1164,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:22",{"_index":2335,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:221",{"_index":1137,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:232",{"_index":1135,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:242",{"_index":1133,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:248",{"_index":1144,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:256",{"_index":1150,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:268",{"_index":1162,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:277",{"_index":1156,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:34",{"_index":2277,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:36",{"_index":2280,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:38",{"_index":2279,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:48",{"_index":2276,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:56",{"_index":2285,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:60",{"_index":2284,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:64",{"_index":2286,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:68",{"_index":2283,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:72",{"_index":2278,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:74",{"_index":2290,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:78",{"_index":2288,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:8",{"_index":2332,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:82",{"_index":2289,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:86",{"_index":2292,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:96",{"_index":2281,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts",{"_index":1266,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:19",{"_index":1277,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:22",{"_index":1278,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:25",{"_index":1279,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:28",{"_index":1276,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:31",{"_index":1273,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:40",{"_index":1333,"title":{},"body":{"classes/DashboardModelEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:49",{"_index":1334,"title":{},"body":{"classes/DashboardModelEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:53",{"_index":1335,"title":{},"body":{"classes/DashboardModelEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:9",{"_index":1269,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts",{"_index":485,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:17",{"_index":490,"title":{},"body":{"classes/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:20",{"_index":492,"title":{},"body":{"classes/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:23",{"_index":489,"title":{},"body":{"classes/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:32",{"_index":2005,"title":{},"body":{"classes/File.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:35",{"_index":2004,"title":{},"body":{"classes/File.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:38",{"_index":2003,"title":{},"body":{"classes/File.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts",{"_index":2338,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:14",{"_index":2643,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:18",{"_index":2642,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:21",{"_index":2640,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts",{"_index":907,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:31",{"_index":2828,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:35",{"_index":2819,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:39",{"_index":2821,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:42",{"_index":2822,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:45",{"_index":2824,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:48",{"_index":2825,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:51",{"_index":2826,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:55",{"_index":2827,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:58",{"_index":2823,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:61",{"_index":2820,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:64",{"_index":2829,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:66",{"_index":2818,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:79",{"_index":2830,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts",{"_index":2364,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:15",{"_index":3204,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:19",{"_index":3205,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:29",{"_index":3201,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts",{"_index":2373,"title":{},"body":{"interfaces/ISchoolProperties.html":{},"classes/School.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts:10",{"_index":3236,"title":{},"body":{"classes/School.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts",{"_index":2375,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:15",{"_index":3323,"title":{},"body":{"classes/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:18",{"_index":3322,"title":{},"body":{"classes/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:21",{"_index":3325,"title":{},"body":{"classes/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:24",{"_index":3321,"title":{},"body":{"classes/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts",{"_index":2388,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:26",{"_index":3336,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:29",{"_index":3334,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:32",{"_index":3331,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:35",{"_index":3337,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:39",{"_index":3330,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:42",{"_index":3335,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:46",{"_index":3332,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:49",{"_index":3333,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:52",{"_index":3329,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:67",{"_index":3339,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:75",{"_index":3338,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts",{"_index":2429,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:100",{"_index":3407,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:107",{"_index":3405,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:114",{"_index":3402,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:122",{"_index":3404,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:130",{"_index":3403,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:137",{"_index":3400,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:161",{"_index":3410,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:167",{"_index":3409,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:173",{"_index":3399,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:194",{"_index":3401,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:32",{"_index":3738,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:34",{"_index":3737,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:48",{"_index":3396,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:51",{"_index":3390,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:54",{"_index":3393,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:57",{"_index":3397,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:60",{"_index":3392,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:63",{"_index":3391,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:66",{"_index":3395,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:69",{"_index":3398,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:74",{"_index":3389,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:89",{"_index":3408,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:94",{"_index":3406,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts",{"_index":2519,"title":{},"body":{"interfaces/ITeamProperties.html":{},"classes/Team.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts:10",{"_index":3739,"title":{},"body":{"classes/Team.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts",{"_index":2521,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:19",{"_index":3798,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:22",{"_index":3799,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:25",{"_index":3800,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:29",{"_index":3802,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:33",{"_index":3796,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/interface/find",{"_index":2325,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/interface/learnroom.ts",{"_index":2336,"title":{},"body":{"interfaces/ILearnroom.html":{}}}],["apps/server/src/shared/domain/interface/user.ts",{"_index":2307,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":4999,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":5003,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/learnroom.types.ts",{"_index":4039,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/news.types.ts",{"_index":2295,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":5005,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/infra/console/console",{"_index":629,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{}}}],["apps/server/src/shared/infra/database/management/database",{"_index":1547,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{}}}],["apps/server/src/shared/infra/database/mongo",{"_index":2755,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.module.ts",{"_index":1881,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.module.ts:10",{"_index":1885,"title":{},"body":{"modules/EncryptionModule.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts",{"_index":3365,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:13",{"_index":3369,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:6",{"_index":3367,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:9",{"_index":3371,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/feathers/feathers",{"_index":1968,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/infra/feathers/feathers.module.ts",{"_index":1956,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/shared/infra/file",{"_index":2032,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/filestorage/filestorage.adapter.ts",{"_index":2007,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/infra/filestorage/filestorage.adapter.ts:21",{"_index":2010,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["apps/server/src/shared/infra/mail/mail.interface.ts",{"_index":236,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["apps/server/src/shared/infra/mail/mail.module.ts",{"_index":2695,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/mail/mail.module.ts:28",{"_index":2697,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/server/src/shared/infra/mail/mail.service.ts",{"_index":2716,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["apps/server/src/shared/infra/mail/mail.service.ts:12",{"_index":2721,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/shared/infra/mail/mail.service.ts:18",{"_index":2723,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/shared/repo/base.repo.ts",{"_index":528,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:14",{"_index":550,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:19",{"_index":546,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:27",{"_index":548,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:36",{"_index":552,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:40",{"_index":558,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:44",{"_index":554,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:48",{"_index":556,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:53",{"_index":542,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:6",{"_index":540,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:9",{"_index":544,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts",{"_index":977,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:21",{"_index":1027,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:32",{"_index":1025,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:44",{"_index":978,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:47",{"_index":982,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:72",{"_index":984,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:9",{"_index":1026,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts",{"_index":846,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:10",{"_index":850,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:7",{"_index":848,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts",{"_index":1337,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:16",{"_index":1345,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:19",{"_index":1358,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:24",{"_index":1354,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:34",{"_index":1349,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:46",{"_index":1360,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:55",{"_index":1347,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:63",{"_index":1356,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:83",{"_index":1352,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts",{"_index":1417,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:14",{"_index":2321,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:15",{"_index":2320,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:16",{"_index":2322,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:20",{"_index":1421,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:24",{"_index":1426,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:30",{"_index":1427,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:36",{"_index":1423,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:42",{"_index":1425,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts",{"_index":2123,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:13",{"_index":2141,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:15",{"_index":2130,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:23",{"_index":2128,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:8",{"_index":2127,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson",{"_index":2661,"title":{},"body":{"classes/LessonScope.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts",{"_index":2651,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:12",{"_index":2654,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:9",{"_index":2652,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/news/news",{"_index":3033,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts",{"_index":2979,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:11",{"_index":2991,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:19",{"_index":2984,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:32",{"_index":2990,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:39",{"_index":2986,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":5157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts",{"_index":3207,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts:11",{"_index":3216,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts:16",{"_index":3214,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts:21",{"_index":3218,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts:7",{"_index":3212,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/scope.ts",{"_index":3252,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/scope.ts:11",{"_index":3254,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:17",{"_index":3259,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:25",{"_index":3257,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:9",{"_index":3256,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts",{"_index":3326,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts:7",{"_index":3327,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts",{"_index":3351,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:10",{"_index":3354,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:13",{"_index":3358,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:21",{"_index":3360,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:26",{"_index":3356,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/task/task",{"_index":3622,"title":{},"body":{"classes/TaskScope.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts",{"_index":3539,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:10",{"_index":3543,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:129",{"_index":3552,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:13",{"_index":3550,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:85",{"_index":3545,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts",{"_index":1844,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:10",{"_index":1853,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:21",{"_index":1858,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:36",{"_index":1860,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts",{"_index":3835,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts:6",{"_index":3836,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts:9",{"_index":3837,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/testing/clean",{"_index":5076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/create",{"_index":5144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts",{"_index":391,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:110",{"_index":454,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:120",{"_index":449,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:124",{"_index":439,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:136",{"_index":451,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:14",{"_index":410,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:30",{"_index":443,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:46",{"_index":429,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:59",{"_index":434,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:72",{"_index":432,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:86",{"_index":414,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:98",{"_index":447,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/course.factory.ts",{"_index":802,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/course.factory.ts:11",{"_index":805,"title":{},"body":{"classes/CourseFactory.html":{}}}],["apps/server/src/shared/testing/factory/course.factory.ts:18",{"_index":806,"title":{},"body":{"classes/CourseFactory.html":{}}}],["apps/server/src/shared/testing/factory/coursegroup.factory.ts",{"_index":5137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/file.factory.ts",{"_index":5153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/lesson.factory.ts",{"_index":2645,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/news.factory.ts",{"_index":5139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/role.factory.ts",{"_index":5164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/school.factory.ts",{"_index":5166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/storageprovider.factory.ts",{"_index":5171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/submission.factory.ts",{"_index":3341,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/submission.factory.ts:8",{"_index":3342,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["apps/server/src/shared/testing/factory/task.factory.ts",{"_index":3491,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/task.factory.ts:15",{"_index":3495,"title":{},"body":{"classes/TaskFactory.html":{}}}],["apps/server/src/shared/testing/factory/task.factory.ts:9",{"_index":3493,"title":{},"body":{"classes/TaskFactory.html":{}}}],["apps/server/src/shared/testing/factory/team.factory.ts",{"_index":5174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/user.factory.ts",{"_index":5176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/setup",{"_index":5168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appthis",{"_index":4106,"title":{},"body":{"index.html":{}}}],["architecture",{"_index":4095,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":5675,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":4874,"title":{},"body":{"license.html":{}}}],["archived",{"_index":894,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["archivegroup(groupname",{"_index":95,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["archives",{"_index":5726,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":5851,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":5739,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":3895,"title":{},"body":{"dependencies.html":{}}}],["args",{"_index":3274,"title":{},"body":{"classes/ServerConsole.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":52,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":2172,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":5314,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":4836,"title":{},"body":{"license.html":{}}}],["around",{"_index":4892,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":4745,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":4756,"title":{},"body":{"license.html":{}}}],["array",{"_index":2064,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["array.from(modelentity.gridelements).foreach((el",{"_index":1412,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["array.from(modelentity.gridelements).map(async",{"_index":1376,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["array.isarray(collectionnamefilter",{"_index":1682,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["array.isarray(constraint",{"_index":232,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":1933,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["article",{"_index":4434,"title":{},"body":{"license.html":{}}}],["asc",{"_index":1732,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["aspect",{"_index":5477,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":5328,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":4242,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assertions",{"_index":5952,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":4697,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigning",{"_index":5648,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assignment",{"_index":63,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["assignment,@typescript",{"_index":59,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["associated",{"_index":4380,"title":{},"body":{"license.html":{}}}],["assume",{"_index":4825,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":5688,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":4855,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":4643,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":74,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":5867,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["asynclocalstorage",{"_index":5570,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":5448,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":4861,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attachment",{"_index":244,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attachments",{"_index":247,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attempt",{"_index":4654,"title":{},"body":{"license.html":{}}}],["attention",{"_index":2482,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["attributions",{"_index":4627,"title":{},"body":{"license.html":{}}}],["aud",{"_index":2560,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":2568,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audit",{"_index":5562,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":144,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"todo.html":{}}}],["auth.guard.ts",{"_index":2543,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.provider",{"_index":297,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":1911,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:13",{"_index":1919,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:16",{"_index":1927,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:26",{"_index":1929,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:38",{"_index":1923,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:55",{"_index":1921,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:60",{"_index":1925,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":2551,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":2573,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":2572,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":780,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":790,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authenticated",{"_index":2314,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":5575,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":3685,"title":{},"body":{"injectables/TaskUC.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authguard",{"_index":2544,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":2545,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":258,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":4626,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":3718,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":295,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorizationmodule",{"_index":284,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":290,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":4617,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":4721,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":4760,"title":{},"body":{"license.html":{}}}],["authors",{"_index":4633,"title":{},"body":{"license.html":{}}}],["authtoken",{"_index":80,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["auto",{"_index":5249,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["automated",{"_index":5811,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":4688,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":4167,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["availability",{"_index":5819,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":1677,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["availabledate",{"_index":2430,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["avoid",{"_index":5823,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["avoiding",{"_index":5298,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":129,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":5869,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["awaits",{"_index":3684,"title":{},"body":{"injectables/TaskUC.html":{}}}],["away",{"_index":4217,"title":{},"body":{"license.html":{}}}],["aws",{"_index":2013,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"dependencies.html":{}}}],["axios",{"_index":3900,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":1182,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["b.getmetadata().title",{"_index":1186,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["back",{"_index":450,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["background",{"_index":5344,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backuop",{"_index":1713,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup",{"_index":1632,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup/setup/news.json",{"_index":2977,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":5749,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badrequestexception",{"_index":1166,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('dashboard",{"_index":1212,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["badrequestexception('invalid",{"_index":3158,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('this",{"_index":1197,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["base",{"_index":595,"title":{},"body":{"classes/BusinessError.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base.entity",{"_index":498,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["base.factory",{"_index":819,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["base.repo",{"_index":2142,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["base64",{"_index":4024,"title":{},"body":{"dependencies.html":{}}}],["base64content",{"_index":239,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["based",{"_index":393,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/DatabaseManagementUc.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["basedir",{"_index":1608,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baseentity",{"_index":343,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITeamProperties.html":{},"classes/School.html":{},"classes/Team.html":{}}}],["baseentity:10",{"_index":3238,"title":{},"body":{"classes/School.html":{},"classes/Team.html":{}}}],["baseentity:7",{"_index":3237,"title":{},"body":{"classes/School.html":{},"classes/Team.html":{}}}],["baseentitywithtimestamps",{"_index":358,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:19",{"_index":493,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:22",{"_index":495,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:25",{"_index":494,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:28",{"_index":496,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["basefactory",{"_index":390,"title":{"classes/BaseFactory.html":{}},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory.define",{"_index":5172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(coursegroup",{"_index":5138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(coursenews",{"_index":5140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(directory",{"_index":5154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(file",{"_index":5156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(role",{"_index":5165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(school",{"_index":5167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(schoolnews",{"_index":5141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(team",{"_index":5175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(teamnews",{"_index":5142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(user",{"_index":5177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory:110",{"_index":816,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:120",{"_index":814,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:124",{"_index":811,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:136",{"_index":815,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:14",{"_index":804,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:30",{"_index":812,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:46",{"_index":808,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:59",{"_index":810,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:72",{"_index":809,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:86",{"_index":807,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:98",{"_index":813,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefile",{"_index":484,"title":{"classes/BaseFile.html":{}},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["basefile:17",{"_index":1820,"title":{},"body":{"classes/Directory.html":{},"classes/File.html":{}}}],["basefile:20",{"_index":1821,"title":{},"body":{"classes/Directory.html":{},"classes/File.html":{}}}],["basefile:23",{"_index":1819,"title":{},"body":{"classes/Directory.html":{},"classes/File.html":{}}}],["basepath",{"_index":1600,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baserepo",{"_index":527,"title":{"injectables/BaseRepo.html":{}},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:14",{"_index":2136,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:19",{"_index":2134,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:27",{"_index":2135,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:36",{"_index":2137,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:40",{"_index":2140,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:44",{"_index":2138,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:48",{"_index":2139,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:53",{"_index":2132,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:9",{"_index":2133,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["basic",{"_index":4393,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":5524,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":5523,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":5530,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":3902,"title":{},"body":{"dependencies.html":{}}}],["bcc",{"_index":255,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["bcryptjs",{"_index":3904,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":5131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":5132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":4254,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":4266,"title":{},"body":{"license.html":{}}}],["before",{"_index":968,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":5917,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":5903,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":5224,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":4153,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":4413,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":5960,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":660,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":3768,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":4542,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":4754,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":5324,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":5420,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":4419,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":4248,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":5510,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":5001,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":4858,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":2775,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["between",{"_index":4389,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":4493,"title":{},"body":{"license.html":{}}}],["bit",{"_index":5534,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["blackbox",{"_index":5825,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":5833,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["bob",{"_index":5725,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":127,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":4015,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":491,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":4051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boolish",{"_index":4080,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":3759,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrap.boot([process.argv0",{"_index":3763,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstrapconsole",{"_index":3757,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstraps",{"_index":5901,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["both",{"_index":4074,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["box",{"_index":5895,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":4143,"title":{},"body":{"index.html":{}}}],["branches",{"_index":5104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["breathing",{"_index":5720,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":5508,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["browse",{"_index":4884,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":4882,"title":{},"body":{"modules.html":{}}}],["bson",{"_index":589,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["bson.ejson.deserialize(bsondocuments",{"_index":593,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson.ejson.serialize(documents",{"_index":591,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson/ejson",{"_index":585,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bsonconverter",{"_index":570,"title":{"injectables/BsonConverter.html":{}},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["bsondocuments",{"_index":583,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["btw",{"_index":377,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":5548,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":504,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["bufferencoding",{"_index":2082,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["buffers",{"_index":5401,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["build",{"_index":399,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/GlobalErrorFilter.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["build(params",{"_index":427,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["buildlist",{"_index":400,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["buildlist(number",{"_index":431,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["builds",{"_index":5226,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["buildwithid",{"_index":401,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["buildwithid(params",{"_index":433,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["built",{"_index":420,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["bulk",{"_index":5525,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundesland=x",{"_index":5433,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":4898,"title":{},"body":{"todo.html":{}}}],["business",{"_index":596,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":203,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror",{"_index":178,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":193,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:12",{"_index":197,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:14",{"_index":196,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:16",{"_index":195,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:19",{"_index":194,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:34",{"_index":198,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:38",{"_index":200,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businessexception",{"_index":5799,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["bycourseids",{"_index":2663,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bycourseids(courseids",{"_index":2665,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bycreatorid",{"_index":3623,"title":{},"body":{"classes/TaskScope.html":{}}}],["bycreatorid(creatorid",{"_index":3631,"title":{},"body":{"classes/TaskScope.html":{}}}],["bydraft",{"_index":3624,"title":{},"body":{"classes/TaskScope.html":{}}}],["bydraft(isdraft",{"_index":3632,"title":{},"body":{"classes/TaskScope.html":{}}}],["byfinished",{"_index":3625,"title":{},"body":{"classes/TaskScope.html":{}}}],["byfinished(userid",{"_index":3634,"title":{},"body":{"classes/TaskScope.html":{}}}],["byhidden",{"_index":2664,"title":{},"body":{"classes/LessonScope.html":{}}}],["byhidden(ishidden",{"_index":2667,"title":{},"body":{"classes/LessonScope.html":{}}}],["bylessonids",{"_index":3626,"title":{},"body":{"classes/TaskScope.html":{}}}],["bylessonids(lessonids",{"_index":3635,"title":{},"body":{"classes/TaskScope.html":{}}}],["byonlycreatorid",{"_index":3627,"title":{},"body":{"classes/TaskScope.html":{}}}],["byonlycreatorid(teacherid",{"_index":3637,"title":{},"body":{"classes/TaskScope.html":{}}}],["bypassdocumentvalidation",{"_index":1584,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["bytargets",{"_index":3034,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":3036,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":3035,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":3038,"title":{},"body":{"classes/NewsScope.html":{}}}],["byuseridquery",{"_index":3352,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["byuseridquery(userid",{"_index":3355,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["c",{"_index":1501,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/Options.html":{},"classes/Role.html":{},"injectables/TaskAuthorizationService.html":{},"license.html":{}}}],["c.id",{"_index":3447,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["c.isfinished",{"_index":3722,"title":{},"body":{"injectables/TaskUC.html":{}}}],["c.isfinished()).map((c",{"_index":3700,"title":{},"body":{"injectables/TaskUC.html":{}}}],["cache",{"_index":3208,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["caches",{"_index":5399,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":6015,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["calendar",{"_index":5582,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":422,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":2796,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["called",{"_index":418,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":5491,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":1830,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":2212,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":3687,"title":{},"body":{"injectables/TaskUC.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":5647,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":5383,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":5966,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["capabilities",{"_index":5231,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["capture",{"_index":5470,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":5067,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":5539,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":5775,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":5804,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":4470,"title":{},"body":{"license.html":{}}}],["case",{"_index":1906,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":3498,"title":{},"body":{"classes/TaskFactory.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":1811,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch(error",{"_index":2170,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":5550,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":20,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TimeoutInterceptor.html":{}}}],["catcherror((e",{"_index":147,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["catcherror((err",{"_index":3785,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":5553,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":5322,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":5349,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":4497,"title":{},"body":{"license.html":{}}}],["caution",{"_index":2681,"title":{},"body":{"injectables/Logger.html":{}}}],["cc",{"_index":254,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["cease",{"_index":4658,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":2296,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["certain",{"_index":4614,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":4668,"title":{},"body":{"license.html":{}}}],["chains",{"_index":4932,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["chalk",{"_index":3908,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":5520,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":4220,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":2102,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changes",{"_index":4185,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":4206,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":5579,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characteristics",{"_index":5586,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":4588,"title":{},"body":{"license.html":{}}}],["characters",{"_index":2055,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["charge",{"_index":4230,"title":{},"body":{"license.html":{}}}],["chat",{"_index":171,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chat.module.ts",{"_index":3195,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["chat.module.ts:6",{"_index":3196,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["chat.service",{"_index":3199,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["chat.service.ts",{"_index":7,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/typealiases.html":{}}}],["chat.service.ts:16",{"_index":3193,"title":{},"body":{"classes/RocketChatError.html":{}}}],["chat.service.ts:18",{"_index":3192,"title":{},"body":{"classes/RocketChatError.html":{}}}],["chat.service.ts:21",{"_index":3191,"title":{},"body":{"classes/RocketChatError.html":{}}}],["chatadapter",{"_index":5410,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":369,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Task.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checked",{"_index":5480,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":300,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":305,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":2247,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":4166,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":4175,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":5238,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkshorttitle",{"_index":1200,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["checkusernotexistbyemail(email",{"_index":5765,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["child",{"_index":4119,"title":{},"body":{"index.html":{}}}],["choose",{"_index":4810,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":4813,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":5488,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":3995,"title":{},"body":{"dependencies.html":{}}}],["circumstances",{"_index":4417,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":4426,"title":{},"body":{"license.html":{}}}],["civil",{"_index":4854,"title":{},"body":{"license.html":{}}}],["claim",{"_index":4711,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4723,"title":{},"body":{"license.html":{}}}],["class",{"_index":31,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classes",{"_index":175,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":1952,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":2536,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":5372,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":733,"title":{},"body":{"classes/Course.html":{},"classes/DeleteFilesConsole.html":{},"interfaces/ICourseProperties.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanupcollections",{"_index":5012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cleanupthreshold",{"_index":2131,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["clear",{"_index":1710,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["clearcollection",{"_index":1551,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearcollection(collectionname",{"_index":1561,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearify",{"_index":3691,"title":{},"body":{"injectables/TaskUC.html":{}}}],["clearly",{"_index":5780,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":5266,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["client",{"_index":599,"title":{},"body":{"classes/BusinessError.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":5425,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":2748,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clone",{"_index":402,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"index.html":{}}}],["clone(this",{"_index":437,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["clone>(this",{"_index":477,"title":{},"body":{"classes/BaseFactory.html":{}}}],["close",{"_index":2793,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closed",{"_index":3572,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closedforcreator",{"_index":3574,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforcreator.bycreatorid(parentids.creatorid",{"_index":3576,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforcreator.byfinished(parentids.creatorid",{"_index":3575,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons",{"_index":3565,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons.addquery(parentsopen.query",{"_index":3566,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons.bydraft(false",{"_index":3567,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons.byfinished(parentids.creatorid",{"_index":3568,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closely",{"_index":4851,"title":{},"body":{"license.html":{}}}],["closing",{"_index":5929,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":4082,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":4956,"title":{},"body":{"todo.html":{}}}],["cloud.org",{"_index":4149,"title":{},"body":{"index.html":{}}}],["cloud/commons",{"_index":1864,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":3967,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":3953,"title":{},"body":{"dependencies.html":{}}}],["cloud/schulcloud",{"_index":4925,"title":{},"body":{"todo.html":{}}}],["cluster_authmodule",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":285,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":287,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":288,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":286,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule",{"_index":625,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_exports",{"_index":626,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_providers",{"_index":627,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":649,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":650,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule",{"_index":1543,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_exports",{"_index":1545,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_imports",{"_index":1544,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":1953,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":1955,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":1954,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":2115,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":2117,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_providers",{"_index":2116,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule",{"_index":2109,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_exports",{"_index":2110,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_providers",{"_index":2111,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_learnroommodule",{"_index":2634,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_learnroommodule_providers",{"_index":2635,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":2689,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":2690,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":2691,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":2730,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":2731,"title":{},"body":{"modules/ManagementModule.html":{}}}],["cluster_managementmodule_providers",{"_index":2732,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":2960,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":2963,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":2962,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":2961,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule",{"_index":3280,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_imports",{"_index":3281,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["cluster_servermodule",{"_index":3292,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":3293,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":3533,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":3534,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":3829,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":3831,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":3830,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluttered",{"_index":5542,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["codacy",{"_index":4085,"title":{},"body":{"index.html":{}}}],["code",{"_index":179,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["codes",{"_index":5820,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":2255,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":5310,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collect",{"_index":4787,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":5098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":505,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"interfaces/Options.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":702,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/User.html":{}}}],["collection.deletemany",{"_index":1587,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.find({}).toarray",{"_index":1585,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.insertmany(jsondocuments",{"_index":1582,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.name",{"_index":1593,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionexists",{"_index":1552,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionexists(collectionname",{"_index":1563,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname",{"_index":1526,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"miscellaneous/variables.html":{}}}],["collectionnamefilter",{"_index":1634,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter.length",{"_index":1683,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter?.includes(collectionname",{"_index":1686,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnames",{"_index":1591,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname}.json",{"_index":1668,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collections",{"_index":1488,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["collections.includes(collectionname",{"_index":1595,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collection",{"_index":1592,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collectionname",{"_index":1666,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collections.ts",{"_index":5014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collectionstoexport",{"_index":1721,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoexport.map(async",{"_index":1723,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed",{"_index":1695,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed.map(async",{"_index":1698,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionswithfilepaths",{"_index":1665,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["color",{"_index":677,"title":{},"body":{"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["columns",{"_index":1110,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["colums",{"_index":1209,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["combine",{"_index":3848,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":3451,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"license.html":{}}}],["come",{"_index":4061,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["comes",{"_index":4477,"title":{},"body":{"license.html":{}}}],["command",{"_index":1494,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["command({command",{"_index":1486,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"classes/ServerConsole.html":{}}}],["commander",{"_index":3914,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["commandresponse",{"_index":3762,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["commands",{"_index":4337,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["comment",{"_index":2389,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["commercial",{"_index":4570,"title":{},"body":{"license.html":{}}}],["commit",{"_index":4178,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":4737,"title":{},"body":{"license.html":{}}}],["committing",{"_index":4172,"title":{},"body":{"index.html":{}}}],["common",{"_index":3938,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["communicate",{"_index":5358,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":4387,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":4213,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":5651,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":2182,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":5529,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":6016,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":4484,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":4492,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":4769,"title":{},"body":{"license.html":{}}}],["compile",{"_index":1761,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":4369,"title":{},"body":{"license.html":{}}}],["complete",{"_index":4165,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["completely",{"_index":5454,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":2683,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":4693,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":5332,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":4410,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":5262,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":4362,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":5405,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4137,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compression",{"_index":3916,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":4311,"title":{},"body":{"license.html":{}}}],["concept",{"_index":5557,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":5604,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":4805,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":5672,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrently",{"_index":3918,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":5836,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":4763,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":4278,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":5413,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":3305,"title":{},"body":{"modules/ServerModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":5081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":1861,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('mail_send_exchange",{"_index":3308,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('mail_send_routing_key",{"_index":3309,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rabbitmq_uri",{"_index":3307,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('request_timeout",{"_index":5163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_admin_id",{"_index":3312,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rocket_chat_admin_password",{"_index":3315,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rocket_chat_admin_token",{"_index":3313,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rocket_chat_admin_user",{"_index":3314,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rocket_chat_uri",{"_index":3311,"title":{},"body":{"modules/ServerModule.html":{}}}],["configurations",{"_index":5272,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configure",{"_index":5188,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configures",{"_index":657,"title":{},"body":{"modules/CoreModule.html":{}}}],["conflicts",{"_index":5603,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":5346,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connected",{"_index":4138,"title":{},"body":{"index.html":{}}}],["connection",{"_index":2794,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["connectionoptions",{"_index":4975,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["connections",{"_index":5499,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector/framework",{"_index":5515,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":5486,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consequence",{"_index":4680,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":4835,"title":{},"body":{"license.html":{}}}],["considered",{"_index":4645,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":5771,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistent",{"_index":4730,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":5694,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":632,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["console/database",{"_index":2743,"title":{},"body":{"modules/ManagementModule.html":{}}}],["consolelogger",{"_index":2672,"title":{},"body":{"injectables/Logger.html":{}}}],["consolemodule",{"_index":3283,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolewriter",{"_index":1484,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{}}}],["consolewritermodule",{"_index":624,"title":{"modules/ConsoleWriterModule.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["consolewriterservice",{"_index":628,"title":{"injectables/ConsoleWriterService.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"overview.html":{}}}],["conspicuously",{"_index":4457,"title":{},"body":{"license.html":{}}}],["const",{"_index":128,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":4401,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":230,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":5403,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":69,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/User.html":{},"injectables/UserFacade.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject('symmetric_cipher_key",{"_index":3374,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["constructor(@inject(request",{"_index":1985,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(amqpconnection",{"_index":2718,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(apivalidationerror",{"_index":220,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(consolewriter",{"_index":1481,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/ServerConsole.html":{}}}],["constructor(courserepo",{"_index":1033,"title":{},"body":{"injectables/CourseUc.html":{},"injectables/TaskAuthorizationService.html":{}}}],["constructor(customkey",{"_index":1852,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["constructor(dashboardrepo",{"_index":1450,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(data",{"_index":872,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["constructor(deletefilesuc",{"_index":1766,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["constructor(e",{"_index":42,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["constructor(em",{"_index":538,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["constructor(entityclass",{"_index":408,"title":{},"body":{"classes/BaseFactory.html":{}}}],["constructor(feathersauthprovider",{"_index":303,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":1917,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":3863,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(filesrepo",{"_index":1789,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["constructor(filestorageadapter",{"_index":2126,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["constructor(filesystemadapter",{"_index":1609,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["constructor(id",{"_index":897,"title":{},"body":{"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{}}}],["constructor(key",{"_index":3366,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["constructor(message",{"_index":3858,"title":{},"body":{"classes/ValidationError.html":{}}}],["constructor(newsrepo",{"_index":3058,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(operator",{"_index":3253,"title":{},"body":{"classes/Scope.html":{}}}],["constructor(private",{"_index":327,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FilesRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/ServerConsole.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":515,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["constructor(protected",{"_index":559,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["constructor(readonly",{"_index":204,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":2000,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(rolerepo",{"_index":3226,"title":{},"body":{"injectables/RoleUC.html":{}}}],["constructor(task",{"_index":2440,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["constructor(taskrepo",{"_index":3667,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(total",{"_index":3142,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(type",{"_index":1899,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":603,"title":{},"body":{"classes/BusinessError.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"classes/UserInfoResponse.html":{}}}],["constructor(userfacade",{"_index":2579,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(userrepo",{"_index":3841,"title":{},"body":{"injectables/UserUC.html":{}}}],["constructor(useruc",{"_index":3817,"title":{},"body":{"injectables/UserFacade.html":{}}}],["constructor(validationerrors",{"_index":185,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["constructors",{"_index":6002,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["construed",{"_index":4774,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":4550,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":5452,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contact",{"_index":4869,"title":{},"body":{"license.html":{}}}],["contain",{"_index":4770,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":4056,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["containing",{"_index":4160,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":3007,"title":{},"body":{"injectables/NewsRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":910,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contentdisposition",{"_index":238,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contentid",{"_index":243,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contents",{"_index":4734,"title":{},"body":{"license.html":{}}}],["context",{"_index":1832,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":5968,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":4594,"title":{},"body":{"license.html":{}}}],["continued",{"_index":4579,"title":{},"body":{"license.html":{}}}],["contract",{"_index":5301,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":4642,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4781,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":4221,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":4720,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":4722,"title":{},"body":{"license.html":{}}}],["control",{"_index":4375,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":4725,"title":{},"body":{"license.html":{}}}],["controller",{"_index":766,"title":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('courses",{"_index":791,"title":{},"body":{"controllers/CourseController.html":{}}}],["controller('dashboard",{"_index":1095,"title":{},"body":{"controllers/DashboardController.html":{}}}],["controller('management/database",{"_index":1535,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["controller('news",{"_index":2862,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('tasks",{"_index":3481,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('team",{"_index":3748,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["controller('user",{"_index":3812,"title":{},"body":{"controllers/UserController.html":{}}}],["controller.ts",{"_index":5617,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/course.controller",{"_index":2638,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/dashboard.controller",{"_index":2637,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/database",{"_index":2741,"title":{},"body":{"modules/ManagementModule.html":{}}}],["controller/dto",{"_index":860,"title":{},"body":{"classes/CourseMapper.html":{},"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{}}}],["controller/dto/resolveduser.dto",{"_index":3845,"title":{},"body":{"injectables/UserUC.html":{}}}],["controller/dto/target",{"_index":3381,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["controller/dto/task",{"_index":3649,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["controller/news.controller",{"_index":2968,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":3537,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/team",{"_index":2969,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers",{"_index":768,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"modules/LearnroomModule.html":{},"modules/ManagementModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["convenient",{"_index":4330,"title":{},"body":{"license.html":{}}}],["convention",{"_index":5829,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":5354,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convert",{"_index":1733,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["converter/bson.converter",{"_index":1652,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["converttodatabasevalue",{"_index":1850,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttodatabasevalue(value",{"_index":1856,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttojsvalue",{"_index":1851,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttojsvalue(value",{"_index":1859,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["convey",{"_index":4317,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":4758,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":4589,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":4325,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":4641,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":4212,"title":{},"body":{"license.html":{}}}],["copies",{"_index":4205,"title":{},"body":{"license.html":{}}}],["copy",{"_index":478,"title":{},"body":{"classes/BaseFactory.html":{},"license.html":{}}}],["copying",{"_index":4279,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":4208,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4195,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":4287,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":4416,"title":{},"body":{"license.html":{}}}],["core",{"_index":656,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":6043,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/error",{"_index":5805,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":648,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":5432,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":4829,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":5814,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["corresponding",{"_index":4372,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":3920,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":4518,"title":{},"body":{"license.html":{}}}],["count",{"_index":853,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{}}}],["counted",{"_index":852,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/LessonRepo.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":2997,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["countedtasklist",{"_index":3605,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["counterclaim",{"_index":4712,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":5006,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["countries",{"_index":4314,"title":{},"body":{"license.html":{}}}],["country",{"_index":4750,"title":{},"body":{"license.html":{}}}],["counts",{"_index":893,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["couple",{"_index":5509,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":5312,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":673,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course.entity",{"_index":840,"title":{},"body":{"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{}}}],["course.factory",{"_index":2646,"title":{},"body":{"classes/LessonFactory.html":{}}}],["course.getmetadata",{"_index":862,"title":{},"body":{"classes/CourseMapper.html":{}}}],["course?.getstudentids().includes(userid",{"_index":3462,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["course?.getsubstitutionteacherids().includes(userid",{"_index":3460,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["course?.getteacherids().includes(userid",{"_index":3461,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["coursecontroller",{"_index":767,"title":{"controllers/CourseController.html":{}},"body":{"controllers/CourseController.html":{},"modules/LearnroomModule.html":{}}}],["coursefactory",{"_index":801,"title":{"classes/CourseFactory.html":{}},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["coursefactory.build",{"_index":2649,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["coursefactory.define(course",{"_index":826,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["coursegroup",{"_index":831,"title":{"classes/CourseGroup.html":{}},"body":{"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"miscellaneous/variables.html":{}}}],["coursegroup.entity",{"_index":2397,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["coursegroupfactory",{"_index":5018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursegroupid",{"_index":2406,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["coursegrouprepo",{"_index":845,"title":{"injectables/CourseGroupRepo.html":{}},"body":{"injectables/CourseGroupRepo.html":{}}}],["coursegroups",{"_index":841,"title":{},"body":{"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["coursegroupsofuser",{"_index":3363,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["courseid",{"_index":837,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["courseids",{"_index":851,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["coursemapper",{"_index":787,"title":{"classes/CourseMapper.html":{}},"body":{"controllers/CourseController.html":{},"classes/CourseMapper.html":{}}}],["coursemapper.maptometadataresponse(course",{"_index":796,"title":{},"body":{"controllers/CourseController.html":{}}}],["coursemetadata",{"_index":861,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.displaycolor",{"_index":866,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.id",{"_index":863,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.shorttitle",{"_index":865,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.startdate",{"_index":867,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.title",{"_index":864,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.untildate",{"_index":868,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadatalistresponse",{"_index":785,"title":{"classes/CourseMetadataListResponse.html":{}},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{}}}],["coursemetadatalistresponse(courseresponses",{"_index":800,"title":{},"body":{"controllers/CourseController.html":{}}}],["coursemetadataresponse",{"_index":859,"title":{"classes/CourseMetadataResponse.html":{}},"body":{"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{}}}],["coursename",{"_index":3508,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["coursenews",{"_index":906,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":969,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["coursenewsfactory",{"_index":5020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["courserepo",{"_index":976,"title":{"injectables/CourseRepo.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["courseresponses",{"_index":794,"title":{},"body":{"controllers/CourseController.html":{}}}],["courses",{"_index":742,"title":{},"body":{"classes/Course.html":{},"controllers/CourseController.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardUc.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["courses.filter((c",{"_index":3441,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["courses.map((course",{"_index":795,"title":{},"body":{"controllers/CourseController.html":{}}}],["coursescope",{"_index":987,"title":{"classes/CourseScope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["courseuc",{"_index":783,"title":{"injectables/CourseUc.html":{}},"body":{"controllers/CourseController.html":{},"injectables/CourseUc.html":{},"modules/LearnroomModule.html":{},"overview.html":{}}}],["court",{"_index":4780,"title":{},"body":{"license.html":{}}}],["courts",{"_index":4850,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":4740,"title":{},"body":{"license.html":{}}}],["cover",{"_index":5730,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":4169,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":5100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":5101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":5103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":4299,"title":{},"body":{"license.html":{}}}],["covers",{"_index":5958,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["create",{"_index":1700,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/TestBootstrapConsole.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":2863,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":2836,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":3060,"title":{},"body":{"injectables/NewsUc.html":{}}}],["createcollection",{"_index":1553,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["createcollection(collectionname",{"_index":1565,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["createcurrenttestuser",{"_index":5022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":2080,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":378,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["createdat.$date",{"_index":1731,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["createdir",{"_index":2036,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createdir(folderpath",{"_index":2045,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createerrorresponse",{"_index":2166,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":2174,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":4043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":2197,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":4045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":2204,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":2187,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":2218,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":2203,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":2222,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":2200,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["creategroup(name",{"_index":109,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["createinstance",{"_index":915,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":943,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createmikroormmodule",{"_index":2768,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["createnestapplication",{"_index":5964,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":5681,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":1041,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":5070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrabbitmqmodule",{"_index":2707,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["createrabbitmqmodule(options",{"_index":2713,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["createredisidentifierfromjwtdata",{"_index":2628,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["createredisidentifierfromjwtdata(accountid",{"_index":2631,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["creates",{"_index":2047,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createspinner",{"_index":640,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["createstorageproviderclient",{"_index":4046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstorageproviderclient(storageprovider",{"_index":2016,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["createstudentstatusforuser",{"_index":3385,"title":{},"body":{"classes/Task.html":{}}}],["createstudentstatusforuser(userid",{"_index":2504,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["createteacherstatusforuser",{"_index":3386,"title":{},"body":{"classes/Task.html":{}}}],["createteacherstatusforuser(userid",{"_index":2490,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["createtestmodule",{"_index":1757,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["createtmpdir",{"_index":2037,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createtmpdir(dirnameprefix",{"_index":2048,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createuser(email",{"_index":117,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["createusertoken(userid",{"_index":85,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["creating",{"_index":1044,"title":{},"body":{"classes/CreateNewsParams.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creation",{"_index":2252,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["creator",{"_index":486,"title":{},"body":{"classes/BaseFile.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":920,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["credentials",{"_index":2023,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["criteria",{"_index":5518,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":4342,"title":{},"body":{"license.html":{}}}],["critical",{"_index":5467,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cross",{"_index":658,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":5561,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":5673,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":5742,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":3373,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{},"dependencies.html":{}}}],["cryptojs",{"_index":3372,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["cryptojs.aes.decrypt(data",{"_index":3377,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["cryptojs.aes.encrypt(data",{"_index":3375,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["csv",{"_index":5532,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ctx",{"_index":2236,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":2238,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":5071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":361,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":4671,"title":{},"body":{"license.html":{}}}],["curentuser",{"_index":3716,"title":{},"body":{"injectables/TaskUC.html":{}}}],["current",{"_index":1623,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["currentdatetime",{"_index":1660,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["currently",{"_index":2777,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentuser",{"_index":776,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":2865,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.user.permissions.includes(permission",{"_index":3728,"title":{},"body":{"injectables/TaskUC.html":{}}}],["currentuser.userid",{"_index":1103,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":1908,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":5801,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":4509,"title":{},"body":{"license.html":{}}}],["customary",{"_index":4794,"title":{},"body":{"license.html":{}}}],["customer",{"_index":4515,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":661,"title":{},"body":{"modules/CoreModule.html":{}}}],["customkey",{"_index":1854,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["customproviderclass.name",{"_index":2687,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":5289,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycles",{"_index":5329,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":727,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["damages",{"_index":4833,"title":{},"body":{"license.html":{}}}],["dash",{"_index":4156,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":1073,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["dashboard.getelement(position",{"_index":1470,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard.getgrid().map((elementwithposition",{"_index":1317,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.getuserid",{"_index":1472,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard.id",{"_index":1315,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.model.mapper",{"_index":1428,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.moveelement(from",{"_index":1469,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard.setlearnrooms(courses",{"_index":1465,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard_repo",{"_index":2639,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["dashboardcontroller",{"_index":1071,"title":{"controllers/DashboardController.html":{}},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["dashboardelement",{"_index":1282,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["dashboardentity",{"_index":1108,"title":{"classes/DashboardEntity.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{}}}],["dashboardentity(modelentity.id",{"_index":1379,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["dashboardentity(new",{"_index":1431,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["dashboardgridelementmodel",{"_index":1265,"title":{"classes/DashboardGridElementModel.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{},"miscellaneous/variables.html":{}}}],["dashboardgridelementmodel(gridelement.getid",{"_index":1390,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["dashboardgridelementresponse",{"_index":1292,"title":{"classes/DashboardGridElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["dashboardgridsubelementresponse",{"_index":1298,"title":{"classes/DashboardGridSubElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["dashboardid",{"_index":1081,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{}}}],["dashboardmapper",{"_index":1092,"title":{"classes/DashboardMapper.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{}}}],["dashboardmapper.maptoresponse(dashboard",{"_index":1098,"title":{},"body":{"controllers/DashboardController.html":{}}}],["dashboardmodel",{"_index":1439,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelentity",{"_index":1286,"title":{"classes/DashboardModelEntity.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["dashboardmodelmapper",{"_index":1336,"title":{"injectables/DashboardModelMapper.html":{}},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{},"overview.html":{}}}],["dashboardprops",{"_index":1125,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["dashboardrepo",{"_index":1416,"title":{"injectables/DashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{}}}],["dashboardresponse",{"_index":1091,"title":{"classes/DashboardResponse.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["dashboarduc",{"_index":1089,"title":{"injectables/DashboardUc.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"overview.html":{}}}],["data",{"_index":871,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"interfaces/Options.html":{},"classes/PaginationResponse.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data.displaycolor",{"_index":1327,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.group",{"_index":1328,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.referencedid",{"_index":1321,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.shorttitle",{"_index":1325,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.title",{"_index":1323,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data/rules",{"_index":5429,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":5421,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":1487,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/Options.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":3317,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":2758,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:51",{"_index":2760,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:64",{"_index":2762,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":2757,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database/types.ts",{"_index":4995,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databasemanagementconsole",{"_index":1476,"title":{"classes/DatabaseManagementConsole.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["databasemanagementcontroller",{"_index":1516,"title":{"controllers/DatabaseManagementController.html":{}},"body":{"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{}}}],["databasemanagementmodule",{"_index":1542,"title":{"modules/DatabaseManagementModule.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["databasemanagementservice",{"_index":1546,"title":{"injectables/DatabaseManagementService.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["databasemanagementuc",{"_index":1482,"title":{"injectables/DatabaseManagementUc.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"overview.html":{}}}],["databases",{"_index":6017,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":5374,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":5390,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datase",{"_index":5191,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["date",{"_index":379,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["date(date.now",{"_index":824,"title":{},"body":{"classes/CourseFactory.html":{}}}],["date.now",{"_index":1839,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["date.now()@email.de",{"_index":5150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dated",{"_index":5538,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1773,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"license.html":{}}}],["db",{"_index":1559,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"injectables/TaskUC.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":5514,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":2156,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["db_url",{"_index":2157,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["db_username",{"_index":2158,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["dbname",{"_index":4998,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dbs",{"_index":5497,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ddd",{"_index":5704,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["debug",{"_index":2346,"title":{},"body":{"interfaces/ILogger.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["debug(message",{"_index":2350,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":2361,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":4139,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":3319,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["december",{"_index":4440,"title":{},"body":{"license.html":{}}}],["decide",{"_index":2604,"title":{},"body":{"injectables/JwtStrategy.html":{},"license.html":{},"todo.html":{}}}],["decision",{"_index":5544,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":5772,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declared",{"_index":616,"title":{},"body":{"classes/BusinessError.html":{}}}],["declining",{"_index":4634,"title":{},"body":{"license.html":{}}}],["decoded",{"_index":4057,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decodehtmlentities",{"_index":3503,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"miscellaneous/functions.html":{}}}],["decorated",{"_index":2261,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":4055,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":347,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":5283,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":5442,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":5453,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decrypt",{"_index":1877,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["decrypt(data",{"_index":3368,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["decryptedstring",{"_index":1878,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["dedicated",{"_index":5382,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":4428,"title":{},"body":{"license.html":{}}}],["deeppartial",{"_index":428,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["default",{"_index":383,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["default...what",{"_index":730,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.color",{"_index":692,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.description",{"_index":694,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.name",{"_index":696,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.schema.json",{"_index":5190,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["defaultcolumns",{"_index":1168,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":209,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["defaultoptions",{"_index":2792,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["defaults",{"_index":1053,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"classes/PaginationQuery.html":{}}}],["defaulttimeout",{"_index":3770,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":4824,"title":{},"body":{"license.html":{}}}],["defending",{"_index":4249,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":4777,"title":{},"body":{"license.html":{}}}],["define",{"_index":365,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/LessonFactory.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["define(this",{"_index":440,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["defined",{"_index":187,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["defines",{"_index":5204,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":376,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":218,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":2747,"title":{},"body":{"modules/ManagementModule.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":1750,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":1754,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":1739,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1707,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":2839,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":3062,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(newsid",{"_index":2838,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":1804,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedat",{"_index":487,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{}}}],["deletedcount",{"_index":1586,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["deletedid",{"_index":2879,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletefile",{"_index":2008,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{}}}],["deletefile(file",{"_index":2009,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{}}}],["deletefilesconsole",{"_index":1762,"title":{"classes/DeleteFilesConsole.html":{}},"body":{"classes/DeleteFilesConsole.html":{},"modules/FilesModule.html":{}}}],["deletefilesuc",{"_index":1767,"title":{"injectables/DeleteFilesUc.html":{}},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"overview.html":{}}}],["deletegroup(groupname",{"_index":115,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["deleteobjectcommand",{"_index":2012,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["deletes",{"_index":5536,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleteuser(username",{"_index":124,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["deleting",{"_index":5537,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1772,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["deletioncommand",{"_index":2029,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["delivered",{"_index":5818,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":5485,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":4596,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":4738,"title":{},"body":{"license.html":{}}}],["depend",{"_index":5740,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependencies",{"_index":260,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":5182,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["depending",{"_index":2070,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["depends",{"_index":2057,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["deprecated",{"_index":1981,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{}}}],["deprive",{"_index":4746,"title":{},"body":{"license.html":{}}}],["desc",{"_index":2329,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":5559,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":5840,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":5841,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":5986,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":5323,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":216,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BaseFactory.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PatchGroupParams.html":{},"classes/SchoolInfoResponse.html":{},"classes/ServerConsole.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["descriptions",{"_index":2514,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["descriptive",{"_index":5303,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deserialize",{"_index":572,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["deserialize(bsondocuments",{"_index":574,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["deserializes",{"_index":576,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["design",{"_index":5295,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":4526,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4211,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":5545,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":5293,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":5585,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":4802,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":226,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":3862,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detail.response.ts:1",{"_index":3864,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":4134,"title":{},"body":{"index.html":{}}}],["details",{"_index":180,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":1693,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"miscellaneous/variables.html":{}}}],["detectleaks",{"_index":5111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":5110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":5431,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determinenewroomsin",{"_index":1113,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["determinenewroomsin(rooms",{"_index":1136,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["determining",{"_index":4560,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":6031,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":5218,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":4083,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":5830,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["developers",{"_index":4237,"title":{},"body":{"license.html":{}}}],["development",{"_index":4164,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dfsdfsf",{"_index":4183,"title":{},"body":{"index.html":{}}}],["di",{"_index":5629,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":2736,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["die",{"_index":5489,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":3964,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":4963,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":4801,"title":{},"body":{"license.html":{}}}],["different",{"_index":3008,"title":{},"body":{"injectables/NewsRepo.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":4622,"title":{},"body":{"license.html":{}}}],["dir",{"_index":1620,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["direct",{"_index":2711,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":4414,"title":{},"body":{"license.html":{}}}],["directions",{"_index":4532,"title":{},"body":{"license.html":{}}}],["directly",{"_index":4303,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["directory",{"_index":510,"title":{"classes/Directory.html":{}},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/IFileProperties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["directoryfactory",{"_index":5027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirnameprefix",{"_index":2052,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["dirpath",{"_index":2097,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["disable",{"_index":44,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disclaim",{"_index":4450,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4814,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":4619,"title":{},"body":{"license.html":{}}}],["discover",{"_index":5707,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":5715,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":359,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":507,"title":{},"body":{"classes/BaseFile.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":509,"title":{},"body":{"classes/BaseFile.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":4761,"title":{},"body":{"license.html":{}}}],["display",{"_index":3713,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{}}}],["displayat",{"_index":911,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["displaycolor",{"_index":881,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["displayed",{"_index":1052,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":4327,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":3925,"title":{},"body":{"dependencies.html":{}}}],["dist",{"_index":5209,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":5852,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":4806,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":4203,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":4867,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":4764,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4280,"title":{},"body":{"license.html":{}}}],["divide",{"_index":5353,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":5325,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["docker",{"_index":5192,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["docs",{"_index":4948,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["document",{"_index":1045,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"injectables/NewsRepo.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":4087,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":5124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":4604,"title":{},"body":{"license.html":{}}}],["documents",{"_index":577,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{}}}],["doe",{"_index":5179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doesn't",{"_index":2781,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["doesnt",{"_index":5995,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doing",{"_index":5392,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["domain",{"_index":3731,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"injectables/TaskUC.html":{},"injectables/UserUC.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domainentity",{"_index":1363,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["domains",{"_index":3926,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":374,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":4171,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy",{"_index":5859,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z",{"_index":5864,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).catch(err",{"_index":5881,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).then(result",{"_index":5874,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazysync(wrong",{"_index":5884,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doubtful",{"_index":4562,"title":{},"body":{"license.html":{}}}],["down",{"_index":5822,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":4690,"title":{},"body":{"license.html":{}}}],["draft",{"_index":3492,"title":{},"body":{"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["driven",{"_index":5703,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":4997,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["drop/create",{"_index":1704,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["dropcollection",{"_index":1554,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dropcollection(collectionname",{"_index":1567,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dry",{"_index":5732,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":786,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMapper.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/functions.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":5609,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.availabledate",{"_index":3525,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":3180,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.description",{"_index":3531,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.displaycolor",{"_index":3529,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":3527,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":3176,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.gridelements",{"_index":1316,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dto.id",{"_index":1314,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.lastname",{"_index":3178,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.permissions",{"_index":3190,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.roles",{"_index":3186,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.schoolid",{"_index":3184,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.target",{"_index":2951,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":2953,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":3182,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.updater",{"_index":2948,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/api",{"_index":2178,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/error.response",{"_index":2177,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/resolveduser.dto",{"_index":3810,"title":{},"body":{"controllers/UserController.html":{}}}],["dtolist",{"_index":2871,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["dtos",{"_index":2246,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["dtos/entities",{"_index":5133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":6000,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["duedate",{"_index":2431,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["dummy",{"_index":5170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplicate",{"_index":5828,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["duplication",{"_index":373,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["durable",{"_index":4508,"title":{},"body":{"license.html":{}}}],["duration",{"_index":1825,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":1822,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["during",{"_index":4903,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":4559,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":4382,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":1886,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":1377,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{},"classes/RocketChatError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":362,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":2227,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.response.data",{"_index":65,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["e.response.data.errortype",{"_index":67,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["e.response.statuscode",{"_index":62,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["e.value",{"_index":2228,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":2972,"title":{},"body":{"modules/NewsModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":4099,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":4298,"title":{},"body":{"license.html":{}}}],["easier",{"_index":5287,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":1971,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":926,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["effect",{"_index":4847,"title":{},"body":{"license.html":{}}}],["effected",{"_index":4447,"title":{},"body":{"license.html":{}}}],["effective",{"_index":4429,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":4863,"title":{},"body":{"license.html":{}}}],["effects",{"_index":5394,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":5821,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":4705,"title":{},"body":{"license.html":{}}}],["el.getreferences",{"_index":1245,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["electronic",{"_index":4870,"title":{},"body":{"license.html":{}}}],["element",{"_index":886,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/PatchGroupParams.html":{}}}],["element.gridelement",{"_index":1220,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["element.removereference(position.groupindex",{"_index":1260,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["elementdto",{"_index":1318,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.displaycolor",{"_index":1326,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.groupelements",{"_index":1329,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.id",{"_index":1320,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.shorttitle",{"_index":1324,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.title",{"_index":1322,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.xposition",{"_index":1331,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.yposition",{"_index":1332,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementmodel",{"_index":1391,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.dashboard",{"_index":1403,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.references.set(references",{"_index":1402,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.title",{"_index":1398,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.xpos",{"_index":1393,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.ypos",{"_index":1395,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elements",{"_index":1242,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{}}}],["elementtomove",{"_index":1228,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["elementtomove.getreferences",{"_index":1256,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["elementtomove.isgroup",{"_index":1255,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["elementwithposition",{"_index":1330,"title":{},"body":{"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{}}}],["elementwithposition.gridelement.getcontent",{"_index":1319,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementwithposition.pos.x",{"_index":1394,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementwithposition.pos.y",{"_index":1396,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["em",{"_index":541,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":6012,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.getconnection('write').listcollections",{"_index":5078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["em.getconnection().deletemany(collectionname",{"_index":5080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["em.nativedelete(news",{"_index":5980,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":121,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/IUserProperties.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/User.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embed",{"_index":5716,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":6024,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":4503,"title":{},"body":{"license.html":{}}}],["employer",{"_index":4877,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1872,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/FileSystemAdapter.html":{},"classes/NewsScope.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":3040,"title":{},"body":{"classes/NewsScope.html":{},"classes/Scope.html":{},"miscellaneous/variables.html":{}}}],["emptyresultquerytype",{"_index":1029,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":5733,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":2251,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":2248,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["enableimplicitconversion",{"_index":2257,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":5031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enables",{"_index":4319,"title":{},"body":{"license.html":{}}}],["encapsulate",{"_index":5361,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":5407,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":5327,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":5377,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encoded",{"_index":2071,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encoding",{"_index":2035,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encodings",{"_index":4060,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encouraged",{"_index":4258,"title":{},"body":{"license.html":{}}}],["encrypt",{"_index":1847,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["encrypt(data",{"_index":3370,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["encryptedstring",{"_index":1875,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["encryptedstringtype",{"_index":1843,"title":{"classes/EncryptedStringType.html":{}},"body":{"classes/EncryptedStringType.html":{},"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["encryption.service",{"_index":1887,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["encryptionmodule",{"_index":1880,"title":{"modules/EncryptionModule.html":{}},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules.html":{}}}],["encryptionmoduleoptions",{"_index":1884,"title":{"interfaces/EncryptionModuleOptions.html":{}},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["encryptionservice",{"_index":1849,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["end",{"_index":892,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":6036,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":6042,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":2017,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":5385,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpointurl",{"_index":2376,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["enforce",{"_index":3750,"title":{},"body":{"controllers/TeamNewsController.html":{},"license.html":{}}}],["enforced",{"_index":5705,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":4453,"title":{},"body":{"license.html":{}}}],["enough",{"_index":5427,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enrichment",{"_index":5430,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":312,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4107,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ensuretokeniswhitelisted",{"_index":2626,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["entered",{"_index":4771,"title":{},"body":{"license.html":{}}}],["entire",{"_index":4475,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":4789,"title":{},"body":{"license.html":{}}}],["entites",{"_index":5428,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":321,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"classes/CourseFactory.html":{},"injectables/FilesRepo.html":{},"classes/LessonFactory.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entities.foreach((entity",{"_index":569,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.map((n",{"_index":563,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.transformer.ts",{"_index":4049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":5010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitiyids",{"_index":340,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":314,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.getgrid().map((elementwithposition",{"_index":1410,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["entity.getid",{"_index":1406,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["entity.getuserid",{"_index":1407,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["entity.ts",{"_index":5608,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entity/course.entity",{"_index":2297,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/role.entity",{"_index":2315,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{}}}],["entity/school.entity",{"_index":2298,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/team.entity",{"_index":2299,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entityclass",{"_index":411,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["entityid",{"_index":306,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"classes/SchoolNews.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":539,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":2750,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":334,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":338,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":371,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entitywithid",{"_index":466,"title":{},"body":{"classes/BaseFactory.html":{}}}],["entries",{"_index":5563,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":2599,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{}}}],["enum",{"_index":937,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{}}}],["enumerations",{"_index":4033,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":1061,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":3922,"title":{},"body":{"dependencies.html":{}}}],["env/config",{"_index":4916,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":5342,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["eol",{"_index":2043,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["eq",{"_index":2670,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["equivalent",{"_index":4404,"title":{},"body":{"license.html":{}}}],["err",{"_index":1812,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/TimeoutInterceptor.html":{}}}],["err.code",{"_index":5882,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["error",{"_index":34,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ILogger.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error('rocket",{"_index":170,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["error(message",{"_index":2352,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":1896,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":2164,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:119",{"_index":2169,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:122",{"_index":2173,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:130",{"_index":2175,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":2199,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":1951,"title":{},"body":{"interfaces/FeathersError.html":{}}}],["error.response",{"_index":225,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["error.response.ts",{"_index":215,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:23",{"_index":223,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":221,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":2231,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":2225,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorhandler",{"_index":5493,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":651,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":2224,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":201,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":2209,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":623,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":2196,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":219,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["errortype",{"_index":41,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["es6",{"_index":3928,"title":{},"body":{"dependencies.html":{}}}],["escaped",{"_index":4067,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eslint",{"_index":43,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/dot",{"_index":481,"title":{},"body":{"classes/BaseFactory.html":{}}}],["eslint/no",{"_index":48,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["eslint/restrict",{"_index":138,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["eslintrc.js",{"_index":5254,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["especially",{"_index":5340,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["essential",{"_index":4365,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":5316,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["etc",{"_index":4110,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":5806,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":5807,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":4180,"title":{},"body":{"index.html":{},"license.html":{}}}],["event",{"_index":4831,"title":{},"body":{"license.html":{}}}],["events",{"_index":5774,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["everyone",{"_index":4201,"title":{},"body":{"license.html":{}}}],["everything",{"_index":5691,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":2607,"title":{},"body":{"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":4297,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":4379,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["examplecolor",{"_index":1205,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["examples",{"_index":4071,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exampletitle",{"_index":1203,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["except",{"_index":4309,"title":{},"body":{"license.html":{},"todo.html":{}}}],["exception",{"_index":1893,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exception.constructor.name.replace('exception",{"_index":2193,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":2188,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":2190,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":2220,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":2267,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":2165,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":2192,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":2186,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["exchange",{"_index":2703,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["exchangeable",{"_index":5300,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exchanges",{"_index":2709,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["excluded",{"_index":4548,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":4775,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":4865,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":4731,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":4408,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":4782,"title":{},"body":{"license.html":{}}}],["executable",{"_index":4357,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2973,"title":{},"body":{"modules/NewsModule.html":{},"classes/TestBootstrapConsole.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":5558,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":2978,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":5212,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":4310,"title":{},"body":{"license.html":{}}}],["execution",{"_index":3766,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":1829,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":4706,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4448,"title":{},"body":{"license.html":{}}}],["exist",{"_index":2081,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["existing",{"_index":1387,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/JwtConstants.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"interfaces/Options.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existingrooms",{"_index":1237,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["existingrooms.includes(room",{"_index":1240,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["existinguser",{"_index":5766,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":997,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["existssync",{"_index":2087,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["existssync(folderpath",{"_index":2095,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["exp",{"_index":2559,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":5384,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expect(code).to",{"_index":5883,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(data.length).tobe(0",{"_index":5990,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazy(x,y,z)).to",{"_index":5862,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazysync(wrong",{"_index":5886,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":5949,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(result).to",{"_index":5865,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(service.findonebyidforuser(anothernewsid",{"_index":5954,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":5989,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expectation",{"_index":5856,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":4568,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":5948,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expecting",{"_index":5879,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":4567,"title":{},"body":{"license.html":{}}}],["experts",{"_index":5708,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expexting",{"_index":5870,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expiration",{"_index":2577,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{}}}],["expiresin",{"_index":2571,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":458,"title":{},"body":{"classes/BaseFactory.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":56,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"license.html":{}}}],["export",{"_index":22,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exportcollection",{"_index":1520,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(@param('collectionname",{"_index":1540,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(collectionname",{"_index":1523,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollections",{"_index":1479,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{}}}],["exportcollections(options",{"_index":1485,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["exportcollectionstofilesystem",{"_index":1601,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["exportcollectionstofilesystem(collections",{"_index":1612,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exported",{"_index":1618,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exportedcollections",{"_index":1722,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exportedcollections.push(`${collectionname}:${sortedbsondocuments.length",{"_index":1738,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exporting",{"_index":5684,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":293,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/UserModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":4901,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":5370,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":5450,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":1979,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":4816,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":140,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":4653,"title":{},"body":{"license.html":{}}}],["extend",{"_index":415,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/LessonFactory.html":{},"injectables/Logger.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UpdateNewsParams.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":578,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":5069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":33,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"interfaces/FeathersError.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/PlainTextMailContent.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"classes/User.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":4487,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":4329,"title":{},"body":{"license.html":{}}}],["external",{"_index":4128,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":2549,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":912,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externaluseridentifier",{"_index":2523,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["externaluseridentifier'})@unique",{"_index":3797,"title":{},"body":{"classes/User.html":{}}}],["extract",{"_index":5437,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":2265,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["extractjwt",{"_index":2585,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":2593,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":5572,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f",{"_index":438,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":888,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":5357,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":5838,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":4795,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":4409,"title":{},"body":{"license.html":{}}}],["factory",{"_index":392,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["factory.define",{"_index":445,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["factory.define(generator",{"_index":461,"title":{},"body":{"classes/BaseFactory.html":{}}}],["fail",{"_index":4261,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":210,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":6037,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["failingfileids",{"_index":1805,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["failingfileids.length",{"_index":1815,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["failingfileids.push(file.id",{"_index":1813,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["fails",{"_index":4666,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":4842,"title":{},"body":{"license.html":{}}}],["fair",{"_index":4403,"title":{},"body":{"license.html":{}}}],["false",{"_index":511,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DatabaseManagementConsole.html":{},"classes/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"interfaces/Options.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":4554,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":4158,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":4295,"title":{},"body":{"license.html":{}}}],["fast",{"_index":5727,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":4008,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":4563,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":296,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":5460,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathersapp",{"_index":1987,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersapp.service(path",{"_index":1998,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersauthprovider",{"_index":291,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":1949,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":2180,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersexpress",{"_index":1994,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersjs/authentication",{"_index":3870,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":3873,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":1460,"title":{},"body":{"injectables/DashboardUc.html":{},"dependencies.html":{}}}],["feathersjs/express",{"_index":1980,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":3874,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":3875,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":289,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":1967,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersserviceparams",{"_index":1974,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":1918,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":1982,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":4152,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":4157,"title":{},"body":{"index.html":{}}}],["features",{"_index":5263,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fee",{"_index":4468,"title":{},"body":{"license.html":{}}}],["feel",{"_index":5275,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":5741,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ffffff",{"_index":830,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":3865,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":513,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["fields",{"_index":4900,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":5319,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["file.collectionname",{"_index":1692,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["file.entity",{"_index":2398,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["filefactory",{"_index":5033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileids",{"_index":2409,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["filename",{"_index":1673,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application.html":{}}}],["filename.split('.')[0",{"_index":1674,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filenames",{"_index":1669,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filenames.map((filename",{"_index":1671,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filepath",{"_index":1654,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["files",{"_index":506,"title":{},"body":{"classes/BaseFile.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFileProperties.html":{},"interfaces/Options.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["files.console",{"_index":2122,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.console.ts",{"_index":1764,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.console.ts:17",{"_index":1775,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.console.ts:7",{"_index":1768,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.filter((file",{"_index":2148,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["files.uc.ts",{"_index":1788,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["files.uc.ts:15",{"_index":1793,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["files.uc.ts:6",{"_index":1791,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesforcleanupquery",{"_index":2144,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["filesfordeletion",{"_index":1799,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesfordeletion.length",{"_index":1802,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesmodule",{"_index":2114,"title":{"modules/FilesModule.html":{}},"body":{"modules/FilesModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["filesrepo",{"_index":1790,"title":{"injectables/FilesRepo.html":{}},"body":{"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"overview.html":{}}}],["filestorageadapter",{"_index":2006,"title":{"injectables/FileStorageAdapter.html":{}},"body":{"injectables/FileStorageAdapter.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"overview.html":{}}}],["filesystem",{"_index":1489,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["filesystemadapter",{"_index":1610,"title":{"injectables/FileSystemAdapter.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"overview.html":{}}}],["filesystemmodule",{"_index":2108,"title":{"modules/FileSystemModule.html":{}},"body":{"modules/FileSystemModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["filter",{"_index":1503,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"modules/ErrorModule.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/Options.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TeamNewsController.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter((submission",{"_index":2476,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["filter.query.ts",{"_index":2882,"title":{},"body":{"classes/NewsFilterQuery.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":2888,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":2886,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":2891,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":3051,"title":{},"body":{"interfaces/NewsTargetFilter.html":{}}}],["filter/global",{"_index":1895,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":1638,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filteredcollectionswithfilepaths",{"_index":1684,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filteredcollectionswithfilepaths.length",{"_index":1687,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filterquery",{"_index":1023,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["filters",{"_index":980,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/LessonRepo.html":{},"classes/NewsFilterQuery.html":{},"injectables/TaskRepo.html":{}}}],["filters.finished.value",{"_index":3600,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.afterduedateornone",{"_index":3603,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.draft",{"_index":3601,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.finished",{"_index":3598,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.hidden",{"_index":2657,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["filters?.onlyactivecourses",{"_index":1002,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["final",{"_index":5773,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":4663,"title":{},"body":{"license.html":{}}}],["find",{"_index":1970,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":1973,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":2833,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":2842,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findall(targets",{"_index":2982,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallbycourseids",{"_index":2342,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{}}}],["findallbycourseids'})@property",{"_index":2641,"title":{},"body":{"classes/Lesson.html":{}}}],["findallbycourseids(courseids",{"_index":2653,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["findallbyparentids",{"_index":3540,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbyparentids(parentids",{"_index":3544,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbyparentids_findallforstudent",{"_index":2444,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["findallbyparentids_findallforteacher",{"_index":2450,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["findallbyparentids_findallforteacher'})@manytomany('user",{"_index":3394,"title":{},"body":{"classes/Task.html":{}}}],["findallbytaskids",{"_index":3353,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbytaskids(taskids",{"_index":3357,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbyuser",{"_index":1032,"title":{},"body":{"injectables/CourseUc.html":{}}}],["findallbyuser(userid",{"_index":1035,"title":{},"body":{"injectables/CourseUc.html":{}}}],["findallbyuserid",{"_index":740,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"injectables/SubmissionRepo.html":{}}}],["findallbyuserid(userid",{"_index":979,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/SubmissionRepo.html":{}}}],["findallfilesforcleanup",{"_index":2125,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["findallfilesforcleanup(cleanupthreshold",{"_index":2129,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["findallfinished",{"_index":3470,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findallfinished(currentuser",{"_index":3472,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findallfinishedbyparentids",{"_index":3541,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallfinishedbyparentids(parentids",{"_index":3549,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallforstudent",{"_index":3664,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallforstudent(userid",{"_index":3671,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallforteacher",{"_index":739,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"interfaces/ICourseProperties.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher(userid",{"_index":983,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskUC.html":{}}}],["findallforteam",{"_index":3743,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforteam(teamid",{"_index":3744,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforuser",{"_index":3053,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":3064,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallspy",{"_index":5945,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findbycourseids",{"_index":847,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbycourseids(courseids",{"_index":849,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbyid",{"_index":3209,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyid(id",{"_index":3213,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyname",{"_index":3210,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":3215,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["finddocumentsofcollection",{"_index":1555,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["finddocumentsofcollection(collectionname",{"_index":1569,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["findforuser",{"_index":771,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{}}}],["findforuser(@currentuser",{"_index":1096,"title":{},"body":{"controllers/DashboardController.html":{}}}],["findforuser(currentuser",{"_index":772,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{}}}],["finding",{"_index":2304,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":2980,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":2985,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findone",{"_index":2834,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":2846,"title":{},"body":{"controllers/NewsController.html":{}}}],["findonebyid",{"_index":2981,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["findonebyid(id",{"_index":2989,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["findonebyidforuser",{"_index":3054,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":3070,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":2749,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["findtasksandcount",{"_index":3542,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findtasksandcount(query",{"_index":3551,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finduser(userid",{"_index":5505,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":1786,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["finished(user",{"_index":3494,"title":{},"body":{"classes/TaskFactory.html":{}}}],["finishedcourseids",{"_index":3556,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["first",{"_index":3069,"title":{},"body":{"injectables/NewsUc.html":{},"classes/UserInfoResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstname",{"_index":2317,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["fishery",{"_index":455,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["fit",{"_index":5416,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":4819,"title":{},"body":{"license.html":{}}}],["fix",{"_index":4905,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":5250,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":4507,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":4929,"title":{},"body":{"todo.html":{}}}],["fixme",{"_index":3640,"title":{},"body":{"classes/TaskScope.html":{}}}],["fixtures",{"_index":5913,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":2890,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["flags",{"_index":1500,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["flat",{"_index":1246,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["flow",{"_index":4388,"title":{},"body":{"license.html":{}}}],["flush",{"_index":529,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["focus",{"_index":5746,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["focuses",{"_index":5957,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":1512,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folderpath",{"_index":1655,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["folders",{"_index":5602,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":4282,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":1818,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":5269,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["foractivecourses",{"_index":994,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forallgrouptypes",{"_index":1018,"title":{},"body":{"classes/CourseScope.html":{}}}],["forallgrouptypes(userid",{"_index":988,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forbid",{"_index":4446,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":5686,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":5065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":2263,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":4405,"title":{},"body":{"license.html":{}}}],["forcepathstyle",{"_index":2019,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["forceserverobjectid",{"_index":1583,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["foreign",{"_index":6023,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":5951,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":4344,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":724,"title":{},"body":{"classes/Course.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formatting",{"_index":5247,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":4498,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":1882,"title":{},"body":{"modules/EncryptionModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{}}}],["forroot(options",{"_index":1883,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{}}}],["forteacher",{"_index":1019,"title":{},"body":{"classes/CourseScope.html":{}}}],["forteacher(userid",{"_index":993,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["found",{"_index":1475,"title":{},"body":{"injectables/DashboardUc.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["foundation",{"_index":4198,"title":{},"body":{"license.html":{}}}],["framework",{"_index":5285,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":5565,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":5455,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":4196,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":4218,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":3944,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":5697,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":5696,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fromgroup",{"_index":2270,"title":{},"body":{"classes/GridElement.html":{}}}],["fromgroup(title",{"_index":1195,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["frompersistedgroup",{"_index":2271,"title":{},"body":{"classes/GridElement.html":{}}}],["frompersistedgroup(id",{"_index":1193,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["frompersistedreference",{"_index":2272,"title":{},"body":{"classes/GridElement.html":{}}}],["frompersistedreference(id",{"_index":1192,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["fromsinglereference",{"_index":2273,"title":{},"body":{"classes/GridElement.html":{}}}],["fromsinglereference(reference",{"_index":1194,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["fs",{"_index":2088,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fs.rm",{"_index":2101,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fsp",{"_index":2086,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/variables.html":{}}}],["fulfilled",{"_index":5464,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":4432,"title":{},"body":{"license.html":{}}}],["full",{"_index":2056,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["function",{"_index":417,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/IRoleProperties.html":{},"classes/LessonFactory.html":{},"classes/Role.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":659,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":5330,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":4580,"title":{},"body":{"license.html":{}}}],["functions",{"_index":4040,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":4528,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":928,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":5267,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gates",{"_index":5251,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["general",{"_index":4189,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generally",{"_index":4066,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["generate",{"_index":435,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["generated",{"_index":4125,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["generateemptydashboard",{"_index":1429,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["generateemptydashboard(userid",{"_index":1442,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["generating",{"_index":5258,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generator",{"_index":441,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["generatorfn",{"_index":442,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["generic",{"_index":4062,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["genericdata",{"_index":29,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/typealiases.html":{}}}],["get(':id",{"_index":2847,"title":{},"body":{"controllers/NewsController.html":{}}}],["get(':teamid/news",{"_index":3745,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["get('finished",{"_index":3473,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('me",{"_index":3807,"title":{},"body":{"controllers/UserController.html":{}}}],["get(`${this.options.uri}${path",{"_index":141,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["get(id",{"_index":1976,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["get(path",{"_index":136,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getadminidandtoken",{"_index":155,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getasadmin(path",{"_index":134,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getbasedir",{"_index":1645,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["getcollectionnames",{"_index":1556,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getcontent",{"_index":1171,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getdashboardbyid",{"_index":1418,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdashboardbyid(id",{"_index":1422,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdatabasecollection",{"_index":1557,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdatabasecollection(collectionname",{"_index":1572,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdb",{"_index":1575,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdefaultmaxduedate",{"_index":3665,"title":{},"body":{"injectables/TaskUC.html":{}}}],["getdescriptions",{"_index":2513,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getdetails",{"_index":183,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getelement",{"_index":1114,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["getelement(position",{"_index":1139,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getentitypermissions",{"_index":301,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":316,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["geteol",{"_index":2083,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["getfirstopenindex",{"_index":1115,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getgradeduserids",{"_index":2474,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getgrid",{"_index":1116,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getgroupmembers(groupname",{"_index":107,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getgroupmoderators(groupname",{"_index":105,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["gethello",{"_index":1742,"title":{},"body":{"controllers/DelayController.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{}}}],["getid",{"_index":1117,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getinout",{"_index":3269,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getinout(whatever",{"_index":3273,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getmaxsubmissions",{"_index":2485,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getmetadata",{"_index":684,"title":{},"body":{"classes/Course.html":{},"interfaces/ILearnroom.html":{}}}],["getnewspermissions",{"_index":3055,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":3072,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnumberofgradedusers",{"_index":2479,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getnumberofstudents",{"_index":685,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["getnumberofsubmittedusers",{"_index":2471,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getparent",{"_index":2498,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getparentid",{"_index":833,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["getpermittedcourses",{"_index":3413,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedcourses(userid",{"_index":3419,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedentities",{"_index":302,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":319,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedlessonids",{"_index":3435,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedlessons",{"_index":3414,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedlessons(userid",{"_index":3423,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedschools",{"_index":1912,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":1920,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":1913,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":1922,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":3258,"title":{},"body":{"classes/Scope.html":{}}}],["getreferences",{"_index":1175,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getreferencesfromposition",{"_index":1118,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["getreferencesfromposition(position",{"_index":1148,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getrequiredpermissions",{"_index":3056,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":3075,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":184,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["gets",{"_index":425,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["getseedfolder",{"_index":1602,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getservice",{"_index":1999,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":1986,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getstudentid",{"_index":2426,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["getstudentids",{"_index":686,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["getsubmissionsitems",{"_index":2461,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getsubmitteduserids",{"_index":2466,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getsubstitutionteacherids",{"_index":687,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gettargetfilters",{"_index":3057,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":3078,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfolder",{"_index":1603,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["gettargetfolder(toseedfolder",{"_index":1621,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getteacherids",{"_index":688,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["getter",{"_index":728,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gettimeout",{"_index":3775,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":4081,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":1914,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":1924,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserid",{"_index":1119,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getuserlist(querystring",{"_index":89,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getuserschoolpermissions",{"_index":1915,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":1926,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusersdashboard",{"_index":1419,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusersdashboard(userid",{"_index":1424,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusertargetpermissions",{"_index":1916,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":1928,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserwithpermissions",{"_index":3840,"title":{},"body":{"injectables/UserUC.html":{}}}],["getuserwithpermissions(userid",{"_index":3843,"title":{},"body":{"injectables/UserUC.html":{}}}],["git",{"_index":4094,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git://github.com/hpi",{"_index":3952,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/leeroybrun/mongoose",{"_index":3975,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/schul",{"_index":3966,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":4089,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":4465,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1680,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":1957,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":4471,"title":{},"body":{"license.html":{}}}],["global",{"_index":666,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":2154,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":1894,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":2240,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":2533,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":2159,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["globalvalidationpipe",{"_index":2243,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{}}}],["gnu",{"_index":4187,"title":{},"body":{"license.html":{}}}],["go",{"_index":4173,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":4959,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":4273,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":5723,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golevelup/nestjs",{"_index":2699,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"dependencies.html":{}}}],["good",{"_index":4073,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":4611,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4274,"title":{},"body":{"license.html":{}}}],["grade",{"_index":2390,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["gradecomment",{"_index":2391,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{}}}],["graded",{"_index":2437,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradeduserids",{"_index":2475,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradefileids",{"_index":2411,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["gradefiles",{"_index":2392,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["grant",{"_index":4635,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4394,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4683,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4885,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":4527,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":4857,"title":{},"body":{"license.html":{}}}],["grid",{"_index":885,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"classes/PatchGroupParams.html":{},"miscellaneous/variables.html":{}}}],["gridarray",{"_index":1430,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridelement",{"_index":1180,"title":{"classes/GridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridelement.frompersistedgroup(modelentity.id",{"_index":1371,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.fromsinglereference(referenceforindex",{"_index":1259,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridelement.fromsinglereference(room",{"_index":1249,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridelement.getcontent().title",{"_index":1399,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.getid",{"_index":1389,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.hasid",{"_index":1386,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.isgroup",{"_index":1397,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.setgroupname(params",{"_index":1471,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["gridelementcontent",{"_index":1172,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["gridelements",{"_index":1290,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["gridelementwithposition",{"_index":1146,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["gridindexfromposition",{"_index":1120,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["gridindexfromposition(pos",{"_index":1152,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridposition",{"_index":1140,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["gridpositionwithgroupindex",{"_index":1149,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["group",{"_index":1179,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PatchGroupParams.html":{}}}],["group.name",{"_index":111,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["groupdata",{"_index":1206,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["groupelements",{"_index":1294,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["groupindex",{"_index":1208,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["groupmetadata",{"_index":1204,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["groupname",{"_index":94,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["gt",{"_index":3050,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":999,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/TaskScope.html":{}}}],["guarantee",{"_index":2874,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":5072,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":5632,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":5577,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guest:guest",{"_index":5202,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["guide",{"_index":5991,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":5408,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hack",{"_index":2486,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["halper",{"_index":2808,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":3643,"title":{},"body":{"classes/TaskScope.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handlebars",{"_index":4064,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handled",{"_index":597,"title":{},"body":{"classes/BusinessError.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":4945,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":2211,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":662,"title":{},"body":{"modules/CoreModule.html":{},"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["happen",{"_index":5313,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":5671,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":5938,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":5337,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hascoursepermission",{"_index":3465,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursereadpermission",{"_index":3415,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursereadpermission(userid",{"_index":3425,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursewritepermission",{"_index":3416,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursewritepermission(userid",{"_index":3427,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hasid",{"_index":1170,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["haspermission",{"_index":3459,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["haspermissions",{"_index":336,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["hastaskdashboardpermission",{"_index":3666,"title":{},"body":{"injectables/TaskUC.html":{}}}],["hastaskdashboardpermission(currentuser",{"_index":3675,"title":{},"body":{"injectables/TaskUC.html":{}}}],["hastaskpermission",{"_index":3417,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hastaskpermission(userid",{"_index":3429,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["having",{"_index":4407,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["header",{"_index":2566,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":142,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":5482,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":4257,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":5375,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hell",{"_index":731,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["help",{"_index":5900,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helper",{"_index":2183,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/SubmissionRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helpers",{"_index":5633,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["helpful",{"_index":5871,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helps",{"_index":5858,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helpto",{"_index":5234,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["hence",{"_index":5475,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":367,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hereafter",{"_index":4727,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":5594,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":2339,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":5747,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":5299,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["high",{"_index":5309,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":5689,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":1703,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":5391,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":3965,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":3968,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":4660,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4618,"title":{},"body":{"license.html":{}}}],["homework",{"_index":5607,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":2403,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["homeworks",{"_index":2443,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["homogeneitysolve",{"_index":5315,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":5479,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":5476,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hookfn",{"_index":413,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["hooks",{"_index":3933,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":732,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{}}}],["host",{"_index":2171,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":2237,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":4534,"title":{},"body":{"license.html":{}}}],["hot",{"_index":4949,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["household",{"_index":4555,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":1862,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":918,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["htmlcontent",{"_index":249,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["htmlmailcontent",{"_index":251,"title":{"interfaces/HtmlMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["http",{"_index":217,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":4200,"title":{},"body":{"license.html":{}}}],["http://localhost",{"_index":5173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://www.gnu.org/licenses",{"_index":4881,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":602,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":5798,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["httpmodule",{"_index":3197,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["https://docs.nestjs.com/first",{"_index":5635,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":5993,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/hpi",{"_index":4924,"title":{},"body":{"todo.html":{}}}],["https://github.com/mikro",{"_index":5735,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://github.com/thoughtbot/fishery",{"_index":395,"title":{},"body":{"classes/BaseFactory.html":{}}}],["https://hpi",{"_index":4955,"title":{},"body":{"todo.html":{}}}],["https://jestjs.io",{"_index":5277,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":5744,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":5674,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":5278,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://min.io",{"_index":5280,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":5276,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":5444,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":4906,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":5446,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://www.rabbitmq.com",{"_index":5281,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["httpservice",{"_index":16,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["httpstatus",{"_index":202,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/ValidationError.html":{}}}],["httpstatus.bad_request",{"_index":212,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.conflict",{"_index":617,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["human",{"_index":5802,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["i...properties",{"_index":736,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["i.e",{"_index":5468,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":2558,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icollectionfilepath",{"_index":1653,"title":{"interfaces/ICollectionFilePath.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["icons",{"_index":6039,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icoursegroupproperties",{"_index":834,"title":{"interfaces/ICourseGroupProperties.html":{}},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["icourseproperties",{"_index":690,"title":{"interfaces/ICourseProperties.html":{}},"body":{"classes/Course.html":{},"classes/CourseFactory.html":{},"interfaces/ICourseProperties.html":{}}}],["icreatenews",{"_index":2294,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["icurrentuser",{"_index":773,"title":{"interfaces/ICurrentUser.html":{}},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":10,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/Directory.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":3152,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":3154,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":4981,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idashboardmodelproperties",{"_index":1285,"title":{"interfaces/IDashboardModelProperties.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["idashboardrepo",{"_index":1433,"title":{"interfaces/IDashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["idea",{"_index":3450,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["identical",{"_index":2622,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identifiable",{"_index":4752,"title":{},"body":{"license.html":{}}}],["identified",{"_index":5808,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiedreference",{"_index":1270,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["identifier",{"_index":1902,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiers",{"_index":2621,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identify",{"_index":2812,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":6013,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ids",{"_index":322,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{}}}],["ierrortype",{"_index":604,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":5758,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":5768,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":5761,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ifileproperties",{"_index":502,"title":{"interfaces/IFileProperties.html":{}},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["ifindoptions",{"_index":981,"title":{"interfaces/IFindOptions.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["ignore",{"_index":5093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":2594,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["igridelement",{"_index":1143,"title":{"interfaces/IGridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["ilearnroom",{"_index":676,"title":{"interfaces/ILearnroom.html":{}},"body":{"classes/Course.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{}}}],["ilessonproperties",{"_index":2337,"title":{"interfaces/ILessonProperties.html":{}},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{}}}],["ilogger",{"_index":2167,"title":{"interfaces/ILogger.html":{}},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["imateapotexception",{"_index":1978,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["imateapotexception('this",{"_index":1995,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immediately",{"_index":1965,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["impact",{"_index":4112,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":2675,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":4364,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":5636,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":2555,"title":{},"body":{"interfaces/JwtConstants.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":675,"title":{},"body":{"classes/Course.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":5687,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":6011,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":4776,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":1983,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importcollection",{"_index":1521,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollection(@param('collectionname",{"_index":1537,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["importcollection(collectionname",{"_index":1529,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollections",{"_index":1522,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["imported",{"_index":1717,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importeddocumentsamount",{"_index":1714,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importing",{"_index":4718,"title":{},"body":{"license.html":{}}}],["imports",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"modules/FilesModule.html":{},"interfaces/ICollectionFilePath.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"classes/TestBootstrapConsole.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":4644,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":4779,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":3047,"title":{},"body":{"classes/NewsScope.html":{}}}],["improvements",{"_index":4250,"title":{},"body":{"license.html":{}}}],["improves",{"_index":5812,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":5610,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":4837,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":4839,"title":{},"body":{"license.html":{}}}],["inc",{"_index":4199,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":4834,"title":{},"body":{"license.html":{}}}],["include",{"_index":357,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"license.html":{}}}],["included",{"_index":4358,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3683,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":2076,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":4496,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":2253,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incorporate",{"_index":4255,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":4796,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":4558,"title":{},"body":{"license.html":{}}}],["increase",{"_index":4168,"title":{},"body":{"index.html":{}}}],["increases",{"_index":5439,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":4640,"title":{},"body":{"license.html":{}}}],["independend",{"_index":5777,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":4485,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":5490,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index({name",{"_index":710,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["index.ts",{"_index":4897,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexes",{"_index":4934,"title":{},"body":{"todo.html":{}}}],["indicate",{"_index":4687,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":4651,"title":{},"body":{"license.html":{}}}],["individual",{"_index":4494,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":4292,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":4571,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":5134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":944,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["inewsscope",{"_index":2305,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["inewuserprops",{"_index":5752,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info(text",{"_index":636,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["info.mapper",{"_index":2930,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":3240,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.mapper.ts:5",{"_index":3242,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":2902,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{}}}],["info.response.ts",{"_index":3247,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:13",{"_index":3249,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{}}}],["info.response.ts:14",{"_index":3826,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":3250,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{}}}],["info.response.ts:19",{"_index":3825,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:24",{"_index":3828,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:3",{"_index":3248,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":4540,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":1909,"title":{},"body":{"classes/ErrorResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infra",{"_index":2753,"title":{},"body":{"modules/ManagementModule.html":{}}}],["infra/encryption",{"_index":1865,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["infrastructure",{"_index":5622,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":4685,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4715,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4306,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":360,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inheritances",{"_index":3006,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["inherited",{"_index":192,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskScope.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/ValidationError.html":{}}}],["initialization",{"_index":5999,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["initialize",{"_index":5786,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":2679,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":5571,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":4709,"title":{},"body":{"license.html":{}}}],["initpermissions",{"_index":5145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":17,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/SymetricKeyEncryptionService.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject('dashboard_repo",{"_index":1461,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["inject('mail_service_options",{"_index":2725,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["inject('rocket_chat_options",{"_index":70,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["inject(mikroorm",{"_index":2789,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":2790,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":18,"title":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":298,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["injected",{"_index":1961,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":2676,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":5522,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["inline",{"_index":242,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inlineattachment",{"_index":241,"title":{"interfaces/InlineAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inner",{"_index":4116,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":2535,"title":{},"body":{"modules/InterceptorModule.html":{},"classes/ServerConsole.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["inputroles",{"_index":3230,"title":{},"body":{"injectables/RoleUC.html":{}}}],["inputroles.map((role",{"_index":3231,"title":{},"body":{"injectables/RoleUC.html":{}}}],["insertedcount",{"_index":1581,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["inside",{"_index":600,"title":{},"body":{"classes/BusinessError.html":{},"injectables/TaskUC.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":5992,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":4373,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":4576,"title":{},"body":{"license.html":{}}}],["installed",{"_index":4592,"title":{},"body":{"license.html":{}}}],["instance",{"_index":1990,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":2149,"title":{},"body":{"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":4101,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instant",{"_index":735,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["instantiategridelementmodel",{"_index":1338,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["instantiategridelementmodel(gridelement",{"_index":1346,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["instead",{"_index":1708,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":4135,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":4460,"title":{},"body":{"license.html":{}}}],["integration",{"_index":5893,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":4222,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":4451,"title":{},"body":{"license.html":{}}}],["interact",{"_index":4872,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":4791,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":4322,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":5362,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":4326,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":5560,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":1827,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":1828,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":672,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptormodule",{"_index":652,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":4510,"title":{},"body":{"license.html":{}}}],["interest",{"_index":4702,"title":{},"body":{"license.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AdminIdAndToken.html":{},"interfaces/AppendedAttachment.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"interfaces/RocketChatOptions.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/Directory.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":2590,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/AppendedAttachment.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"interfaces/RocketChatOptions.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":4582,"title":{},"body":{"license.html":{}}}],["internal",{"_index":933,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":5750,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internally",{"_index":646,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["internalservererrorexception",{"_index":1362,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception('unknown",{"_index":1384,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["internalservererrorexception(error",{"_index":2202,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["interpretation",{"_index":4846,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":4371,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":4386,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":5721,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":1962,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":5395,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":5512,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":5181,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":4893,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":1690,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["invalidate",{"_index":4481,"title":{},"body":{"license.html":{}}}],["inviteusertogroup(groupname",{"_index":99,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["invocation",{"_index":5591,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":5596,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":5531,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":5371,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":5503,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":5722,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":2328,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/TaskUC.html":{}}}],["ipermissionsandroles",{"_index":2319,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/RoleUC.html":{},"miscellaneous/typealiases.html":{}}}],["iprimarykey",{"_index":2737,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["iresolveduser",{"_index":2313,"title":{"interfaces/IResolvedUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{}}}],["irole",{"_index":2316,"title":{"interfaces/IRole.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"miscellaneous/typealiases.html":{}}}],["iroleproperties",{"_index":2363,"title":{"interfaces/IRoleProperties.html":{}},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["irrevocable",{"_index":4396,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":2892,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":2181,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":2215,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ischoolproperties",{"_index":2372,"title":{"interfaces/ISchoolProperties.html":{}},"body":{"interfaces/ISchoolProperties.html":{},"classes/School.html":{}}}],["iscreator",{"_index":3463,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["isdate",{"_index":1066,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@isoptional()@apipropertyoptional({description",{"_index":1048,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isdirectory",{"_index":488,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["isdraft",{"_index":2438,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["isfeatherserror",{"_index":2179,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":2210,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isfinished",{"_index":689,"title":{},"body":{"classes/Course.html":{},"classes/CourseFactory.html":{},"interfaces/ICourseProperties.html":{}}}],["isgraded",{"_index":2422,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["isgradedforuser",{"_index":3387,"title":{},"body":{"classes/Task.html":{}}}],["isgradedforuser(userid",{"_index":2502,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["isgroup",{"_index":1173,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["ishidden",{"_index":2669,"title":{},"body":{"classes/LessonScope.html":{}}}],["isin",{"_index":2893,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":2897,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":3137,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":3134,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":3128,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":2894,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isnumber",{"_index":2805,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["isnumber()@min(0)@apiproperty",{"_index":2815,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["isnumber()@min(0)@isoptional()@apipropertyoptional({description",{"_index":2813,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["isolated",{"_index":5597,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":5844,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isopen",{"_index":803,"title":{},"body":{"classes/CourseFactory.html":{}}}],["isoptional",{"_index":1067,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":2889,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":3793,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":2883,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":3792,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":2887,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":3107,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":2562,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":1068,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/PatchGroupParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":1046,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/PatchGroupParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":1059,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":1056,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstudent",{"_index":989,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["issubmitted",{"_index":2505,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["issubmittedforuser",{"_index":3388,"title":{},"body":{"classes/Task.html":{}}}],["issubmittedforuser(userid",{"_index":2500,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["issubstitutionteacher",{"_index":991,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["issuer",{"_index":2569,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":5246,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["isteacher",{"_index":990,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["istechnicalerror",{"_index":2184,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":2217,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":2688,"title":{},"body":{"injectables/Logger.html":{}}}],["istorageproviderproperties",{"_index":2374,"title":{"interfaces/IStorageProviderProperties.html":{}},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["isubmissionproperties",{"_index":2387,"title":{"interfaces/ISubmissionProperties.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{}}}],["iswhitelisted",{"_index":2613,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["iswhitelisted(accountid",{"_index":2616,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["it's",{"_index":5398,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["it(\"should",{"_index":5843,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('bad",{"_index":5861,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('good",{"_index":5863,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":5944,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["itaskproperties",{"_index":2428,"title":{"interfaces/ITaskProperties.html":{}},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{}}}],["itaskstatus",{"_index":2434,"title":{"interfaces/ITaskStatus.html":{}},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["iteamproperties",{"_index":2518,"title":{"interfaces/ITeamProperties.html":{}},"body":{"interfaces/ITeamProperties.html":{},"classes/Team.html":{}}}],["item",{"_index":4340,"title":{},"body":{"license.html":{}}}],["items",{"_index":2366,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"miscellaneous/typealiases.html":{}}}],["itself",{"_index":4597,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":2303,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["iuserproperties",{"_index":2520,"title":{"interfaces/IUserProperties.html":{}},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["javascript",{"_index":580,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["jest",{"_index":4943,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":5015,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["jest.spyon(repo",{"_index":5946,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":5121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":4147,"title":{},"body":{"index.html":{}}}],["job",{"_index":1770,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["job/delete",{"_index":2121,"title":{},"body":{"modules/FilesModule.html":{}}}],["jobs",{"_index":5552,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["john",{"_index":5178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":6030,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["joinpath",{"_index":2038,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["joinpath(...paths",{"_index":2059,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["jose",{"_index":3947,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":729,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/SymetricKeyEncryptionService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":579,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json.parse(text",{"_index":1701,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify",{"_index":1689,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify(collections",{"_index":1509,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["json.stringify(e.constraints",{"_index":2229,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(sortedbsondocuments",{"_index":1735,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments",{"_index":592,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments.length",{"_index":1580,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["jsonwebtoken",{"_index":3949,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":2564,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["jwauthguard",{"_index":5962,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":2588,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtauthguard",{"_index":2541,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":279,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":2597,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":2596,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":2592,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":275,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":283,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":2547,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":2574,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":265,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["jwtvalidationadapter",{"_index":266,"title":{"injectables/JwtValidationAdapter.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"overview.html":{}}}],["jwtwhitelist",{"_index":2624,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["kafka",{"_index":5458,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1716,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":5210,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":4366,"title":{},"body":{"license.html":{}}}],["key",{"_index":2030,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/NewsUc.html":{},"injectables/SymetricKeyEncryptionService.html":{},"license.html":{}}}],["keyof",{"_index":5007,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":2553,"title":{},"body":{"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kickuserfromgroup(groupname",{"_index":97,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["kind",{"_index":4318,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":4209,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["know",{"_index":4235,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["knowingly",{"_index":4742,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":4749,"title":{},"body":{"license.html":{}}}],["known",{"_index":5649,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":5551,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kurse",{"_index":738,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["l.course.isfinished()).map((l",{"_index":3702,"title":{},"body":{"injectables/TaskUC.html":{}}}],["l.id",{"_index":3703,"title":{},"body":{"injectables/TaskUC.html":{}}}],["label",{"_index":4162,"title":{},"body":{"index.html":{}}}],["language",{"_index":4353,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":5440,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":4488,"title":{},"body":{"license.html":{}}}],["last",{"_index":3827,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["lastname",{"_index":2318,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":952,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["latest",{"_index":3068,"title":{},"body":{"injectables/NewsUc.html":{},"dependencies.html":{}}}],["launch",{"_index":5271,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["launch/settings",{"_index":4923,"title":{},"body":{"todo.html":{}}}],["law",{"_index":4308,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4284,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":4713,"title":{},"body":{"license.html":{}}}],["layer",{"_index":5348,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":5546,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":5306,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":4896,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":4910,"title":{},"body":{"todo.html":{}}}],["ldapjs",{"_index":3951,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":3954,"title":{},"body":{"dependencies.html":{}}}],["lead",{"_index":5541,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":4068,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["lean",{"_index":3970,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["learnroom",{"_index":1385,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["learnroommetadata",{"_index":713,"title":{},"body":{"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"miscellaneous/typealiases.html":{}}}],["learnroommodule",{"_index":2633,"title":{"modules/LearnroomModule.html":{}},"body":{"modules/LearnroomModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["learnroomtypes",{"_index":721,"title":{},"body":{"classes/Course.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/enumerations.html":{}}}],["learnroomtypes.course",{"_index":1383,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["leave",{"_index":4969,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":3765,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":1958,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["legacy/feathers",{"_index":5259,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/feathers/mocha",{"_index":5236,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/nest",{"_index":4960,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":5161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":4244,"title":{},"body":{"license.html":{}}}],["less",{"_index":5504,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":2341,"title":{"classes/Lesson.html":{}},"body":{"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["lesson.entity",{"_index":2432,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["lessonfactory",{"_index":2644,"title":{"classes/LessonFactory.html":{}},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["lessonfactory.define(lesson",{"_index":2647,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["lessonid",{"_index":2447,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["lessonids",{"_index":3588,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["lessonidsoffinishedcourses",{"_index":3557,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["lessonidsofopencourses",{"_index":3555,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["lessonrepo",{"_index":2650,"title":{"injectables/LessonRepo.html":{}},"body":{"injectables/LessonRepo.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["lessons",{"_index":2340,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["lessons.filter((l",{"_index":3701,"title":{},"body":{"injectables/TaskUC.html":{}}}],["lessons.map((l",{"_index":3727,"title":{},"body":{"injectables/TaskUC.html":{}}}],["lessonscope",{"_index":2655,"title":{"classes/LessonScope.html":{}},"body":{"injectables/LessonRepo.html":{},"classes/LessonScope.html":{}}}],["letter",{"_index":5645,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":4264,"title":{},"body":{"license.html":{}}}],["level",{"_index":5406,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":5839,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":4621,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4305,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":4356,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":4549,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":4186,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":4288,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":4289,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":4291,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":4215,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":4689,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":4632,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":4681,"title":{},"body":{"license.html":{}}}],["limit",{"_index":798,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"license.html":{}}}],["limitation",{"_index":4830,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4817,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["limiting",{"_index":4620,"title":{},"body":{"license.html":{}}}],["line",{"_index":46,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":5106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":4797,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":4383,"title":{},"body":{"license.html":{}}}],["linter",{"_index":4944,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":318,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/LessonFactory.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["lists",{"_index":2063,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["literal",{"_index":409,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/CourseRepo.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":4710,"title":{},"body":{"license.html":{}}}],["living",{"_index":5719,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":5419,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":1676,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["load/init",{"_index":2462,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["load/perf",{"_index":4914,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":5618,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loadallcollectionsfromdatabase",{"_index":1604,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromdatabase(targetfolder",{"_index":1624,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadallcollectionsfromfilesystem",{"_index":1605,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromfilesystem(basedir",{"_index":1630,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1606,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames(source",{"_index":1633,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loaded",{"_index":3717,"title":{},"body":{"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":5892,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loads",{"_index":1626,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["local",{"_index":3872,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["localhost:15672",{"_index":5201,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localhost:3030",{"_index":5215,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localization",{"_index":5447,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":3318,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["locate",{"_index":5683,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":5424,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":1644,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lodash",{"_index":1648,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["log",{"_index":2347,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["log(message",{"_index":2355,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":4946,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":5583,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logged",{"_index":4133,"title":{},"body":{"index.html":{}}}],["logger",{"_index":671,"title":{"injectables/Logger.html":{}},"body":{"modules/CoreModule.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":2168,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(deletefilesconsole.name",{"_index":1780,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":1834,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger(newsuc.name",{"_index":3086,"title":{},"body":{"injectables/NewsUc.html":{}}}],["logger.error(error",{"_index":2233,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":2230,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":2221,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.info(`could",{"_index":5875,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["logger.interface",{"_index":2673,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":2693,"title":{},"body":{"modules/LoggerModule.html":{}}}],["loggermodule",{"_index":653,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/FilesModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":5793,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":664,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":1824,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:11",{"_index":1835,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":1831,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":3732,"title":{},"body":{"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":5397,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":5451,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":5203,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":5655,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logoutuser(authtoken",{"_index":87,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["logs",{"_index":4895,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":4163,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["look",{"_index":2552,"title":{},"body":{"interfaces/JwtConstants.html":{},"index.html":{}}}],["loop",{"_index":1809,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["loss",{"_index":4838,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4840,"title":{},"body":{"license.html":{}}}],["low",{"_index":5311,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":5646,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":2145,"title":{},"body":{"injectables/FilesRepo.html":{},"classes/NewsScope.html":{}}}],["luckily",{"_index":5568,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":6022,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":4500,"title":{},"body":{"license.html":{}}}],["made",{"_index":4251,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":252,"title":{"interfaces/Mail.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["mail.interface",{"_index":2724,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mail.service",{"_index":2702,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mail_service_options",{"_index":2714,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailattachment",{"_index":237,"title":{"interfaces/MailAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["mailcontent",{"_index":245,"title":{"interfaces/MailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["mailmodule",{"_index":2694,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailmodule.forroot",{"_index":3306,"title":{},"body":{"modules/ServerModule.html":{}}}],["mailmoduleoptions",{"_index":2696,"title":{"interfaces/MailModuleOptions.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailservice",{"_index":2701,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mailserviceoptions",{"_index":2720,"title":{"interfaces/MailServiceOptions.html":{}},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["main",{"_index":5483,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":1991,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{}}}],["mainly",{"_index":5501,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":4531,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":5376,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":5307,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":4361,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":2620,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":4422,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":2810,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":5939,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["manage",{"_index":5360,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":5333,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":5197,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["management.console",{"_index":2744,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.console.ts",{"_index":1478,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["management.console.ts:11",{"_index":1483,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:25",{"_index":1493,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:49",{"_index":1490,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.controller",{"_index":2742,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.controller.ts",{"_index":1518,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:14",{"_index":1531,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:19",{"_index":1528,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:24",{"_index":1525,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:9",{"_index":1533,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.module.ts",{"_index":1548,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service",{"_index":1549,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service.ts",{"_index":1550,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:13",{"_index":1573,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:18",{"_index":1574,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:30",{"_index":1570,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:36",{"_index":1562,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:42",{"_index":1571,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:50",{"_index":1564,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:56",{"_index":1566,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:6",{"_index":1560,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:60",{"_index":1568,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:9",{"_index":1576,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.uc",{"_index":1497,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["management.uc.ts",{"_index":1599,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["management.uc.ts:134",{"_index":1640,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:183",{"_index":1613,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:19",{"_index":1611,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:30",{"_index":1646,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:38",{"_index":1619,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:46",{"_index":1622,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:63",{"_index":1625,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:76",{"_index":1631,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:91",{"_index":1635,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management/database",{"_index":1519,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["managementmodule",{"_index":2729,"title":{"modules/ManagementModule.html":{}},"body":{"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["manager",{"_index":3891,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":5422,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":4899,"title":{},"body":{"todo.html":{}}}],["manner",{"_index":4728,"title":{},"body":{"license.html":{}}}],["manually",{"_index":5872,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["many",{"_index":4256,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":719,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/User.html":{}}}],["manytomany('course",{"_index":1274,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["manytomany('file",{"_index":2408,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytomany('role",{"_index":2367,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["manytomany('user",{"_index":703,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["manytoone",{"_index":497,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["manytoone('course",{"_index":836,"title":{},"body":{"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{}}}],["manytoone('coursegroup",{"_index":2405,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytoone('dashboardmodelentity",{"_index":1271,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["manytoone('lesson",{"_index":2446,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["manytoone('school",{"_index":698,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["manytoone('storageprovider",{"_index":512,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["manytoone('task",{"_index":2402,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytoone('team",{"_index":975,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["manytoone('user",{"_index":919,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":1128,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["map((el",{"_index":1244,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["map((submission",{"_index":2478,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["mapcreatenewstodomain",{"_index":2918,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":2921,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdashboardtoentity",{"_index":1339,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdashboardtoentity(modelentity",{"_index":1348,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdashboardtomodel",{"_index":1340,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdashboardtomodel(entity",{"_index":1351,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdomaintoresponse",{"_index":5625,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapelementtoentity",{"_index":1341,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapelementtoentity(modelentity",{"_index":1353,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapfootodomain",{"_index":5626,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapgridelementtomodel",{"_index":1342,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapgridelementtomodel(elementwithposition",{"_index":1355,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapnewsscopetodomain",{"_index":2919,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":2923,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":5492,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mappedelements",{"_index":1409,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mappedelements.includes(el",{"_index":1413,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapper",{"_index":1420,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":5624,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/course.mapper",{"_index":788,"title":{},"body":{"controllers/CourseController.html":{}}}],["mapper/dashboard.mapper",{"_index":1093,"title":{},"body":{"controllers/DashboardController.html":{}}}],["mapper/news.mapper",{"_index":2860,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["mapper/task.mapper",{"_index":3479,"title":{},"body":{"controllers/TaskController.html":{}}}],["mappers",{"_index":5961,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapping",{"_index":5355,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapreferencetoentity",{"_index":1343,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapreferencetoentity(modelentity",{"_index":1357,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapreferencetomodel",{"_index":1344,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapreferencetomodel(reference",{"_index":1359,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["maps",{"_index":5389,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptometadataresponse",{"_index":856,"title":{},"body":{"classes/CourseMapper.html":{}}}],["maptometadataresponse(course",{"_index":857,"title":{},"body":{"classes/CourseMapper.html":{}}}],["maptoresponse",{"_index":1311,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/TaskStatusMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(dashboard",{"_index":1312,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["maptoresponse(news",{"_index":2925,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":3241,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(status",{"_index":3647,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["maptoresponse(target",{"_index":3380,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["maptoresponse(taskwithstatus",{"_index":3511,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(user",{"_index":3173,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":2920,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":2927,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":4773,"title":{},"body":{"license.html":{}}}],["marked",{"_index":1771,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"license.html":{}}}],["marks",{"_index":4639,"title":{},"body":{"license.html":{}}}],["masks",{"_index":4286,"title":{},"body":{"license.html":{}}}],["master",{"_index":4084,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":1614,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["matched",{"_index":614,"title":{},"body":{"classes/BusinessError.html":{}}}],["matches",{"_index":5935,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":173,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":4411,"title":{},"body":{"license.html":{}}}],["materially",{"_index":4598,"title":{},"body":{"license.html":{}}}],["math.floor(index",{"_index":1215,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["matrix",{"_index":5434,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":5426,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":5506,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":3138,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["max(100",{"_index":3140,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":3131,"title":{},"body":{"classes/PaginationQuery.html":{},"injectables/TaskUC.html":{}}}],["maxsubmissions",{"_index":2436,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["maxworkers",{"_index":5118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybe",{"_index":2774,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":4951,"title":{},"body":{"todo.html":{}}}],["me(@currentuser",{"_index":3813,"title":{},"body":{"controllers/UserController.html":{}}}],["me(authtoken",{"_index":75,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["me(currentuser",{"_index":3806,"title":{},"body":{"controllers/UserController.html":{}}}],["meaning",{"_index":4647,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":4179,"title":{},"body":{"index.html":{}}}],["means",{"_index":4117,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":4431,"title":{},"body":{"license.html":{}}}],["measures",{"_index":4121,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechanisms",{"_index":5595,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":4456,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4469,"title":{},"body":{"license.html":{}}}],["meets",{"_index":4341,"title":{},"body":{"license.html":{}}}],["member",{"_index":50,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/FeathersAuthProvider.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["members",{"_index":110,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["memory",{"_index":2756,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":4338,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":4818,"title":{},"body":{"license.html":{}}}],["mere",{"_index":4321,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4184,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mergeelementintoposition",{"_index":1121,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["mergeelementintoposition(element",{"_index":1155,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["merging",{"_index":4699,"title":{},"body":{"license.html":{}}}],["message",{"_index":84,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/ValidationError.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":5459,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["met",{"_index":4398,"title":{},"body":{"license.html":{}}}],["meta",{"_index":6006,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":1381,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["metadata.type",{"_index":1382,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["method",{"_index":1972,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":182,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"modules/RocketChatModule.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["metrics",{"_index":3991,"title":{},"body":{"dependencies.html":{}}}],["microservice",{"_index":5438,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":5363,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":4109,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":3956,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":5436,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":2974,"title":{},"body":{"modules/NewsModule.html":{}}}],["migrations/scheduled",{"_index":2976,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":353,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":2763,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm.init",{"_index":5169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mikroorm/asynclocalstorage",{"_index":4940,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":2785,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":2787,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":2788,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":2734,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":2745,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":2769,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":2783,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports.length",{"_index":2784,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports[0",{"_index":2786,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmoduleasyncoptions",{"_index":2764,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":2780,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":3779,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["mimetype",{"_index":240,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["min",{"_index":2806,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(0",{"_index":2811,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(1",{"_index":3139,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":5519,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":3130,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minus",{"_index":5653,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":6028,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":4032,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":4628,"title":{},"body":{"license.html":{}}}],["missed",{"_index":2509,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["missing",{"_index":1989,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":3046,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":5343,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":3957,"title":{},"body":{"dependencies.html":{}}}],["mkdir",{"_index":2091,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdir(folderpath",{"_index":2096,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp",{"_index":2092,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp(dirpath",{"_index":2100,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mocha",{"_index":5094,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mocha's",{"_index":5848,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":5908,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":5896,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":5898,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":4575,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":1062,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modelentity",{"_index":1350,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["modelentity.gridelements.init",{"_index":1374,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.gridelements.isinitialized",{"_index":1373,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.gridelements.remove(el",{"_index":1414,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.references.loaditems",{"_index":1366,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.title",{"_index":1372,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.user.id",{"_index":1380,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.xpos",{"_index":1369,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.ypos",{"_index":1370,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["models",{"_index":3115,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":4281,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":4345,"title":{},"body":{"license.html":{}}}],["modified",{"_index":4263,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":4474,"title":{},"body":{"license.html":{}}}],["modify",{"_index":4246,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4312,"title":{},"body":{"license.html":{}}}],["modularization",{"_index":5185,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["modularize",{"_index":1866,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["module",{"_index":257,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":5974,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":5978,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":5976,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":5942,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":5941,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":5102,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":5891,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":5661,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":5656,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":5082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":5114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":2765,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":5907,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":5906,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":259,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":3303,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":5668,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":5666,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":5667,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/files/files.module",{"_index":3286,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["modules/management/management.module",{"_index":3285,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["moment",{"_index":3959,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":584,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongo.ensureinstance",{"_index":2772,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongo.geturi",{"_index":2773,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongod",{"_index":2791,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["mongodatabasemoduleoptions",{"_index":2759,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb",{"_index":456,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/DatabaseManagementService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongoexport",{"_index":1615,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongoimport",{"_index":1641,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongomemorydatabasemodule",{"_index":2754,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":5922,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":2766,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongomemoryserver.create",{"_index":2771,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":3316,"title":{},"body":{"modules/ServerModule.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":5471,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":3977,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":3729,"title":{},"body":{"injectables/TaskUC.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":4669,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":5816,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mount",{"_index":4111,"title":{},"body":{"index.html":{}}}],["mounted",{"_index":4102,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mounts",{"_index":4918,"title":{},"body":{"todo.html":{}}}],["move",{"_index":3693,"title":{},"body":{"injectables/TaskUC.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moveelement",{"_index":1074,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{}}}],["moveelement(dashboardid",{"_index":1077,"title":{},"body":{"controllers/DashboardController.html":{}}}],["moveelement(from",{"_index":1157,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["moveelementondashboard",{"_index":1447,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementondashboard(dashboardid",{"_index":1453,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementparams",{"_index":1078,"title":{"classes/MoveElementParams.html":{}},"body":{"controllers/DashboardController.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["moveelementposition",{"_index":2800,"title":{"classes/MoveElementPosition.html":{}},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["ms",{"_index":1751,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":2189,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":5495,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":5347,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":2266,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":5386,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":5388,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n",{"_index":565,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["name",{"_index":114,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["named",{"_index":4176,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nameonly",{"_index":1589,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["names",{"_index":1617,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":4968,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":3979,"title":{},"body":{"dependencies.html":{}}}],["native",{"_index":4000,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":4486,"title":{},"body":{"license.html":{}}}],["ne",{"_index":3639,"title":{},"body":{"classes/TaskScope.html":{}}}],["necessary",{"_index":4826,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":2495,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":3709,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neededpermission",{"_index":3420,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["needs",{"_index":5364,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":2213,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":4958,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":5206,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":5211,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console",{"_index":5232,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console:dev",{"_index":5233,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:build",{"_index":5225,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":5228,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":5245,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":5248,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":5205,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":5214,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":5219,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":5216,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":5222,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":5087,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":5240,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":5241,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":5244,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":5090,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":5089,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":5242,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":6026,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["nestexpress.set('feathersapp",{"_index":1993,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["nestinterceptor",{"_index":1746,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":642,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":5268,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1749,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":3882,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":274,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":3884,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":779,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":1748,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{}}}],["nestjs/testing.test",{"_index":5897,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["net",{"_index":4132,"title":{},"body":{"index.html":{}}}],["network",{"_index":4214,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":5507,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":315,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":149,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"classes/CourseMapper.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newelement",{"_index":1248,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["newfactory",{"_index":472,"title":{},"body":{"classes/BaseFactory.html":{}}}],["newgroupname",{"_index":1207,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["newly",{"_index":5714,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["newpropsfactory",{"_index":470,"title":{},"body":{"classes/BaseFactory.html":{}}}],["newrooms",{"_index":1233,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["newrooms.foreach((room",{"_index":1235,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["news",{"_index":908,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":2938,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.controller",{"_index":2970,"title":{},"body":{"modules/NewsModule.html":{}}}],["news.controller.ts",{"_index":3742,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.controller.ts:22",{"_index":3746,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.createdat",{"_index":2944,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":3092,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":2939,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":2936,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":1043,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":3795,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":1064,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":1047,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:28",{"_index":3794,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:29",{"_index":1055,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:37",{"_index":1063,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:44",{"_index":1058,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":2946,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":2940,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":2941,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":2942,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.targetmodel",{"_index":2943,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":2937,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updatedat",{"_index":2945,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":2947,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news:104",{"_index":916,"title":{},"body":{"classes/CourseNews.html":{}}}],["news:110",{"_index":3740,"title":{},"body":{"classes/TeamNews.html":{}}}],["news:31",{"_index":940,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:35",{"_index":917,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:39",{"_index":922,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:42",{"_index":930,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:45",{"_index":935,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:48",{"_index":936,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":938,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":932,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":921,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":942,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":931,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:79",{"_index":945,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:98",{"_index":3251,"title":{},"body":{"classes/SchoolNews.html":{}}}],["news[key",{"_index":3112,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":5680,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":5685,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":2975,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":3090,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":3085,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":2905,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":2907,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["news_view",{"_index":3084,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":2831,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["newscount",{"_index":3100,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsentities",{"_index":3002,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentities.filter((news",{"_index":3009,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentity",{"_index":2999,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsfilterquery",{"_index":2843,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{}}}],["newsid",{"_index":2841,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslist",{"_index":2868,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.length",{"_index":3105,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":2872,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.map(async",{"_index":3102,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslistresponse",{"_index":2857,"title":{"classes/NewsListResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslistresponse(dtolist",{"_index":2873,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper",{"_index":2859,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":2866,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":2870,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":2867,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":2878,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":2959,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":2964,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":2858,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{}}}],["newsscope",{"_index":2994,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{}}}],["newstarget",{"_index":948,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":2983,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["newstargetmodel",{"_index":308,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/enumerations.html":{}}}],["newstargetmodel.course",{"_index":967,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":329,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":970,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newsuc",{"_index":2855,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":3109,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":3097,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newvar",{"_index":160,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["next",{"_index":45,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":3783,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":1840,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["node",{"_index":2103,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":4096,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["nodejs",{"_index":5569,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":3974,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":3976,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":1871,"title":{},"body":{"classes/EncryptedStringType.html":{},"classes/TaskScope.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":4522,"title":{},"body":{"license.html":{}}}],["nonemptytargets",{"_index":3120,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":4359,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":4553,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":5159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":5037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notation",{"_index":482,"title":{},"body":{"classes/BaseFactory.html":{}}}],["note",{"_index":356,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{},"index.html":{}}}],["notfinished",{"_index":3724,"title":{},"body":{"injectables/TaskUC.html":{}}}],["notfound",{"_index":1459,"title":{},"body":{"injectables/DashboardUc.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfound('no",{"_index":1473,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["notfoundexception",{"_index":1165,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["notfoundexception('no",{"_index":1227,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["notfoundexception(`the",{"_index":2751,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["nothing",{"_index":4682,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4332,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4328,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":4670,"title":{},"body":{"license.html":{}}}],["notify",{"_index":4667,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":4615,"title":{},"body":{"license.html":{}}}],["nountildate",{"_index":996,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["november",{"_index":4193,"title":{},"body":{"license.html":{}}}],["now",{"_index":995,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsScope.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now.getfullyear()}_",{"_index":1661,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now.getmonth",{"_index":1662,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now}ms",{"_index":1842,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":4908,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":1948,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/NewsUc.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{}}}],["nullish",{"_index":1870,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["number",{"_index":37,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/BaseFactory.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IPagination.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtPayload.html":{},"classes/LessonFactory.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationError.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":4808,"title":{},"body":{"license.html":{}}}],["numberoffiles",{"_index":1801,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["numberofstudents",{"_index":2488,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["numbers",{"_index":5000,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nuxt",{"_index":5462,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":5186,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["o",{"_index":1511,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":3981,"title":{},"body":{"dependencies.html":{}}}],["oauth2",{"_index":3912,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":419,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign(entity",{"_index":467,"title":{},"body":{"classes/BaseFactory.html":{}}}],["object.assign(this",{"_index":958,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{}}}],["object.entries(params",{"_index":3111,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.setprototypeof(this",{"_index":57,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["object.values(constraint",{"_index":234,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":1070,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":346,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["objectid().tohexstring",{"_index":5147,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["objectid().tostring",{"_index":1432,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["objectid(id",{"_index":468,"title":{},"body":{"classes/BaseFactory.html":{}}}],["objectid.createfromhexstring(id",{"_index":1284,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["objectid.createfromhexstring(props.id",{"_index":1287,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["objectid.isvalid(value",{"_index":3157,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":581,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":4786,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":4536,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":4433,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1833,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obviously",{"_index":5415,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":4521,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":2191,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":4679,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":4583,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["odered",{"_index":3066,"title":{},"body":{"injectables/NewsUc.html":{}}}],["of.ts",{"_index":4994,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":4243,"title":{},"body":{"license.html":{}}}],["offered",{"_index":4543,"title":{},"body":{"license.html":{}}}],["offering",{"_index":4525,"title":{},"body":{"license.html":{}}}],["offers",{"_index":5230,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["official",{"_index":4347,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1007,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskRepo.html":{}}}],["ok/err",{"_index":5743,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":5827,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":4130,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":4270,"title":{},"body":{"license.html":{}}}],["omit",{"_index":2706,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":5290,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1688,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["oneday",{"_index":820,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["ones",{"_index":5652,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onetomany",{"_index":1280,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["onetomany('dashboardgridelementmodel",{"_index":1289,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["onetomany('submission",{"_index":2448,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["oneweekago",{"_index":3734,"title":{},"body":{"injectables/TaskUC.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":3735,"title":{},"body":{"injectables/TaskUC.html":{}}}],["onlyactivecourses",{"_index":1000,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardUc.html":{}}}],["onlyreadcourses",{"_index":3453,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["onlywritecoursesids",{"_index":3452,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["onmoduledestroy",{"_index":2761,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":5404,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":380,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":5933,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":3936,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opencourseids",{"_index":3554,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["opencourses",{"_index":3721,"title":{},"body":{"injectables/TaskUC.html":{}}}],["opencourses.map((c",{"_index":3726,"title":{},"body":{"injectables/TaskUC.html":{}}}],["opened",{"_index":5220,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":4843,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":4529,"title":{},"body":{"license.html":{}}}],["operates",{"_index":5813,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":4368,"title":{},"body":{"license.html":{}}}],["operation",{"_index":4452,"title":{},"body":{"license.html":{}}}],["operations",{"_index":5481,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3255,"title":{},"body":{"classes/Scope.html":{},"license.html":{}}}],["opportunity",{"_index":4793,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":6008,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":4942,"title":{},"body":{"todo.html":{}}}],["optimization",{"_index":5693,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":6014,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":2782,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":190,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":5803,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":1637,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":72,"title":{"interfaces/Options.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/DatabaseManagementConsole.html":{},"modules/EncryptionModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.collection",{"_index":1506,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options.exchange",{"_index":2710,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options.order",{"_index":3099,"title":{},"body":{"injectables/NewsUc.html":{}}}],["options.routingkey",{"_index":2715,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["options.symmetriccipherkey",{"_index":1890,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["options.ts",{"_index":2326,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.uri",{"_index":2712,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options?.collection",{"_index":1505,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options?.override",{"_index":1514,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["ora",{"_index":643,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["ora.ora",{"_index":639,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["order",{"_index":1005,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1010,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["orderby(bsondocuments",{"_index":1729,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["organization",{"_index":4695,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":4293,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":5292,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":4629,"title":{},"body":{"license.html":{}}}],["original",{"_index":4630,"title":{},"body":{"license.html":{}}}],["orm",{"_index":2464,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":5982,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":5279,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":354,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"dependencies.html":{}}}],["orm/core/enums",{"_index":2993,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["orm/entitymanager",{"_index":5914,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":5736,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":355,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":2735,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["os",{"_index":2058,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["os.eol",{"_index":2094,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["others",{"_index":2262,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":2779,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ours",{"_index":5642,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DeleteFilesUc.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":5837,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outdated",{"_index":4921,"title":{},"body":{"todo.html":{}}}],["outgoing",{"_index":5498,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":3271,"title":{},"body":{"classes/ServerConsole.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outside",{"_index":1213,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":5396,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":5959,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":5379,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":5796,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":1498,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":5965,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":5973,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":1892,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":665,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":4996,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":4886,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":5902,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":4724,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":5334,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":2914,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":3546,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["p",{"_index":5193,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["package",{"_index":3869,"title":{"dependencies.html":{}},"body":{"todo.html":{}}}],["packaged",{"_index":4480,"title":{},"body":{"license.html":{}}}],["packages",{"_index":4909,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":4360,"title":{},"body":{"license.html":{}}}],["page",{"_index":3129,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":3135,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":1943,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":1004,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":5614,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination?.limit",{"_index":1009,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskRepo.html":{}}}],["pagination?.skip",{"_index":1008,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskRepo.html":{}}}],["pagination].query.ts",{"_index":5682,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":774,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/CourseController.html":{},"injectables/CourseUc.html":{},"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":870,"title":{"classes/PaginationResponse.html":{}},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["paginationresponse:136",{"_index":2900,"title":{},"body":{"classes/NewsListResponse.html":{}}}],["paginationresponse:14",{"_index":878,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{}}}],["paginationresponse:17",{"_index":877,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{}}}],["paginationresponse:20",{"_index":876,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{}}}],["paginationresponse:59",{"_index":3502,"title":{},"body":{"classes/TaskListResponse.html":{}}}],["paginationresponse:61",{"_index":875,"title":{},"body":{"classes/CourseMetadataListResponse.html":{}}}],["papaparse",{"_index":3984,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":4871,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":4657,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":4735,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":5911,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param",{"_index":328,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BsonConverter.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{}}}],["param('id",{"_index":1099,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{}}}],["param('teamid",{"_index":3749,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["param)).rejects.tothrow(badrequestexception",{"_index":5887,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param)).tothrow(badrequestexception",{"_index":5885,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param.ts",{"_index":5613,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paramdisplayat",{"_index":3091,"title":{},"body":{"injectables/NewsUc.html":{}}}],["parameter",{"_index":2496,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"controllers/NewsController.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":189,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":404,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonFactory.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params(params",{"_index":446,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["params.content",{"_index":2955,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.course",{"_index":2648,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["params.displayat",{"_index":2956,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.from",{"_index":1101,"title":{},"body":{"controllers/DashboardController.html":{}}}],["params.school",{"_index":828,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["params.target",{"_index":3088,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":2958,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":2957,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1107,"title":{},"body":{"controllers/DashboardController.html":{},"classes/NewsMapper.html":{}}}],["params.to",{"_index":1102,"title":{},"body":{"controllers/DashboardController.html":{}}}],["params?.school",{"_index":827,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["param|query].ts",{"_index":5612,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":2483,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{}}}],["parentids",{"_index":3547,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.courseids",{"_index":3593,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.creatorid",{"_index":3591,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.lessonids",{"_index":3595,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope",{"_index":3590,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bycourseids(parentids.courseids",{"_index":3594,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bylessonids(parentids.lessonids",{"_index":3596,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.byonlycreatorid(parentids.creatorid",{"_index":3592,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parents",{"_index":2487,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parentsfinished",{"_index":3562,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsfinished.bycourseids(parentids.finishedcourseids",{"_index":3563,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsfinished.bylessonids(parentids.lessonidsoffinishedcourses",{"_index":3564,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsopen",{"_index":3559,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsopen.bycourseids(parentids.opencourseids",{"_index":3560,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsopen.bylessonids(parentids.lessonidsofopencourses",{"_index":3561,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parse",{"_index":5662,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":5679,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":1088,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":3905,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":5533,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":2510,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":453,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":2807,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":4351,"title":{},"body":{"license.html":{}}}],["parties",{"_index":4320,"title":{},"body":{"license.html":{}}}],["parts",{"_index":4390,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":4530,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":4700,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":5643,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":2259,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/TaskAuthorizationService.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":448,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["passeduser",{"_index":5146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":2587,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":2589,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":2591,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":118,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["past",{"_index":923,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":1087,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{}}}],["patch(':id",{"_index":2853,"title":{},"body":{"controllers/NewsController.html":{}}}],["patch(':id/element",{"_index":1085,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patch(':id/moveelement",{"_index":1079,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroup",{"_index":1075,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroup(dashboardid",{"_index":1082,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroupparams",{"_index":1084,"title":{"classes/PatchGroupParams.html":{}},"body":{"controllers/DashboardController.html":{},"classes/PatchGroupParams.html":{}}}],["patching",{"_index":3160,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["patent",{"_index":4656,"title":{},"body":{"license.html":{}}}],["patents",{"_index":4719,"title":{},"body":{"license.html":{}}}],["path",{"_index":1643,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":5115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.join(...paths",{"_index":2107,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["paths",{"_index":1628,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":887,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":2584,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.ts",{"_index":2576,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["payload.user",{"_index":2603,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":4765,"title":{},"body":{"license.html":{}}}],["peer",{"_index":4538,"title":{},"body":{"license.html":{}}}],["peers",{"_index":4541,"title":{},"body":{"license.html":{}}}],["per",{"_index":5628,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":4822,"title":{},"body":{"license.html":{}}}],["performing",{"_index":4378,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":4665,"title":{},"body":{"license.html":{}}}],["permission",{"_index":927,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":3125,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":310,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":337,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":3124,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissive",{"_index":4462,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4495,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4262,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":4202,"title":{},"body":{"license.html":{}}}],["permittedcourses",{"_index":3436,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permittedlessons",{"_index":3458,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["perpetuity",{"_index":4587,"title":{},"body":{"license.html":{}}}],["persist",{"_index":530,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist(entity",{"_index":543,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persist/make",{"_index":5699,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistall",{"_index":531,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistall(entities",{"_index":545,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistallandflush",{"_index":532,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistallandflush(entities",{"_index":547,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistandflush",{"_index":533,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistandflush(entity",{"_index":549,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persisted",{"_index":562,"title":{},"body":{"injectables/BaseRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":5702,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["persistent",{"_index":2728,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":5794,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":5831,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":4552,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":4784,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":5713,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":4504,"title":{},"body":{"license.html":{}}}],["physically",{"_index":4519,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":4233,"title":{},"body":{"license.html":{}}}],["pin",{"_index":5759,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pipe",{"_index":146,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":3867,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipes",{"_index":5631,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":3155,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["place",{"_index":3710,"title":{},"body":{"injectables/TaskUC.html":{},"injectables/UserUC.html":{},"license.html":{}}}],["plain",{"_index":582,"title":{},"body":{"injectables/BsonConverter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plaintextcontent",{"_index":250,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["plaintextmailcontent",{"_index":248,"title":{"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["platform",{"_index":1857,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["please",{"_index":5449,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":3930,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":4704,"title":{},"body":{"license.html":{}}}],["point",{"_index":1049,"title":{},"body":{"classes/CreateNewsParams.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":4866,"title":{},"body":{"license.html":{}}}],["policy",{"_index":5690,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":4019,"title":{},"body":{"dependencies.html":{}}}],["populate",{"_index":3005,"title":{},"body":{"injectables/NewsRepo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":951,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["port",{"_index":5199,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":4546,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1154,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["pos.x",{"_index":1210,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["pos.y",{"_index":1214,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["position",{"_index":1142,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["position.groupindex",{"_index":1254,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["positionfromgridindex",{"_index":1122,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["positionfromgridindex(index",{"_index":1159,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["possesses",{"_index":4516,"title":{},"body":{"license.html":{}}}],["possession",{"_index":4478,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":4845,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":4129,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1534,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post('export",{"_index":1527,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('export/:collectionname",{"_index":1524,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('seed/:collectionname",{"_index":1530,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post(`${this.options.uri}${path",{"_index":154,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["post(`${this.options.uri}/api/v1/login",{"_index":161,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["post(path",{"_index":153,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["postasadmin(path",{"_index":126,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["povider",{"_index":4933,"title":{},"body":{"todo.html":{}}}],["power",{"_index":4445,"title":{},"body":{"license.html":{}}}],["pr",{"_index":4145,"title":{},"body":{"index.html":{}}}],["practical",{"_index":4216,"title":{},"body":{"license.html":{}}}],["practice",{"_index":4739,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":5994,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":4939,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":4207,"title":{},"body":{"license.html":{}}}],["precise",{"_index":4277,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4090,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":4701,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":5797,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":5846,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":4343,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":770,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"index.html":{},"todo.html":{}}}],["preloaded",{"_index":6027,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":6025,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prepare",{"_index":2682,"title":{},"body":{"injectables/Logger.html":{}}}],["prepended",{"_index":4126,"title":{},"body":{"index.html":{}}}],["present",{"_index":4800,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["presentation",{"_index":5350,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":4336,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":4625,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":5253,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["prevent",{"_index":372,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["prevented",{"_index":4581,"title":{},"body":{"license.html":{}}}],["previous",{"_index":4703,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":4229,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":4767,"title":{},"body":{"license.html":{}}}],["primarykey",{"_index":348,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["primaryrolesearchoperation",{"_index":2365,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["primaryrolesearchoperation'})@unique",{"_index":3203,"title":{},"body":{"classes/Role.html":{}}}],["principle",{"_index":5910,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":5291,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":5745,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["prior",{"_index":1796,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"license.html":{}}}],["prisma",{"_index":6010,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["private",{"_index":35,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtStrategy.html":{},"classes/LessonScope.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserUC.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["privatedevice",{"_index":2629,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["problem",{"_index":4159,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":4804,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedures",{"_index":4577,"title":{},"body":{"license.html":{}}}],["process",{"_index":5500,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":5587,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":5527,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":5402,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":4757,"title":{},"body":{"license.html":{}}}],["produce",{"_index":4370,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":5791,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":4505,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":4941,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":4768,"title":{},"body":{"license.html":{}}}],["program",{"_index":4224,"title":{},"body":{"license.html":{}}}],["program's",{"_index":4455,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":4878,"title":{},"body":{"license.html":{}}}],["programming",{"_index":4352,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":4234,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":4415,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":4442,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":4762,"title":{},"body":{"license.html":{}}}],["project",{"_index":4174,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":3988,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":3990,"title":{},"body":{"dependencies.html":{}}}],["prominent",{"_index":4339,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":4331,"title":{},"body":{"license.html":{}}}],["promise",{"_index":77,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promise((resolve",{"_index":1752,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1375,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsUc.html":{},"injectables/RoleUC.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/variables.html":{}}}],["promise.all(gridelement.getreferences().map((ref",{"_index":1400,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["promise.all(referencemodels.map((ref",{"_index":1367,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["promise.resolve",{"_index":2106,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["promise.resolve(currentuser.user",{"_index":3814,"title":{},"body":{"controllers/UserController.html":{}}}],["promises",{"_index":2085,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":3929,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":4301,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":4686,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":4313,"title":{},"body":{"license.html":{}}}],["properly",{"_index":4077,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["properties)mongodb",{"_index":6007,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["propertiestopopulate",{"_index":2124,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{}}}],["property",{"_index":352,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["property()@index({name",{"_index":3202,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["property({fieldname",{"_index":3324,"title":{},"body":{"classes/StorageProvider.html":{}}}],["property({onupdate",{"_index":387,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["propertydecorator",{"_index":4078,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":459,"title":{},"body":{"classes/BaseFactory.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardModelEntity.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.accesskeyid",{"_index":2382,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["props.availabledate",{"_index":2452,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.bucket",{"_index":522,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.color",{"_index":756,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.colums",{"_index":1216,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["props.comment",{"_index":2415,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.content",{"_index":955,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.course",{"_index":843,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.creator",{"_index":526,"title":{},"body":{"classes/BaseFile.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{}}}],["props.deletedat",{"_index":518,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.description",{"_index":746,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.displayat",{"_index":957,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.duedate",{"_index":2454,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.email",{"_index":2531,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.endpointurl",{"_index":2380,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["props.externalid",{"_index":962,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.firstname",{"_index":2527,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.grade",{"_index":2419,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.gradecomment",{"_index":2421,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.grid.foreach((element",{"_index":1218,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["props.hidden",{"_index":2343,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{}}}],["props.id",{"_index":1189,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{}}}],["props.lastname",{"_index":2529,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.lesson",{"_index":2458,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.name",{"_index":744,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"classes/Lesson.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{}}}],["props.permissions",{"_index":2368,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.private",{"_index":2455,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.references.sort(this.sortreferences",{"_index":1191,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["props.region",{"_index":2386,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["props.roles",{"_index":2370,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.school",{"_index":749,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["props.secretaccesskey",{"_index":2384,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["props.source",{"_index":964,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.sourcedescription",{"_index":966,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.startdate",{"_index":760,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.storagefilename",{"_index":520,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.storageprovider",{"_index":524,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.student",{"_index":2413,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.students",{"_index":750,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["props.substitutionteachers",{"_index":754,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.target",{"_index":960,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.task",{"_index":2417,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.teachers",{"_index":752,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.title",{"_index":953,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.untildate",{"_index":758,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.updater",{"_index":959,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.user",{"_index":1288,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["props.userid",{"_index":1222,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["propsfactory",{"_index":397,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["protect",{"_index":4238,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":396,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":4424,"title":{},"body":{"license.html":{}}}],["protection",{"_index":4467,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":5284,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":4603,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prototype",{"_index":55,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["prove",{"_index":4823,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":1759,"title":{},"body":{"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"modules/ValidationModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":324,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":2685,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provides",{"_index":2680,"title":{},"body":{"injectables/Logger.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":663,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":4616,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":4662,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":4811,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":4812,"title":{},"body":{"license.html":{}}}],["public",{"_index":73,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DelayController.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/ServerController.html":{},"injectables/SymetricKeyEncryptionService.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":4631,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4268,"title":{},"body":{"license.html":{}}}],["publish",{"_index":4459,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1054,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":4144,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["pulled",{"_index":5443,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":4058,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["purposes",{"_index":4556,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":4755,"title":{},"body":{"license.html":{}}}],["put",{"_index":4902,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":5701,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qs",{"_index":3993,"title":{},"body":{"dependencies.html":{}}}],["qualify",{"_index":4675,"title":{},"body":{"license.html":{}}}],["quality",{"_index":4821,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":3041,"title":{},"body":{"classes/NewsScope.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":3045,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":5511,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":777,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonScope.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query('x",{"_index":1104,"title":{},"body":{"controllers/DashboardController.html":{}}}],["query('y",{"_index":1105,"title":{},"body":{"controllers/DashboardController.html":{}}}],["query.targetid",{"_index":2952,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":2950,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":2954,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":5678,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["query/empty",{"_index":3260,"title":{},"body":{"classes/Scope.html":{}}}],["queryoptions",{"_index":1006,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["queryordermap",{"_index":985,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["querys",{"_index":3320,"title":{},"body":{"modules/ServerModule.html":{}}}],["rabbitmq",{"_index":2700,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["rabbitmq:3.8.9",{"_index":5196,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmq_url",{"_index":5189,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmqmodule",{"_index":2698,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmodule.forroot(rabbitmqmodule",{"_index":2708,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmoduleoptions",{"_index":2705,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["random",{"_index":2054,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["rates",{"_index":5473,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["react",{"_index":3931,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":2067,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"controllers/NewsController.html":{},"injectables/TaskAuthorizationService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":4501,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readcourseids",{"_index":3448,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readcourses",{"_index":3443,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readcourses.map((c",{"_index":3449,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readdir",{"_index":2039,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readdir(folderpath",{"_index":2061,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile",{"_index":2040,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile(filepath",{"_index":2065,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readily",{"_index":4744,"title":{},"body":{"license.html":{}}}],["reading",{"_index":4607,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readlessons",{"_index":3455,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readonly",{"_index":71,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"injectables/JwtStrategy.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["ready",{"_index":5729,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":5909,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["really",{"_index":725,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["reason",{"_index":4753,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4517,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":4673,"title":{},"body":{"license.html":{}}}],["receive",{"_index":4232,"title":{},"body":{"license.html":{}}}],["received",{"_index":4483,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":4691,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":4759,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":4586,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":4751,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":253,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["recognized",{"_index":4348,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":6041,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":6035,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":6033,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["record",{"_index":30,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/ValidationError.html":{},"miscellaneous/typealiases.html":{}}}],["recursively",{"_index":2075,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["red",{"_index":4931,"title":{},"body":{"todo.html":{}}}],["redis",{"_index":2623,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"dependencies.html":{}}}],["redisidentifier",{"_index":2630,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["redistribute",{"_index":4860,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":5411,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":5543,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":4075,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactor",{"_index":1434,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["refactoring",{"_index":5815,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":5441,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refer",{"_index":5711,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":950,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reference.getmetadata",{"_index":1199,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referenced",{"_index":939,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["referencedid",{"_index":1178,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referenceforindex",{"_index":1257,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referenceids",{"_index":1275,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["referencemodels",{"_index":1365,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["references",{"_index":1188,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["references[position.groupindex",{"_index":1258,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referring",{"_index":4228,"title":{},"body":{"license.html":{}}}],["refers",{"_index":4283,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":3997,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":5718,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":4788,"title":{},"body":{"license.html":{}}}],["regard",{"_index":4612,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":4122,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":4479,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["regenerate",{"_index":4391,"title":{},"body":{"license.html":{}}}],["regex",{"_index":5088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["region",{"_index":2020,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["registernewuser(creatorid",{"_index":5751,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["regularfiles",{"_index":2147,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["reimplement",{"_index":5940,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":4661,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":5950,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["related",{"_index":1057,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":5734,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":6019,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":5227,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":2512,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{}}}],["relative",{"_index":1642,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["release",{"_index":5927,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":4275,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":4265,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":4472,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":4276,"title":{},"body":{"license.html":{}}}],["relies",{"_index":5692,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":4950,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":4743,"title":{},"body":{"license.html":{}}}],["remain",{"_index":4535,"title":{},"body":{"license.html":{}}}],["remains",{"_index":4226,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":4790,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":4792,"title":{},"body":{"license.html":{}}}],["removal",{"_index":4613,"title":{},"body":{"license.html":{}}}],["remove",{"_index":534,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/DeleteFilesConsole.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/StorageProviderRepo.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remove(entity",{"_index":551,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeall",{"_index":535,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeall(entities",{"_index":553,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeallandflush",{"_index":536,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeallandflush(entities",{"_index":555,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeandflush",{"_index":537,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeandflush(entity",{"_index":557,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removed",{"_index":1795,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["removedeletedfilesdata",{"_index":1765,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{}}}],["removedeletedfilesdata(removedsince",{"_index":1792,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["removedeletedfilesdata(removedsincedays",{"_index":1769,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removedirrecursive",{"_index":2041,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removedirrecursive(folderpath",{"_index":2072,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removedsince",{"_index":1782,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{}}}],["removedsince.setdate(removedsince.getdate",{"_index":1783,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removedsincedays",{"_index":1776,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removefromposition",{"_index":1123,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["removefromposition(position",{"_index":1161,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removegroupmoderator(groupname",{"_index":103,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["removereference",{"_index":2274,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removereference(index",{"_index":1174,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removes",{"_index":2074,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["rename",{"_index":2449,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["renamegroupondashboard",{"_index":1448,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["renamegroupondashboard(dashboardid",{"_index":1455,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["rendered",{"_index":4069,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["repair",{"_index":4828,"title":{},"body":{"license.html":{}}}],["repeats",{"_index":2746,"title":{},"body":{"modules/ManagementModule.html":{}}}],["replace",{"_index":3715,"title":{},"body":{"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":4953,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replacing",{"_index":5784,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":4936,"title":{},"body":{"todo.html":{}}}],["replyto",{"_index":256,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["repo",{"_index":3849,"title":{},"body":{"injectables/UserUC.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec",{"_index":1014,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["repo.integration.spec.js",{"_index":5916,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":5621,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reponse",{"_index":6001,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["report",{"_index":1508,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":5810,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":5366,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":5932,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":4913,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":4088,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":4573,"title":{},"body":{"license.html":{}}}],["representation",{"_index":5256,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["req",{"_index":5967,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":5969,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request",{"_index":1960,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).delete(`/news/${newsid}`).expect(404",{"_index":5996,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":5987,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request.user",{"_index":2605,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request.user.user",{"_index":2606,"title":{},"body":{"injectables/JwtStrategy.html":{},"todo.html":{}}}],["request/response",{"_index":5466,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":5474,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":3773,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":2752,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":2538,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":3780,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":4385,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../../src/services/authentication/logic/whitelist",{"_index":2625,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":2550,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":2160,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":5122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('rimraf",{"_index":2090,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["require('ts",{"_index":5120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1502,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtValidationAdapter.html":{},"interfaces/Options.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["requiredpermissions",{"_index":3108,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":4473,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":4537,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":1997,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/TaskUC.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":4296,"title":{},"body":{"license.html":{}}}],["reset",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{}}}],["resolved",{"_index":3852,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{}}}],["resolved.permissions",{"_index":3855,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolved.roles",{"_index":3856,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolveduser",{"_index":2601,"title":{"classes/ResolvedUser.html":{}},"body":{"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{}}}],["resolvedusermapper",{"_index":3171,"title":{"classes/ResolvedUserMapper.html":{}},"body":{"classes/ResolvedUserMapper.html":{},"injectables/UserUC.html":{}}}],["resolvedusermapper.maptoresponse(user",{"_index":3854,"title":{},"body":{"injectables/UserUC.html":{},"miscellaneous/variables.html":{}}}],["resolvepermissionsbyroles",{"_index":3225,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsbyroles(inputroles",{"_index":3228,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsfromsubrolesbyid",{"_index":3211,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolvepermissionsfromsubrolesbyid(id",{"_index":3217,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolves",{"_index":2987,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resolveuser",{"_index":3816,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resolveuser(userid",{"_index":3819,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resources",{"_index":5928,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":4449,"title":{},"body":{"license.html":{}}}],["respond",{"_index":4964,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":2845,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":38,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":5988,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":2242,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":5616,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response?.data",{"_index":152,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["response].ts",{"_index":5615,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsejson",{"_index":164,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["responsejson.data.authtoken",{"_index":166,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["responsejson.data.userid",{"_index":165,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["responses",{"_index":5400,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":5676,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":5326,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":4692,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":5698,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":5160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ressources",{"_index":5207,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":4965,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":1826,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":5554,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":5461,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restricted",{"_index":1806,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/NewsUc.html":{}}}],["restricting",{"_index":4443,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":4648,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":4646,"title":{},"body":{"license.html":{}}}],["result",{"_index":799,"title":{},"body":{"controllers/CourseController.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DatabaseManagementService.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/NewsScope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["result.push(room",{"_index":1241,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["result.query",{"_index":3261,"title":{},"body":{"classes/Scope.html":{}}}],["result.query.ts",{"_index":5030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resultelement",{"_index":1230,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["resulting",{"_index":4259,"title":{},"body":{"license.html":{}}}],["results",{"_index":172,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":4590,"title":{},"body":{"license.html":{}}}],["retention",{"_index":5535,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":2849,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":5581,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":5547,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":78,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtStrategy.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":426,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["returning",{"_index":3506,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["returns",{"_index":199,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"modules/RocketChatModule.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["retvalue",{"_index":5860,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":5297,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":5630,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":5414,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":4059,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reverted",{"_index":4076,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reviewers",{"_index":4170,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":4849,"title":{},"body":{"license.html":{}}}],["revised",{"_index":4798,"title":{},"body":{"license.html":{}}}],["rewindsequence",{"_index":405,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["rich",{"_index":5717,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":3847,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{}}}],["rights",{"_index":4239,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":2089,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"dependencies.html":{}}}],["rimraf.sync(folderpath",{"_index":2105,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["risk",{"_index":4820,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":3198,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["rocket_chat_options",{"_index":3200,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["rocketchat",{"_index":39,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":5409,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchaterror",{"_index":32,"title":{"classes/RocketChatError.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchaterror(e",{"_index":150,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchaterror.prototype",{"_index":58,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchatmodule",{"_index":3194,"title":{"modules/RocketChatModule.html":{}},"body":{"modules/RocketChatModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["rocketchatmodule.forroot",{"_index":3310,"title":{},"body":{"modules/ServerModule.html":{}}}],["rocketchatoptions",{"_index":23,"title":{"interfaces/RocketChatOptions.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchatservice",{"_index":68,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{}}}],["role",{"_index":2312,"title":{"classes/Role.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":2522,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["role.id",{"_index":3189,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["role.name",{"_index":3188,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role.permissions",{"_index":3234,"title":{},"body":{"injectables/RoleUC.html":{}}}],["role.uc",{"_index":3846,"title":{},"body":{"injectables/UserUC.html":{}}}],["role/permissions",{"_index":5465,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rolefactory",{"_index":5040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roleidbasedsearches",{"_index":2524,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["roleidbasedsearches'})@manytomany('role",{"_index":3801,"title":{},"body":{"classes/User.html":{}}}],["roleids",{"_index":5149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rolerepo",{"_index":3206,"title":{"injectables/RoleRepo.html":{}},"body":{"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["roles",{"_index":2309,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/User.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles.foreach((role",{"_index":3233,"title":{},"body":{"injectables/RoleUC.html":{}}}],["roles.map((role",{"_index":3187,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["roleuc",{"_index":3223,"title":{"injectables/RoleUC.html":{}},"body":{"injectables/RoleUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["rom",{"_index":4593,"title":{},"body":{"license.html":{}}}],["room",{"_index":1134,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["roomname",{"_index":93,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rooms",{"_index":1138,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["rooms.foreach((room",{"_index":1239,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["root",{"_index":366,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"index.html":{}}}],["rootdir",{"_index":5083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roots",{"_index":5112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roughly",{"_index":5937,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":1744,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":4113,"title":{},"body":{"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routingkey",{"_index":2704,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["royalty",{"_index":4708,"title":{},"body":{"license.html":{}}}],["rss",{"_index":934,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":5738,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":4602,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":4108,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":5890,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":3767,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":4100,"title":{},"body":{"index.html":{},"license.html":{}}}],["runtime",{"_index":5899,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":1836,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":21,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2015,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["s3client",{"_index":2011,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["safest",{"_index":4862,"title":{},"body":{"license.html":{}}}],["safety",{"_index":4131,"title":{},"body":{"index.html":{}}}],["sale",{"_index":4717,"title":{},"body":{"license.html":{}}}],["same",{"_index":4392,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":1931,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":1992,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["samplecontroller",{"_index":5904,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":5650,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sampleservice",{"_index":5905,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":5788,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":4063,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sanitize",{"_index":4005,"title":{},"body":{"dependencies.html":{}}}],["sanitizer",{"_index":4904,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":333,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":323,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":5243,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["saying",{"_index":4533,"title":{},"body":{"license.html":{}}}],["sc",{"_index":4150,"title":{},"body":{"index.html":{}}}],["scans",{"_index":1636,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["scenarios",{"_index":5435,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schedules",{"_index":1794,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["schema",{"_index":734,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":5619,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":5620,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":5130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":678,"title":{"classes/School.html":{}},"body":{"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school._id",{"_index":5148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school.entity",{"_index":723,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["school.factory",{"_index":818,"title":{},"body":{"classes/CourseFactory.html":{}}}],["school.id",{"_index":5152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schoolfactory",{"_index":817,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["schoolfactory.build",{"_index":829,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["schoolid",{"_index":699,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolinfo",{"_index":3243,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.id",{"_index":3244,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":3245,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":2929,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":2934,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":2901,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{}}}],["schoolnews",{"_index":973,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["schoolnews(props",{"_index":972,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schoolnewsfactory",{"_index":5043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schools",{"_index":2300,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ISchoolProperties.html":{},"classes/School.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schould",{"_index":1051,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":1863,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":1755,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope",{"_index":986,"title":{"classes/Scope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.addquery(allforcreator.query",{"_index":3585,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.addquery(allforfinishedcoursesandlessons.query",{"_index":3584,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.addquery(closedforopencoursesandlessons.query",{"_index":3583,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.addquery(parentidscope.query",{"_index":3597,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.afterduedateornone(filters.afterduedateornone",{"_index":3604,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bycourseids(courseids",{"_index":2656,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bydraft(filters.draft",{"_index":3602,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byfinished(filters.finished.userid",{"_index":3599,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byhidden(filters.hidden",{"_index":2658,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bytargets(targets",{"_index":2995,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":2996,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.foractivecourses",{"_index":1003,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.forallgrouptypes(userid",{"_index":1001,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.forteacher(userid",{"_index":1015,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.query",{"_index":1012,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/LessonRepo.html":{},"injectables/TaskRepo.html":{}}}],["scope.request",{"_index":1984,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":3117,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.targetid",{"_index":3751,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.targetmodel",{"_index":3752,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.transient",{"_index":2674,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":2662,"title":{},"body":{"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope.ts:10",{"_index":2668,"title":{},"body":{"classes/LessonScope.html":{}}}],["scope.ts:15",{"_index":3638,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:23",{"_index":3039,"title":{},"body":{"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope.ts:29",{"_index":3630,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:37",{"_index":3636,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:43",{"_index":3633,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:5",{"_index":2666,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["scope.ts:52",{"_index":3629,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:8",{"_index":3037,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope:11",{"_index":1022,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:25",{"_index":1030,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:9",{"_index":1024,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope?.target",{"_index":3114,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":3096,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scoped",{"_index":3434,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["scopeid",{"_index":1938,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopeoperator",{"_index":1021,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["scopepermission",{"_index":3432,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["scopepermissions",{"_index":3431,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["scopes",{"_index":2850,"title":{},"body":{"controllers/NewsController.html":{}}}],["scripts",{"_index":4374,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":3898,"title":{},"body":{"dependencies.html":{}}}],["sdk/client",{"_index":2014,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["search",{"_index":5517,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchuserforschool",{"_index":2525,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["searchuserforschool'})@manytoone('school",{"_index":3803,"title":{},"body":{"classes/User.html":{}}}],["second",{"_index":5795,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":4304,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":4247,"title":{},"body":{"license.html":{}}}],["secret",{"_index":2548,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretaccesskey",{"_index":2026,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":2595,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":4421,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":4499,"title":{},"body":{"license.html":{}}}],["security",{"_index":5368,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":211,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/DashboardRepo.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"classes/LessonFactory.html":{},"modules/ServerModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":1492,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application.html":{}}}],["seedcollections",{"_index":1480,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["seedcollections(options",{"_index":1491,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["seeddata",{"_index":5850,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seeddatabasecollectionsfromfilesystem",{"_index":1607,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["seeddatabasecollectionsfromfilesystem(collections",{"_index":1639,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount",{"_index":1697,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount.push(`${collectionname}:${importeddocumentsamount",{"_index":1718,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seems",{"_index":4954,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":4928,"title":{},"body":{"todo.html":{}}}],["self",{"_index":5302,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":4733,"title":{},"body":{"license.html":{}}}],["selling",{"_index":4716,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":4285,"title":{},"body":{"license.html":{}}}],["send",{"_index":2717,"title":{},"body":{"injectables/MailService.html":{},"additional-documentation/nestjs-application.html":{}}}],["send(data",{"_index":2722,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["sends",{"_index":5760,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":5378,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":5584,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":1905,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":4907,"title":{},"body":{"todo.html":{}}}],["sentry/node",{"_index":3886,"title":{},"body":{"dependencies.html":{}}}],["separable",{"_index":4545,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2678,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["separated",{"_index":4155,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["separately",{"_index":4482,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":5516,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":5776,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":5296,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":4098,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["seperation",{"_index":4097,"title":{},"body":{"index.html":{}}}],["sequence",{"_index":406,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["sequence}@example.com",{"_index":5180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serialization",{"_index":1845,"title":{},"body":{"classes/EncryptedStringType.html":{},"todo.html":{}}}],["serialize",{"_index":573,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["serialize(documents",{"_index":586,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serialized",{"_index":6029,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":350,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["serializes",{"_index":588,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serve",{"_index":4007,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["served",{"_index":5260,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":1756,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.console",{"_index":3287,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["server.controller",{"_index":3304,"title":{},"body":{"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":4957,"title":{},"body":{"todo.html":{}}}],["server/pull/2729#pullrequestreview",{"_index":4926,"title":{},"body":{"todo.html":{}}}],["serverconsole",{"_index":3267,"title":{"classes/ServerConsole.html":{}},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{}}}],["serverconsolemodule",{"_index":3279,"title":{"modules/ServerConsoleModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["servercontroller",{"_index":3288,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{}}}],["servererrortypes",{"_index":5044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":5782,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":3291,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":4260,"title":{},"body":{"license.html":{}}}],["serves",{"_index":4363,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":645,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"injectables/TaskUC.html":{},"injectables/UserUC.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":1941,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":5947,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":5670,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":1937,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":1966,"title":{},"body":{"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":1969,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:13",{"_index":1977,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:19",{"_index":1975,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:33",{"_index":2001,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:36",{"_index":2002,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":5623,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":1959,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":4827,"title":{},"body":{"license.html":{}}}],["set",{"_index":54,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/InterceptorModule.html":{},"classes/LessonFactory.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["set(gradeduserids)].length",{"_index":2481,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["set(permissions",{"_index":3235,"title":{},"body":{"injectables/RoleUC.html":{}}}],["set(submitteduserids)].length",{"_index":2473,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["setcontext",{"_index":2686,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":5126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setgroupname",{"_index":2275,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["setgroupname(newgroupname",{"_index":1177,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["setlearnrooms",{"_index":1124,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["setlearnrooms(rooms",{"_index":1163,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["sets",{"_index":5912,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":3777,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":1753,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":5068,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["settings",{"_index":5677,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":5125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1499,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"interfaces/Options.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setupentities",{"_index":5045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setuppath",{"_index":1694,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["setuserstatus(authtoken",{"_index":81,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["setversion('3.0",{"_index":5128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":4427,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":4219,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":4381,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":224,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":782,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{}}}],["shared/controller/transformer",{"_index":2896,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":5637,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":326,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/JwtPayload.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"modules/ServerModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"todo.html":{}}}],["shared/domain/entity",{"_index":3496,"title":{},"body":{"classes/TaskFactory.html":{}}}],["shared/domain/entity/base.entity",{"_index":1281,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["shared/domain/interface",{"_index":720,"title":{},"body":{"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{}}}],["shared/domain/types",{"_index":1167,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"injectables/NewsUc.html":{}}}],["shared/infra/console",{"_index":2739,"title":{},"body":{"modules/ManagementModule.html":{},"classes/ServerConsole.html":{}}}],["shared/infra/console/console",{"_index":1495,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{}}}],["shared/infra/database",{"_index":1651,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["shared/infra/feathers",{"_index":294,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/FeathersAuthProvider.html":{}}}],["shared/infra/file",{"_index":1649,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["shared/infra/filestorage",{"_index":2120,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesRepo.html":{}}}],["shared/infra/mail",{"_index":3296,"title":{},"body":{"modules/ServerModule.html":{}}}],["shared/pipes",{"_index":5663,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":1038,"title":{},"body":{"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"modules/LearnroomModule.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"injectables/RoleUC.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{}}}],["shared/repo/base.repo",{"_index":2992,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/repo/types/encryptedstring.type",{"_index":2377,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["shared/utils",{"_index":5638,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":5659,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":5641,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shit",{"_index":726,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["short",{"_index":890,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["shortid",{"_index":3973,"title":{},"body":{"dependencies.html":{}}}],["shorttitle",{"_index":880,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["show",{"_index":3067,"title":{},"body":{"injectables/NewsUc.html":{}}}],["shows",{"_index":5320,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":5393,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":4879,"title":{},"body":{"license.html":{}}}],["signature",{"_index":5566,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":4574,"title":{},"body":{"license.html":{}}}],["similar",{"_index":4272,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":5380,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":4971,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":5540,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplify",{"_index":5857,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simply",{"_index":4123,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simulates",{"_index":5983,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":4783,"title":{},"body":{"license.html":{}}}],["single",{"_index":1504,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":5381,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["six",{"_index":2053,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["sizetype",{"_index":1291,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["skip",{"_index":797,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":2264,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{}}}],["slash",{"_index":4962,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":1706,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":6038,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":2205,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":4010,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":5457,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["software",{"_index":4197,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":4557,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4406,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4418,"title":{},"body":{"license.html":{}}}],["solid",{"_index":5997,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":5339,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":4875,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["something",{"_index":5789,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":5792,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sort",{"_index":1726,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["sortedbsondocuments",{"_index":1728,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["sorting",{"_index":3548,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["sorting.ts",{"_index":4922,"title":{},"body":{"todo.html":{}}}],["sortorder",{"_index":1037,"title":{},"body":{"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.asc",{"_index":1464,"title":{},"body":{"injectables/DashboardUc.html":{},"injectables/TaskUC.html":{}}}],["sortorder.desc",{"_index":1040,"title":{},"body":{"injectables/CourseUc.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["sortordermap",{"_index":2327,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/typealiases.html":{}}}],["sortreferences",{"_index":1181,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":5606,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":913,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":5217,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":2906,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":5308,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":5556,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":5574,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":4514,"title":{},"body":{"license.html":{}}}],["speak",{"_index":4227,"title":{},"body":{"license.html":{}}}],["spec",{"_index":5062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec.ts",{"_index":5086,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":5092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":4605,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":40,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":4210,"title":{},"body":{"license.html":{}}}],["specification",{"_index":5463,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":5700,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":4350,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":4807,"title":{},"body":{"license.html":{}}}],["specify",{"_index":2778,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["spinner",{"_index":635,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["spirit",{"_index":4799,"title":{},"body":{"license.html":{}}}],["split",{"_index":5352,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spy",{"_index":5943,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":5934,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":5494,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":6018,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":5521,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":5096,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":5084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/config",{"_index":2740,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/core",{"_index":3299,"title":{},"body":{"modules/ServerModule.html":{}}}],["src/core/error/dto/error.response",{"_index":612,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":613,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger",{"_index":1777,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/FilesModule.html":{},"classes/GlobalErrorFilter.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["src/core/logger/logger.service",{"_index":1797,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["src/modules/authentication/decorator/auth.decorator",{"_index":781,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["src/modules/authorization",{"_index":2967,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/modules/authorization/authorization.service",{"_index":3083,"title":{},"body":{"injectables/NewsUc.html":{}}}],["src/modules/database",{"_index":5920,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["src/modules/files",{"_index":3302,"title":{},"body":{"modules/ServerModule.html":{}}}],["src/modules/learnroom",{"_index":3298,"title":{},"body":{"modules/ServerModule.html":{}}}],["src/modules/news",{"_index":3301,"title":{},"body":{"modules/ServerModule.html":{}}}],["src/modules/rocketchat",{"_index":3297,"title":{},"body":{"modules/ServerModule.html":{}}}],["src/modules/task",{"_index":3300,"title":{},"body":{"modules/ServerModule.html":{}}}],["src/modules/user",{"_index":277,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/ServerModule.html":{}}}],["stable",{"_index":5304,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":2219,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["standard",{"_index":4346,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":4349,"title":{},"body":{"license.html":{}}}],["start",{"_index":891,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["startdate",{"_index":679,"title":{},"body":{"classes/Course.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ICourseProperties.html":{}}}],["started",{"_index":3714,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"injectables/TaskUC.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":4091,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["starts",{"_index":5198,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":2207,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":5783,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":4864,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stated",{"_index":4397,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":4650,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":5107,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["static",{"_index":403,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/CourseMapper.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"classes/LessonFactory.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"modules/RocketChatModule.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"classes/TaskStatusMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":4461,"title":{},"body":{"license.html":{}}}],["status",{"_index":82,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["status.mapper",{"_index":3515,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.mapper.ts",{"_index":3646,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["status.mapper.ts:5",{"_index":3648,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["status.response",{"_index":3505,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{}}}],["status.response.ts",{"_index":3652,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:13",{"_index":3658,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:16",{"_index":3657,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:19",{"_index":3654,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:22",{"_index":3655,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:25",{"_index":3656,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:3",{"_index":3653,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["statuscode",{"_index":36,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["statusdto",{"_index":3518,"title":{},"body":{"classes/TaskMapper.html":{}}}],["stay",{"_index":5335,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":5770,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":4241,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":5824,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":5706,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":2795,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["storage",{"_index":4490,"title":{},"body":{"license.html":{}}}],["storagefilename",{"_index":503,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["storageprovider",{"_index":499,"title":{"classes/StorageProvider.html":{}},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["storageprovider.accesskeyid",{"_index":2025,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.endpointurl",{"_index":2018,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.entity",{"_index":500,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["storageprovider.region",{"_index":2021,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.secretaccesskey",{"_index":2027,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderclient",{"_index":2028,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderclient.send(deletioncommand",{"_index":2031,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderfactory",{"_index":5047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageproviderfactory.build",{"_index":5155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageproviderid",{"_index":514,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["storageproviderrepo",{"_index":2118,"title":{"injectables/StorageProviderRepo.html":{}},"body":{"modules/FilesModule.html":{},"injectables/StorageProviderRepo.html":{},"overview.html":{}}}],["storageproviders",{"_index":2378,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["store",{"_index":5502,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":5418,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":5576,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["story",{"_index":5936,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":4989,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":5060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":2586,"title":{},"body":{"injectables/JwtStrategy.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt",{"_index":281,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":278,"title":{},"body":{"modules/AuthModule.html":{}}}],["strict",{"_index":5998,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["strictly",{"_index":5294,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":1873,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/Logger.html":{},"miscellaneous/functions.html":{}}}],["stringtoboolean",{"_index":2895,"title":{},"body":{"classes/NewsFilterQuery.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":4014,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":1963,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":6040,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":5599,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":5600,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":2684,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stucture",{"_index":4920,"title":{},"body":{"todo.html":{}}}],["student",{"_index":2393,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["studentdashboard",{"_index":3681,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["studentfiles",{"_index":2394,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["studentid",{"_index":2404,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["students",{"_index":680,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"injectables/SubmissionRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["studio",{"_index":4141,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":4182,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":5318,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sub",{"_index":2563,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":4698,"title":{},"body":{"license.html":{}}}],["subelements",{"_index":1299,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["subject",{"_index":246,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["sublicenses",{"_index":4729,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":4420,"title":{},"body":{"license.html":{}}}],["submission",{"_index":2401,"title":{"classes/Submission.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["submission.entity",{"_index":2433,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submission.getstudentid",{"_index":2470,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submission.isgraded",{"_index":2477,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submissionfactory",{"_index":3340,"title":{"classes/SubmissionFactory.html":{}},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["submissionfactory.define(submission",{"_index":3347,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["submissionrepo",{"_index":3350,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{}}}],["submissions",{"_index":2400,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{}}}],["submissions.map((submission",{"_index":2469,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submitted",{"_index":2435,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["submitteduserids",{"_index":2468,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["subprograms",{"_index":4384,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":4523,"title":{},"body":{"license.html":{}}}],["subset",{"_index":5239,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["substantial",{"_index":4569,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":4696,"title":{},"body":{"license.html":{}}}],["substitutionids",{"_index":706,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["substitutionteachers",{"_index":681,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["succeed",{"_index":5877,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["successfully",{"_index":1816,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["such",{"_index":1474,"title":{},"body":{"injectables/DashboardUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":4741,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":4578,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":313,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":4970,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":4894,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["suites",{"_index":5237,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["super",{"_index":205,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(e.response.statustext",{"_index":53,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["super(em",{"_index":2143,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["super(total",{"_index":895,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["super(type",{"_index":227,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["supertest",{"_index":5894,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":4608,"title":{},"body":{"license.html":{}}}],["support",{"_index":2556,"title":{},"body":{"interfaces/JwtConstants.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":2565,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":5351,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":5183,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":457,"title":{},"body":{"classes/BaseFactory.html":{},"license.html":{}}}],["supportuserid",{"_index":2557,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":4225,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":4778,"title":{},"body":{"license.html":{}}}],["survive",{"_index":4649,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":4841,"title":{},"body":{"license.html":{}}}],["svg",{"_index":4883,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3941,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["swaggermodule.createdocument(app",{"_index":5135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":5136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symetrickeyencryptionservice",{"_index":1855,"title":{"injectables/SymetricKeyEncryptionService.html":{}},"body":{"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["symetrickeyencryptionservice(configuration.get('s3_key",{"_index":1869,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["symetrickeyencryptionservice(customkey",{"_index":1868,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["symmetric_cipher_key",{"_index":1889,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["symmetriccipherkey",{"_index":1888,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["sync",{"_index":4919,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["syntax",{"_index":1807,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/NewsUc.html":{}}}],["system",{"_index":1650,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system.adapter",{"_index":2113,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system.adapter.ts",{"_index":2034,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/variables.html":{}}}],["system.adapter.ts:12",{"_index":2044,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:18",{"_index":2084,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:26",{"_index":2046,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:36",{"_index":2062,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:48",{"_index":2078,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:57",{"_index":2066,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:68",{"_index":2049,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:78",{"_index":2073,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:84",{"_index":2060,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.module.ts",{"_index":2112,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system/file",{"_index":2033,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"miscellaneous/variables.html":{}}}],["systems",{"_index":2050,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":424,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"classes/CourseFactory.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/LessonFactory.html":{},"injectables/NewsRepo.html":{},"classes/PaginationResponse.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":1734,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["tablename",{"_index":741,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["take",{"_index":4120,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["takes",{"_index":5695,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":5066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tangible",{"_index":4551,"title":{},"body":{"license.html":{}}}],["tap",{"_index":1837,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":909,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TeamNews.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":1946,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.id",{"_index":3382,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.name",{"_index":3383,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.targetids",{"_index":3044,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":3122,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":3042,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":3043,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":1060,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["targetelement",{"_index":1262,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["targetelement.addreferences(element.getreferences",{"_index":1263,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["targetfolder",{"_index":1629,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["targetid",{"_index":309,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":1944,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetinfomapper",{"_index":2931,"title":{"classes/TargetInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/TargetInfoMapper.html":{}}}],["targetinfomapper.maptoresponse(news.target",{"_index":2933,"title":{},"body":{"classes/NewsMapper.html":{}}}],["targetinforesponse",{"_index":2903,"title":{"classes/TargetInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{}}}],["targetmodel",{"_index":307,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":3079,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":3118,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":1936,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":1940,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":3121,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":1945,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":2395,"title":{"classes/Task.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.authorization.service",{"_index":3678,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.availabledate",{"_index":3526,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.course",{"_index":3466,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["task.createdat",{"_index":3523,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.createstudentstatusforuser(userid",{"_index":3711,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.createteacherstatusforuser(userid",{"_index":3708,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.creator?.id",{"_index":3464,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["task.duedate",{"_index":3528,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":2399,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["task.factory",{"_index":3344,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["task.getdescriptions",{"_index":3517,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.id",{"_index":3520,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.name",{"_index":3521,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.updatedat",{"_index":3524,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task_dashboard_teacher_view_v3",{"_index":3680,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["task_dashboard_view_v3",{"_index":3682,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskauthorizationservice",{"_index":3411,"title":{"injectables/TaskAuthorizationService.html":{}},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskcontroller",{"_index":3467,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["taskdashboardpermission",{"_index":3676,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskdashboardpermission.studentdashboard",{"_index":3697,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdashboardpermission.teacherdashboard",{"_index":3696,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdesc",{"_index":3516,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.color",{"_index":3530,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.description",{"_index":3532,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.name",{"_index":3522,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskentities",{"_index":3607,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskfactory",{"_index":3343,"title":{"classes/TaskFactory.html":{}},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["taskfactory.build",{"_index":3348,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["taskfactory.define(task",{"_index":3497,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["taskids",{"_index":3359,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["tasklistresponse",{"_index":3477,"title":{"classes/TaskListResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["tasklistresponse(taskresponses",{"_index":3487,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmapper",{"_index":3478,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{}}}],["taskmapper.maptoresponse(task",{"_index":3490,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmapper.maptoresponse(taskwithstatus",{"_index":3486,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodule",{"_index":3294,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskparentdescriptions",{"_index":2442,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/typealiases.html":{}}}],["taskparentpermission",{"_index":3421,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskparentpermission.read",{"_index":3439,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskparentpermission.write",{"_index":3437,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskrepo",{"_index":3535,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskresponse",{"_index":3500,"title":{"classes/TaskResponse.html":{}},"body":{"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["taskresponses",{"_index":3484,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasks",{"_index":3469,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":3706,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskscope",{"_index":3553,"title":{"classes/TaskScope.html":{}},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["taskscope('$or",{"_index":3558,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskstatusmapper",{"_index":3514,"title":{"classes/TaskStatusMapper.html":{}},"body":{"classes/TaskMapper.html":{},"classes/TaskStatusMapper.html":{}}}],["taskstatusmapper.maptoresponse(status",{"_index":3519,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskstatusresponse",{"_index":3504,"title":{"classes/TaskStatusResponse.html":{}},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{}}}],["taskstatusresponse(status",{"_index":3650,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["taskswithstatus",{"_index":3482,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((task",{"_index":3489,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((taskwithstatus",{"_index":3485,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskuc",{"_index":3475,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskwithstatus",{"_index":3513,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskwithstatusvo",{"_index":2439,"title":{"classes/TaskWithStatusVo.html":{}},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["taskwithstatusvo(task",{"_index":3712,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskwithstatusvos",{"_index":3705,"title":{},"body":{"injectables/TaskUC.html":{}}}],["teacher",{"_index":2410,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacherdashboard",{"_index":3679,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["teacherid",{"_index":2445,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{}}}],["teacherids",{"_index":708,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["teachers",{"_index":682,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["team",{"_index":946,"title":{"classes/Team.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ITeamProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["team.entity",{"_index":947,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamfactory",{"_index":5052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teamfactory.build",{"_index":5143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teamid",{"_index":3747,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["teammembers",{"_index":2396,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{}}}],["teamnews",{"_index":974,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["teamnews(props",{"_index":971,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamnewscontroller",{"_index":2966,"title":{"controllers/TeamNewsController.html":{}},"body":{"modules/NewsModule.html":{},"controllers/TeamNewsController.html":{}}}],["teamnewsfactory",{"_index":5054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teams",{"_index":2301,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ITeamProperties.html":{},"classes/Team.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/enumerations.html":{}}}],["teardown",{"_index":4935,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":5274,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":5578,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":2185,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":5338,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":4430,"title":{},"body":{"license.html":{}}}],["technology",{"_index":5286,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":5264,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":4333,"title":{},"body":{"license.html":{}}}],["temp",{"_index":2051,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["template",{"_index":139,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":4395,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":4655,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":4674,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":4664,"title":{},"body":{"license.html":{}}}],["termination",{"_index":4652,"title":{},"body":{"license.html":{}}}],["terms",{"_index":4118,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":1745,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskFactory.html":{},"classes/TestBootstrapConsole.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":1758,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":1741,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":1743,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":5085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testable",{"_index":5728,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testbootstrapconsole",{"_index":3753,"title":{"classes/TestBootstrapConsole.html":{}},"body":{"classes/TestBootstrapConsole.html":{}}}],["testcase",{"_index":5834,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":5853,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":1013,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":5109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":2540,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["testingmodule",{"_index":1747,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":5921,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":5931,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":5925,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":5924,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":5923,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":5095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":5091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":363,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":638,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"classes/SubmissionFactory.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":5657,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":5639,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":5658,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":364,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":5412,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["therefore",{"_index":4267,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":4236,"title":{},"body":{"license.html":{}}}],["think",{"_index":5605,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":4454,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this(entityclass",{"_index":462,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this._id",{"_index":1283,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this._operator",{"_index":3262,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries",{"_index":3264,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.length",{"_index":3263,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.push(query",{"_index":3266,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries[0",{"_index":3265,"title":{},"body":{"classes/Scope.html":{}}}],["this._timeout",{"_index":3788,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.accesskeyid",{"_index":2381,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["this.addquery",{"_index":992,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":3048,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":3049,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(query",{"_index":3644,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.addroom(room",{"_index":1236,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.adminidandtoken",{"_index":157,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.allrooms",{"_index":1238,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.amqpconnection.publish(this.options.exchange",{"_index":2726,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.aud",{"_index":2561,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice",{"_index":3694,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":3110,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":5753,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":3089,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":3123,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedcourses(userid",{"_index":3698,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":3119,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedlessons(userid",{"_index":3699,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.hastaskpermission(userid",{"_index":3707,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.availabledate",{"_index":2451,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.basepath",{"_index":1657,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.deserialize(bsondocuments",{"_index":1702,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.serialize(jsondocuments",{"_index":1725,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bucket",{"_index":521,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.build(params",{"_index":465,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.byuseridquery(userid",{"_index":3362,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.cache",{"_index":3221,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.clone(newpropsfactory",{"_index":473,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.code",{"_index":618,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.color",{"_index":757,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.columns",{"_index":1211,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.comment",{"_index":2414,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.consolewriter.info('schulcloud",{"_index":3277,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(`input",{"_index":3278,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(report",{"_index":1510,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.constructor",{"_index":479,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.content",{"_index":954,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.course",{"_index":842,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course._id",{"_index":844,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["this.course.color",{"_index":2517,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course.getnumberofstudents",{"_index":2489,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course.getsubstitutionteacherids().includes(userid",{"_index":2499,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course.name",{"_index":2515,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.coursename",{"_index":3509,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.courserepo.findallbyuserid",{"_index":1463,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.courserepo.findallbyuserid(userid",{"_index":1039,"title":{},"body":{"injectables/CourseUc.html":{},"injectables/TaskAuthorizationService.html":{}}}],["this.courserepo.findallforteacher(userid",{"_index":3438,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.courseuc.findallbyuser(currentuser.userid",{"_index":793,"title":{},"body":{"controllers/CourseController.html":{}}}],["this.createdat",{"_index":2912,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.createerrorresponse(error",{"_index":2241,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.creator",{"_index":525,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.dashboardrepo.getdashboardbyid(dashboardid",{"_index":1467,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.getusersdashboard(userid",{"_index":1462,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.persistandflush(dashboard",{"_index":1466,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboarduc.getusersdashboard(currentuser.userid",{"_index":1097,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboarduc.moveelementondashboard",{"_index":1100,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboarduc.renamegroupondashboard",{"_index":1106,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.data",{"_index":896,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.databasemanagementservice.clearcollection(collectionname",{"_index":1711,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.collectionexists(collectionname",{"_index":1709,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.createcollection(collectionname",{"_index":1712,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.finddocumentsofcollection(collectionname",{"_index":1724,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.getcollectionnames",{"_index":1664,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.importcollection",{"_index":1715,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem",{"_index":1539,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem([collectionname",{"_index":1541,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem(filter",{"_index":1515,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem",{"_index":1536,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem([collectionname",{"_index":1538,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem(filter",{"_index":1507,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.db.collection(collectionname",{"_index":1578,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.createcollection(collectionname",{"_index":1596,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.dropcollection(collectionname",{"_index":1597,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.listcollections(undefined",{"_index":1588,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.deletedat",{"_index":517,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.deletefilesuc.removedeletedfilesdata(removedsince",{"_index":1784,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.description",{"_index":747,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.details",{"_index":622,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.determinenewroomsin(rooms",{"_index":1234,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.displayat",{"_index":956,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.displaycolor",{"_index":884,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{}}}],["this.duedate",{"_index":2453,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.em.find(basefile",{"_index":2146,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.em.find(coursegroup",{"_index":3364,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(course",{"_index":1011,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findandcount(coursegroup",{"_index":854,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["this.em.findandcount(lesson",{"_index":2659,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["this.em.findandcount(news",{"_index":3003,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":3361,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(task",{"_index":3586,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findone(dashboardgridelementmodel",{"_index":1388,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.em.findone(dashboardmodelentity",{"_index":1405,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(dashboardmodelentity",{"_index":1440,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":3000,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":3220,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.em.findoneorfail(storageprovider",{"_index":3328,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["this.em.findoneorfail(user",{"_index":3838,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.flush",{"_index":566,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.getconnection('write').getdb",{"_index":1577,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.em.persist(entity",{"_index":560,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(modelentity",{"_index":1436,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.persist(n",{"_index":564,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(entity",{"_index":561,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(modelentity",{"_index":1438,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.populate(coursenews",{"_index":3012,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(lessons",{"_index":2660,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["this.em.populate(newsentities",{"_index":3004,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentity",{"_index":3001,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(regularfiles",{"_index":2150,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.em.populate(schoolnews",{"_index":3010,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(taskentities",{"_index":3608,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(tasks",{"_index":3587,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(teamnews",{"_index":3011,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.remove(el",{"_index":1415,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.em.remove(entity",{"_index":567,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.removeandflush(entity",{"_index":568,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.email",{"_index":2530,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.encoding",{"_index":2093,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.encryptionservice",{"_index":1867,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.encryptionservice.decrypt(value",{"_index":1879,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.encryptionservice.encrypt(value",{"_index":1876,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.endpointurl",{"_index":2379,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["this.entityclass",{"_index":480,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.entityclass(props",{"_index":464,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.errortype",{"_index":66,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.externalid",{"_index":961,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":341,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":342,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":330,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":331,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":1947,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":1935,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":1939,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":5669,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.filesrepo.deletefile(file",{"_index":1810,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.filesrepo.findallfilesforcleanup(removedsince",{"_index":1800,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.filestorageadapter.deletefile(file",{"_index":2152,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.filesystemadapter.createdir(targetfolder",{"_index":1720,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.eol",{"_index":1737,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(__dirname",{"_index":1656,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(basedir",{"_index":1672,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(targetfolder",{"_index":1667,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(this.basedir",{"_index":1658,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readdir(basedir",{"_index":1670,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readfile(filepath",{"_index":1699,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.writefile(filepath",{"_index":1736,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.findallforstudent(currentuser.userid",{"_index":3719,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallforteacher(currentuser.userid",{"_index":3720,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findbyid(id",{"_index":3222,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.findnewsandcount(scope.query",{"_index":2998,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.findtasksandcount(scope.query",{"_index":3606,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.finished.set(props.finished",{"_index":2460,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.firstname",{"_index":2526,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{}}}],["this.get('/api/v1/me",{"_index":79,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.get(path",{"_index":135,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getadminidandtoken",{"_index":130,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getasadmin(`/api/v1/groups.members?roomname=${groupname",{"_index":108,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getasadmin(`/api/v1/groups.moderators?roomname=${groupname",{"_index":106,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getasadmin(`/api/v1/users.list?${querystring",{"_index":90,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getcollectionnames",{"_index":1594,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdatabasecollection(collectionname",{"_index":1579,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdefaultmaxduedate",{"_index":3723,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.getelement(position",{"_index":1252,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.getentitypermissions(userid",{"_index":335,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getfirstopenindex",{"_index":1247,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.getgradeduserids",{"_index":2480,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getgradeduserids().some((id",{"_index":2503,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getmaxsubmissions",{"_index":2493,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getnewspermissions(userid",{"_index":3103,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getnumberofgradedusers",{"_index":2492,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getnumberofsubmittedusers",{"_index":2491,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getparent",{"_index":2484,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getpermittedtargets(userid",{"_index":3098,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getreferencesfromposition(from",{"_index":1229,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.getseedfolder",{"_index":1659,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.getsubmissionsitems",{"_index":2467,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getsubmitteduserids",{"_index":2472,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getsubmitteduserids().some((id",{"_index":2501,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.gettargetfilters(userid",{"_index":3116,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfolder(toseedfolder",{"_index":1719,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.getuser(userid",{"_index":1930,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.grade",{"_index":2418,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment",{"_index":2420,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment.length",{"_index":2423,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.graded",{"_index":3661,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["this.gradefiles",{"_index":2424,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradefiles.length",{"_index":2425,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.grid",{"_index":1217,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.delete(this.gridindexfromposition(position",{"_index":1261,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.get(i",{"_index":1251,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.get(key",{"_index":1225,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.get(this.gridindexfromposition(position",{"_index":1226,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.keys()].map((key",{"_index":1223,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.set(index",{"_index":1250,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.set(this.gridindexfromposition(element.pos",{"_index":1219,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.set(this.gridindexfromposition(position",{"_index":1264,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.values",{"_index":1243,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.hascoursereadpermission(userid",{"_index":3444,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.hascoursewritepermission(userid",{"_index":3442,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.hastaskdashboardpermission(currentuser",{"_index":3695,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.hidden",{"_index":2344,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{}}}],["this.httpservice",{"_index":137,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.id",{"_index":882,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{}}}],["this.instantiategridelementmodel(gridelement",{"_index":1392,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.isdirectory",{"_index":516,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.isdraft",{"_index":2494,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isgradedforuser(userid",{"_index":2507,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isgroup",{"_index":1196,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.issubmittedforuser(userid",{"_index":2506,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.issubstitutionteacher",{"_index":3662,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["this.issubstitutionteacher(userid",{"_index":2497,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.joinpath(os.tmpdir",{"_index":2098,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.jwtvalidationadapter.iswhitelisted(accountid",{"_index":2600,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.key).tostring",{"_index":3376,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["this.key).tostring(cryptojs.enc.utf8",{"_index":3378,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["this.lastname",{"_index":2528,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{}}}],["this.lesson",{"_index":2457,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.lesson.name",{"_index":2516,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.lessonrepo.findallbycourseids(readcourseids",{"_index":3457,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.lessonrepo.findallbycourseids(writecourseids",{"_index":3456,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.limit",{"_index":3150,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.loadallcollectionsfromdatabase(folder",{"_index":1679,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadallcollectionsfromfilesystem(folder",{"_index":1678,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1696,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.logger",{"_index":1779,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/NewsUc.html":{}}}],["this.logger.error('the",{"_index":1817,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.error(err",{"_index":1814,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.log('cleanup",{"_index":1785,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.logger.log(`${numberoffiles",{"_index":1803,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.log(`cleanup",{"_index":1781,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.logger.log(`create",{"_index":3087,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":5790,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":3094,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":3104,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":3095,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":5763,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(deletefilesuc.name",{"_index":1798,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":5787,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":1838,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":1841,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.mapelementtoentity(e",{"_index":1378,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mapgridelementtomodel(elementwithposition",{"_index":1411,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mapper.mapdashboardtoentity(dashboardmodel",{"_index":1441,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.mapper.mapdashboardtoentity(modelentity",{"_index":1437,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.mapper.mapdashboardtomodel(entity",{"_index":1435,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.mapreferencetoentity(ref",{"_index":1368,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mapreferencetomodel(ref",{"_index":1401,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.maxsubmissions",{"_index":3660,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["this.mergeelementintoposition(elementtomove",{"_index":1231,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.message",{"_index":621,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":2798,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":745,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"classes/Lesson.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{}}}],["this.newsrepo.findall(targets",{"_index":3101,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":3106,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.persistandflush(news",{"_index":3093,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.removeandflush(news",{"_index":3113,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":2864,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":2880,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":2869,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":2876,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":2877,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.options.adminid",{"_index":158,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.adminpassword",{"_index":163,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.admintoken",{"_index":159,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.adminuser",{"_index":162,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.module",{"_index":3758,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["this.options.routingkey",{"_index":2727,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.options.uri",{"_index":169,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.orm.close",{"_index":2797,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.params(params",{"_index":825,"title":{},"body":{"classes/CourseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["this.permissions",{"_index":2369,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{}}}],["this.persistandflush(dashboard",{"_index":1443,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.positionfromgridindex(key",{"_index":1224,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.post('/api/v1/logout",{"_index":88,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.post('/api/v1/users.setstatus",{"_index":83,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.post(path",{"_index":131,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.addmoderator",{"_index":102,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.archive",{"_index":96,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.create",{"_index":113,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.delete",{"_index":116,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.invite",{"_index":100,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.kick",{"_index":98,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.removemoderator",{"_index":104,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.unarchive",{"_index":92,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/users.create",{"_index":120,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/users.createtoken",{"_index":86,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/users.delete",{"_index":125,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.private",{"_index":2456,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.propertiestopopulate",{"_index":2151,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{}}}],["this.propsfactory",{"_index":460,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.afterbuild(afterbuildfn",{"_index":471,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.build(params",{"_index":463,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.params(params",{"_index":474,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.rewindsequence",{"_index":476,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.transient(transient",{"_index":475,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory['sequence",{"_index":483,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.references",{"_index":1190,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.references.length",{"_index":1198,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.region",{"_index":2385,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["this.removeandflush(file",{"_index":2153,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.removefromposition(from",{"_index":1232,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.request.app.get('feathersapp",{"_index":1988,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.response",{"_index":64,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.rolerepo.resolvepermissionsfromsubrolesbyid(role.id",{"_index":3232,"title":{},"body":{"injectables/RoleUC.html":{}}}],["this.roles.set(props.roles",{"_index":2371,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["this.roleuc.resolvepermissionsbyroles(roles",{"_index":3853,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.school",{"_index":748,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IUserProperties.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/User.html":{}}}],["this.secretaccesskey",{"_index":2383,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["this.shorttitle",{"_index":883,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{}}}],["this.skip",{"_index":3149,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.source",{"_index":963,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.sourcedescription",{"_index":965,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.spinner.info(text",{"_index":647,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["this.startdate",{"_index":761,"title":{},"body":{"classes/Course.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ICourseProperties.html":{}}}],["this.status",{"_index":2441,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.statuscode",{"_index":61,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.storagefilename",{"_index":519,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.storageprovider",{"_index":523,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.student",{"_index":2412,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.student.id",{"_index":2427,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.students.getidentifiers('id",{"_index":764,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.students.length",{"_index":762,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.students.set(props.students",{"_index":751,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["this.submissions.getitems",{"_index":2465,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.submissions.set(props.submissions",{"_index":2459,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.submitted",{"_index":3659,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["this.substitutionteachers.getidentifiers('id",{"_index":763,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.substitutionteachers.set(props.substitutionteachers",{"_index":755,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.target",{"_index":2910,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.targetid",{"_index":2909,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.targetmodel",{"_index":2908,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.task",{"_index":2416,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.taskrepo.findallbyparentids",{"_index":3725,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findallfinishedbyparentids",{"_index":3704,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findall(currentuser",{"_index":3483,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskuc.findallfinished(currentuser",{"_index":3488,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.teachers.getidentifiers('id",{"_index":765,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.teachers.set(props.teachers",{"_index":753,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.timeout",{"_index":4930,"title":{},"body":{"todo.html":{}}}],["this.timeout(10000",{"_index":5873,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["this.title",{"_index":620,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.title.substr(0",{"_index":1201,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.total",{"_index":3148,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":619,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.untildate",{"_index":759,"title":{},"body":{"classes/Course.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ICourseProperties.html":{}}}],["this.updatedat",{"_index":2913,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.updater",{"_index":2911,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":5762,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userfacade.resolveuser(userid",{"_index":2602,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userid",{"_index":1221,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":5767,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyid(userid",{"_index":3850,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.userrepo.save(user",{"_index":5757,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":5755,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.useruc.getuserwithpermissions(userid",{"_index":3822,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.validaterocketchatconfig",{"_index":156,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.validateusersmatch(dashboard",{"_index":1468,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.validationerrors",{"_index":228,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":4376,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":4610,"title":{},"body":{"license.html":{}}}],["thoughtbot/fishery",{"_index":394,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["three",{"_index":4512,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":4323,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":148,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throwerror",{"_index":3781,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":3787,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":3786,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":5880,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["throws",{"_index":332,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thus",{"_index":4412,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":4146,"title":{},"body":{"index.html":{}}}],["ticketsystem.hpi",{"_index":4148,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":5417,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":1050,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeframe",{"_index":3733,"title":{},"body":{"injectables/TaskUC.html":{}}}],["timeout",{"_index":2537,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timeout(milliseconds",{"_index":3790,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":3784,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouterror",{"_index":3782,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":2539,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":3789,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":5878,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["times",{"_index":5472,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":2916,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timouts",{"_index":5866,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":4018,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":181,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IErrorType.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/PatchGroupParams.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/ValidationError.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["titlea",{"_index":1183,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["titleb",{"_index":1185,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["tls",{"_index":2022,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["tmpdirpath",{"_index":2099,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["toarray",{"_index":1590,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["todo",{"_index":368,"title":{"todo.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/EncryptedStringType.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/Role.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"injectables/UserUC.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":2885,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["token",{"_index":11,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["tooling",{"_index":5889,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":4092,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topics",{"_index":5781,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["topromise",{"_index":151,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["toseedfolder",{"_index":1513,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["total",{"_index":792,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":2353,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":5573,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":5598,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":4637,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4636,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4638,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":4584,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":5555,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":4324,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":4585,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":4694,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":5731,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":1408,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":3153,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":2256,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":3909,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":2254,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":407,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"injectables/Logger.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["transient(transient",{"_index":452,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["translate",{"_index":4115,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":5469,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":4539,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":1846,"title":{},"body":{"classes/EncryptedStringType.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":5589,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treated",{"_index":4609,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":4437,"title":{},"body":{"license.html":{}}}],["tries",{"_index":5842,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":5484,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":5592,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":5564,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["true",{"_index":123,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFile.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtConstants.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":1808,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":4915,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["two",{"_index":4240,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":2567,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":2324,"title":{},"body":{"interfaces/IErrorType.html":{}}}],["typealiases",{"_index":4973,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":6005,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1253,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/ISubmissionProperties.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/Scope.html":{},"classes/Submission.html":{}}}],["typeorm",{"_index":6009,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":722,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":5039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/news.types",{"_index":949,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["typesafety",{"_index":2875,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":47,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":4564,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":5526,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":1964,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":5097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["u",{"_index":444,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["uc",{"_index":1778,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"modules/FilesModule.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":5627,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/course.uc",{"_index":784,"title":{},"body":{"controllers/CourseController.html":{},"modules/LearnroomModule.html":{}}}],["uc/dashboard.uc",{"_index":1090,"title":{},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["uc/database",{"_index":1496,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["uc/news.uc",{"_index":2856,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.authorization.service",{"_index":3538,"title":{},"body":{"modules/TaskModule.html":{}}}],["uc/task.uc",{"_index":3476,"title":{},"body":{"controllers/TaskController.html":{}}}],["uc/user.uc",{"_index":3821,"title":{},"body":{"injectables/UserFacade.html":{}}}],["ui",{"_index":4016,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":5549,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":1901,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unarchivegroup(groupname",{"_index":91,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["unauthorizedexception",{"_index":325,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":339,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["uncle",{"_index":5724,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":5478,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":388,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":4103,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":5288,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unexpected",{"_index":5876,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":5835,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":2235,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["uniform",{"_index":5317,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":1904,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unit",{"_index":5184,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["universal",{"_index":4020,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":590,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":2201,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":4572,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":5956,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":4400,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":4300,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":4423,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":4606,"title":{},"body":{"license.html":{}}}],["unpublished",{"_index":2306,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unsafe",{"_index":49,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/JwtValidationAdapter.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["unskip",{"_index":2971,"title":{},"body":{"modules/NewsModule.html":{}}}],["untestable",{"_index":5778,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":2463,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["untildate",{"_index":683,"title":{},"body":{"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["untildateinfuture",{"_index":998,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["unused",{"_index":3760,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":4142,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":2835,"title":{},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["update(id",{"_index":3081,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":2851,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":2915,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":381,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/CourseUc.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["updatenewsparams",{"_index":2852,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{}}}],["updater",{"_index":914,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":941,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":4595,"title":{},"body":{"license.html":{}}}],["updating",{"_index":2302,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":2988,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":4011,"title":{},"body":{"dependencies.html":{}}}],["uploads",{"_index":2407,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["upon",{"_index":5710,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":5644,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":1903,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":24,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":2162,"title":{},"body":{"interfaces/GlobalConstants.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":4124,"title":{},"body":{"index.html":{}}}],["urlsafe",{"_index":4023,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":5665,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":370,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":5356,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":1897,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":112,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/JwtStrategy.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/TeamNewsController.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedecorators",{"_index":5074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usedglobals",{"_index":2161,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":2770,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":4868,"title":{},"body":{"license.html":{}}}],["useguards(jwtauthguard",{"_index":5061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":145,"title":{"classes/User.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":5756,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user._id",{"_index":5151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.createdat",{"_index":3181,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.entity",{"_index":501,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{}}}],["user.facade",{"_index":3834,"title":{},"body":{"modules/UserModule.html":{}}}],["user.factory",{"_index":3346,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["user.firstname",{"_index":3177,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.id",{"_index":3175,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.lastname",{"_index":3179,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.permissions",{"_index":1934,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":5660,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.roles.getitems",{"_index":3851,"title":{},"body":{"injectables/UserUC.html":{}}}],["user.school.tostring",{"_index":3185,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.schoolid.tostring",{"_index":1932,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.ts",{"_index":5024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.uc.ts",{"_index":5654,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.updatedat",{"_index":3183,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user/account",{"_index":2608,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user/class",{"_index":5365,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":5748,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":5754,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":5769,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usercontroller",{"_index":3804,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["userfacade",{"_index":2580,"title":{"injectables/UserFacade.html":{}},"body":{"injectables/JwtStrategy.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["userfactory",{"_index":3345,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["userfactory.build",{"_index":3349,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":76,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid)).rejects.tothrow(notfoundexception",{"_index":5955,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":1942,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["userids",{"_index":704,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["userinfomapper",{"_index":2932,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":2935,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":2949,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":2904,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{}}}],["usermodule",{"_index":264,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":119,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":3832,"title":{"injectables/UserRepo.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":2311,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/NewsUc.html":{},"classes/User.html":{},"injectables/UserUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["userservice",{"_index":5764,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useruc",{"_index":3809,"title":{"injectables/UserUC.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["uses",{"_index":4566,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":1760,"title":{},"body":{"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/RocketChatModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":430,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseFactory.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":5359,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["utf",{"_index":2068,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["util",{"_index":3730,"title":{},"body":{"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":5888,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":5634,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":4025,"title":{},"body":{"dependencies.html":{}}}],["v1",{"_index":5127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v3",{"_index":4961,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/docs",{"_index":5257,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["v3/index",{"_index":4966,"title":{},"body":{"todo.html":{}}}],["valid",{"_index":2260,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["validate",{"_index":2534,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":2582,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":2619,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validatenested",{"_index":2804,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["validatenested()@apiproperty",{"_index":2801,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["validaterocketchatconfig",{"_index":167,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["validateusersmatch",{"_index":1449,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["validateusersmatch(dashboard",{"_index":1457,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["validating",{"_index":2618,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation",{"_index":208,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.adapter",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["validation.adapter.ts",{"_index":2611,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["validation.adapter.ts:15",{"_index":2617,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.adapter.ts:20",{"_index":2615,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.error.ts",{"_index":177,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.error.ts:4",{"_index":188,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":3868,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":2245,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation.pipe.ts:12",{"_index":2250,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation_error",{"_index":3860,"title":{},"body":{"classes/ValidationError.html":{}}}],["validationerror",{"_index":186,"title":{"classes/ValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":231,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":222,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":233,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":191,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":654,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":2249,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":1069,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/PatchGroupParams.html":{},"classes/Role.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["validators",{"_index":5640,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validity",{"_index":6004,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["validobjectid",{"_index":3156,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":384,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BaseFile.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/SubmissionFactory.html":{},"classes/Task.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["value?.length",{"_index":1874,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["valueof",{"_index":4992,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values",{"_index":1848,"title":{},"body":{"classes/EncryptedStringType.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["variable",{"_index":5567,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":5008,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["vars",{"_index":3761,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["verbatim",{"_index":4204,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":2348,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":2357,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":2362,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":5985,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":122,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":5817,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":5915,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["version",{"_index":4190,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["versions",{"_index":4223,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":1705,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":3507,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":3077,"title":{},"body":{"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":925,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":4601,"title":{},"body":{"license.html":{}}}],["violation",{"_index":4659,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":3971,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":4938,"title":{},"body":{"todo.html":{}}}],["visibility",{"_index":2508,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["visible",{"_index":924,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":4140,"title":{},"body":{"index.html":{}}}],["void",{"_index":168,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseFactory.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/TaskScope.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":4489,"title":{},"body":{"license.html":{}}}],["vs",{"_index":2554,"title":{},"body":{"interfaces/JwtConstants.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":4093,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":6034,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":4967,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":5273,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":6032,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vue.js",{"_index":4065,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wait",{"_index":4027,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":4444,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4853,"title":{},"body":{"license.html":{}}}],["want",{"_index":3641,"title":{},"body":{"classes/TaskScope.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":5387,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":2349,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":2359,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warranties",{"_index":4335,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4334,"title":{},"body":{"license.html":{}}}],["watch",{"_index":4947,"title":{},"body":{"todo.html":{}}}],["way",{"_index":2776,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":4502,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["web",{"_index":4873,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["well",{"_index":4316,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":5832,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":3276,"title":{},"body":{"classes/ServerConsole.html":{},"license.html":{}}}],["whereas",{"_index":5528,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":2677,"title":{},"body":{"injectables/Logger.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":4561,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":2258,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["whitelisted",{"_index":2598,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whole",{"_index":4136,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":4547,"title":{},"body":{"license.html":{}}}],["widely",{"_index":4354,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":4253,"title":{},"body":{"license.html":{}}}],["window",{"_index":4367,"title":{},"body":{"license.html":{},"todo.html":{}}}],["windows",{"_index":4917,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":4028,"title":{},"body":{"dependencies.html":{}}}],["wip",{"_index":4161,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":4436,"title":{},"body":{"license.html":{}}}],["wish",{"_index":4231,"title":{},"body":{"license.html":{}}}],["within",{"_index":598,"title":{},"body":{"classes/BusinessError.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":3573,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["without/succeeds",{"_index":4911,"title":{},"body":{"todo.html":{}}}],["words",{"_index":4154,"title":{},"body":{"index.html":{}}}],["work",{"_index":375,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":4377,"title":{},"body":{"license.html":{}}}],["workers",{"_index":5119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workflows",{"_index":5779,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":4355,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":5826,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":2884,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":5456,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":4732,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":1361,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrap(dashboard).toreference",{"_index":1404,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["wrap(modelentity).init",{"_index":1364,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["wrapped",{"_index":5075,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrappedreference",{"_index":1272,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["wraps",{"_index":5445,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":2079,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writecourseids",{"_index":3445,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writecourses",{"_index":3440,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writecourses.map((c",{"_index":3446,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writeerrorlog",{"_index":2232,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":2239,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writefile",{"_index":2042,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writefile(filepath",{"_index":2077,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writelessons",{"_index":3454,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writer",{"_index":644,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.module",{"_index":3284,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["writer.module.ts",{"_index":631,"title":{},"body":{"modules/ConsoleWriterModule.html":{}}}],["writer.service",{"_index":633,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["writer.service.ts",{"_index":634,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.service.ts:10",{"_index":641,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.service.ts:12",{"_index":637,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer/console",{"_index":630,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{}}}],["writes",{"_index":5580,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":2223,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":2234,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":4815,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["written",{"_index":4511,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":2226,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":143,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":4030,"title":{},"body":{"dependencies.html":{}}}],["xpos",{"_index":1267,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["xposition",{"_index":1295,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["xunit",{"_index":5496,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["y",{"_index":1083,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"miscellaneous/functions.html":{}}}],["years",{"_index":4513,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":436,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BusinessError.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"classes/DashboardGridElementModel.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/SubmissionFactory.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["yourself",{"_index":4747,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":5785,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["ypos",{"_index":1268,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["yposition",{"_index":1296,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["zoom",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AdminIdAndToken.html":{"url":"interfaces/AdminIdAndToken.html","title":"interface - AdminIdAndToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminIdAndToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService, Inject, Injectable } from '@nestjs/common';\nimport { catchError } from 'rxjs/operators';\n\nexport interface RocketChatOptions {\n\turi?: string;\n\tadminUser?: string;\n\tadminPassword?: string;\n\tadminId?: string;\n\tadminToken?: string;\n}\n\ntype GenericData = Record;\n\nexport class RocketChatError extends Error {\n\tprivate statusCode: number;\n\n\tprivate response: GenericData;\n\n\t// rocketchat specific error type\n\tprivate errorType: string;\n\n\tconstructor(e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n\t\tsuper(e.response.statusText);\n\n\t\t// Set the prototype explicitly.\n\t\tObject.setPrototypeOf(this, RocketChatError.prototype);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\t\tthis.statusCode = e.response.statusCode;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.response = e.response.data;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.errorType = e.response.data.errorType;\n\t}\n}\n\ninterface AdminIdAndToken {\n\tid: string;\n\ttoken: string;\n}\n\n@Injectable()\nexport class RocketChatService {\n\tprivate adminIdAndToken?: AdminIdAndToken;\n\n\tconstructor(\n\t\t@Inject('ROCKET_CHAT_OPTIONS') private readonly options: RocketChatOptions,\n\t\tprivate readonly httpService: HttpService\n\t) {}\n\n\tpublic async me(authToken: string, userId: string): Promise {\n\t\treturn this.get('/api/v1/me', authToken, userId);\n\t}\n\n\tpublic async setUserStatus(authToken: string, userId: string, status: string): Promise {\n\t\treturn this.post('/api/v1/users.setStatus', authToken, userId, {\n\t\t\tmessage: '',\n\t\t\tstatus,\n\t\t});\n\t}\n\n\tpublic async createUserToken(userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.createToken', {\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async logoutUser(authToken: string, userId: string): Promise {\n\t\treturn this.post('/api/v1/logout', authToken, userId, {});\n\t}\n\n\tpublic async getUserList(queryString: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/users.list?${queryString}`);\n\t}\n\n\tpublic async unarchiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.unarchive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async archiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.archive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async kickUserFromGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.kick', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async inviteUserToGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.invite', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async addGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.addModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async removeGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.removeModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async getGroupModerators(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.moderators?roomName=${groupName}`);\n\t}\n\n\tpublic async getGroupMembers(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.members?roomName=${groupName}`);\n\t}\n\n\tpublic async createGroup(name: string, members: string[]): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.create', {\n\t\t\tname,\n\t\t\tmembers,\n\t\t});\n\t}\n\n\tpublic async deleteGroup(groupName: string): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.delete', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async createUser(email: string, password: string, username: string, name: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.create', {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tusername,\n\t\t\tname,\n\t\t\tverified: true,\n\t\t});\n\t}\n\n\tpublic async deleteUser(username: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.delete', {\n\t\t\tusername,\n\t\t});\n\t}\n\n\tprivate async postAsAdmin(path: string, body: GenericData): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.post(path, adminIdAndToken.token, adminIdAndToken.id, body);\n\t}\n\n\tprivate async getAsAdmin(path: string): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.get(path, adminIdAndToken.token, adminIdAndToken.id);\n\t}\n\n\tprivate async get(path: string, authToken: string, userId: string): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.get(`${this.options.uri}${path}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async post(path: string, authToken: string, userId: string, body: GenericData): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}${path}`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async getAdminIdAndToken(): Promise {\n\t\tthis.validateRocketChatConfig();\n\n\t\tif (this.adminIdAndToken) {\n\t\t\treturn this.adminIdAndToken;\n\t\t}\n\n\t\tif (this.options.adminId && this.options.adminToken) {\n\t\t\tconst newVar = { id: this.options.adminId, token: this.options.adminToken } as AdminIdAndToken;\n\t\t\tthis.adminIdAndToken = newVar;\n\t\t\treturn newVar;\n\t\t}\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}/api/v1/login`, {\n\t\t\t\tuser: this.options.adminUser,\n\t\t\t\tpassword: this.options.adminPassword,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst responseJson = response?.data;\n\t\tthis.adminIdAndToken = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tid: responseJson.data.userId as string,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\ttoken: responseJson.data.authToken as string,\n\t\t} as AdminIdAndToken;\n\t\treturn this.adminIdAndToken;\n\t}\n\n\tprivate validateRocketChatConfig(): void {\n\t\tif (!this.options.uri) {\n\t\t\tthrow new Error('rocket chat uri not set');\n\t\t}\n\t\tif (!(this.options.adminId && this.options.adminToken) && !(this.options.adminUser && this.options.adminPassword)) {\n\t\t\tthrow new Error('rocket chat adminId and adminToken OR adminUser and adminPassword must be set');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                        ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationErrorDetailResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppendedAttachment.html":{"url":"interfaces/AppendedAttachment.html","title":"interface - AppendedAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppendedAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            JwtValidationAdapter\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserModule } from '@src/modules/user';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\nimport { JwtValidationAdapter } from './strategy/jwt-validation.adapter';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants), UserModule],\n\tproviders: [JwtStrategy, JwtValidationAdapter],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '@shared/infra/feathers';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:32\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:16\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedEntities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:52\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, NewsTargetModel } from '@shared/domain';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseFactory.html":{"url":"classes/BaseFactory.html","title":"class - BaseFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/base.factory.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity factory based on thoughtbot/fishery\nhttps://github.com/thoughtbot/fishery\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterBuild\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(EntityClass: literal type, propsFactory: Factory)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/testing/factory/base.factory.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        EntityClass\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        propsFactory\n                                                  \n                                                        \n                                                                    Factory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/testing/factory/base.factory.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:86\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:46\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:72\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:59\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:124\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:98\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:120\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:136\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:110\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial, Factory, GeneratorFn, HookFn } from 'fishery';\nimport { ObjectId } from 'mongodb';\n\n/**\n * Entity factory based on thoughtbot/fishery\n * https://github.com/thoughtbot/fishery\n *\n * @template T The entity to be built\n * @template U The properties interface of the entity\n * @template I The transient parameters that your factory supports\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class BaseFactory {\n\tprotected readonly propsFactory: Factory;\n\n\tconstructor(private readonly EntityClass: { new (props: U): T }, propsFactory: Factory) {\n\t\tthis.propsFactory = propsFactory;\n\t}\n\n\t/**\n\t * Define a factory\n\t * @template T The entity to be built\n\t * @template U The properties interface of the entity\n\t * @template I The transient parameters that your factory supports\n\t * @param EntityClass The constructor of the entity to be built.\n\t * @param generator Your factory function - see `Factory.define()` in thoughtbot/fishery\n\t * @returns\n\t */\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tstatic define>(\n\t\tthis: new (EntityClass: { new (props: U): T }, propsFactory: Factory) => F,\n\t\tEntityClass: { new (props: U): T },\n\t\tgenerator: GeneratorFn\n\t): F {\n\t\tconst propsFactory = Factory.define(generator);\n\t\tconst factory = new this(EntityClass, propsFactory);\n\n\t\treturn factory;\n\t}\n\n\t/**\n\t * Build an entity using your factory\n\t * @param params\n\t * @returns an entity\n\t */\n\tbuild(params: DeepPartial = {}): T {\n\t\tconst props = this.propsFactory.build(params);\n\t\tconst entity = new this.EntityClass(props);\n\n\t\treturn entity;\n\t}\n\n\t/**\n\t * Build an entity using your factory and generate a id for it.\n\t * @param params\n\t * @param id\n\t * @returns an entity\n\t */\n\tbuildWithId(params: DeepPartial = {}, id?: string): T {\n\t\tconst entity = this.build(params);\n\t\tconst entityWithId = Object.assign(entity, { _id: new ObjectId(id) });\n\n\t\treturn entityWithId;\n\t}\n\n\t/**\n\t * Build a list of entities using your factory\n\t * @param number\n\t * @param params\n\t * @returns a list of entities\n\t */\n\tbuildList(number: number, params: DeepPartial = {}): T[] {\n\t\tconst list: T[] = [];\n\t\tfor (let i = 0; i ): this {\n\t\tconst newPropsFactory = this.propsFactory.afterBuild(afterBuildFn);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\t * @param params\n\t * @returns a new factory\n\t */\n\tparams(params: DeepPartial): this {\n\t\tconst newPropsFactory = this.propsFactory.params(params);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\t * @param transient - transient params\n\t * @returns a new factory\n\t */\n\ttransient(transient: Partial): this {\n\t\tconst newPropsFactory = this.propsFactory.transient(transient);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Set sequence back to its default value\n\t */\n\trewindSequence(): void {\n\t\tthis.propsFactory.rewindSequence();\n\t}\n\n\tprotected clone>(this: F, propsFactory: Factory): F {\n\t\tconst copy = new (this.constructor as {\n\t\t\tnew (EntityClass: { new (props: U): T }, propsFactory: Factory): F;\n\t\t})(this.EntityClass, propsFactory);\n\n\t\treturn copy;\n\t}\n\n\t/**\n\t * Get the next sequence value\n\t * @returns the next sequence value\n\t */\n\tprotected sequence(): number {\n\t\t// eslint-disable-next-line @typescript-eslint/dot-notation\n\t\treturn this.propsFactory['sequence']();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseFile.html":{"url":"classes/BaseFile.html","title":"class - BaseFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                isDirectory\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDirectory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepo.html":{"url":"injectables/BaseRepo.html","title":"injectable - BaseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/base.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/base.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseEntity } from '@shared/domain';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\n@Injectable()\nexport class BaseRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tpersist(entity: T): T {\n\t\tthis.em.persist(entity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: T): Promise {\n\t\tawait this.em.persistAndFlush(entity);\n\t\treturn entity;\n\t}\n\n\tpersistAll(entities: T[]): T[] {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\treturn persisted;\n\t}\n\n\tasync persistAllAndFlush(entities: T[]): Promise {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\tawait this.em.flush();\n\t\treturn persisted;\n\t}\n\n\tremove(entity: T): void {\n\t\tthis.em.remove(entity);\n\t}\n\n\tasync removeAndFlush(entity: T): Promise {\n\t\tawait this.em.removeAndFlush(entity);\n\t}\n\n\tremoveAll(entities: T[]): void {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t}\n\n\tasync removeAllAndFlush(entities: T[]): Promise {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t\tawait this.em.flush();\n\t}\n\n\tasync flush(): Promise {\n\t\tawait this.em.flush();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BsonConverter.html":{"url":"injectables/BsonConverter.html","title":"injectable - BsonConverter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BsonConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/converter/bson.converter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deserialize\n                        \n                    \n                \n            \n            \n                \ndeserialize(bsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:21\n                \n            \n\n\n            \n                \n                    Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-bson/ejson objects\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-json documents\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(documents: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:11\n                \n            \n\n\n            \n                \n                    Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    documents\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-json documents\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-bson/ejson objects\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport BSON from 'bson';\n\n@Injectable()\nexport class BsonConverter {\n\t/**\n\t * Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\t * @param documents mongo-json documents\n\t * @returns mongo-bson/ejson objects\n\t */\n\tserialize(documents: unknown[]): unknown[] {\n\t\tconst bsonDocuments = BSON.EJSON.serialize(documents) as unknown[];\n\t\treturn bsonDocuments;\n\t}\n\n\t/**\n\t * Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\t * @param bsonDocuments mongo-bson/ejson objects\n\t * @returns mongo-json documents\n\t */\n\tdeserialize(bsonDocuments: unknown[]): unknown[] {\n\t\tconst jsonDocuments = BSON.EJSON.deserialize(bsonDocuments) as unknown[];\n\t\treturn jsonDocuments;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\t// Is not matched by type validation because HttpException is already declared\n\treadonly details: Record;\n\n\tconstructor(\n\t\t{ type, title, defaultMessage }: IErrorType,\n\t\tcode: HttpStatus = HttpStatus.CONFLICT,\n\t\tdetails?: Record\n\t) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t\tthis.details = details || {};\n\t}\n\n\tgetDetails(): Record {\n\t\treturn this.details;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleWriterModule.html":{"url":"modules/ConsoleWriterModule.html","title":"module - ConsoleWriterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleWriterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleWriterService } from './console-writer.service';\n\n@Module({\n\tproviders: [ConsoleWriterService],\n\texports: [ConsoleWriterService],\n})\nexport class ConsoleWriterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleWriterService.html":{"url":"injectables/ConsoleWriterService.html","title":"injectable - ConsoleWriterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleWriterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                spinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ora.Ora\n\n                    \n                \n                \n                    \n                        Default value : createSpinner()\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { createSpinner } from 'nestjs-console';\nimport ora from 'ora';\n\n@Injectable()\n/**\n * Console writer service using ora spinner internally.\n */\nexport class ConsoleWriterService {\n\tprivate spinner: ora.Ora = createSpinner();\n\n\tinfo(text: string): void {\n\t\tthis.spinner.info(text);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error';\nimport { LoggerModule } from './logger';\nimport { ValidationModule } from './validation';\nimport { InterceptorModule } from './interceptor';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n            \n                Implements\n            \n            \n                            ILearnroom\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                startDate\n                            \n                            \n                                students\n                            \n                            \n                                substitutionTeachers\n                            \n                            \n                                teachers\n                            \n                            \n                                    Optional\n                                untilDate\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMetadata\n                            \n                            \n                                getNumberOfStudents\n                            \n                            \n                                getStudentIds\n                            \n                            \n                                getSubstitutionTeacherIds\n                            \n                            \n                                getTeacherIds\n                            \n                            \n                                isFinished\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.color\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.description\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.name\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionTeachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'substitutionIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'teacherIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        untilDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'activeCourses'})@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/course.entity.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LearnroomMetadata\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfStudents\n                        \n                    \n                \n            \n            \n                \ngetNumberOfStudents()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/course.entity.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStudentIds\n                        \n                    \n                \n            \n            \n                \ngetStudentIds()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/course.entity.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSubstitutionTeacherIds\n                        \n                    \n                \n            \n            \n                \ngetSubstitutionTeacherIds()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/course.entity.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTeacherIds\n                        \n                    \n                \n            \n            \n                \ngetTeacherIds()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/course.entity.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFinished\n                        \n                    \n                \n            \n            \n                \nisFinished()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/course.entity.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\n\nimport { ILearnroom } from '@shared/domain/interface';\nimport { EntityId, LearnroomMetadata, LearnroomTypes } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\nexport interface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n\tstartDate?: Date;\n\tuntilDate?: Date;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Index({ name: 'findAllForTeacher', properties: ['substitutionTeachers', 'teachers'] })\n@Index({ name: 'findAllByUserId', properties: ['students', 'substitutionTeachers', 'teachers'] })\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps implements ILearnroom {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\t@Property()\n\tstartDate?: Date;\n\n\t@Index({ name: 'activeCourses' })\n\t@Property()\n\tuntilDate?: Date;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t\tif (props.untilDate) this.untilDate = props.untilDate;\n\t\tif (props.startDate) this.startDate = props.startDate;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n\n\tgetSubstitutionTeacherIds(): EntityId[] {\n\t\tconst ids: EntityId[] = this.substitutionTeachers.getIdentifiers('id');\n\n\t\treturn ids;\n\t}\n\n\tgetStudentIds(): EntityId[] {\n\t\tconst ids: EntityId[] = this.students.getIdentifiers('id');\n\n\t\treturn ids;\n\t}\n\n\tgetTeacherIds(): EntityId[] {\n\t\tconst ids: EntityId[] = this.teachers.getIdentifiers('id');\n\n\t\treturn ids;\n\t}\n\n\tisFinished(): boolean {\n\t\tif (!this.untilDate) {\n\t\t\treturn false;\n\t\t}\n\t\tconst isFinished = this.untilDate \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CourseController.html":{"url":"controllers/CourseController.html","title":"controller - CourseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CourseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/course.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/course.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { PaginationQuery } from '@shared/controller/';\nimport { ICurrentUser } from '@shared/domain';\nimport { CourseUc } from '../uc/course.uc';\nimport { CourseMetadataListResponse } from './dto';\nimport { CourseMapper } from '../mapper/course.mapper';\n\n@ApiTags('Courses')\n@Authenticate('jwt')\n@Controller('courses')\nexport class CourseController {\n\tconstructor(private readonly courseUc: CourseUc) {}\n\n\t@Get()\n\tasync findForUser(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst [courses, total] = await this.courseUc.findAllByUser(currentUser.userId, paginationQuery);\n\t\tconst courseResponses = courses.map((course) => CourseMapper.mapToMetadataResponse(course));\n\t\tconst { skip, limit } = paginationQuery;\n\n\t\tconst result = new CourseMetadataListResponse(courseResponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseFactory.html":{"url":"classes/CourseFactory.html","title":"class - CourseFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/course.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isFinished\n                            \n                            \n                                isOpen\n                            \n                            \n                                afterBuild\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isFinished\n                        \n                    \n                \n            \n            \n                \nisFinished()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/course.factory.ts:11\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n            \n                \nisOpen()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/course.factory.ts:18\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:86\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:46\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:72\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:59\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:124\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:98\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:120\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:136\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:110\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from 'fishery';\n\nimport { Course, School, ICourseProperties } from '@shared/domain';\n\nimport { schoolFactory } from './school.factory';\nimport { BaseFactory } from './base.factory';\n\nconst oneDay = 24 * 60 * 60 * 1000;\n\nclass CourseFactory extends BaseFactory {\n\tisFinished(): this {\n\t\tconst untilDate = new Date(Date.now() - oneDay);\n\t\tconst params: DeepPartial = { untilDate };\n\n\t\treturn this.params(params);\n\t}\n\n\tisOpen(): this {\n\t\tconst untilDate = new Date(Date.now() + oneDay);\n\t\tconst params: DeepPartial = { untilDate };\n\n\t\treturn this.params(params);\n\t}\n}\n\nexport const courseFactory = CourseFactory.define(Course, ({ sequence, params }) => {\n\tlet school: School;\n\tif (params?.school) {\n\t\tschool = params.school as School;\n\t} else {\n\t\tschool = schoolFactory.build();\n\t}\n\n\treturn {\n\t\tname: `course #${sequence}`,\n\t\tdescription: `course #${sequence} description`,\n\t\tcolor: '#FFFFFF',\n\t\tschool,\n\t};\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseGroup.html":{"url":"classes/CourseGroup.html","title":"class - CourseGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParentId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseGroupProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseGroupProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getParentId\n                        \n                    \n                \n            \n            \n                \ngetParentId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ObjectId\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseGroupRepo.html":{"url":"injectables/CourseGroupRepo.html","title":"injectable - CourseGroupRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseGroupRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup } from '@shared/domain';\n\n@Injectable()\nexport class CourseGroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByCourseIds(courseIds: EntityId[]): Promise> {\n\t\tconst [courseGroups, count] = await this.em.findAndCount(CourseGroup, {\n\t\t\tcourse: { $in: courseIds },\n\t\t});\n\t\treturn [courseGroups, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseMapper.html":{"url":"classes/CourseMapper.html","title":"class - CourseMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/course.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToMetadataResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToMetadataResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToMetadataResponse(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/course.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseMetadataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Course } from '@shared/domain';\nimport { CourseMetadataResponse } from '../controller/dto';\n\nexport class CourseMapper {\n\tstatic mapToMetadataResponse(course: Course): CourseMetadataResponse {\n\t\tconst courseMetadata = course.getMetadata();\n\t\tconst dto = new CourseMetadataResponse(\n\t\t\tcourseMetadata.id,\n\t\t\tcourseMetadata.title,\n\t\t\tcourseMetadata.shortTitle,\n\t\t\tcourseMetadata.displayColor,\n\t\t\tcourseMetadata.startDate,\n\t\t\tcourseMetadata.untilDate\n\t\t);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseMetadataListResponse.html":{"url":"classes/CourseMetadataListResponse.html","title":"class - CourseMetadataListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseMetadataListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: CourseMetadataResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    CourseMetadataResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CourseMetadataResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { EntityId } from '@shared/domain';\n\nexport class CourseMetadataResponse {\n\tconstructor(\n\t\tid: EntityId,\n\t\ttitle: string,\n\t\tshortTitle: string,\n\t\tdisplayColor: string,\n\t\tstartDate?: Date,\n\t\tuntilDate?: Date\n\t) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.startDate = startDate;\n\t\tthis.untilDate = untilDate;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Start date of the course',\n\t})\n\tstartDate?: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'End date of the course. After this the course counts as archived',\n\t})\n\tuntilDate?: Date;\n}\n\nexport class CourseMetadataListResponse extends PaginationResponse {\n\tconstructor(data: CourseMetadataResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [CourseMetadataResponse] })\n\tdata: CourseMetadataResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseMetadataResponse.html":{"url":"classes/CourseMetadataResponse.html","title":"class - CourseMetadataResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseMetadataResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                    Optional\n                                startDate\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                untilDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: EntityId, title: string, shortTitle: string, displayColor: string, startDate?: Date, untilDate?: Date)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shortTitle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayColor\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        untilDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Start date of the course'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        untilDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'End date of the course. After this the course counts as archived'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { EntityId } from '@shared/domain';\n\nexport class CourseMetadataResponse {\n\tconstructor(\n\t\tid: EntityId,\n\t\ttitle: string,\n\t\tshortTitle: string,\n\t\tdisplayColor: string,\n\t\tstartDate?: Date,\n\t\tuntilDate?: Date\n\t) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.startDate = startDate;\n\t\tthis.untilDate = untilDate;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Start date of the course',\n\t})\n\tstartDate?: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'End date of the course. After this the course counts as archived',\n\t})\n\tuntilDate?: Date;\n}\n\nexport class CourseMetadataListResponse extends PaginationResponse {\n\tconstructor(data: CourseMetadataResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [CourseMetadataResponse] })\n\tdata: CourseMetadataResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:104\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseRepo.html":{"url":"injectables/CourseRepo.html","title":"injectable - CourseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/course/course.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findAllForTeacher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/course/course.repo.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId, filters?: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, Course, Counted, IFindOptions } from '@shared/domain';\nimport { Scope } from '../scope';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforTeacher(userId: EntityId): CourseScope {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforActiveCourses(): CourseScope {\n\t\tconst now = new Date();\n\t\tconst noUntilDate = { untilDate: { $exists: false } };\n\t\tconst untilDateInFuture = { untilDate: { $gte: now } };\n\n\t\tthis.addQuery({ $or: [noUntilDate, untilDateInFuture] });\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(\n\t\tuserId: EntityId,\n\t\tfilters?: { onlyActiveCourses?: boolean },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\n\t\tif (filters?.onlyActiveCourses) {\n\t\t\tscope.forActiveCourses();\n\t\t}\n\n\t\tconst { pagination, order } = options || {};\n\t\tconst queryOptions = {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t};\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query, queryOptions);\n\n\t\treturn [courses, count];\n\t}\n\n\t// not tested in repo.integration.spec\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forTeacher(userId);\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseScope.html":{"url":"classes/CourseScope.html","title":"class - CourseScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/course/course.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forActiveCourses\n                            \n                            \n                                forAllGroupTypes\n                            \n                            \n                                forTeacher\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forActiveCourses\n                        \n                    \n                \n            \n            \n                \nforActiveCourses()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CourseScope\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forAllGroupTypes\n                        \n                    \n                \n            \n            \n                \nforAllGroupTypes(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forTeacher\n                        \n                    \n                \n            \n            \n                \nforTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, Course, Counted, IFindOptions } from '@shared/domain';\nimport { Scope } from '../scope';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforTeacher(userId: EntityId): CourseScope {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforActiveCourses(): CourseScope {\n\t\tconst now = new Date();\n\t\tconst noUntilDate = { untilDate: { $exists: false } };\n\t\tconst untilDateInFuture = { untilDate: { $gte: now } };\n\n\t\tthis.addQuery({ $or: [noUntilDate, untilDateInFuture] });\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(\n\t\tuserId: EntityId,\n\t\tfilters?: { onlyActiveCourses?: boolean },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\n\t\tif (filters?.onlyActiveCourses) {\n\t\t\tscope.forActiveCourses();\n\t\t}\n\n\t\tconst { pagination, order } = options || {};\n\t\tconst queryOptions = {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t};\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query, queryOptions);\n\n\t\treturn [courses, count];\n\t}\n\n\t// not tested in repo.integration.spec\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forTeacher(userId);\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseUc.html":{"url":"injectables/CourseUc.html","title":"injectable - CourseUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/course.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAllByUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/course.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \nfindAllByUser(userId: EntityId, options?: PaginationQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/course.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, Course, Counted, SortOrder } from '@shared/domain';\nimport { CourseRepo } from '@shared/repo';\nimport { PaginationQuery } from '@shared/controller/';\n\n@Injectable()\nexport class CourseUc {\n\tconstructor(private readonly courseRepo: CourseRepo) {}\n\n\tfindAllByUser(userId: EntityId, options?: PaginationQuery): Promise> {\n\t\treturn this.courseRepo.findAllByUserId(userId, {}, { pagination: options, order: { updatedAt: SortOrder.desc } });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Optional\n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\nimport { NewsTargetModel } from '@shared/domain';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle!: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent!: string;\n\n\t@IsDate()\n\t@IsOptional()\n\t@ApiPropertyOptional({\n\t\tdescription:\n\t\t\t'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published',\n\t})\n\tdisplayAt?: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel!: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DashboardController.html":{"url":"controllers/DashboardController.html","title":"controller - DashboardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DashboardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dashboard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dashboard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                            \n                                    Async\n                                moveElement\n                            \n                            \n                                    Async\n                                patchGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElement(dashboardId: string, params: MoveElementParams, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/moveElement')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                MoveElementParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        patchGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    patchGroup(dashboardId: string, x: number, y: number, params: PatchGroupParams, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/element')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                PatchGroupParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Patch, Param, Body, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { ParseObjectIdPipe } from '@shared/controller';\nimport { ICurrentUser } from '@shared/domain';\nimport { DashboardUc } from '../uc/dashboard.uc';\nimport { DashboardResponse, MoveElementParams, PatchGroupParams } from './dto';\nimport { DashboardMapper } from '../mapper/dashboard.mapper';\n\n@ApiTags('Dashboard')\n@Authenticate('jwt')\n@Controller('dashboard')\nexport class DashboardController {\n\tconstructor(private readonly dashboardUc: DashboardUc) {}\n\n\t@Get()\n\tasync findForUser(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\tconst dashboard = await this.dashboardUc.getUsersDashboard(currentUser.userId);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id/moveElement')\n\tasync moveElement(\n\t\t@Param('id', ParseObjectIdPipe) dashboardId: string,\n\t\t@Body() params: MoveElementParams,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst dashboard = await this.dashboardUc.moveElementOnDashboard(\n\t\t\tdashboardId,\n\t\t\tparams.from,\n\t\t\tparams.to,\n\t\t\tcurrentUser.userId\n\t\t);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id/element')\n\tasync patchGroup(\n\t\t@Param('id', ParseObjectIdPipe) dashboardId: string,\n\t\t@Query('x') x: number,\n\t\t@Query('y') y: number,\n\t\t@Body() params: PatchGroupParams,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst dashboard = await this.dashboardUc.renameGroupOnDashboard(\n\t\t\tdashboardId,\n\t\t\t{ x, y },\n\t\t\tparams.title,\n\t\t\tcurrentUser.userId\n\t\t);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardEntity.html":{"url":"classes/DashboardEntity.html","title":"class - DashboardEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                grid\n                            \n                            \n                                id\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addRoom\n                            \n                            \n                                    Private\n                                allRooms\n                            \n                            \n                                    Private\n                                determineNewRoomsIn\n                            \n                            \n                                getElement\n                            \n                            \n                                    Private\n                                getFirstOpenIndex\n                            \n                            \n                                getGrid\n                            \n                            \n                                getId\n                            \n                            \n                                    Private\n                                getReferencesFromPosition\n                            \n                            \n                                getUserId\n                            \n                            \n                                    Private\n                                gridIndexFromPosition\n                            \n                            \n                                    Private\n                                mergeElementIntoPosition\n                            \n                            \n                                moveElement\n                            \n                            \n                                    Private\n                                positionFromGridIndex\n                            \n                            \n                                    Private\n                                removeFromPosition\n                            \n                            \n                                setLearnRooms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, props: DashboardProps)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:162\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        DashboardProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:143\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:149\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRoom(room: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:242\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        allRooms\n                        \n                    \n                \n            \n            \n                \n                    \n                    allRooms()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ILearnroom[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        determineNewRoomsIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    determineNewRoomsIn(rooms: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rooms\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ILearnroom[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getElement\n                        \n                    \n                \n            \n            \n                \ngetElement(position: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFirstOpenIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstOpenIndex()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGrid\n                        \n                    \n                \n            \n            \n                \ngetGrid()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementWithPosition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getReferencesFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferencesFromPosition(position: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserId\n                        \n                    \n                \n            \n            \n                \ngetUserId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        gridIndexFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    gridIndexFromPosition(pos: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pos\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        mergeElementIntoPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeElementIntoPosition(element: IGridElement, position: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                IGridElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveElement\n                        \n                    \n                \n            \n            \n                \nmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElementWithPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        positionFromGridIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    positionFromGridIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        removeFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFromPosition(position: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:268\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLearnRooms\n                        \n                    \n                \n            \n            \n                \nsetLearnRooms(rooms: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rooms\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId, LearnroomMetadata } from '@shared/domain/types';\nimport { ILearnroom } from '@shared/domain/interface';\n\nconst defaultColumns = 4;\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReference(index: number): void;\n\n\tgetReferences(): ILearnroom[];\n\n\taddReferences(anotherReference: ILearnroom[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: LearnroomMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid!: EntityId;\n\n\ttitle!: string;\n\n\tprivate sortReferences = (a: ILearnroom, b: ILearnroom) => {\n\t\tconst titleA = a.getMetadata().title;\n\t\tconst titleB = b.getMetadata().title;\n\t\tif (titleA  titleB) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t};\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: ILearnroom[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references.sort(this.sortReferences);\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string, group: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: ILearnroom[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): ILearnroom[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReference(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : 'exampleTitle';\n\t\tconst groupMetadata = {\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; grid: GridElementWithPosition[]; userId: EntityId };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\tgrid: Map;\n\n\tuserId: EntityId;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tthis.userId = props.userId;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetUserId(): EntityId {\n\t\treturn this.userId;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tsetLearnRooms(rooms: ILearnroom[]): void {\n\t\tconst newRooms = this.determineNewRoomsIn(rooms);\n\n\t\tnewRooms.forEach((room) => {\n\t\t\tthis.addRoom(room);\n\t\t});\n\t}\n\n\tprivate determineNewRoomsIn(rooms: ILearnroom[]): ILearnroom[] {\n\t\tconst result: ILearnroom[] = [];\n\t\tconst existingRooms = this.allRooms();\n\t\trooms.forEach((room) => {\n\t\t\tif (!existingRooms.includes(room)) {\n\t\t\t\tresult.push(room);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tprivate allRooms(): ILearnroom[] {\n\t\tconst elements = [...this.grid.values()];\n\t\tconst references = elements\n\t\t\t.map((el) => {\n\t\t\t\treturn el.getReferences();\n\t\t\t})\n\t\t\t.flat();\n\t\treturn references;\n\t}\n\n\tprivate addRoom(room: ILearnroom): void {\n\t\tconst index = this.getFirstOpenIndex();\n\t\tconst newElement = GridElement.FromSingleReference(room);\n\t\tthis.grid.set(index, newElement);\n\t}\n\n\tprivate getFirstOpenIndex(): number {\n\t\tlet i = 1;\n\t\twhile (this.grid.get(i) !== undefined) {\n\t\t\ti += 1;\n\t\t}\n\t\treturn i;\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReference(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementModel.html":{"url":"classes/DashboardGridElementModel.html","title":"class - DashboardGridElementModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dashboard\n                            \n                            \n                                references\n                            \n                            \n                                title\n                            \n                            \n                                xPos\n                            \n                            \n                                yPos\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DashboardModelEntity', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('Course', undefined, {fieldName: 'referenceIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, ManyToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\nimport { User } from './user.entity';\nimport { Course } from './course.entity';\nimport { EntityId } from '../types';\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id?: string) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\t@Property()\n\ttitle!: string;\n\n\t@Property()\n\txPos!: number;\n\n\t@Property()\n\tyPos!: number;\n\n\t@ManyToMany('Course', undefined, { fieldName: 'referenceIds' })\n\treferences = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard!: IdentifiedReference;\n}\n\nexport interface IDashboardModelProperties {\n\tid: string;\n\tuser: EntityId | User;\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(props: IDashboardModelProperties) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(props.id);\n\t\tthis.id = props.id;\n\t\tObject.assign(this, { user: props.user });\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\t@ManyToOne('User', { fieldName: 'userId', wrappedReference: true })\n\tuser!: IdentifiedReference;\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementResponse.html":{"url":"classes/DashboardGridElementResponse.html","title":"class - DashboardGridElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                    Optional\n                                groupElements\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                            \n                                xPosition\n                            \n                            \n                                yPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DashboardGridSubElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of all subelements in the group'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'X position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Y position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor!: string;\n}\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition!: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition!: number;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements?: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid!: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements!: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridSubElementResponse.html":{"url":"classes/DashboardGridSubElementResponse.html","title":"class - DashboardGridSubElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridSubElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor!: string;\n}\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition!: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition!: number;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements?: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid!: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements!: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardMapper.html":{"url":"classes/DashboardMapper.html","title":"class - DashboardMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(dashboard: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DashboardEntity } from '@shared/domain';\nimport { DashboardResponse, DashboardGridElementResponse } from '../controller/dto';\n\nexport class DashboardMapper {\n\tstatic mapToResponse(dashboard: DashboardEntity): DashboardResponse {\n\t\tconst dto = new DashboardResponse();\n\n\t\tdto.id = dashboard.id;\n\n\t\tdto.gridElements = dashboard.getGrid().map((elementWithPosition) => {\n\t\t\tconst elementDTO = new DashboardGridElementResponse();\n\n\t\t\tconst data = elementWithPosition.gridElement.getContent();\n\t\t\telementDTO.id = data.referencedId;\n\t\t\telementDTO.title = data.title;\n\t\t\telementDTO.shortTitle = data.shortTitle;\n\t\t\telementDTO.displayColor = data.displayColor;\n\t\t\tif (data.group) {\n\t\t\t\telementDTO.groupElements = data.group;\n\t\t\t}\n\n\t\t\tconst { pos } = elementWithPosition;\n\t\t\telementDTO.xPosition = pos.x;\n\t\t\telementDTO.yPosition = pos.y;\n\n\t\t\treturn elementDTO;\n\t\t});\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardModelEntity.html":{"url":"classes/DashboardModelEntity.html","title":"class - DashboardModelEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardModelEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                user\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IDashboardModelProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IDashboardModelProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Collection\n\n                    \n                \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('DashboardGridElementModel', 'dashboard')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'userId', wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, ManyToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\nimport { User } from './user.entity';\nimport { Course } from './course.entity';\nimport { EntityId } from '../types';\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id?: string) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\t@Property()\n\ttitle!: string;\n\n\t@Property()\n\txPos!: number;\n\n\t@Property()\n\tyPos!: number;\n\n\t@ManyToMany('Course', undefined, { fieldName: 'referenceIds' })\n\treferences = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard!: IdentifiedReference;\n}\n\nexport interface IDashboardModelProperties {\n\tid: string;\n\tuser: EntityId | User;\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(props: IDashboardModelProperties) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(props.id);\n\t\tthis.id = props.id;\n\t\tObject.assign(this, { user: props.user });\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\t@ManyToOne('User', { fieldName: 'userId', wrappedReference: true })\n\tuser!: IdentifiedReference;\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardModelMapper.html":{"url":"injectables/DashboardModelMapper.html","title":"injectable - DashboardModelMapper","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardModelMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                instantiateGridElementModel\n                            \n                            \n                                    Async\n                                mapDashboardToEntity\n                            \n                            \n                                    Async\n                                mapDashboardToModel\n                            \n                            \n                                    Async\n                                mapElementToEntity\n                            \n                            \n                                    Async\n                                mapGridElementToModel\n                            \n                            \n                                    Async\n                                mapReferenceToEntity\n                            \n                            \n                                mapReferenceToModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        instantiateGridElementModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    instantiateGridElementModel(gridElement: IGridElement)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gridElement\n                                    \n                                                IGridElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapDashboardToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapDashboardToEntity(modelEntity: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapDashboardToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapDashboardToModel(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapElementToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapElementToEntity(modelEntity: DashboardGridElementModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardGridElementModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapGridElementToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapGridElementToModel(elementWithPosition: GridElementWithPosition, dashboard: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapReferenceToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapReferenceToEntity(modelEntity: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapReferenceToModel\n                        \n                    \n                \n            \n            \n                \nmapReferenceToModel(reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Course\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { wrap, EntityManager } from '@mikro-orm/core';\nimport { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport {\n\tDashboardEntity,\n\tGridElement,\n\tIGridElement,\n\tGridElementWithPosition,\n\tILearnroom,\n\tLearnroomTypes,\n\tDashboardGridElementModel,\n\tDashboardModelEntity,\n\tCourse,\n} from '@shared/domain';\n\n@Injectable()\nexport class DashboardModelMapper {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tasync mapReferenceToEntity(modelEntity: Course): Promise {\n\t\tconst domainEntity = await wrap(modelEntity).init();\n\t\treturn domainEntity;\n\t}\n\n\tasync mapElementToEntity(modelEntity: DashboardGridElementModel): Promise {\n\t\tconst referenceModels = await modelEntity.references.loadItems();\n\t\tconst references = await Promise.all(referenceModels.map((ref) => this.mapReferenceToEntity(ref)));\n\t\tconst result = {\n\t\t\tpos: { x: modelEntity.xPos, y: modelEntity.yPos },\n\t\t\tgridElement: GridElement.FromPersistedGroup(modelEntity.id, modelEntity.title, references),\n\t\t};\n\t\treturn result;\n\t}\n\n\tasync mapDashboardToEntity(modelEntity: DashboardModelEntity): Promise {\n\t\tif (!modelEntity.gridElements.isInitialized()) {\n\t\t\tawait modelEntity.gridElements.init();\n\t\t}\n\t\tconst grid = await Promise.all(\n\t\t\tArray.from(modelEntity.gridElements).map(async (e) => {\n\t\t\t\treturn this.mapElementToEntity(e);\n\t\t\t})\n\t\t);\n\t\treturn new DashboardEntity(modelEntity.id, { grid, userId: modelEntity.user.id });\n\t}\n\n\tmapReferenceToModel(reference: ILearnroom): Course {\n\t\tconst metadata = reference.getMetadata();\n\t\tif (metadata.type === LearnroomTypes.Course) {\n\t\t\tconst course = reference as Course;\n\t\t\treturn course;\n\t\t}\n\t\tthrow new InternalServerErrorException('unknown learnroom type');\n\t}\n\n\tprivate async instantiateGridElementModel(gridElement: IGridElement): Promise {\n\t\tif (!gridElement.hasId()) {\n\t\t\treturn new DashboardGridElementModel();\n\t\t}\n\t\tconst existing = await this.em.findOne(DashboardGridElementModel, gridElement.getId());\n\t\treturn existing || new DashboardGridElementModel(gridElement.getId());\n\t}\n\n\tasync mapGridElementToModel(\n\t\telementWithPosition: GridElementWithPosition,\n\t\tdashboard: DashboardModelEntity\n\t): Promise {\n\t\tconst { gridElement } = elementWithPosition;\n\t\tconst elementModel = await this.instantiateGridElementModel(gridElement);\n\t\telementModel.xPos = elementWithPosition.pos.x;\n\t\telementModel.yPos = elementWithPosition.pos.y;\n\n\t\tif (gridElement.isGroup()) {\n\t\t\telementModel.title = gridElement.getContent().title;\n\t\t}\n\n\t\tconst references = await Promise.all(gridElement.getReferences().map((ref) => this.mapReferenceToModel(ref)));\n\t\telementModel.references.set(references);\n\n\t\telementModel.dashboard = wrap(dashboard).toReference();\n\t\treturn elementModel;\n\t}\n\n\tasync mapDashboardToModel(entity: DashboardEntity): Promise {\n\t\tconst existing = await this.em.findOne(DashboardModelEntity, entity.getId());\n\t\tconst modelEntity = existing || new DashboardModelEntity({ id: entity.getId(), user: entity.getUserId() }); // TODO transform user to reference\n\t\tconst mappedElements = await Promise.all(\n\t\t\tentity.getGrid().map((elementWithPosition) => this.mapGridElementToModel(elementWithPosition, modelEntity))\n\t\t);\n\n\t\tArray.from(modelEntity.gridElements).forEach((el) => {\n\t\t\tif (!mappedElements.includes(el)) {\n\t\t\t\tmodelEntity.gridElements.remove(el);\n\t\t\t\tthis.em.remove(el);\n\t\t\t}\n\t\t});\n\n\t\treturn modelEntity;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardRepo.html":{"url":"injectables/DashboardRepo.html","title":"injectable - DashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/dashboard/dashboard.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDashboardById\n                            \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                persist\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager, mapper: DashboardModelMapper)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapper\n                                                  \n                                                        \n                                                                        DashboardModelMapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persist\n                        \n                    \n                \n            \n            \n                \n                    \n                    persist(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, GridElementWithPosition, DashboardModelEntity } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nconst generateEmptyDashboard = (userId: EntityId) => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tconst dashboard = new DashboardEntity(new ObjectId().toString(), { grid: gridArray, userId });\n\treturn dashboard;\n};\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(userId: EntityId): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager, protected readonly mapper: DashboardModelMapper) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tthis.em.persist(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await this.mapper.mapDashboardToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(userId: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, { user: userId });\n\t\tif (dashboardModel) {\n\t\t\treturn this.mapper.mapDashboardToEntity(dashboardModel);\n\t\t}\n\n\t\tconst dashboard = generateEmptyDashboard(userId);\n\t\tawait this.persistAndFlush(dashboard);\n\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardResponse.html":{"url":"classes/DashboardResponse.html","title":"class - DashboardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DashboardGridElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of all elements visible on the dashboard'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Dashboard entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor!: string;\n}\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor!: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition!: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition!: number;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements?: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid!: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements!: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardUc.html":{"url":"injectables/DashboardUc.html","title":"injectable - DashboardUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/dashboard.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                moveElementOnDashboard\n                            \n                            \n                                    Async\n                                renameGroupOnDashboard\n                            \n                            \n                                    Private\n                                validateUsersMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dashboardRepo: IDashboardRepo, courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dashboardRepo\n                                                  \n                                                        \n                                                                        IDashboardRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElementOnDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElementOnDashboard(dashboardId: EntityId, from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    from\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        renameGroupOnDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    renameGroupOnDashboard(dashboardId: EntityId, position: GridPosition, params: string, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validateUsersMatch\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUsersMatch(dashboard: DashboardEntity, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { DashboardEntity, EntityId, GridPositionWithGroupIndex, GridPosition, SortOrder } from '@shared/domain';\nimport { IDashboardRepo, CourseRepo } from '@shared/repo';\nimport { NotFound } from '@feathersjs/errors';\n\n@Injectable()\nexport class DashboardUc {\n\tconstructor(\n\t\t@Inject('DASHBOARD_REPO') private readonly dashboardRepo: IDashboardRepo,\n\t\tprivate readonly courseRepo: CourseRepo\n\t) {}\n\n\tasync getUsersDashboard(userId: EntityId): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getUsersDashboard(userId);\n\t\tconst [courses] = await this.courseRepo.findAllByUserId(\n\t\t\tuserId,\n\t\t\t{ onlyActiveCourses: true },\n\t\t\t{ order: { name: SortOrder.asc } }\n\t\t);\n\t\tdashboard.setLearnRooms(courses);\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n\n\tasync moveElementOnDashboard(\n\t\tdashboardId: EntityId,\n\t\tfrom: GridPositionWithGroupIndex,\n\t\tto: GridPositionWithGroupIndex,\n\t\tuserId: EntityId\n\t): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getDashboardById(dashboardId);\n\t\tthis.validateUsersMatch(dashboard, userId);\n\n\t\tdashboard.moveElement(from, to);\n\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n\n\tasync renameGroupOnDashboard(\n\t\tdashboardId: EntityId,\n\t\tposition: GridPosition,\n\t\tparams: string,\n\t\tuserId: EntityId\n\t): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getDashboardById(dashboardId);\n\t\tthis.validateUsersMatch(dashboard, userId);\n\n\t\tconst gridElement = dashboard.getElement(position);\n\t\tgridElement.setGroupName(params);\n\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n\n\tprivate validateUsersMatch(dashboard: DashboardEntity, userId: EntityId) {\n\t\tif (dashboard.getUserId() !== userId) {\n\t\t\tthrow new NotFound('no such dashboard found');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseManagementConsole.html":{"url":"classes/DatabaseManagementConsole.html","title":"class - DatabaseManagementConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseManagementConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                seedCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService, databaseManagementUc: DatabaseManagementUc)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/console/database-management.console.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementUc\n                                                  \n                                                        \n                                                                        DatabaseManagementUc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'export', options: undefined, description: 'export database collections to filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'seed', options: undefined, description: 'reset database collections with seed data from filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabaseManagementController.html":{"url":"controllers/DatabaseManagementController.html","title":"controller - DatabaseManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabaseManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/controller/database-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/database\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollection\n                            \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                            \n                                    Async\n                                importCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('seed/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @All('seed')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Param, Post, All } from '@nestjs/common';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\n@Controller('management/database')\nexport class DatabaseManagementController {\n\tconstructor(private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@All('seed')\n\tasync importCollections(): Promise {\n\t\treturn this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem();\n\t}\n\n\t@Post('seed/:collectionName')\n\tasync importCollection(@Param('collectionName') collectionName: string): Promise {\n\t\treturn this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem([collectionName]);\n\t}\n\n\t@Post('export')\n\tasync exportCollections(): Promise {\n\t\treturn this.databaseManagementUc.exportCollectionsToFileSystem();\n\t}\n\n\t@Post('export/:collectionName')\n\tasync exportCollection(@Param('collectionName') collectionName: string): Promise {\n\t\treturn this.databaseManagementUc.exportCollectionsToFileSystem([collectionName]);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseManagementModule.html":{"url":"modules/DatabaseManagementModule.html","title":"module - DatabaseManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseManagementService } from './database-management.service';\n\n@Module({\n\timports: [DatabaseManagementService],\n\texports: [DatabaseManagementService],\n})\nexport class DatabaseManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementService.html":{"url":"injectables/DatabaseManagementService.html","title":"injectable - DatabaseManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearCollection\n                            \n                            \n                                    Async\n                                collectionExists\n                            \n                            \n                                    Async\n                                createCollection\n                            \n                            \n                                    Async\n                                dropCollection\n                            \n                            \n                                    Async\n                                findDocumentsOfCollection\n                            \n                            \n                                    Async\n                                getCollectionNames\n                            \n                            \n                                    Private\n                                getDatabaseCollection\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    db\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        collectionExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionExists(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dropCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    dropCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findDocumentsOfCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    findDocumentsOfCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollectionNames()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDatabaseCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Collection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string, jsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        db\n                    \n                \n\n                \n                    \n                        getdb()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { Collection, Db } from 'mongodb';\n\n@Injectable()\nexport class DatabaseManagementService {\n\tconstructor(private em: EntityManager) {}\n\n\tprivate get db(): Db {\n\t\treturn this.em.getConnection('write').getDb();\n\t}\n\n\tprivate getDatabaseCollection(collectionName: string): Collection {\n\t\tconst collection = this.db.collection(collectionName);\n\t\treturn collection;\n\t}\n\n\tasync importCollection(collectionName: string, jsonDocuments: unknown[]): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tif (jsonDocuments.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst { insertedCount } = await collection.insertMany(jsonDocuments, {\n\t\t\tforceServerObjectId: true,\n\t\t\tbypassDocumentValidation: true,\n\t\t});\n\t\treturn insertedCount;\n\t}\n\n\tasync findDocumentsOfCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst documents = (await collection.find({}).toArray()) as unknown[];\n\t\treturn documents;\n\t}\n\n\tasync clearCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst { deletedCount } = await collection.deleteMany({});\n\t\treturn deletedCount || 0;\n\t}\n\n\tasync getCollectionNames(): Promise {\n\t\tconst collections = (await this.db.listCollections(undefined, { nameOnly: true }).toArray()) as unknown[] as {\n\t\t\tname: string;\n\t\t}[];\n\t\tconst collectionNames = collections.map((collection) => collection.name);\n\t\treturn collectionNames;\n\t}\n\n\tasync collectionExists(collectionName: string): Promise {\n\t\tconst collections = await this.getCollectionNames();\n\t\tconst result = collections.includes(collectionName);\n\t\treturn result;\n\t}\n\n\tasync createCollection(collectionName: string): Promise {\n\t\tawait this.db.createCollection(collectionName);\n\t}\n\n\tasync dropCollection(collectionName: string): Promise {\n\t\tawait this.db.dropCollection(collectionName);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementUc.html":{"url":"injectables/DatabaseManagementUc.html","title":"injectable - DatabaseManagementUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                basePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollectionsToFileSystem\n                            \n                            \n                                    Private\n                                getSeedFolder\n                            \n                            \n                                    Private\n                                getTargetFolder\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromDatabase\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromFilesystem\n                            \n                            \n                                    Private\n                                    Async\n                                loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                            \n                            \n                                    Async\n                                seedDatabaseCollectionsFromFileSystem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseDir\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileSystemAdapter: FileSystemAdapter, databaseManagementService: DatabaseManagementService, bsonConverter: BsonConverter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileSystemAdapter\n                                                  \n                                                        \n                                                                        FileSystemAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementService\n                                                  \n                                                        \n                                                                        DatabaseManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bsonConverter\n                                                  \n                                                        \n                                                                        BsonConverter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollectionsToFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:183\n                \n            \n\n\n            \n                \n                    Exports all or defined  from database as bson to filesystem.\nThe behaviour should match $ mongoexport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional override existing seed data files\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSeedFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeedFolder()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:38\n                \n            \n\n\n            \n                \n                    setup dir with json files\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getTargetFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFolder(toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:46\n                \n            \n\n\n            \n                \n                    export folder name based on current date\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromDatabase(targetFolder: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:63\n                \n            \n\n\n            \n                \n                    Loads all collection names from database and adds related file paths.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetFolder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromFilesystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromFilesystem(baseDir: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:76\n                \n            \n\n\n            \n                \n                    Loads all collection names and file paths from backup files.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseDir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCollectionsAvailableFromSourceAndFilterByCollectionNames(source: \"files\" | \"database\", folder: string, collectionNameFilter?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:91\n                \n            \n\n\n            \n                \n                    Scans  for existing collections and optionally filters them based on \n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            \"files\" | \"database\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collectionNameFilter\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        the filtered collection names and related file paths\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedDatabaseCollectionsFromFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedDatabaseCollectionsFromFileSystem(collections?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:134\n                \n            \n\n\n            \n                \n                    Imports all or filtered  from filesystem as bson to database.\nThe behaviour should match $ mongoimport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '../../../../../../backup'\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                        \n                    \n\n            \n                \n                    relative path to seed data folder based of location of this file.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseDir\n                    \n                \n\n                \n                    \n                        getbaseDir()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:30\n                                \n                            \n                    \n                        \n                                absolute path reference for seed data base folder.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteFilesConsole.html":{"url":"classes/DeleteFilesConsole.html","title":"class - DeleteFilesConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteFilesConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/job/delete-files.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                removeDeletedFilesData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deleteFilesUc: DeleteFilesUc)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/files/job/delete-files.console.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deleteFilesUc\n                                                  \n                                                        \n                                                                        DeleteFilesUc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/files/job/delete-files.console.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDeletedFilesData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDeletedFilesData(removedSinceDays: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'cleanup-job ', description: 'cleanup job to remove files that were marked for deletion  days ago'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/files/job/delete-files.console.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removedSinceDays\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Console, Command } from 'nestjs-console';\nimport { Logger } from '@src/core/logger';\nimport { DeleteFilesUc } from '../uc';\n\n@Console({ command: 'files', description: 'file deletion console' })\nexport class DeleteFilesConsole {\n\tprivate logger: Logger;\n\n\tconstructor(private deleteFilesUc: DeleteFilesUc) {\n\t\tthis.logger = new Logger(DeleteFilesConsole.name);\n\t}\n\n\t@Command({\n\t\tcommand: 'cleanup-job ',\n\t\tdescription: 'cleanup job to remove files that were marked for deletion  days ago',\n\t})\n\tasync removeDeletedFilesData(removedSinceDays: number): Promise {\n\t\tthis.logger.log(`cleanup job will remove files that were marked for deletion ${removedSinceDays} days ago`);\n\t\tconst removedSince = new Date();\n\t\tremovedSince.setDate(removedSince.getDate() - removedSinceDays);\n\n\t\tawait this.deleteFilesUc.removeDeletedFilesData(removedSince);\n\t\tthis.logger.log('cleanup job finished');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteFilesUc.html":{"url":"injectables/DeleteFilesUc.html","title":"injectable - DeleteFilesUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteFilesUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/uc/delete-files.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                removeDeletedFilesData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filesRepo: FilesRepo, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/files/uc/delete-files.uc.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filesRepo\n                                                  \n                                                        \n                                                                        FilesRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDeletedFilesData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDeletedFilesData(removedSince: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/files/uc/delete-files.uc.ts:15\n                \n            \n\n\n            \n                \n                    Schedules files that have been removed prior removedSince by a user to be removed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removedSince\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { FilesRepo } from '@shared/repo';\n\n@Injectable()\nexport class DeleteFilesUc {\n\tconstructor(private filesRepo: FilesRepo, private logger: Logger) {\n\t\tthis.logger.setContext(DeleteFilesUc.name);\n\t}\n\n\t/**\n\t * Schedules files that have been removed prior removedSince by a user to be removed.\n\t * @param removedSince\n\t */\n\tasync removeDeletedFilesData(removedSince: Date): Promise {\n\t\tconst filesForDeletion = await this.filesRepo.findAllFilesForCleanup(removedSince);\n\t\tconst numberOfFiles = filesForDeletion.length;\n\t\tthis.logger.log(`${numberOfFiles} files will be deleted`);\n\t\tconst failingFileIds: string[] = [];\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const file of filesForDeletion) {\n\t\t\ttry {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tawait this.filesRepo.deleteFile(file);\n\t\t\t} catch (err) {\n\t\t\t\tfailingFileIds.push(file.id);\n\t\t\t\tthis.logger.error(err);\n\t\t\t}\n\t\t}\n\t\tthis.logger.log(`${numberOfFiles - failingFileIds.length} out of ${numberOfFiles} files were successfully deleted`);\n\t\tif (failingFileIds.length > 0) {\n\t\t\tthis.logger.error('the following files could not be deleted:', failingFileIds);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Directory.html":{"url":"classes/Directory.html","title":"class - Directory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Directory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFile\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                isDirectory\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDirectory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DurationLoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EncryptedStringType.html":{"url":"classes/EncryptedStringType.html","title":"class - EncryptedStringType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EncryptedStringType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/types/EncryptedString.type.ts\n        \n\n\n            \n                Description\n            \n            \n                Serialization type to transparent encrypt string values in database.\n\n            \n\n            \n                Extends\n            \n            \n                        Type\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                encryptionService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToDatabaseValue\n                            \n                            \n                                convertToJSValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(customKey?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encryptionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SymetricKeyEncryptionService\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToDatabaseValue\n                        \n                    \n                \n            \n            \n                \nconvertToDatabaseValue(value: string | undefined, platform: Platform)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platform\n                                    \n                                            Platform\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertToJSValue\n                        \n                    \n                \n            \n            \n                \nconvertToJSValue(value: string | undefined, platform: Platform)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platform\n                                    \n                                            Platform\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Configuration } from '@hpi-schul-cloud/commons';\nimport { Type, Platform } from '@mikro-orm/core';\nimport { SymetricKeyEncryptionService } from '../../infra/encryption';\n\n/**\n * Serialization type to transparent encrypt string values in database.\n */\nexport class EncryptedStringType extends Type {\n\t// TODO modularize service?\n\tprivate encryptionService: SymetricKeyEncryptionService;\n\n\tconstructor(customKey?: string) {\n\t\tsuper();\n\t\tif (customKey) {\n\t\t\tthis.encryptionService = new SymetricKeyEncryptionService(customKey);\n\t\t} else {\n\t\t\tthis.encryptionService = new SymetricKeyEncryptionService(Configuration.get('S3_KEY') as string);\n\t\t}\n\t}\n\n\tconvertToDatabaseValue(value: string | undefined, platform: Platform): string {\n\t\t// keep nullish values\n\t\tif (!value) {\n\t\t\treturn value as string;\n\t\t}\n\n\t\t// encrypt non-empty strings only\n\t\tif (value?.length === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tconst encryptedString = this.encryptionService.encrypt(value);\n\n\t\treturn encryptedString;\n\t}\n\n\tconvertToJSValue(value: string | undefined, platform: Platform): string {\n\t\t// keep nullish values\n\t\tif (!value) {\n\t\t\treturn value as string;\n\t\t}\n\n\t\t// decrypt non-empty strings only\n\t\tif (value?.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// decrypt only non-empty strings\n\t\tconst decryptedString: string = this.encryptionService.decrypt(value);\n\n\t\treturn decryptedString;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EncryptionModule.html":{"url":"modules/EncryptionModule.html","title":"module - EncryptionModule","body":"\n                   \n\n\n\n\n    Modules\n    EncryptionModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: EncryptionModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                EncryptionModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { SymetricKeyEncryptionService } from './encryption.service';\n\nexport interface EncryptionModuleOptions {\n\tSymmetricCipherKey: string;\n}\n\n@Module({})\nexport class EncryptionModule {\n\tstatic forRoot(options: EncryptionModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: EncryptionModule,\n\t\t\tproviders: [\n\t\t\t\tSymetricKeyEncryptionService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'SYMMETRIC_CIPHER_KEY',\n\t\t\t\t\tuseValue: options.SymmetricCipherKey,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [SymetricKeyEncryptionService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EncryptionModuleOptions.html":{"url":"interfaces/EncryptionModuleOptions.html","title":"interface - EncryptionModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EncryptionModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            SymmetricCipherKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        SymmetricCipherKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SymmetricCipherKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { SymetricKeyEncryptionService } from './encryption.service';\n\nexport interface EncryptionModuleOptions {\n\tSymmetricCipherKey: string;\n}\n\n@Module({})\nexport class EncryptionModule {\n\tstatic forRoot(options: EncryptionModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: EncryptionModule,\n\t\t\tproviders: [\n\t\t\t\tSymetricKeyEncryptionService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'SYMMETRIC_CIPHER_KEY',\n\t\t\t\t\tuseValue: options.SymmetricCipherKey,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [SymetricKeyEncryptionService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserSchoolPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserTargetPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId, NewsTargetModel } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { FeathersServiceProvider } from '@shared/infra/feathers';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            className\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FeathersModule_exports\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/feathers/feathers.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/feathers/feathers-service.provider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service find method\n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service get method\n                \n            \n            \n                \nget(id: string, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: string, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/feathers/feathers-service.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getService\n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: string, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFile\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bucket\n                            \n                            \n                                storageFileName\n                            \n                            \n                                storageProvider\n                            \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                isDirectory\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IFileProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IFileProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bucket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storageFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storageProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StorageProvider\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('StorageProvider', {fieldName: 'storageProviderId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDirectory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileStorageAdapter.html":{"url":"injectables/FileStorageAdapter.html","title":"injectable - FileStorageAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileStorageAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/filestorage/filestorage.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(file: File)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/filestorage/filestorage.adapter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { S3Client, DeleteObjectCommand } from '@aws-sdk/client-s3';\n\nimport { Injectable } from '@nestjs/common';\nimport { StorageProvider, File } from '@shared/domain';\n\nfunction createStorageProviderClient(storageProvider: StorageProvider): S3Client {\n\treturn new S3Client({\n\t\tendpoint: storageProvider.endpointUrl,\n\t\tforcePathStyle: true,\n\t\tregion: storageProvider.region,\n\t\ttls: true,\n\t\tcredentials: {\n\t\t\taccessKeyId: storageProvider.accessKeyId,\n\t\t\tsecretAccessKey: storageProvider.secretAccessKey,\n\t\t},\n\t});\n}\n\n@Injectable()\nexport class FileStorageAdapter {\n\tasync deleteFile(file: File): Promise {\n\t\tconst { storageProvider, bucket, storageFileName } = file;\n\t\tconst storageProviderClient = createStorageProviderClient(storageProvider);\n\t\tconst deletionCommand = new DeleteObjectCommand({ Bucket: bucket, Key: storageFileName });\n\t\tawait storageProviderClient.send(deletionCommand);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemAdapter.html":{"url":"injectables/FileSystemAdapter.html","title":"injectable - FileSystemAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                encoding\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createDir\n                            \n                            \n                                    Async\n                                createTmpDir\n                            \n                            \n                                joinPath\n                            \n                            \n                                    Async\n                                readDir\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                    Async\n                                removeDirRecursive\n                            \n                            \n                                    Async\n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    EOL\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:26\n                \n            \n\n\n            \n                \n                    creates a directory if not already exists\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTmpDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTmpDir(dirNamePrefix: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:68\n                \n            \n\n\n            \n                \n                    Creates a folder in systems temp path.\nThe dirNamePrefix given will be extended by six random characters.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirNamePrefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        full path string to temp folder, format depends on os\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinPath\n                        \n                    \n                \n            \n            \n                \njoinPath(...paths: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    readDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:36\n                \n            \n\n\n            \n                \n                    Lists filenames of given folderPath\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        string array of filenames\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(filePath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:57\n                \n            \n\n\n            \n                \n                    Read file from filesystem with given encoding, defaults to utf-8\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to existing file, format depending on os\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        file content as encoded text\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDirRecursive\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDirRecursive(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:78\n                \n            \n\n\n            \n                \n                    Removes the given folder recursively including content when not empty.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder, format depending on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        writeFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeFile(filePath: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:48\n                \n            \n\n\n            \n                \n                    Write text to file, will override existing files.\nThe folder in which the file will be created must exist.\nThe path format depends on os\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to a file\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BufferEncoding\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        EOL\n                    \n                \n\n                \n                    \n                        getEOL()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { promises as fsp, existsSync } from 'fs';\nimport os from 'os';\nimport path from 'path';\n\nimport rimraf = require('rimraf');\n\nconst { mkdir, readdir, writeFile, readFile, mkdtemp } = fsp;\n\n@Injectable()\nexport class FileSystemAdapter {\n\tprivate encoding: BufferEncoding;\n\n\tconstructor() {\n\t\tthis.encoding = 'utf-8';\n\t}\n\n\tget EOL(): string {\n\t\treturn os.EOL;\n\t}\n\n\t/**\n\t * creates a directory if not already exists\n\t * @param folderPath\n\t */\n\tasync createDir(folderPath: string): Promise {\n\t\tconst exists = existsSync(folderPath);\n\t\tif (!exists) await mkdir(folderPath);\n\t}\n\n\t/**\n\t * Lists filenames of given folderPath\n\t * @param folderPath path to an existing folder\n\t * @returns string array of filenames\n\t */\n\tasync readDir(folderPath: string): Promise {\n\t\tconst filenames = await readdir(folderPath, { encoding: this.encoding });\n\t\treturn filenames;\n\t}\n\n\t/**\n\t * Write text to file, will override existing files.\n\t * The folder in which the file will be created must exist.\n\t * The path format depends on os\n\t * @param filePath path to a file\n\t * @param text\n\t */\n\tasync writeFile(filePath: string, text: string): Promise {\n\t\tawait writeFile(filePath, text);\n\t}\n\n\t/**\n\t * Read file from filesystem with given encoding, defaults to utf-8\n\t * @param filePath path to existing file, format depending on os\n\t * @returns file content as encoded text\n\t */\n\tasync readFile(filePath: string): Promise {\n\t\tconst text = await readFile(filePath, this.encoding);\n\t\treturn text;\n\t}\n\n\t/**\n\t * Creates a folder in systems temp path.\n\t * The dirNamePrefix given will be extended by six random characters.\n\t * @param dirNamePrefix\n\t * @returns full path string to temp folder, format depends on os\n\t */\n\tasync createTmpDir(dirNamePrefix: string): Promise {\n\t\tconst dirPath = this.joinPath(os.tmpdir(), dirNamePrefix);\n\t\tconst tmpDirPath = await mkdtemp(dirPath);\n\t\treturn tmpDirPath;\n\t}\n\n\t/**\n\t * Removes the given folder recursively including content when not empty.\n\t * @param folderPath path to an existing folder, format depending on\n\t */\n\tasync removeDirRecursive(folderPath: string): Promise {\n\t\t// fs.rm changed in node 14.14, use rimraf instead\n\t\trimraf.sync(folderPath);\n\t\treturn Promise.resolve();\n\t}\n\n\tjoinPath(...paths: string[]): string {\n\t\treturn path.join(...paths);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileSystemModule.html":{"url":"modules/FileSystemModule.html","title":"module - FileSystemModule","body":"\n                   \n\n\n\n\n    Modules\n    FileSystemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_exports\n\n\n\ncluster_FileSystemModule_providers\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileSystemAdapter } from './file-system.adapter';\n\n@Module({\n\tproviders: [FileSystemAdapter],\n\texports: [FileSystemAdapter],\n})\nexport class FileSystemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FilesModule_imports\n\n\n\n\nLoggerModule\n\nLoggerModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nLoggerModule->FilesModule\n\n\n\n\n\nDeleteFilesUc\n\nDeleteFilesUc\n\nFilesModule -->\n\nDeleteFilesUc->FilesModule\n\n\n\n\n\nFileStorageAdapter\n\nFileStorageAdapter\n\nFilesModule -->\n\nFileStorageAdapter->FilesModule\n\n\n\n\n\nFilesRepo\n\nFilesRepo\n\nFilesModule -->\n\nFilesRepo->FilesModule\n\n\n\n\n\nStorageProviderRepo\n\nStorageProviderRepo\n\nFilesModule -->\n\nStorageProviderRepo->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeleteFilesUc\n                        \n                        \n                            FileStorageAdapter\n                        \n                        \n                            FilesRepo\n                        \n                        \n                            StorageProviderRepo\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileStorageAdapter } from '@shared/infra/filestorage';\nimport { FilesRepo, StorageProviderRepo } from '@shared/repo';\nimport { LoggerModule } from '@src/core/logger';\nimport { DeleteFilesConsole } from './job/delete-files.console';\nimport { DeleteFilesUc } from './uc';\n\n@Module({\n\timports: [LoggerModule],\n\tproviders: [DeleteFilesConsole, DeleteFilesUc, FilesRepo, StorageProviderRepo, FileStorageAdapter],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesRepo.html":{"url":"injectables/FilesRepo.html","title":"injectable - FilesRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/files/files.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                findAllFilesForCleanup\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileStorageAdapter: FileStorageAdapter, em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/files/files.repo.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileStorageAdapter\n                                                  \n                                                        \n                                                                        FileStorageAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(file: BaseFile)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/files/files.repo.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                BaseFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFilesForCleanup\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFilesForCleanup(cleanupThreshold: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/files/files.repo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cleanupThreshold\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['storageProvider']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/files/files.repo.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { BaseFile, File } from '@shared/domain';\nimport { FileStorageAdapter } from '@shared/infra/filestorage';\nimport { BaseRepo } from '../base.repo';\n\n@Injectable()\nexport class FilesRepo extends BaseRepo {\n\tconstructor(private fileStorageAdapter: FileStorageAdapter, protected readonly em: EntityManager) {\n\t\tsuper(em);\n\t}\n\n\tpropertiesToPopulate = ['storageProvider'];\n\n\tasync findAllFilesForCleanup(cleanupThreshold: Date): Promise {\n\t\tconst filesForCleanupQuery = { deletedAt: { $lte: cleanupThreshold } };\n\t\tconst files = await this.em.find(BaseFile, filesForCleanupQuery);\n\t\tconst regularFiles = files.filter((file) => file instanceof File);\n\t\tawait this.em.populate(regularFiles, this.propertiesToPopulate);\n\t\treturn files;\n\t}\n\n\tasync deleteFile(file: BaseFile): Promise {\n\t\tif (file instanceof File) await this.fileStorageAdapter.deleteFile(file);\n\t\tawait this.removeAndFlush(file);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            DB_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DB_URL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DB_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('Error')\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/filter/global-error.filter.ts:119\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\nimport { ApiValidationErrorResponse } from '../dto/api-validation-error.response';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tif (error instanceof ApiValidationError) {\n\t\tconst response = new ApiValidationErrorResponse(error);\n\t\treturn response;\n\t}\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger: ILogger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GridElement.html":{"url":"classes/GridElement.html","title":"class - GridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElement\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                references\n                            \n                            \n                                    Private\n                                sortReferences\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addReferences\n                            \n                            \n                                    Static\n                                FromGroup\n                            \n                            \n                                    Static\n                                FromPersistedGroup\n                            \n                            \n                                    Static\n                                FromPersistedReference\n                            \n                            \n                                    Static\n                                FromSingleReference\n                            \n                            \n                                getContent\n                            \n                            \n                                getId\n                            \n                            \n                                getReferences\n                            \n                            \n                                hasId\n                            \n                            \n                                isGroup\n                            \n                            \n                                removeReference\n                            \n                            \n                                setGroupName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILearnroom[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sortReferences\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addReferences\n                        \n                    \n                \n            \n            \n                \naddReferences(anotherReference: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anotherReference\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromGroup(title: string, references: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    references\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromPersistedGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromPersistedGroup(id: EntityId, title: string, group: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromPersistedReference\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromPersistedReference(id: EntityId, reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromSingleReference\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromSingleReference(reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContent\n                        \n                    \n                \n            \n            \n                \ngetContent()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferences\n                        \n                    \n                \n            \n            \n                \ngetReferences()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ILearnroom[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasId\n                        \n                    \n                \n            \n            \n                \nhasId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGroup\n                        \n                    \n                \n            \n            \n                \nisGroup()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReference\n                        \n                    \n                \n            \n            \n                \nremoveReference(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGroupName\n                        \n                    \n                \n            \n            \n                \nsetGroupName(newGroupName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newGroupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId, LearnroomMetadata } from '@shared/domain/types';\nimport { ILearnroom } from '@shared/domain/interface';\n\nconst defaultColumns = 4;\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReference(index: number): void;\n\n\tgetReferences(): ILearnroom[];\n\n\taddReferences(anotherReference: ILearnroom[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: LearnroomMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid!: EntityId;\n\n\ttitle!: string;\n\n\tprivate sortReferences = (a: ILearnroom, b: ILearnroom) => {\n\t\tconst titleA = a.getMetadata().title;\n\t\tconst titleB = b.getMetadata().title;\n\t\tif (titleA  titleB) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t};\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: ILearnroom[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references.sort(this.sortReferences);\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string, group: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: ILearnroom[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): ILearnroom[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReference(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : 'exampleTitle';\n\t\tconst groupMetadata = {\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; grid: GridElementWithPosition[]; userId: EntityId };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\tgrid: Map;\n\n\tuserId: EntityId;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tthis.userId = props.userId;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetUserId(): EntityId {\n\t\treturn this.userId;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tsetLearnRooms(rooms: ILearnroom[]): void {\n\t\tconst newRooms = this.determineNewRoomsIn(rooms);\n\n\t\tnewRooms.forEach((room) => {\n\t\t\tthis.addRoom(room);\n\t\t});\n\t}\n\n\tprivate determineNewRoomsIn(rooms: ILearnroom[]): ILearnroom[] {\n\t\tconst result: ILearnroom[] = [];\n\t\tconst existingRooms = this.allRooms();\n\t\trooms.forEach((room) => {\n\t\t\tif (!existingRooms.includes(room)) {\n\t\t\t\tresult.push(room);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tprivate allRooms(): ILearnroom[] {\n\t\tconst elements = [...this.grid.values()];\n\t\tconst references = elements\n\t\t\t.map((el) => {\n\t\t\t\treturn el.getReferences();\n\t\t\t})\n\t\t\t.flat();\n\t\treturn references;\n\t}\n\n\tprivate addRoom(room: ILearnroom): void {\n\t\tconst index = this.getFirstOpenIndex();\n\t\tconst newElement = GridElement.FromSingleReference(room);\n\t\tthis.grid.set(index, newElement);\n\t}\n\n\tprivate getFirstOpenIndex(): number {\n\t\tlet i = 1;\n\t\twhile (this.grid.get(i) !== undefined) {\n\t\t\ti += 1;\n\t\t}\n\t\treturn i;\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReference(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HtmlMailContent.html":{"url":"interfaces/HtmlMailContent.html","title":"interface - HtmlMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HtmlMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICollectionFilePath.html":{"url":"interfaces/ICollectionFilePath.html","title":"interface - ICollectionFilePath","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICollectionFilePath\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            collectionName\n                                        \n                                \n                                \n                                        \n                                            filePath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collectionName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collectionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseGroupProperties.html":{"url":"interfaces/ICourseGroupProperties.html","title":"interface - ICourseGroupProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseGroupProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseProperties.html":{"url":"interfaces/ICourseProperties.html","title":"interface - ICourseProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            substitutionTeachers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teachers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            untilDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        substitutionTeachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        substitutionTeachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        untilDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        untilDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\n\nimport { ILearnroom } from '@shared/domain/interface';\nimport { EntityId, LearnroomMetadata, LearnroomTypes } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\nexport interface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n\tstartDate?: Date;\n\tuntilDate?: Date;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Index({ name: 'findAllForTeacher', properties: ['substitutionTeachers', 'teachers'] })\n@Index({ name: 'findAllByUserId', properties: ['students', 'substitutionTeachers', 'teachers'] })\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps implements ILearnroom {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\t@Property()\n\tstartDate?: Date;\n\n\t@Index({ name: 'activeCourses' })\n\t@Property()\n\tuntilDate?: Date;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t\tif (props.untilDate) this.untilDate = props.untilDate;\n\t\tif (props.startDate) this.startDate = props.startDate;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n\n\tgetSubstitutionTeacherIds(): EntityId[] {\n\t\tconst ids: EntityId[] = this.substitutionTeachers.getIdentifiers('id');\n\n\t\treturn ids;\n\t}\n\n\tgetStudentIds(): EntityId[] {\n\t\tconst ids: EntityId[] = this.students.getIdentifiers('id');\n\n\t\treturn ids;\n\t}\n\n\tgetTeacherIds(): EntityId[] {\n\t\tconst ids: EntityId[] = this.teachers.getIdentifiers('id');\n\n\t\treturn ids;\n\t}\n\n\tisFinished(): boolean {\n\t\tif (!this.untilDate) {\n\t\t\treturn false;\n\t\t}\n\t\tconst isFinished = this.untilDate \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                news interface for ceating news\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountId\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IResolvedUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IResolvedUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardModelProperties.html":{"url":"interfaces/IDashboardModelProperties.html","title":"interface - IDashboardModelProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardModelProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.model.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         EntityId | User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, ManyToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\nimport { User } from './user.entity';\nimport { Course } from './course.entity';\nimport { EntityId } from '../types';\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id?: string) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\t@Property()\n\ttitle!: string;\n\n\t@Property()\n\txPos!: number;\n\n\t@Property()\n\tyPos!: number;\n\n\t@ManyToMany('Course', undefined, { fieldName: 'referenceIds' })\n\treferences = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard!: IdentifiedReference;\n}\n\nexport interface IDashboardModelProperties {\n\tid: string;\n\tuser: EntityId | User;\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(props: IDashboardModelProperties) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(props.id);\n\t\tthis.id = props.id;\n\t\tObject.assign(this, { user: props.user });\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\t@ManyToOne('User', { fieldName: 'userId', wrappedReference: true })\n\tuser!: IdentifiedReference;\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardRepo.html":{"url":"interfaces/IDashboardRepo.html","title":"interface - IDashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/dashboard/dashboard.repo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getDashboardById\n                                    \n                                \n                                \n                                    \n                                        getUsersDashboard\n                                    \n                                \n                                \n                                    \n                                        persistAndFlush\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \ngetDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \ngetUsersDashboard(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \npersistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, GridElementWithPosition, DashboardModelEntity } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nconst generateEmptyDashboard = (userId: EntityId) => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tconst dashboard = new DashboardEntity(new ObjectId().toString(), { grid: gridArray, userId });\n\treturn dashboard;\n};\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(userId: EntityId): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager, protected readonly mapper: DashboardModelMapper) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tthis.em.persist(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await this.mapper.mapDashboardToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(userId: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, { user: userId });\n\t\tif (dashboardModel) {\n\t\t\treturn this.mapper.mapDashboardToEntity(dashboardModel);\n\t\t}\n\n\t\tconst dashboard = generateEmptyDashboard(userId);\n\t\tawait this.persistAndFlush(dashboard);\n\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultMessage\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFileProperties.html":{"url":"interfaces/IFileProperties.html","title":"interface - IFileProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFileProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bucket\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            creator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            deletedAt\n                                        \n                                \n                                \n                                        \n                                            storageFileName\n                                        \n                                \n                                \n                                        \n                                            storageProvider\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deletedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deletedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageFileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        storageFileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageProvider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        storageProvider:         StorageProvider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StorageProvider\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOptions.html":{"url":"interfaces/IFindOptions.html","title":"interface - IFindOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         SortOrderMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortOrderMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         IPagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPagination\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElement.html":{"url":"interfaces/IGridElement.html","title":"interface - IGridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getContent\n                                        \n                                \n                                \n                                        \n                                            getId\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addReferences\n                                    \n                                \n                                \n                                    \n                                        getReferences\n                                    \n                                \n                                \n                                    \n                                        hasId\n                                    \n                                \n                                \n                                    \n                                        isGroup\n                                    \n                                \n                                \n                                    \n                                        removeReference\n                                    \n                                \n                                \n                                    \n                                        setGroupName\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addReferences\n                        \n                    \n                \n            \n            \n                \naddReferences(anotherReference: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anotherReference\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferences\n                        \n                    \n                \n            \n            \n                \ngetReferences()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ILearnroom[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasId\n                        \n                    \n                \n            \n            \n                \nhasId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGroup\n                        \n                    \n                \n            \n            \n                \nisGroup()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReference\n                        \n                    \n                \n            \n            \n                \nremoveReference(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGroupName\n                        \n                    \n                \n            \n            \n                \nsetGroupName(newGroupName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newGroupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getContent:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getId:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId, LearnroomMetadata } from '@shared/domain/types';\nimport { ILearnroom } from '@shared/domain/interface';\n\nconst defaultColumns = 4;\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReference(index: number): void;\n\n\tgetReferences(): ILearnroom[];\n\n\taddReferences(anotherReference: ILearnroom[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: LearnroomMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid!: EntityId;\n\n\ttitle!: string;\n\n\tprivate sortReferences = (a: ILearnroom, b: ILearnroom) => {\n\t\tconst titleA = a.getMetadata().title;\n\t\tconst titleB = b.getMetadata().title;\n\t\tif (titleA  titleB) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t};\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: ILearnroom[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references.sort(this.sortReferences);\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string, group: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: ILearnroom[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): ILearnroom[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReference(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : 'exampleTitle';\n\t\tconst groupMetadata = {\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; grid: GridElementWithPosition[]; userId: EntityId };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\tgrid: Map;\n\n\tuserId: EntityId;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tthis.userId = props.userId;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetUserId(): EntityId {\n\t\treturn this.userId;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tsetLearnRooms(rooms: ILearnroom[]): void {\n\t\tconst newRooms = this.determineNewRoomsIn(rooms);\n\n\t\tnewRooms.forEach((room) => {\n\t\t\tthis.addRoom(room);\n\t\t});\n\t}\n\n\tprivate determineNewRoomsIn(rooms: ILearnroom[]): ILearnroom[] {\n\t\tconst result: ILearnroom[] = [];\n\t\tconst existingRooms = this.allRooms();\n\t\trooms.forEach((room) => {\n\t\t\tif (!existingRooms.includes(room)) {\n\t\t\t\tresult.push(room);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tprivate allRooms(): ILearnroom[] {\n\t\tconst elements = [...this.grid.values()];\n\t\tconst references = elements\n\t\t\t.map((el) => {\n\t\t\t\treturn el.getReferences();\n\t\t\t})\n\t\t\t.flat();\n\t\treturn references;\n\t}\n\n\tprivate addRoom(room: ILearnroom): void {\n\t\tconst index = this.getFirstOpenIndex();\n\t\tconst newElement = GridElement.FromSingleReference(room);\n\t\tthis.grid.set(index, newElement);\n\t}\n\n\tprivate getFirstOpenIndex(): number {\n\t\tlet i = 1;\n\t\twhile (this.grid.get(i) !== undefined) {\n\t\t\ti += 1;\n\t\t}\n\t\treturn i;\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReference(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILearnroom.html":{"url":"interfaces/ILearnroom.html","title":"interface - ILearnroom","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILearnroom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/learnroom.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LearnroomMetadata } from '@shared/domain/types';\n\nexport interface ILearnroom {\n\tgetMetadata: () => LearnroomMetadata;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILessonProperties.html":{"url":"interfaces/ILessonProperties.html","title":"interface - ILessonProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILessonProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\nexport interface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Index({ name: 'findAllByCourseIds' })\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceDescription\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updater\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId | User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId | School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         EntityId | NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updater:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for finding news with optional targetId\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpublished\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResolvedUser.html":{"url":"interfaces/IResolvedUser.html","title":"interface - IResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         IRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRole.html":{"url":"interfaces/IRole.html","title":"interface - IRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleProperties.html":{"url":"interfaces/IRoleProperties.html","title":"interface - IRoleProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoleProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany('Role')\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISchoolProperties.html":{"url":"interfaces/ISchoolProperties.html","title":"interface - ISchoolProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISchoolProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/school.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ISchoolProperties {\n\tname: string;\n}\n@Entity({ tableName: 'schools' })\nexport class School extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ISchoolProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStorageProviderProperties.html":{"url":"interfaces/IStorageProviderProperties.html","title":"interface - IStorageProviderProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStorageProviderProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/storageprovider.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessKeyId\n                                        \n                                \n                                \n                                        \n                                            endpointUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            secretAccessKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessKeyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessKeyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endpointUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endpointUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretAccessKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secretAccessKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { EncryptedStringType } from '@shared/repo/types/EncryptedString.type';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IStorageProviderProperties {\n\tendpointUrl: string;\n\taccessKeyId: string;\n\tsecretAccessKey: string;\n\tregion?: string;\n}\n\n@Entity({ tableName: 'storageproviders' })\nexport class StorageProvider extends BaseEntityWithTimestamps {\n\t@Property()\n\tendpointUrl!: string;\n\n\t@Property()\n\taccessKeyId!: string;\n\n\t@Property({ fieldName: 'secretAccessKey', type: EncryptedStringType })\n\tsecretAccessKey!: string;\n\n\t@Property()\n\tregion?: string;\n\n\tconstructor(props: IStorageProviderProperties) {\n\t\tsuper();\n\t\tthis.endpointUrl = props.endpointUrl;\n\t\tthis.accessKeyId = props.accessKeyId;\n\t\tthis.secretAccessKey = props.secretAccessKey;\n\t\tthis.region = props.region;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubmissionProperties.html":{"url":"interfaces/ISubmissionProperties.html","title":"interface - ISubmissionProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISubmissionProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            courseGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grade\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeComment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeFiles\n                                        \n                                \n                                \n                                        \n                                            student\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentFiles\n                                        \n                                \n                                \n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teamMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseGroup:     CourseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CourseGroup[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grade:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeComment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        student\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        student:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Task\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamMembers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\nexport interface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tgetStudentId(): EntityId {\n\t\treturn this.student.id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskProperties.html":{"url":"interfaces/ITaskProperties.html","title":"interface - ITaskProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            availableDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            creator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            finished\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lesson\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            private\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            submissions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        finished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        finished:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lesson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lesson:         Lesson\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lesson\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submissions:         Submission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Submission[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionsItems(): Submission[] {\n\t\t// TODO: load/init check until mikro-orm base entity is extended\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submissions = this.getSubmissionsItems();\n\t\tconst submittedUserIds = submissions.map((submission) => submission.getStudentId());\n\n\t\treturn submittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst submitted = [...new Set(submittedUserIds)].length;\n\n\t\treturn submitted;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionsItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.getStudentId());\n\n\t\treturn gradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst graded = [...new Set(gradedUserIds)].length;\n\n\t\treturn graded;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.getSubstitutionTeacherIds().includes(userId);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(userId: EntityId): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((id) => userId === id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(userId: EntityId): boolean {\n\t\tconst graded = this.getGradedUserIds().some((id) => userId === id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(userId);\n\t\tconst isGraded = this.isGradedForUser(userId);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskStatus.html":{"url":"interfaces/ITaskStatus.html","title":"interface - ITaskStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graded\n                                        \n                                \n                                \n                                        \n                                            isDraft\n                                        \n                                \n                                \n                                        \n                                            isSubstitutionTeacher\n                                        \n                                \n                                \n                                        \n                                            maxSubmissions\n                                        \n                                \n                                \n                                        \n                                            submitted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graded:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDraft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDraft:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSubstitutionTeacher\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSubstitutionTeacher:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxSubmissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSubmissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitted:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionsItems(): Submission[] {\n\t\t// TODO: load/init check until mikro-orm base entity is extended\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submissions = this.getSubmissionsItems();\n\t\tconst submittedUserIds = submissions.map((submission) => submission.getStudentId());\n\n\t\treturn submittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst submitted = [...new Set(submittedUserIds)].length;\n\n\t\treturn submitted;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionsItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.getStudentId());\n\n\t\treturn gradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst graded = [...new Set(gradedUserIds)].length;\n\n\t\treturn graded;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.getSubstitutionTeacherIds().includes(userId);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(userId: EntityId): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((id) => userId === id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(userId: EntityId): boolean {\n\t\tconst graded = this.getGradedUserIds().some((id) => userId === id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(userId);\n\t\tconst isGraded = this.isGradedForUser(userId);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamProperties.html":{"url":"interfaces/ITeamProperties.html","title":"interface - ITeamProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITeamProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/team.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ITeamProperties {\n\tname: string;\n}\n@Entity({ tableName: 'teams' })\nexport class Team extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ITeamProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties.html":{"url":"interfaces/IUserProperties.html","title":"interface - IUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InlineAttachment.html":{"url":"interfaces/InlineAttachment.html","title":"interface - InlineAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InlineAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                                \n                                        \n                                            contentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtOptions\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            iss\n                                        \n                                \n                                \n                                        \n                                            jti\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ICurrentUser } from '@shared/domain';\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userFacade: UserFacade, jwtValidationAdapter: JwtValidationAdapter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userFacade\n                                                  \n                                                        \n                                                                        UserFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtValidationAdapter\n                                                  \n                                                        \n                                                                        JwtValidationAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { UserFacade } from '@src/modules/user';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\nimport { JwtValidationAdapter } from './jwt-validation.adapter';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userFacade: UserFacade, private readonly jwtValidationAdapter: JwtValidationAdapter) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload): Promise {\n\t\t// check jwt is whitelisted and extend whitelist entry\n\t\tconst { accountId, jti, userId } = payload;\n\t\tawait this.jwtValidationAdapter.isWhitelisted(accountId, jti);\n\t\t// check user exists\n\t\tconst resolvedUser = await this.userFacade.resolveUser(userId);\n\t\tpayload.user = resolvedUser; // todo decide request.user or request.user.user to be used everywhere\n\t\t// TODO: check user/account is active and has one role\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtValidationAdapter.html":{"url":"injectables/JwtValidationAdapter.html","title":"injectable - JwtValidationAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtValidationAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToWhitelist\n                            \n                            \n                                    Async\n                                isWhitelisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addToWhitelist\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToWhitelist(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isWhitelisted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isWhitelisted(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:15\n                \n            \n\n\n            \n                \n                    When validating a jwt it must be added to a whitelist, here we check this.\nWhen the jwt is validated, the expiration time will be extended with this call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        users account id\n\n                                    \n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jwt id (here required to make jwt identifiers identical in redis)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport jwtWhitelist = require('../../../../../../src/services/authentication/logic/whitelist');\n\nconst { ensureTokenIsWhitelisted, addTokenToWhitelist, createRedisIdentifierFromJwtData } = jwtWhitelist;\n\n@Injectable()\nexport class JwtValidationAdapter {\n\t/**\n\t * When validating a jwt it must be added to a whitelist, here we check this.\n\t * When the jwt is validated, the expiration time will be extended with this call.\n\t * @param accountId users account id\n\t * @param jti jwt id (here required to make jwt identifiers identical in redis)\n\t */\n\tasync isWhitelisted(accountId: string, jti: string): Promise {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait ensureTokenIsWhitelisted({ accountId, jti, privateDevice: false });\n\t}\n\n\tasync addToWhitelist(accountId: string, jti: string): Promise {\n\t\tconst redisIdentifier = createRedisIdentifierFromJwtData(accountId, jti);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait addTokenToWhitelist(redisIdentifier);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LearnroomModule.html":{"url":"modules/LearnroomModule.html","title":"module - LearnroomModule","body":"\n                   \n\n\n\n\n    Modules\n    LearnroomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\n\nCourseRepo\n\nCourseRepo\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nCourseRepo->LearnroomModule\n\n\n\n\n\nCourseUc\n\nCourseUc\n\nLearnroomModule -->\n\nCourseUc->LearnroomModule\n\n\n\n\n\nDashboardModelMapper\n\nDashboardModelMapper\n\nLearnroomModule -->\n\nDashboardModelMapper->LearnroomModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/learnroom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CourseRepo\n                        \n                        \n                            CourseUc\n                        \n                        \n                            DashboardModelMapper\n                        \n                        \n                            DashboardUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DashboardController\n                        \n                        \n                            CourseController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { DashboardRepo, DashboardModelMapper, CourseRepo } from '@shared/repo';\n\nimport { DashboardController } from './controller/dashboard.controller';\nimport { CourseController } from './controller/course.controller';\nimport { DashboardUc } from './uc/dashboard.uc';\nimport { CourseUc } from './uc/course.uc';\n\n@Module({\n\timports: [],\n\tcontrollers: [DashboardController, CourseController],\n\tproviders: [\n\t\tDashboardUc,\n\t\t{\n\t\t\tprovide: 'DASHBOARD_REPO',\n\t\t\tuseClass: DashboardRepo,\n\t\t},\n\t\tDashboardModelMapper,\n\t\tCourseUc,\n\t\tCourseRepo,\n\t],\n})\nexport class LearnroomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ILessonProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ILessonProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'findAllByCourseIds'})@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\nexport interface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Index({ name: 'findAllByCourseIds' })\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonFactory.html":{"url":"classes/LessonFactory.html","title":"class - LessonFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/lesson.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterBuild\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:86\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:46\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:72\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:59\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:124\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:98\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:120\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:136\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:110\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Lesson, ILessonProperties, Course } from '@shared/domain';\n\nimport { courseFactory } from './course.factory';\nimport { BaseFactory } from './base.factory';\n\nclass LessonFactory extends BaseFactory {}\n\nexport const lessonFactory = LessonFactory.define(Lesson, ({ sequence, params }) => {\n\tlet course: Course;\n\tif (params.course) {\n\t\tcourse = params.course as Course;\n\t} else {\n\t\tcourse = courseFactory.build();\n\t}\n\n\treturn {\n\t\tname: `lesson #${sequence}`,\n\t\tcourse,\n\t};\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LessonRepo.html":{"url":"injectables/LessonRepo.html","title":"injectable - LessonRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LessonRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByCourseIds(courseIds: EntityId[], filters?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\nimport { EntityId, Lesson, Counted } from '@shared/domain';\n\nimport { LessonScope } from './lesson-scope';\n\n@Injectable()\nexport class LessonRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByCourseIds(courseIds: EntityId[], filters?: { hidden?: boolean }): Promise> {\n\t\tconst scope = new LessonScope();\n\n\t\tscope.byCourseIds(courseIds);\n\n\t\tif (filters?.hidden !== undefined) {\n\t\t\tscope.byHidden(filters.hidden);\n\t\t}\n\n\t\tconst [lessons, count] = await this.em.findAndCount(Lesson, scope.query);\n\n\t\tawait this.em.populate(lessons, ['course']);\n\n\t\treturn [lessons, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonScope.html":{"url":"classes/LessonScope.html","title":"class - LessonScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byCourseIds\n                            \n                            \n                                byHidden\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byHidden\n                        \n                    \n                \n            \n            \n                \nbyHidden(isHidden: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isHidden\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, Lesson } from '@shared/domain';\nimport { Scope } from '../scope';\n\nexport class LessonScope extends Scope {\n\tbyCourseIds(courseIds: EntityId[]): LessonScope {\n\t\tthis.addQuery({ course: { $in: courseIds } });\n\t\treturn this;\n\t}\n\n\tbyHidden(isHidden: boolean): LessonScope {\n\t\tthis.addQuery({ hidden: { $eq: isHidden } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConsoleLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, ConsoleLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend ConsoleLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends ConsoleLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mail.html":{"url":"interfaces/Mail.html","title":"interface - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bcc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            recipients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyTo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bcc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:     PlainTextMailContent | HtmlMailContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlainTextMailContent | HtmlMailContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyTo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailAttachment.html":{"url":"interfaces/MailAttachment.html","title":"interface - MailAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            base64Content\n                                        \n                                \n                                \n                                        \n                                            mimeType\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base64Content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base64Content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimeType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailContent.html":{"url":"interfaces/MailContent.html","title":"interface - MailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attachments\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attachments:     (InlineAttachment | AppendedAttachment)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (InlineAttachment | AppendedAttachment)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: MailModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/mail/mail.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailModuleOptions.html":{"url":"interfaces/MailModuleOptions.html","title":"interface - MailModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amqpConnection: AmqpConnection, options: MailServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/mail/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpConnection\n                                                  \n                                                        \n                                                                    AmqpConnection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(data: Mail)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/mail/mail.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailServiceOptions.html":{"url":"interfaces/MailServiceOptions.html","title":"interface - MailServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_imports\n\n\n\ncluster_ManagementModule_providers\n\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFileSystemModule\n\nFileSystemModule\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BsonConverter\n                        \n                        \n                            ConsoleWriterService\n                        \n                        \n                            DatabaseManagementService\n                        \n                        \n                            DatabaseManagementUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabaseManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementModule\n                        \n                        \n                            FileSystemModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { DatabaseManagementService, DatabaseManagementModule } from '@shared/infra/database';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { FileSystemModule } from '@shared/infra/file-system';\n\nimport { ConsoleWriterService } from '@shared/infra/console';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from '@src/config';\nimport { DatabaseManagementController } from './controller/database-management.controller';\nimport { DatabaseManagementUc } from './uc/database-management.uc';\nimport { BsonConverter } from './converter/bson.converter';\nimport { DatabaseManagementConsole } from './console/database-management.console';\n\n@Module({\n\timports: [\n\t\tFileSystemModule,\n\t\tDatabaseManagementModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\t// TODO repeats server module definitions\n\t\t\ttype: 'mongo',\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t],\n\tproviders: [\n\t\tDatabaseManagementUc,\n\t\tDatabaseManagementService,\n\t\tBsonConverter,\n\t\t// console providers\n\t\tDatabaseManagementConsole,\n\t\t// infra services\n\t\tConsoleWriterService,\n\t],\n\tcontrollers: [DatabaseManagementController],\n})\nexport class ManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleAsyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MongoMemoryServer } from 'mongodb-memory-server-global-4.2';\nimport { MongoDatabaseModuleOptions } from './types';\n\nconst createMikroOrmModule = async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\tconst defaultOptions = {\n\t\t\tentities: ALL_ENTITIES,\n\t\t};\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule({ ...defaultOptions, ...options })],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementParams.html":{"url":"classes/MoveElementParams.html","title":"class - MoveElementParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min, IsOptional } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\tx!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\ty!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@IsOptional()\n\t@ApiPropertyOptional({ description: 'used to identify a position within a group.' })\n\tgroupIndex?: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom!: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto!: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementPosition.html":{"url":"classes/MoveElementPosition.html","title":"class - MoveElementPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                groupIndex\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@IsOptional()@ApiPropertyOptional({description: 'used to identify a position within a group.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min, IsOptional } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\tx!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\ty!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@IsOptional()\n\t@ApiPropertyOptional({ description: 'used to identify a position within a group.' })\n\tgroupIndex?: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom!: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto!: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:35\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:39\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTarget\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:51\n                        \n                    \n\n            \n                \n                    id reference to a collection populated later with name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:55\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:31\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/news.entity.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:21\n                \n            \n\n\n            \n                \n                    Create a news by a user in a given scope (school or team).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:84\n                \n            \n\n\n            \n                \n                    Delete a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:35\n                \n            \n\n\n            \n                \n                    Responds with all news for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:56\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id.\nA user may only read news of scopes he has the read permission.\nThe news entity has school and user names populated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:70\n                \n            \n\n\n            \n                \n                    Update properties of a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\nimport { ParseObjectIdPipe, PaginationQuery } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { NewsUc } from '../uc/news.uc';\n\nimport { CreateNewsParams, NewsFilterQuery, NewsListResponse, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Create a news by a user in a given scope (school or team).\n\t */\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Responds with all news for a user.\n\t */\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new NewsListResponse(dtoList, count);\n\t\treturn response;\n\t}\n\n\t/**\n\t * Retrieve a specific news entry by id.\n\t * A user may only read news of scopes he has the read permission.\n\t * The news entity has school and user names populated.\n\t */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Update properties of a news.\n\t */\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Delete a news.\n\t */\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unpublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '@shared/domain';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsListResponse.html":{"url":"classes/NewsListResponse.html","title":"class - NewsListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:129\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    NewsResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NewsResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:136\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { NewsTargetModel } from '@shared/domain';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tcontent,\n\t\tdisplayAt,\n\t\tsource,\n\t\tsourceDescription,\n\t\ttargetModel,\n\t\ttargetId,\n\t\ttarget,\n\t\tschool,\n\t\tcreator,\n\t\tupdater,\n\t\tcreatedAt,\n\t\tupdatedAt,\n\t\tpermissions,\n\t}: NewsResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.content = content;\n\t\tthis.displayAt = displayAt;\n\t\tthis.source = source;\n\t\tthis.sourceDescription = sourceDescription;\n\t\tthis.targetModel = targetModel;\n\t\tthis.targetId = targetId;\n\t\tthis.target = target;\n\t\tthis.school = school;\n\t\tthis.creator = creator;\n\t\tthis.updater = updater;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.permissions = permissions;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\nexport class NewsListResponse extends PaginationResponse {\n\tconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [NewsResponse] })\n\tdata: NewsResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapCreateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapNewsScopeToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapUpdateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { News, ICreateNews, INewsScope, IUpdateNews, NewsTargetModel } from '@shared/domain';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { TargetInfoMapper } from './target-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst target = TargetInfoMapper.mapToResponse(news.target);\n\t\tconst school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tconst creator = UserInfoMapper.mapToResponse(news.creator);\n\n\t\tconst dto = new NewsResponse({\n\t\t\tid: news.id,\n\t\t\ttitle: news.title,\n\t\t\tcontent: news.content,\n\t\t\tdisplayAt: news.displayAt,\n\t\t\tsource: news.source,\n\t\t\tsourceDescription: news.sourceDescription,\n\t\t\ttargetId: news.target.id,\n\t\t\ttargetModel: news.targetModel,\n\t\t\ttarget,\n\t\t\tschool,\n\t\t\tcreator,\n\t\t\tcreatedAt: news.createdAt,\n\t\t\tupdatedAt: news.updatedAt,\n\t\t\tpermissions: news.permissions,\n\t\t});\n\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_exports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                        \n                            TeamNewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerModule } from '@src/core/logger';\nimport { AuthorizationModule } from '@src/modules/authorization';\nimport { NewsRepo } from '@shared/repo';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsController } from './controller/news.controller';\nimport { TeamNewsController } from './controller/team-news.controller';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController, TeamNewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/news/news.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news.repo.ts:19\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findNewsAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news documents list with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news.repo.ts:32\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['school', 'target', 'creator', 'updater']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/news/news.repo.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery } from '@mikro-orm/core';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { QueryOrderMap } from '@mikro-orm/core/enums';\nimport { Counted, CourseNews, EntityId, IFindOptions, News, SchoolNews, TeamNews } from '@shared/domain';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo extends BaseRepo {\n\tpropertiesToPopulate = ['school', 'target', 'creator', 'updater'];\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param options\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, options);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements (school, target, and updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst newsEntity = await this.em.findOneOrFail(News, id);\n\t\tawait this.em.populate(newsEntity, this.propertiesToPopulate);\n\t\treturn newsEntity;\n\t}\n\n\t/** resolves a news documents list with some elements (school, target, and updator/creator) populated already */\n\tprivate async findNewsAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [newsEntities, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(newsEntities, this.propertiesToPopulate);\n\t\t// populate target for all inheritances of news which not works when the list contains different types\n\t\tconst discriminatorColumn = 'target';\n\t\tconst schoolNews = newsEntities.filter((news) => news instanceof SchoolNews);\n\t\tawait this.em.populate(schoolNews, discriminatorColumn);\n\t\tconst teamNews = newsEntities.filter((news) => news instanceof TeamNews);\n\t\tawait this.em.populate(teamNews, discriminatorColumn);\n\t\tconst courseNews = newsEntities.filter((news) => news instanceof CourseNews);\n\t\tawait this.em.populate(courseNews, discriminatorColumn);\n\t\treturn [newsEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: NewsResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        NewsResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The creation timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the User that created the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The School ownership'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The source description of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TargetInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The target object with id and name, could be the school, team, or course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The update timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:111\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { NewsTargetModel } from '@shared/domain';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tcontent,\n\t\tdisplayAt,\n\t\tsource,\n\t\tsourceDescription,\n\t\ttargetModel,\n\t\ttargetId,\n\t\ttarget,\n\t\tschool,\n\t\tcreator,\n\t\tupdater,\n\t\tcreatedAt,\n\t\tupdatedAt,\n\t\tpermissions,\n\t}: NewsResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.content = content;\n\t\tthis.displayAt = displayAt;\n\t\tthis.source = source;\n\t\tthis.sourceDescription = sourceDescription;\n\t\tthis.targetModel = targetModel;\n\t\tthis.targetId = targetId;\n\t\tthis.target = target;\n\t\tthis.school = school;\n\t\tthis.creator = creator;\n\t\tthis.updater = updater;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.permissions = permissions;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\nexport class NewsListResponse extends PaginationResponse {\n\tconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [NewsResponse] })\n\tdata: NewsResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/news/news-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byTargets\n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news-scope.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byUnpublished\n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news-scope.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { News } from '@shared/domain';\nimport { EmptyResultQuery } from '../query';\nimport { Scope } from '../scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope extends Scope {\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/news/news-target-filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            targetIds\n                                        \n                                \n                                \n                                        \n                                            targetModel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, NewsTargetModel } from '@shared/domain';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModel;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:64\n                \n            \n\n\n            \n                \n                    Provides news for a user, by default odered by displayAt to show latest news first.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByIdForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getNewsPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getRequiredPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTargetFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModel[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n\tEntityId,\n\tIFindOptions,\n\tNews,\n\tSortOrder,\n\tNewsTargetModel,\n\tICreateNews,\n\tINewsScope,\n\tIUpdateNews,\n} from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { AuthorizationService } from '@src/modules/authorization/authorization.service';\nimport { NewsRepo, NewsTargetFilter } from '@shared/repo';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tprivate logger: ILogger;\n\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService) {\n\t\tthis.logger = new Logger(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, displayAt: paramDisplayAt, ...props } = params;\n\t\t// set news as published by default\n\t\tconst displayAt = paramDisplayAt || new Date();\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tdisplayAt,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t * Provides news for a user, by default odered by displayAt to show latest news first.\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\n\t\tif (options == null) options = {};\n\t\t// by default show latest news first\n\t\tif (options.order == null) options.order = { displayAt: SortOrder.desc };\n\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, options);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.removeAndFlush(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModel[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            collection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            override\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        override\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        override:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport abstract class PaginationResponse {\n\tconstructor(total: number, skip?: number, limit?: number) {\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tabstract data: T;\n\n\t@ApiProperty({ type: 'number' })\n\ttotal: number;\n\n\t@ApiProperty({ type: 'number' })\n\tskip?: number;\n\n\t@ApiProperty({ type: 'number' })\n\tlimit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchGroupParams.html":{"url":"classes/PatchGroupParams.html","title":"class - PatchGroupParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchGroupParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/patchGroup.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Patching a the group name of a grid element.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the Group grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/patchGroup.params.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\n/**\n * DTO for Patching a the group name of a grid element.\n */\nexport class PatchGroupParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the Group grid element',\n\t})\n\ttitle!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlainTextMailContent.html":{"url":"interfaces/PlainTextMailContent.html","title":"interface - PlainTextMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlainTextMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUser.html":{"url":"classes/ResolvedUser.html","title":"class - ResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IResolvedUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IResolvedUser, IRole } from '@shared/domain';\n\nexport type Role = IRole;\n\nexport class ResolvedUser implements IResolvedUser {\n\t@ApiProperty()\n\tfirstName!: string;\n\n\t@ApiProperty()\n\tlastName!: string;\n\n\t@ApiProperty()\n\tid!: string;\n\n\t@ApiProperty()\n\tcreatedAt!: Date;\n\n\t@ApiProperty()\n\tupdatedAt!: Date;\n\n\t@ApiProperty()\n\troles!: Role[];\n\n\t@ApiProperty()\n\tpermissions!: string[];\n\n\t@ApiProperty()\n\tschoolId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUserMapper.html":{"url":"classes/ResolvedUserMapper.html","title":"class - ResolvedUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, permissions: string[], roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolvedUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User, Role } from '@shared/domain';\nimport { ResolvedUser } from '../controller/dto';\n\nexport class ResolvedUserMapper {\n\tstatic mapToResponse(user: User, permissions: string[] = [], roles: Role[] = []): ResolvedUser {\n\t\tconst dto = new ResolvedUser();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName || '';\n\t\tdto.lastName = user.lastName || '';\n\t\tdto.createdAt = user.createdAt;\n\t\tdto.updatedAt = user.updatedAt;\n\t\tdto.schoolId = user.school.toString();\n\t\tdto.roles = roles.map((role) => ({ name: role.name, id: role.id }));\n\n\t\tdto.permissions = permissions;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RocketChatError.html":{"url":"classes/RocketChatError.html","title":"class - RocketChatError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RocketChatError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorType\n                            \n                            \n                                    Private\n                                response\n                            \n                            \n                                    Private\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e: any)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        response\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GenericData\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpService, Inject, Injectable } from '@nestjs/common';\nimport { catchError } from 'rxjs/operators';\n\nexport interface RocketChatOptions {\n\turi?: string;\n\tadminUser?: string;\n\tadminPassword?: string;\n\tadminId?: string;\n\tadminToken?: string;\n}\n\ntype GenericData = Record;\n\nexport class RocketChatError extends Error {\n\tprivate statusCode: number;\n\n\tprivate response: GenericData;\n\n\t// rocketchat specific error type\n\tprivate errorType: string;\n\n\tconstructor(e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n\t\tsuper(e.response.statusText);\n\n\t\t// Set the prototype explicitly.\n\t\tObject.setPrototypeOf(this, RocketChatError.prototype);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\t\tthis.statusCode = e.response.statusCode;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.response = e.response.data;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.errorType = e.response.data.errorType;\n\t}\n}\n\ninterface AdminIdAndToken {\n\tid: string;\n\ttoken: string;\n}\n\n@Injectable()\nexport class RocketChatService {\n\tprivate adminIdAndToken?: AdminIdAndToken;\n\n\tconstructor(\n\t\t@Inject('ROCKET_CHAT_OPTIONS') private readonly options: RocketChatOptions,\n\t\tprivate readonly httpService: HttpService\n\t) {}\n\n\tpublic async me(authToken: string, userId: string): Promise {\n\t\treturn this.get('/api/v1/me', authToken, userId);\n\t}\n\n\tpublic async setUserStatus(authToken: string, userId: string, status: string): Promise {\n\t\treturn this.post('/api/v1/users.setStatus', authToken, userId, {\n\t\t\tmessage: '',\n\t\t\tstatus,\n\t\t});\n\t}\n\n\tpublic async createUserToken(userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.createToken', {\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async logoutUser(authToken: string, userId: string): Promise {\n\t\treturn this.post('/api/v1/logout', authToken, userId, {});\n\t}\n\n\tpublic async getUserList(queryString: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/users.list?${queryString}`);\n\t}\n\n\tpublic async unarchiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.unarchive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async archiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.archive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async kickUserFromGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.kick', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async inviteUserToGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.invite', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async addGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.addModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async removeGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.removeModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async getGroupModerators(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.moderators?roomName=${groupName}`);\n\t}\n\n\tpublic async getGroupMembers(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.members?roomName=${groupName}`);\n\t}\n\n\tpublic async createGroup(name: string, members: string[]): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.create', {\n\t\t\tname,\n\t\t\tmembers,\n\t\t});\n\t}\n\n\tpublic async deleteGroup(groupName: string): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.delete', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async createUser(email: string, password: string, username: string, name: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.create', {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tusername,\n\t\t\tname,\n\t\t\tverified: true,\n\t\t});\n\t}\n\n\tpublic async deleteUser(username: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.delete', {\n\t\t\tusername,\n\t\t});\n\t}\n\n\tprivate async postAsAdmin(path: string, body: GenericData): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.post(path, adminIdAndToken.token, adminIdAndToken.id, body);\n\t}\n\n\tprivate async getAsAdmin(path: string): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.get(path, adminIdAndToken.token, adminIdAndToken.id);\n\t}\n\n\tprivate async get(path: string, authToken: string, userId: string): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.get(`${this.options.uri}${path}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async post(path: string, authToken: string, userId: string, body: GenericData): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}${path}`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async getAdminIdAndToken(): Promise {\n\t\tthis.validateRocketChatConfig();\n\n\t\tif (this.adminIdAndToken) {\n\t\t\treturn this.adminIdAndToken;\n\t\t}\n\n\t\tif (this.options.adminId && this.options.adminToken) {\n\t\t\tconst newVar = { id: this.options.adminId, token: this.options.adminToken } as AdminIdAndToken;\n\t\t\tthis.adminIdAndToken = newVar;\n\t\t\treturn newVar;\n\t\t}\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}/api/v1/login`, {\n\t\t\t\tuser: this.options.adminUser,\n\t\t\t\tpassword: this.options.adminPassword,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst responseJson = response?.data;\n\t\tthis.adminIdAndToken = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tid: responseJson.data.userId as string,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\ttoken: responseJson.data.authToken as string,\n\t\t} as AdminIdAndToken;\n\t\treturn this.adminIdAndToken;\n\t}\n\n\tprivate validateRocketChatConfig(): void {\n\t\tif (!this.options.uri) {\n\t\t\tthrow new Error('rocket chat uri not set');\n\t\t}\n\t\tif (!(this.options.adminId && this.options.adminToken) && !(this.options.adminUser && this.options.adminPassword)) {\n\t\t\tthrow new Error('rocket chat adminId and adminToken OR adminUser and adminPassword must be set');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RocketChatModule.html":{"url":"modules/RocketChatModule.html","title":"module - RocketChatModule","body":"\n                   \n\n\n\n\n    Modules\n    RocketChatModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: RocketChatOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/rocketchat/rocket-chat.module.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                RocketChatOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule, HttpModule } from '@nestjs/common';\nimport { RocketChatOptions, RocketChatService } from './rocket-chat.service';\n\n@Module({})\nexport class RocketChatModule {\n\tstatic forRoot(options: RocketChatOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: RocketChatModule,\n\t\t\timports: [HttpModule],\n\t\t\tproviders: [\n\t\t\t\tRocketChatService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'ROCKET_CHAT_OPTIONS',\n\t\t\t\t\tuseValue: options,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [RocketChatService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RocketChatOptions.html":{"url":"interfaces/RocketChatOptions.html","title":"interface - RocketChatOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RocketChatOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            adminId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adminPassword\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adminToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adminUser\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adminId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminUser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService, Inject, Injectable } from '@nestjs/common';\nimport { catchError } from 'rxjs/operators';\n\nexport interface RocketChatOptions {\n\turi?: string;\n\tadminUser?: string;\n\tadminPassword?: string;\n\tadminId?: string;\n\tadminToken?: string;\n}\n\ntype GenericData = Record;\n\nexport class RocketChatError extends Error {\n\tprivate statusCode: number;\n\n\tprivate response: GenericData;\n\n\t// rocketchat specific error type\n\tprivate errorType: string;\n\n\tconstructor(e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n\t\tsuper(e.response.statusText);\n\n\t\t// Set the prototype explicitly.\n\t\tObject.setPrototypeOf(this, RocketChatError.prototype);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\t\tthis.statusCode = e.response.statusCode;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.response = e.response.data;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.errorType = e.response.data.errorType;\n\t}\n}\n\ninterface AdminIdAndToken {\n\tid: string;\n\ttoken: string;\n}\n\n@Injectable()\nexport class RocketChatService {\n\tprivate adminIdAndToken?: AdminIdAndToken;\n\n\tconstructor(\n\t\t@Inject('ROCKET_CHAT_OPTIONS') private readonly options: RocketChatOptions,\n\t\tprivate readonly httpService: HttpService\n\t) {}\n\n\tpublic async me(authToken: string, userId: string): Promise {\n\t\treturn this.get('/api/v1/me', authToken, userId);\n\t}\n\n\tpublic async setUserStatus(authToken: string, userId: string, status: string): Promise {\n\t\treturn this.post('/api/v1/users.setStatus', authToken, userId, {\n\t\t\tmessage: '',\n\t\t\tstatus,\n\t\t});\n\t}\n\n\tpublic async createUserToken(userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.createToken', {\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async logoutUser(authToken: string, userId: string): Promise {\n\t\treturn this.post('/api/v1/logout', authToken, userId, {});\n\t}\n\n\tpublic async getUserList(queryString: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/users.list?${queryString}`);\n\t}\n\n\tpublic async unarchiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.unarchive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async archiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.archive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async kickUserFromGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.kick', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async inviteUserToGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.invite', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async addGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.addModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async removeGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.removeModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async getGroupModerators(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.moderators?roomName=${groupName}`);\n\t}\n\n\tpublic async getGroupMembers(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.members?roomName=${groupName}`);\n\t}\n\n\tpublic async createGroup(name: string, members: string[]): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.create', {\n\t\t\tname,\n\t\t\tmembers,\n\t\t});\n\t}\n\n\tpublic async deleteGroup(groupName: string): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.delete', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async createUser(email: string, password: string, username: string, name: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.create', {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tusername,\n\t\t\tname,\n\t\t\tverified: true,\n\t\t});\n\t}\n\n\tpublic async deleteUser(username: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.delete', {\n\t\t\tusername,\n\t\t});\n\t}\n\n\tprivate async postAsAdmin(path: string, body: GenericData): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.post(path, adminIdAndToken.token, adminIdAndToken.id, body);\n\t}\n\n\tprivate async getAsAdmin(path: string): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.get(path, adminIdAndToken.token, adminIdAndToken.id);\n\t}\n\n\tprivate async get(path: string, authToken: string, userId: string): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.get(`${this.options.uri}${path}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async post(path: string, authToken: string, userId: string, body: GenericData): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}${path}`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async getAdminIdAndToken(): Promise {\n\t\tthis.validateRocketChatConfig();\n\n\t\tif (this.adminIdAndToken) {\n\t\t\treturn this.adminIdAndToken;\n\t\t}\n\n\t\tif (this.options.adminId && this.options.adminToken) {\n\t\t\tconst newVar = { id: this.options.adminId, token: this.options.adminToken } as AdminIdAndToken;\n\t\t\tthis.adminIdAndToken = newVar;\n\t\t\treturn newVar;\n\t\t}\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}/api/v1/login`, {\n\t\t\t\tuser: this.options.adminUser,\n\t\t\t\tpassword: this.options.adminPassword,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst responseJson = response?.data;\n\t\tthis.adminIdAndToken = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tid: responseJson.data.userId as string,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\ttoken: responseJson.data.authToken as string,\n\t\t} as AdminIdAndToken;\n\t\treturn this.adminIdAndToken;\n\t}\n\n\tprivate validateRocketChatConfig(): void {\n\t\tif (!this.options.uri) {\n\t\t\tthrow new Error('rocket chat uri not set');\n\t\t}\n\t\tif (!(this.options.adminId && this.options.adminToken) && !(this.options.adminUser && this.options.adminPassword)) {\n\t\t\tthrow new Error('rocket chat adminId and adminToken OR adminUser and adminPassword must be set');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IRoleProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IRoleProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'primaryRoleSearchOperation'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('Role')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany('Role')\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/role/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                resolvePermissionsFromSubRolesById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/role/role.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/role/role.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/role/role.repo.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsFromSubRolesById\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsFromSubRolesById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/role/role.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60000\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/role/role.repo.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, Role } from '@shared/domain';\n\n@Injectable()\nexport class RoleRepo {\n\tcache = 60000;\n\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByName(name: string): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { name }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { id }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsFromSubRolesById(id: EntityId): Promise {\n\t\tconst role = await this.findById(id);\n\t\tlet { permissions } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleUC.html":{"url":"injectables/RoleUC.html","title":"injectable - RoleUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/role.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolvePermissionsByRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepo: RoleRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/role.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepo\n                                                  \n                                                        \n                                                                        RoleRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsByRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByRoles(inputRoles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/role.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputRoles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { IPermissionsAndRoles, Role } from '@shared/domain';\n\nimport { RoleRepo } from '@shared/repo';\n\n@Injectable()\nexport class RoleUC {\n\tconstructor(private readonly roleRepo: RoleRepo) {}\n\n\tasync resolvePermissionsByRoles(inputRoles: Role[]): Promise {\n\t\tconst roles = await Promise.all(\n\t\t\tinputRoles.map((role) => this.roleRepo.resolvePermissionsFromSubRolesById(role.id))\n\t\t);\n\n\t\tlet permissions: string[] = [];\n\t\troles.forEach((role) => {\n\t\t\tpermissions = [...permissions, ...role.permissions];\n\t\t});\n\t\tpermissions = [...new Set(permissions)];\n\n\t\treturn { roles, permissions };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/school.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ISchoolProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ISchoolProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ISchoolProperties {\n\tname: string;\n}\n@Entity({ tableName: 'schools' })\nexport class School extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ISchoolProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: School)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                School\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { School } from '@shared/domain';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: School): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse({ id: schoolInfo.id, name: schoolInfo.name });\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: SchoolInfoResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        SchoolInfoResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\tconstructor({ id, name }: SchoolInfoResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:98\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scope.html":{"url":"classes/Scope.html","title":"class - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/scope.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(operator: ScopeOperator)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        operator\n                                                  \n                                                        \n                                                                        ScopeOperator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/repo/scope.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from './query/empty-result.query';\n\ntype EmptyResultQueryType = typeof EmptyResultQuery;\n\ntype ScopeOperator = '$and' | '$or';\n\nexport class Scope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tprivate _operator: ScopeOperator;\n\n\tconstructor(operator: ScopeOperator = '$and') {\n\t\tthis._operator = operator;\n\t}\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery as FilterQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { [this._operator]: this._queries } : this._queries[0];\n\t\treturn query as FilterQuery;\n\t}\n\n\taddQuery(query: FilterQuery | EmptyResultQueryType): void {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerConsole.html":{"url":"classes/ServerConsole.html","title":"class - ServerConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/server.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getInOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/console/server.console.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'test', description: 'sample test output'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:11\n                \n            \n\n\n            \n                \n                    test method for console output\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInOut\n                        \n                    \n                \n            \n            \n                \ngetInOut(whatever: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'out ', description: 'return input args'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:17\n                \n            \n\n\n            \n                \n                    test method for console input\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    whatever\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console';\n\n@Console({ command: 'server', description: 'sample server console' })\nexport class ServerConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService) {}\n\n\t/** test method for console output */\n\t@Command({ command: 'test', description: 'sample test output' })\n\tgetHello(): void {\n\t\tthis.consoleWriter.info('Schulcloud Server API');\n\t}\n\n\t/** test method for console input */\n\t@Command({ command: 'out ', description: 'return input args' })\n\tgetInOut(whatever: string): void {\n\t\tthis.consoleWriter.info(`input was: ${whatever}`);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerConsoleModule.html":{"url":"modules/ServerConsoleModule.html","title":"module - ServerConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nServerConsoleModule -->\n\nFilesModule->ServerConsoleModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/console/console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConsoleWriterModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ManagementModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleModule } from 'nestjs-console';\nimport { ConsoleWriterModule } from '@shared/infra/console/console-writer/console-writer.module';\nimport { ManagementModule } from '../modules/management/management.module';\nimport { FilesModule } from '../modules/files/files.module';\nimport { ServerConsole } from './server.console';\n\n@Module({\n\timports: [ManagementModule, ConsoleModule, ConsoleWriterModule, FilesModule],\n\tproviders: [\n\t\t/** add console services as providers */\n\t\tServerConsole,\n\t],\n})\nexport class ServerConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nServerModule -->\n\nFilesModule->ServerModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nRocketChatModule\n\nRocketChatModule\n\nServerModule -->\n\nRocketChatModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            RocketChatModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MailModule } from '@shared/infra/mail';\nimport { RocketChatModule } from '@src/modules/rocketchat';\nimport { LearnroomModule } from '@src/modules/learnroom';\nimport { CoreModule } from '@src/core';\nimport { TaskModule } from '@src/modules/task';\nimport { UserModule } from '@src/modules/user';\nimport { NewsModule } from '@src/modules/news';\nimport { FilesModule } from '@src/modules/files';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tTaskModule,\n\t\tNewsModule,\n\t\tUserModule,\n\t\tLearnroomModule,\n\t\tMailModule.forRoot({\n\t\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t\t}),\n\t\tFilesModule,\n\t\tRocketChatModule.forRoot({\n\t\t\turi: Configuration.get('ROCKET_CHAT_URI') as string,\n\t\t\tadminId: Configuration.get('ROCKET_CHAT_ADMIN_ID') as string,\n\t\t\tadminToken: Configuration.get('ROCKET_CHAT_ADMIN_TOKEN') as string,\n\t\t\tadminUser: Configuration.get('ROCKET_CHAT_ADMIN_USER') as string,\n\t\t\tadminPassword: Configuration.get('ROCKET_CHAT_ADMIN_PASSWORD') as string,\n\t\t}),\n\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t\t// debug: true, // use it for locally debugging of querys\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StorageProvider.html":{"url":"classes/StorageProvider.html","title":"class - StorageProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StorageProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/storageprovider.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessKeyId\n                            \n                            \n                                endpointUrl\n                            \n                            \n                                    Optional\n                                region\n                            \n                            \n                                secretAccessKey\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IStorageProviderProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IStorageProviderProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessKeyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endpointUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secretAccessKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'secretAccessKey', type: EncryptedStringType})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { EncryptedStringType } from '@shared/repo/types/EncryptedString.type';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IStorageProviderProperties {\n\tendpointUrl: string;\n\taccessKeyId: string;\n\tsecretAccessKey: string;\n\tregion?: string;\n}\n\n@Entity({ tableName: 'storageproviders' })\nexport class StorageProvider extends BaseEntityWithTimestamps {\n\t@Property()\n\tendpointUrl!: string;\n\n\t@Property()\n\taccessKeyId!: string;\n\n\t@Property({ fieldName: 'secretAccessKey', type: EncryptedStringType })\n\tsecretAccessKey!: string;\n\n\t@Property()\n\tregion?: string;\n\n\tconstructor(props: IStorageProviderProperties) {\n\t\tsuper();\n\t\tthis.endpointUrl = props.endpointUrl;\n\t\tthis.accessKeyId = props.accessKeyId;\n\t\tthis.secretAccessKey = props.secretAccessKey;\n\t\tthis.region = props.region;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageProviderRepo.html":{"url":"injectables/StorageProviderRepo.html","title":"injectable - StorageProviderRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageProviderRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { StorageProvider, EntityId } from '@shared/domain';\nimport { BaseRepo } from '../base.repo';\n\n@Injectable()\nexport class StorageProviderRepo extends BaseRepo {\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst storageProvider = await this.em.findOneOrFail(StorageProvider, id);\n\t\treturn storageProvider;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                    Optional\n                                courseGroup\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFiles\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                teamMembers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStudentId\n                            \n                            \n                                isGraded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ISubmissionProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ISubmissionProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseGroup\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('CourseGroup', {fieldName: 'courseGroupId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'gradeFileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'studentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'fileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Task', {fieldName: 'homeworkId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'teamMembers'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStudentId\n                        \n                    \n                \n            \n            \n                \ngetStudentId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/submission.entity.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGraded\n                        \n                    \n                \n            \n            \n                \nisGraded()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/submission.entity.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\nexport interface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tgetStudentId(): EntityId {\n\t\treturn this.student.id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmissionFactory.html":{"url":"classes/SubmissionFactory.html","title":"class - SubmissionFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmissionFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/submission.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                graded\n                            \n                            \n                                afterBuild\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        graded\n                        \n                    \n                \n            \n            \n                \ngraded()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/submission.factory.ts:8\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:86\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:46\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:72\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:59\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:124\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:98\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:120\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:136\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:110\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from 'fishery';\nimport { Submission, ISubmissionProperties } from '@shared/domain';\nimport { BaseFactory } from './base.factory';\nimport { taskFactory } from './task.factory';\nimport { userFactory } from './user.factory';\n\nclass SubmissionFactory extends BaseFactory {\n\tgraded(): this {\n\t\tconst params: DeepPartial = { gradeComment: 'graded text' };\n\t\treturn this.params(params);\n\t}\n}\n\nexport const submissionFactory = SubmissionFactory.define(Submission, ({ sequence }) => {\n\treturn {\n\t\ttask: taskFactory.build(),\n\t\tstudent: userFactory.build(),\n\t\tcomment: `submission comment #${sequence}`,\n\t};\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/submission/submission.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                byUserIdQuery\n                            \n                            \n                                    Async\n                                findAllByTaskIds\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/submission/submission.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        byUserIdQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    byUserIdQuery(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/submission/submission.repo.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByTaskIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByTaskIds(taskIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/submission/submission.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/submission/submission.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup, Submission } from '@shared/domain';\n\n// TODO: add scope helper\n\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByTaskIds(taskIds: EntityId[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: taskIds },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst result = await this.em.findAndCount(Submission, await this.byUserIdQuery(userId));\n\t\treturn result;\n\t}\n\n\tprivate async byUserIdQuery(userId: EntityId): Promise> {\n\t\tconst courseGroupsOfUser = await this.em.find(CourseGroup, { students: userId });\n\t\tconst query = { $or: [{ student: userId }, { teamMembers: userId }, { courseGroup: { $in: courseGroupsOfUser } }] };\n\t\treturn query;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymetricKeyEncryptionService.html":{"url":"injectables/SymetricKeyEncryptionService.html","title":"injectable - SymetricKeyEncryptionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SymetricKeyEncryptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decrypt\n                            \n                            \n                                    Public\n                                encrypt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        decrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    decrypt(data: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        encrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    encrypt(data: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import CryptoJs from 'crypto-js';\n\nimport { Inject, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SymetricKeyEncryptionService {\n\tconstructor(@Inject('SYMMETRIC_CIPHER_KEY') private readonly key: string) {}\n\n\tpublic encrypt(data: string): string {\n\t\treturn CryptoJs.AES.encrypt(data, this.key).toString();\n\t}\n\n\tpublic decrypt(data: string): string {\n\t\treturn CryptoJs.AES.decrypt(data, this.key).toString(CryptoJs.enc.Utf8);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoMapper.html":{"url":"classes/TargetInfoMapper.html","title":"class - TargetInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/target-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(target: NewsTarget)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/target-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                NewsTarget\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TargetInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NewsTarget } from '@shared/domain';\nimport { TargetInfoResponse } from '../controller/dto/target-info.response';\n\nexport class TargetInfoMapper {\n\tstatic mapToResponse(target: NewsTarget): TargetInfoResponse {\n\t\tconst dto = new TargetInfoResponse({ id: target.id, name: target.name });\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoResponse.html":{"url":"classes/TargetInfoResponse.html","title":"class - TargetInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/target-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: TargetInfoResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        TargetInfoResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TargetInfoResponse {\n\tconstructor({ id, name }: TargetInfoResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the Target entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the Target entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                    Optional\n                                course\n                            \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                finished\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                private\n                            \n                            \n                                submissions\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createStudentStatusForUser\n                            \n                            \n                                createTeacherStatusForUser\n                            \n                            \n                                getDescriptions\n                            \n                            \n                                getGradedUserIds\n                            \n                            \n                                getMaxSubmissions\n                            \n                            \n                                getNumberOfGradedUsers\n                            \n                            \n                                getNumberOfSubmittedUsers\n                            \n                            \n                                    Private\n                                getSubmissionsItems\n                            \n                            \n                                getSubmittedUserIds\n                            \n                            \n                                isDraft\n                            \n                            \n                                isGradedForUser\n                            \n                            \n                                isSubmittedForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ITaskProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ITaskProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'teacherId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finished\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'findAllByParentIds_findAllForTeacher'})@ManyToMany('User', undefined, {fieldName: 'archived'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Lesson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Lesson', {fieldName: 'lessonId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('Submission', 'task')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createStudentStatusForUser\n                        \n                    \n                \n            \n            \n                \ncreateStudentStatusForUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ITaskStatus\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTeacherStatusForUser\n                        \n                    \n                \n            \n            \n                \ncreateTeacherStatusForUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ITaskStatus\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TaskParentDescriptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGradedUserIds\n                        \n                    \n                \n            \n            \n                \ngetGradedUserIds()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMaxSubmissions\n                        \n                    \n                \n            \n            \n                \ngetMaxSubmissions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfGradedUsers\n                        \n                    \n                \n            \n            \n                \ngetNumberOfGradedUsers()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfSubmittedUsers\n                        \n                    \n                \n            \n            \n                \ngetNumberOfSubmittedUsers()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSubmissionsItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubmissionsItems()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Submission[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSubmittedUserIds\n                        \n                    \n                \n            \n            \n                \ngetSubmittedUserIds()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n            \n                \nisDraft()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGradedForUser\n                        \n                    \n                \n            \n            \n                \nisGradedForUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmittedForUser\n                        \n                    \n                \n            \n            \n                \nisSubmittedForUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionsItems(): Submission[] {\n\t\t// TODO: load/init check until mikro-orm base entity is extended\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submissions = this.getSubmissionsItems();\n\t\tconst submittedUserIds = submissions.map((submission) => submission.getStudentId());\n\n\t\treturn submittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst submitted = [...new Set(submittedUserIds)].length;\n\n\t\treturn submitted;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionsItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.getStudentId());\n\n\t\treturn gradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst graded = [...new Set(gradedUserIds)].length;\n\n\t\treturn graded;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.getSubstitutionTeacherIds().includes(userId);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(userId: EntityId): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((id) => userId === id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(userId: EntityId): boolean {\n\t\tconst graded = this.getGradedUserIds().some((id) => userId === id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(userId);\n\t\tconst isGraded = this.isGradedForUser(userId);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskAuthorizationService.html":{"url":"injectables/TaskAuthorizationService.html","title":"injectable - TaskAuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskAuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedCourses\n                            \n                            \n                                    Async\n                                getPermittedLessons\n                            \n                            \n                                    Private\n                                hasCourseReadPermission\n                            \n                            \n                                    Private\n                                hasCourseWritePermission\n                            \n                            \n                                hasTaskPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo, lessonRepo: LessonRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lessonRepo\n                                                  \n                                                        \n                                                                        LessonRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedCourses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedCourses(userId: EntityId, neededPermission: TaskParentPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    neededPermission\n                                    \n                                                TaskParentPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedLessons\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedLessons(userId: EntityId, courses: Course[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    courses\n                                    \n                                                Course[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasCourseReadPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasCourseReadPermission(userId: EntityId, course?: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasCourseWritePermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasCourseWritePermission(userId: EntityId, course?: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasTaskPermission\n                        \n                    \n                \n            \n            \n                \nhasTaskPermission(userId: EntityId, task: Task, permission: TaskParentPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskParentPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, Course, Lesson, Task } from '@shared/domain';\nimport { CourseRepo, LessonRepo } from '@shared/repo';\n\nexport enum TaskParentPermission {\n\tread,\n\twrite,\n}\n\n@Injectable()\nexport class TaskAuthorizationService {\n\tconstructor(private readonly courseRepo: CourseRepo, private readonly lessonRepo: LessonRepo) {}\n\n\t// it should return also the scopePermissions for this user added to the entity .scopePermission: { userId, read: boolean, write: boolean }\n\t// then we can pass and allow only scoped courses to getPermittedLessonIds and validate read write of .scopePermission\n\tasync getPermittedCourses(userId: EntityId, neededPermission: TaskParentPermission): Promise {\n\t\tlet permittedCourses: Course[] = [];\n\n\t\tif (neededPermission === TaskParentPermission.write) {\n\t\t\t[permittedCourses] = await this.courseRepo.findAllForTeacher(userId);\n\t\t} else if (neededPermission === TaskParentPermission.read) {\n\t\t\t[permittedCourses] = await this.courseRepo.findAllByUserId(userId);\n\t\t}\n\n\t\treturn permittedCourses;\n\t}\n\n\tasync getPermittedLessons(userId: EntityId, courses: Course[]): Promise {\n\t\tconst writeCourses = courses.filter((c) => this.hasCourseWritePermission(userId, c));\n\t\tconst readCourses = courses.filter((c) => this.hasCourseReadPermission(userId, c));\n\n\t\tconst writeCourseIds = writeCourses.map((c) => c.id);\n\t\tconst readCourseIds = readCourses.map((c) => c.id);\n\n\t\t// idea as combined query:\n\t\t// [{courseIds: onlyWriteCoursesIds}, { courseIds: onlyReadCourses, filter: { hidden: false }}]\n\t\tconst [[writeLessons], [readLessons]] = await Promise.all([\n\t\t\tthis.lessonRepo.findAllByCourseIds(writeCourseIds),\n\t\t\tthis.lessonRepo.findAllByCourseIds(readCourseIds, { hidden: false }),\n\t\t]);\n\n\t\tconst permittedLessons = [...writeLessons, ...readLessons];\n\n\t\treturn permittedLessons;\n\t}\n\n\tprivate hasCourseWritePermission(userId: EntityId, course?: Course): boolean {\n\t\tconst hasPermission =\n\t\t\tcourse?.getSubstitutionTeacherIds().includes(userId) === true ||\n\t\t\tcourse?.getTeacherIds().includes(userId) === true;\n\n\t\treturn hasPermission;\n\t}\n\n\tprivate hasCourseReadPermission(userId: EntityId, course?: Course): boolean {\n\t\tconst hasPermission = course?.getStudentIds().includes(userId) === true;\n\n\t\treturn hasPermission;\n\t}\n\n\thasTaskPermission(userId: EntityId, task: Task, permission: TaskParentPermission): boolean {\n\t\tconst isCreator = task.creator?.id === userId;\n\t\tlet hasCoursePermission = false;\n\n\t\tif (permission === TaskParentPermission.write) {\n\t\t\thasCoursePermission = this.hasCourseWritePermission(userId, task.course);\n\t\t} else if (permission === TaskParentPermission.read) {\n\t\t\thasCoursePermission =\n\t\t\t\tthis.hasCourseReadPermission(userId, task.course) || this.hasCourseWritePermission(userId, task.course);\n\t\t}\n\n\t\tconst hasPermission = isCreator || hasCoursePermission;\n\n\t\treturn hasPermission;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllFinished\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFinished\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFinished(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('finished')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { ICurrentUser } from '@shared/domain';\nimport { PaginationQuery } from '@shared/controller/';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskListResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('tasks')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAll(currentUser, paginationQuery);\n\t\tconst taskresponses = tasksWithStatus.map((taskWithStatus) => {\n\t\t\treturn TaskMapper.mapToResponse(taskWithStatus);\n\t\t});\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new TaskListResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n\n\t@Get('finished')\n\tasync findAllFinished(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAllFinished(currentUser, paginationQuery);\n\n\t\tconst taskresponses = tasksWithStatus.map((task) => {\n\t\t\treturn TaskMapper.mapToResponse(task);\n\t\t});\n\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new TaskListResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskFactory.html":{"url":"classes/TaskFactory.html","title":"class - TaskFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/task.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                draft\n                            \n                            \n                                finished\n                            \n                            \n                                afterBuild\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        draft\n                        \n                    \n                \n            \n            \n                \ndraft()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/task.factory.ts:9\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finished\n                        \n                    \n                \n            \n            \n                \nfinished(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/task.factory.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:86\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:46\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:72\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:59\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:124\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:98\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:120\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:136\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:110\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from 'fishery';\n\nimport { Task, ITaskProperties } from '@shared/domain';\nimport type { User } from '@shared/domain/entity';\n\nimport { BaseFactory } from './base.factory';\n\nclass TaskFactory extends BaseFactory {\n\tdraft(): this {\n\t\tconst params: DeepPartial = { private: true };\n\n\t\treturn this.params(params);\n\t}\n\n\tfinished(user: User): this {\n\t\tconst params: DeepPartial = { finished: [user] };\n\t\treturn this.params(params);\n\t}\n}\n\nexport const taskFactory = TaskFactory.define(Task, ({ sequence }) => {\n\t// private is by default in constructor true, but in the most test cases we need private: false\n\treturn { name: `task #${sequence}`, private: false };\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskListResponse.html":{"url":"classes/TaskListResponse.html","title":"class - TaskListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    TaskResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TaskResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:59\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse, DecodeHtmlEntities } from '@shared/controller';\nimport { TaskStatusResponse } from './task-status.response';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\tconstructor({ id, name, courseName, createdAt, updatedAt, status }: TaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.courseName = courseName;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tcourseName: string = '' as string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: TaskStatusResponse;\n}\n\nexport class TaskListResponse extends PaginationResponse {\n\tconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [TaskResponse] })\n\tdata: TaskResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(taskWithStatus: TaskWithStatusVo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskWithStatus\n                                    \n                                                TaskWithStatusVo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskWithStatusVo } from '@shared/domain';\nimport { TaskResponse } from '../controller/dto';\nimport { TaskStatusMapper } from './task-status.mapper';\n\nexport class TaskMapper {\n\tstatic mapToResponse(taskWithStatus: TaskWithStatusVo): TaskResponse {\n\t\tconst { task, status } = taskWithStatus;\n\t\tconst taskDesc = task.getDescriptions();\n\t\tconst statusDto = TaskStatusMapper.mapToResponse(status);\n\n\t\tconst dto = new TaskResponse({\n\t\t\tid: task.id,\n\t\t\tname: task.name,\n\t\t\tcourseName: taskDesc.name,\n\t\t\tcreatedAt: task.createdAt,\n\t\t\tupdatedAt: task.updatedAt,\n\t\t\tstatus: statusDto,\n\t\t});\n\n\t\tdto.availableDate = task.availableDate;\n\t\tdto.duedate = task.dueDate;\n\n\t\tdto.displayColor = taskDesc.color;\n\t\tdto.description = taskDesc.description;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nCourseRepo\n\nCourseRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CourseRepo\n                        \n                        \n                            LessonRepo\n                        \n                        \n                            TaskAuthorizationService\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { CourseRepo, LessonRepo, TaskRepo } from '@shared/repo';\n\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc';\nimport { TaskAuthorizationService } from './uc/task.authorization.service';\n\n@Module({\n\timports: [],\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, TaskAuthorizationService, LessonRepo, CourseRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/task/task.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByParentIds\n                            \n                            \n                                    Async\n                                findAllFinishedByParentIds\n                            \n                            \n                                    Private\n                                    Async\n                                findTasksAndCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/task/task.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByParentIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByParentIds(parentIds: literal type, filters?: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:85\n                \n            \n\n\n            \n                \n                    Find all tasks by their parents which can be any of\n\na teacher who owns the task\na list of courses\na list of lessons\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        parentIds for teacher, courses and lesson\n\n                                    \n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        filters\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFinishedByParentIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFinishedByParentIds(parentIds: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findTasksAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTasksAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, QueryOrderMap } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\nimport { EntityId, IFindOptions, Task, Counted, SortOrder } from '@shared/domain';\n\nimport { TaskScope } from './task-scope';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllFinishedByParentIds(\n\t\tparentIds: {\n\t\t\tcreatorId: EntityId;\n\t\t\topenCourseIds: EntityId[];\n\t\t\tlessonIdsOfOpenCourses: EntityId[];\n\t\t\tfinishedCourseIds: EntityId[];\n\t\t\tlessonIdsOfFinishedCourses: EntityId[];\n\t\t},\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst { pagination } = options || {};\n\n\t\tconst scope = new TaskScope('$or');\n\n\t\tconst parentsOpen = new TaskScope('$or');\n\t\tparentsOpen.byCourseIds(parentIds.openCourseIds);\n\t\tparentsOpen.byLessonIds(parentIds.lessonIdsOfOpenCourses);\n\n\t\tconst parentsFinished = new TaskScope('$or');\n\t\tparentsFinished.byCourseIds(parentIds.finishedCourseIds);\n\t\tparentsFinished.byLessonIds(parentIds.lessonIdsOfFinishedCourses);\n\n\t\tconst closedForOpenCoursesAndLessons = new TaskScope();\n\t\tclosedForOpenCoursesAndLessons.addQuery(parentsOpen.query);\n\t\tclosedForOpenCoursesAndLessons.byDraft(false);\n\t\tclosedForOpenCoursesAndLessons.byFinished(parentIds.creatorId, true);\n\n\t\tconst allForFinishedCoursesAndLessons = new TaskScope();\n\t\tallForFinishedCoursesAndLessons.addQuery(parentsFinished.query);\n\t\tallForFinishedCoursesAndLessons.byDraft(false);\n\n\t\t// must find also closed without course or lesson as parent\n\t\tconst closedForCreator = new TaskScope();\n\t\tclosedForCreator.byFinished(parentIds.creatorId, true);\n\t\tclosedForCreator.byCreatorId(parentIds.creatorId);\n\n\t\tconst allForFinishedCoursesAndLessonsForCreator = new TaskScope();\n\t\tallForFinishedCoursesAndLessonsForCreator.addQuery(parentsFinished.query);\n\t\tallForFinishedCoursesAndLessonsForCreator.byCreatorId(parentIds.creatorId);\n\n\t\tconst allForCreator = new TaskScope('$or');\n\t\tallForCreator.addQuery(closedForCreator.query);\n\t\tallForCreator.addQuery(allForFinishedCoursesAndLessonsForCreator.query);\n\n\t\tscope.addQuery(closedForOpenCoursesAndLessons.query);\n\t\tscope.addQuery(allForFinishedCoursesAndLessons.query);\n\t\tscope.addQuery(allForCreator.query);\n\n\t\tconst order = { dueDate: SortOrder.desc };\n\n\t\tconst [tasks, count] = await this.em.findAndCount(Task, scope.query, {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order,\n\t\t});\n\n\t\tawait this.em.populate(tasks, ['course', 'lesson', 'submissions']);\n\n\t\treturn [tasks, count];\n\t}\n\n\t/**\n\t * Find all tasks by their parents which can be any of\n\t * - a teacher who owns the task\n\t * - a list of courses\n\t * - a list of lessons\n\t *\n\t * @param parentIds parentIds for teacher, courses and lesson\n\t * @param filters filters\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAllByParentIds(\n\t\tparentIds: {\n\t\t\tcreatorId?: EntityId;\n\t\t\tcourseIds?: EntityId[];\n\t\t\tlessonIds?: EntityId[];\n\t\t},\n\t\tfilters?: { draft?: boolean; afterDueDateOrNone?: Date; finished?: { userId: EntityId; value: boolean } },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new TaskScope();\n\n\t\tconst parentIdScope = new TaskScope('$or');\n\n\t\tif (parentIds.creatorId) {\n\t\t\tparentIdScope.byOnlyCreatorId(parentIds.creatorId);\n\t\t}\n\n\t\tif (parentIds.courseIds) {\n\t\t\tparentIdScope.byCourseIds(parentIds.courseIds);\n\t\t}\n\n\t\tif (parentIds.lessonIds) {\n\t\t\tparentIdScope.byLessonIds(parentIds.lessonIds);\n\t\t}\n\n\t\tscope.addQuery(parentIdScope.query);\n\n\t\tif (filters?.finished) {\n\t\t\tscope.byFinished(filters.finished.userId, filters.finished.value);\n\t\t}\n\n\t\tif (filters?.draft !== undefined) {\n\t\t\tscope.byDraft(filters.draft);\n\t\t}\n\n\t\tif (filters?.afterDueDateOrNone !== undefined) {\n\t\t\tscope.afterDueDateOrNone(filters.afterDueDateOrNone);\n\t\t}\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\n\t\treturn countedTaskList;\n\t}\n\n\tprivate async findTasksAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [taskEntities, count] = await this.em.findAndCount(Task, query, {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\n\t\tawait this.em.populate(taskEntities, ['course', 'lesson', 'submissions']);\n\n\t\treturn [taskEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: TaskResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        TaskResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '' as string\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskStatusResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse, DecodeHtmlEntities } from '@shared/controller';\nimport { TaskStatusResponse } from './task-status.response';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\tconstructor({ id, name, courseName, createdAt, updatedAt, status }: TaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.courseName = courseName;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tcourseName: string = '' as string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: TaskStatusResponse;\n}\n\nexport class TaskListResponse extends PaginationResponse {\n\tconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [TaskResponse] })\n\tdata: TaskResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskScope.html":{"url":"classes/TaskScope.html","title":"class - TaskScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/task/task-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterDueDateOrNone\n                            \n                            \n                                byCourseIds\n                            \n                            \n                                byCreatorId\n                            \n                            \n                                byDraft\n                            \n                            \n                                byFinished\n                            \n                            \n                                byLessonIds\n                            \n                            \n                                byOnlyCreatorId\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterDueDateOrNone\n                        \n                    \n                \n            \n            \n                \nafterDueDateOrNone(dueDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dueDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byCreatorId\n                        \n                    \n                \n            \n            \n                \nbyCreatorId(creatorId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byDraft\n                        \n                    \n                \n            \n            \n                \nbyDraft(isDraft: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDraft\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byFinished\n                        \n                    \n                \n            \n            \n                \nbyFinished(userId: EntityId, value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byLessonIds\n                        \n                    \n                \n            \n            \n                \nbyLessonIds(lessonIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lessonIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byOnlyCreatorId\n                        \n                    \n                \n            \n            \n                \nbyOnlyCreatorId(teacherId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teacherId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, Task } from '@shared/domain';\nimport { Scope } from '../scope';\n\nexport class TaskScope extends Scope {\n\tbyFinished(userId: EntityId, value: boolean): TaskScope {\n\t\tif (value === true) {\n\t\t\tthis.addQuery({ finished: userId });\n\t\t} else if (value === false) {\n\t\t\tthis.addQuery({ finished: { $ne: userId } });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tbyOnlyCreatorId(teacherId: EntityId): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ creator: teacherId }, { course: null }, { lesson: null }],\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tbyCreatorId(creatorId: EntityId): TaskScope {\n\t\tthis.addQuery({ creator: creatorId });\n\n\t\treturn this;\n\t}\n\n\tbyCourseIds(courseIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ course: { $in: courseIds } }, { lesson: null }],\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tbyLessonIds(lessonIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ lesson: { $in: lessonIds } });\n\n\t\treturn this;\n\t}\n\n\tbyDraft(isDraft: boolean): TaskScope {\n\t\t// FIXME - WE DON'T WANT THIS!!! NON-OPTIONAL BOOLEAN PROPERTIES HAVE TO BE DEFINED.\n\t\t// additionally handle undefined and null as false\n\t\tconst query = isDraft ? { private: { $eq: true } } : { private: { $ne: true } };\n\t\tthis.addQuery(query);\n\n\t\treturn this;\n\t}\n\n\tafterDueDateOrNone(dueDate: Date): TaskScope {\n\t\tthis.addQuery({ $or: [{ dueDate: { $gte: dueDate } }, { dueDate: null }] });\n\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskStatusMapper.html":{"url":"classes/TaskStatusMapper.html","title":"class - TaskStatusMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskStatusMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task-status.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(status: ITaskStatus)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task-status.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                ITaskStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskStatusResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ITaskStatus } from '@shared/domain';\nimport { TaskStatusResponse } from '../controller/dto/task-status.response';\n\nexport class TaskStatusMapper {\n\tstatic mapToResponse(status: ITaskStatus): TaskStatusResponse {\n\t\tconst dto = new TaskStatusResponse(status);\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskStatusResponse.html":{"url":"classes/TaskStatusResponse.html","title":"class - TaskStatusResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskStatusResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task-status.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graded\n                            \n                            \n                                isDraft\n                            \n                            \n                                isSubstitutionTeacher\n                            \n                            \n                                maxSubmissions\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: TaskStatusResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        TaskStatusResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        graded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubstitutionTeacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TaskStatusResponse {\n\tconstructor({ submitted, maxSubmissions, graded, isDraft, isSubstitutionTeacher }: TaskStatusResponse) {\n\t\tthis.submitted = submitted;\n\t\tthis.maxSubmissions = maxSubmissions;\n\t\tthis.graded = graded;\n\t\tthis.isDraft = isDraft;\n\t\tthis.isSubstitutionTeacher = isSubstitutionTeacher;\n\t}\n\n\t@ApiProperty()\n\tsubmitted: number;\n\n\t@ApiProperty()\n\tmaxSubmissions: number;\n\n\t@ApiProperty()\n\tgraded: number;\n\n\t@ApiProperty()\n\tisDraft: boolean;\n\n\t@ApiProperty()\n\tisSubstitutionTeacher: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllFinished\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForTeacher\n                            \n                            \n                                    Private\n                                getDefaultMaxDueDate\n                            \n                            \n                                    Private\n                                hasTaskDashboardPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, authorizationService: TaskAuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        TaskAuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFinished\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFinished(currentUser: ICurrentUser, pagination?: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDefaultMaxDueDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultMaxDueDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasTaskDashboardPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskDashBoardPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, IPagination, Counted, ICurrentUser, SortOrder, TaskWithStatusVo, ITaskStatus } from '@shared/domain';\n\nimport { TaskRepo } from '@shared/repo';\n\nimport { TaskAuthorizationService, TaskParentPermission } from './task.authorization.service';\n\nexport enum TaskDashBoardPermission {\n\tteacherDashboard = 'TASK_DASHBOARD_TEACHER_VIEW_V3',\n\tstudentDashboard = 'TASK_DASHBOARD_VIEW_V3',\n}\n\n@Injectable()\nexport class TaskUC {\n\tconstructor(private readonly taskRepo: TaskRepo, private readonly authorizationService: TaskAuthorizationService) {}\n\n\t// This uc includes 4 awaits + 1 from authentication services.\n\t// 5 awaits from with db calls from one request against the api is for me the absolut maximum what we should allowed.\n\t// TODO: clearify if Admin need TASK_DASHBOARD_TEACHER_VIEW_V3 permission\n\tasync findAllFinished(currentUser: ICurrentUser, pagination?: IPagination): Promise> {\n\t\t// TODO: move to this.authorizationService ?\n\t\tif (\n\t\t\t!this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.teacherDashboard) &&\n\t\t\t!this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.studentDashboard)\n\t\t) {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\tconst { userId } = currentUser;\n\n\t\tconst courses = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.read);\n\t\tconst lessons = await this.authorizationService.getPermittedLessons(userId, courses);\n\n\t\tconst openCourseIds = courses.filter((c) => !c.isFinished()).map((c) => c.id);\n\t\tconst finishedCourseIds = courses.filter((c) => c.isFinished()).map((c) => c.id);\n\t\tconst lessonIdsOfOpenCourses = lessons.filter((l) => !l.course.isFinished()).map((l) => l.id);\n\t\tconst lessonIdsOfFinishedCourses = lessons.filter((l) => l.course.isFinished()).map((l) => l.id);\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllFinishedByParentIds(\n\t\t\t{\n\t\t\t\tcreatorId: userId,\n\t\t\t\topenCourseIds,\n\t\t\t\tfinishedCourseIds,\n\t\t\t\tlessonIdsOfOpenCourses,\n\t\t\t\tlessonIdsOfFinishedCourses,\n\t\t\t},\n\t\t\t{ pagination }\n\t\t);\n\n\t\tconst taskWithStatusVos = tasks.map((task) => {\n\t\t\tlet status: ITaskStatus;\n\t\t\tif (this.authorizationService.hasTaskPermission(userId, task, TaskParentPermission.write)) {\n\t\t\t\tstatus = task.createTeacherStatusForUser(userId);\n\t\t\t} else {\n\t\t\t\t// TaskParentPermission.read check is not needed on this place\n\t\t\t\tstatus = task.createStudentStatusForUser(userId);\n\t\t\t}\n\n\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t});\n\n\t\treturn [taskWithStatusVos, total];\n\t}\n\n\t// TODO: should it display task from courses that are not started?\n\t// TODO replace curentUser with userId. this requires that permissions are loaded inside the use case by authorization service\n\t// TODO: use authorizationService instant of private method\n\tasync findAll(currentUser: ICurrentUser, pagination: IPagination): Promise> {\n\t\tlet response: Counted;\n\n\t\tif (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.studentDashboard)) {\n\t\t\tresponse = await this.findAllForStudent(currentUser.userId, pagination);\n\t\t} else if (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.teacherDashboard)) {\n\t\t\tresponse = await this.findAllForTeacher(currentUser.userId, pagination);\n\t\t} else {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprivate async findAllForStudent(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst courses = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.read);\n\t\tconst openCourses = courses.filter((c) => !c.isFinished());\n\t\tconst lessons = await this.authorizationService.getPermittedLessons(userId, openCourses);\n\n\t\tconst dueDate = this.getDefaultMaxDueDate();\n\t\tconst notFinished = { userId, value: false };\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tcourseIds: openCourses.map((c) => c.id),\n\t\t\t\tlessonIds: lessons.map((l) => l.id),\n\t\t\t},\n\t\t\t{ draft: false, afterDueDateOrNone: dueDate, finished: notFinished },\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.asc },\n\t\t\t}\n\t\t);\n\n\t\tconst taskWithStatusVos = tasks.map((task) => {\n\t\t\tconst status = task.createStudentStatusForUser(userId);\n\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t});\n\n\t\treturn [taskWithStatusVos, total];\n\t}\n\n\tprivate async findAllForTeacher(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst courses = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.write);\n\t\tconst openCourses = courses.filter((c) => !c.isFinished());\n\t\tconst lessons = await this.authorizationService.getPermittedLessons(userId, openCourses);\n\n\t\tconst notFinished = { userId, value: false };\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tcreatorId: userId,\n\t\t\t\tcourseIds: openCourses.map((c) => c.id),\n\t\t\t\tlessonIds: lessons.map((l) => l.id),\n\t\t\t},\n\t\t\t{ finished: notFinished },\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.desc },\n\t\t\t}\n\t\t);\n\n\t\tconst taskWithStatusVos = tasks.map((task) => {\n\t\t\tconst status = task.createTeacherStatusForUser(userId);\n\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t});\n\n\t\treturn [taskWithStatusVos, total];\n\t}\n\n\t// TODO: move to this.authorizationService ?\n\tprivate hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission): boolean {\n\t\tconst hasPermission = currentUser.user.permissions.includes(permission);\n\n\t\treturn hasPermission;\n\t}\n\n\t// It is more a util method or domain logic in context of findAllForStudent timeframe\n\tprivate getDefaultMaxDueDate(): Date {\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\n\t\treturn oneWeekAgo;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskWithStatusVo.html":{"url":"classes/TaskWithStatusVo.html","title":"class - TaskWithStatusVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskWithStatusVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(task: Task, status: ITaskStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                  \n                                                        \n                                                                        Task\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        ITaskStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITaskStatus\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionsItems(): Submission[] {\n\t\t// TODO: load/init check until mikro-orm base entity is extended\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submissions = this.getSubmissionsItems();\n\t\tconst submittedUserIds = submissions.map((submission) => submission.getStudentId());\n\n\t\treturn submittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst submitted = [...new Set(submittedUserIds)].length;\n\n\t\treturn submitted;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionsItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.getStudentId());\n\n\t\treturn gradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst graded = [...new Set(gradedUserIds)].length;\n\n\t\treturn graded;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.getSubstitutionTeacherIds().includes(userId);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(userId: EntityId): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((id) => userId === id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(userId: EntityId): boolean {\n\t\tconst graded = this.getGradedUserIds().some((id) => userId === id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(userId: EntityId): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(userId);\n\t\tconst isGraded = this.isGradedForUser(userId);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Team.html":{"url":"classes/Team.html","title":"class - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/team.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ITeamProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/team.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ITeamProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/team.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ITeamProperties {\n\tname: string;\n}\n@Entity({ tableName: 'teams' })\nexport class Team extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ITeamProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Team')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:110\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamNewsController.html":{"url":"controllers/TeamNewsController.html","title":"controller - TeamNewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamNewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/team-news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                team\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllForTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeam(teamId: string, currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':teamId/news')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/team-news.controller.ts:22\n                \n            \n\n\n            \n                \n                    Responds with news of a given team for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { PaginationQuery, ParseObjectIdPipe } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { NewsMapper } from '../mapper/news.mapper';\nimport { NewsUc } from '../uc';\nimport { NewsFilterQuery, NewsListResponse } from './dto';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('team')\nexport class TeamNewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Responds with news of a given team for a user.\n\t */\n\t@Get(':teamId/news')\n\tasync findAllForTeam(\n\t\t@Param('teamId', ParseObjectIdPipe) teamId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise {\n\t\t// enforce filter by a given team, used in team tab\n\t\tscope.targetId = teamId;\n\t\tscope.targetModel = 'teams';\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new NewsListResponse(dtoList, count);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestBootstrapConsole.html":{"url":"classes/TestBootstrapConsole.html","title":"class - TestBootstrapConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestBootstrapConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/test/bootstrap.console.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AbstractBootstrapConsole\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/console/test/bootstrap.console.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Test, TestingModule } from '@nestjs/testing';\nimport { AbstractBootstrapConsole, BootstrapConsole } from 'nestjs-console';\n\nexport class TestBootstrapConsole extends AbstractBootstrapConsole {\n\tcreate(): Promise {\n\t\treturn Test.createTestingModule({\n\t\t\timports: [this.options.module],\n\t\t}).compile();\n\t}\n}\n\nexport const execute = async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Static\n                        defaultTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REQUEST_TIMEOUT\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle!: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent!: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt!: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                school\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'roleIdBasedSearches'})@ManyToMany('Role', undefined, {fieldName: 'roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { UserUC } from '../uc';\nimport { ResolvedUser } from './dto/ResolvedUser.dto';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user')\nexport class UserController {\n\tconstructor(private readonly userUc: UserUC) {}\n\n\t@Get('me')\n\tasync me(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\treturn Promise.resolve(currentUser.user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/user.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userUC: UserUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/user.facade.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userUC\n                                                  \n                                                        \n                                                                        UserUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolveUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/user.facade.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\n\nimport { UserUC } from './uc/user.uc';\nimport { ResolvedUser } from './controller/dto';\n\n@Injectable()\nexport class UserFacade {\n\tconstructor(private readonly userUC: UserUC) {}\n\n\tasync resolveUser(userId: EntityId): Promise {\n\t\tconst resolvedUser = await this.userUC.getUserWithPermissions(userId);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@shared/domain';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(user: User): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse({\n\t\t\tid: user.id,\n\t\t\tfirstName: user.firstName,\n\t\t\tlastName: user.lastName,\n\t\t});\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: UserInfoResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        UserInfoResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'First name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Last name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\tconstructor({ id, firstName, lastName }: UserInfoResponse) {\n\t\tthis.id = id;\n\t\tthis.firstName = firstName;\n\t\tthis.lastName = lastName;\n\t}\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName?: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserFacade \n\nUserFacade \n\n\n\nUserModule\n\nUserModule\n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepo\n                        \n                        \n                            RoleUC\n                        \n                        \n                            UserFacade\n                        \n                        \n                            UserRepo\n                        \n                        \n                            UserUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoleRepo, UserRepo } from '@shared/repo';\nimport { UserController } from './controller';\nimport { UserUC, RoleUC } from './uc';\nimport { UserFacade } from './user.facade';\n\n@Module({\n\tcontrollers: [UserController],\n\tproviders: [RoleRepo, UserRepo, UserUC, RoleUC, UserFacade],\n\texports: [UserFacade],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepo.html":{"url":"injectables/UserRepo.html","title":"injectable - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/user/user.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/user/user.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/user/user.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, User } from '@shared/domain';\n\n@Injectable()\nexport class UserRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst user = await this.em.findOneOrFail(User, { id });\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserUC.html":{"url":"injectables/UserUC.html","title":"injectable - UserUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/user.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserWithPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, roleUC: RoleUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/user.uc.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleUC\n                                                  \n                                                        \n                                                                        RoleUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserWithPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserWithPermissions(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/user.uc.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { UserRepo } from '@shared/repo';\nimport { ResolvedUserMapper } from '../mapper';\nimport { ResolvedUser } from '../controller/dto/ResolvedUser.dto';\nimport { RoleUC } from './role.uc';\n\n@Injectable()\n// TODO: this is a domain service and must move to right place. It combine the repo roles and users\nexport class UserUC {\n\tconstructor(private readonly userRepo: UserRepo, private readonly roleUC: RoleUC) {}\n\n\tasync getUserWithPermissions(userId: EntityId): Promise {\n\t\tconst user = await this.userRepo.findById(userId);\n\t\tconst roles = user.roles.getItems();\n\t\tconst resolved = await this.roleUC.resolvePermissionsByRoles(roles);\n\n\t\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, resolved.permissions, resolved.roles);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ValidationError extends BusinessError {\n\tconstructor(readonly message: string, details?: Record) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'VALIDATION_ERROR',\n\t\t\t\ttitle: 'Validation Error',\n\t\t\t\tdefaultMessage: message,\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST,\n\t\t\tdetails\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @golevelup/nestjs-rabbitmq : ^1.18.1\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.3.1\n        \n            @nestjs/common : ^8.2.3\n        \n            @nestjs/core : ^8.2.3\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/microservices : ^8.2.3\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.2.3\n        \n            @nestjs/swagger : ^5.1.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^8.8.2\n        \n            amqp-connection-manager : ^3.2.2\n        \n            amqplib : ^0.8.0\n        \n            arg : ^5.0.0\n        \n            args : ^5.0.1\n        \n            async : ^3.2.2\n        \n            aws-sdk : ^2.1041.0\n        \n            axios : ^0.24.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            bson : ^4.6.0\n        \n            chalk : ^5.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            commander : ^8.1.0\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : ^4.13.2\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.3.2\n        \n            jose : ^1.28.1\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.13.9\n        \n            mongoose-delete : ^0.5.4\n        \n            mongoose-diff-history : git://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.8.1\n        \n            mongoose-shortid-nodeps : git://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^3.1.20\n        \n            nestjs-console : ^7.0.0\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^13.1.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^7.3.1\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.5.1\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^6.0.0\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LearnroomTypes   (apps/.../learnroom.types.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            SortOrder   (apps/.../find-options.ts)\n                        \n                        \n                            TaskDashBoardPermission   (apps/.../task.uc.ts)\n                        \n                        \n                            TaskParentPermission   (apps/.../task.authorization.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/learnroom.types.ts\n    \n        \n            \n                \n                    \n                        \n                        LearnroomTypes\n                    \n                \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : course\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/types/news.types.ts\n    \n        \n            \n                \n                    \n                        \n                        NewsTargetModel\n                    \n                \n                        \n                            \n                                 School\n                            \n                        \n                        \n                            \n                                Value : schools\n                            \n                        \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : courses\n                            \n                        \n                        \n                            \n                                 Team\n                            \n                        \n                        \n                            \n                                Value : teams\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/interface/find-options.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.uc.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDashBoardPermission\n                    \n                \n                        \n                            \n                                 teacherDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_TEACHER_VIEW_V3\n                            \n                        \n                        \n                            \n                                 studentDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_VIEW_V3\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.authorization.service.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskParentPermission\n                    \n                \n                        \n                            \n                                 read\n                            \n                        \n                        \n                            \n                                 write\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../management.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createStorageProviderClient   (apps/.../filestorage.adapter.ts)\n                        \n                        \n                            DecodeHtmlEntities   (apps/.../decode-html-entities.transformer.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/management.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponseForBusinessError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error: BusinessError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                BusinessError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForFeathersError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error: FeathersError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                FeathersError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForUnknownError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/infra/filestorage/filestorage.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createStorageProviderClient\n                        \n                    \n                \n            \n            \n                \ncreateStorageProviderClient(storageProvider: StorageProvider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageProvider\n                                    \n                                                StorageProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     S3Client\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/decode-html-entities.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DecodeHtmlEntities\n                        \n                    \n                \n            \n            \n                \nDecodeHtmlEntities()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a string value so that all contained html entities are decoded.\nThe purpose of this decorator is to revert html entity encodings that come from generic\ninput sanitization in the legacy server. We don't need this encoding in the output of our API\nbecause in common template systems (e.g handlebars and vue.js) strings are generally\nescaped for the output. That leads to wrong text output because html entities are rendered \"as is\"\nwith all characters encoded again.\nExamples:\n\nwhen text = \"X & Y\" and template is {{ text }} it is rendered as \"X &amp; Y\" => wrong\nwhen text = \"X & Y\"     and template is {{ text }} it is rendered as \"X & Y\"      => good\n\n(both for vue.js and handlebars)\nUse this decorator in your response DTO wherever redundant html encoding from the legacy server has to be reverted.\nIMPORTANT: Should be removed later when sanitization works properly\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        the string with decoded html entities\n\n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StringToBoolean\n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nDevelop: \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages. It contains information about\n\n\nsetup & preconditions\nstarting the application\ntesting\ntools setup (VSCode, Git)\narchitecture\n\nBased on NestJS\nFeathers application\nThis is legacy part of the application!\nBased on Node.js and Feathers\nApplication seperation\nIn order to seperate NestJS and Feathers each application runs in its own express instance. These express instances are then mounted on seperate paths under a common root express instance.\nRoot-Express-App \n├─ api/v1/       --> Feathers-App\n├─ api/v3/       --> NestJS-AppThis ensures that each application can run its own middleware stack for authentication, error handling, logging etc.\nThe mount paths don't have any impact on the routes inside of the applications, e.g. the path /api/v3/news will translate to the inner path /news. That means that in terms of route matching each child application doesn't have to take any measures regarding the path prefix. It simply works as it was mounted to /.\nHowever note that when URLs are generated inside a child application the path prefix has to be prepended. Only then the generated URLs match the appropriate child application, e.g. the path /news has to be provided as the external path /api/v3/news.\nIt is possible (not very likely) that the server api is called with URLs that use the old schema without a path prefix. As a safety net for that we additionally mount the Feathers application as before under the paths:\n\n/ - for internal calls\n/api - for external calls\n\nWhen these paths are accessed an error with context [DEPRECATED-PATH] is logged.\nSetup\nFor more detailed setup instructions, take a look at setup.\nThe whole application setup with all dependencies can be found in System Architecture. It contains information about how different application components are connected to each other.\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleWriterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EncryptionModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileSystemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LearnroomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RocketChatModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_exports\n\n\n\ncluster_FileSystemModule_providers\n\n\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\nUserFacade \n\nUserFacade \n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nLoggerModule->FilesModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\nServerConsoleModule -->\n\nFilesModule->ServerConsoleModule\n\n\n\nServerModule -->\n\nFilesModule->ServerModule\n\n\n\n\n\nDeleteFilesUc\n\nDeleteFilesUc\n\nFilesModule -->\n\nDeleteFilesUc->FilesModule\n\n\n\n\n\nFileStorageAdapter\n\nFileStorageAdapter\n\nFilesModule -->\n\nFileStorageAdapter->FilesModule\n\n\n\n\n\nFilesRepo\n\nFilesRepo\n\nFilesModule -->\n\nFilesRepo->FilesModule\n\n\n\n\n\nStorageProviderRepo\n\nStorageProviderRepo\n\nFilesModule -->\n\nStorageProviderRepo->FilesModule\n\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nCourseRepo->LearnroomModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nCourseUc\n\nCourseUc\n\nLearnroomModule -->\n\nCourseUc->LearnroomModule\n\n\n\n\n\nDashboardModelMapper\n\nDashboardModelMapper\n\nLearnroomModule -->\n\nDashboardModelMapper->LearnroomModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nRocketChatModule\n\nRocketChatModule\n\nServerModule -->\n\nRocketChatModule->ServerModule\n\n\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        23 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    41 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    79 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    47 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\ne2e default tests to extend: auth required, fails without/succeeds with\n\nACCEPTED\n\ndocumentation\n\nentity constructor\nem to be used in repositories only (!!!)\n\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nMERGE\n\napi path prefix cleanup: remove middleware and multiple path mounts, sync with nest\nuser module stucture\nsingle domain: shared entity (main.ts), shared repository \nrequest.user.user in jwt strategy\nremove outdated sorting.ts \nremove default launch/settings json files, apply them\nfix https://github.com/hpi-schul-cloud/schulcloud-server/pull/2729#pullrequestreview-699615164\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes (remove this.timeout and red promise chains)\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConnectionOptions   (apps/.../types.ts)\n                        \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            DashboardProps   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            EmptyResultQueryType   (apps/.../scope.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            GenericData   (apps/.../rocket-chat.service.ts)\n                        \n                        \n                            GridElementContent   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridElementWithPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridPositionWithGroupIndex   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            IPermissionsAndRoles   (apps/.../user.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            LearnroomMetadata   (apps/.../learnroom.types.ts)\n                        \n                        \n                            MongoDatabaseModuleOptions   (apps/.../types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            RabbitMqModuleOptions   (apps/.../mail.module.ts)\n                        \n                        \n                            Role   (apps/.../ResolvedUser.dto.ts)\n                        \n                        \n                            ScopeOperator   (apps/.../scope.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../find-options.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TaskParentDescriptions   (apps/.../task.entity.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/infra/database/mongo-memory-database/types.ts\n    \n    \n        \n            \n                \n                    \n                    ConnectionOptions\n                \n            \n            \n                \n                    connection options not to be used in module options for the in memory db module as it is overriding the connection\n\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MongoDatabaseModuleOptions\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n    \n        \n            \n                \n                    \n                    DashboardProps\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementContent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementWithPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridPositionWithGroupIndex\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyResultQueryType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ScopeOperator\n                \n            \n            \n                \n                        \"$and\" | \"$or\"\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/shared/infra/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/rocketchat/rocket-chat.service.ts\n    \n    \n        \n            \n                \n                    \n                    GenericData\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/user.ts\n    \n    \n        \n            \n                \n                    \n                    IPermissionsAndRoles\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news\n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                        School | Team | Course\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/learnroom.types.ts\n    \n    \n        \n            \n                \n                    \n                    LearnroomMetadata\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/shared/infra/mail/mail.module.ts\n    \n    \n        \n            \n                \n                    \n                    RabbitMqModuleOptions\n                \n            \n            \n                \n                        Omit\n\n                \n            \n        \n    \n    apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n    \n    \n        \n            \n                \n                    \n                    Role\n                \n            \n            \n                \n                            IRole\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/find-options.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/task.entity.ts\n    \n    \n        \n            \n                \n                    \n                    TaskParentDescriptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_ENTITIES   (apps/.../all-entities.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../console.ts)\n                        \n                        \n                            cleanUpCollections   (apps/.../clean-up-collections.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            courseFactory   (apps/.../course.factory.ts)\n                        \n                        \n                            courseGroupFactory   (apps/.../coursegroup.factory.ts)\n                        \n                        \n                            courseNewsFactory   (apps/.../news.factory.ts)\n                        \n                        \n                            createCurrentTestUser   (apps/.../create-current-test-user.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createRabbitMqModule   (apps/.../mail.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            DEFAULT   (apps/.../course.entity.ts)\n                        \n                        \n                            defaultColumns   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            directoryFactory   (apps/.../file.factory.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            execute   (apps/.../bootstrap.console.ts)\n                        \n                        \n                            fileFactory   (apps/.../file.factory.ts)\n                        \n                        \n                            generateEmptyDashboard   (apps/.../dashboard.repo.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            lessonFactory   (apps/.../lesson.factory.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            oneDay   (apps/.../course.factory.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            roleFactory   (apps/.../role.factory.ts)\n                        \n                        \n                            schoolFactory   (apps/.../school.factory.ts)\n                        \n                        \n                            schoolNewsFactory   (apps/.../news.factory.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            setupEntities   (apps/.../setup-entities.ts)\n                        \n                        \n                            storageProviderFactory   (apps/.../storageprovider.factory.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            submissionFactory   (apps/.../submission.factory.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            taskFactory   (apps/.../task.factory.ts)\n                        \n                        \n                            teamFactory   (apps/.../team.factory.ts)\n                        \n                        \n                            teamNewsFactory   (apps/.../news.factory.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../jwt-validation.adapter.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                               (apps/.../file-system.adapter.ts)\n                        \n                        \n                            userFactory   (apps/.../user.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/entity/all-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ENTITIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\tCourse,\n\tCourseGroup,\n\tDashboardModelEntity,\n\tDashboardGridElementModel,\n\tBaseFile,\n\tFile,\n\tDirectory,\n\tStorageProvider,\n\tLesson,\n\tRole,\n\tSchool,\n\tSubmission,\n\tTask,\n\tTeam,\n\tUser,\n\tCourseNews,\n\tNews,\n\tSchoolNews,\n\tTeamNews,\n]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                    \n                \n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                    \n                \n\n            \n                \n                    Returns the current authenticated user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['jwt'] as const\n                    \n                \n\n\n        \n    \n\n    apps/server/src/console/console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BootstrapConsole({\n\tmodule: ServerConsoleModule,\n\tuseDecorators: true,\n})\n                    \n                \n\n            \n                \n                    The console is starting the application wrapped into commander.\nThis allows adding console commands to execute provider methods.\n\n                \n            \n\n        \n    \n\n    apps/server/src/shared/testing/clean-up-collections.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cleanUpCollections\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (em: EntityManager): Promise => {\n\tconst allCollections = await em.getConnection('write').listCollections();\n\tawait Promise.all(\n\t\tallCollections.map(async (collectionName) => {\n\t\t\tawait em.getConnection().deleteMany(collectionName, {});\n\t\t})\n\t);\n}\n                    \n                \n\n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Config.InitialOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n\tmaxWorkers: 2, // limited for not taking all workers within of a single github action\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('ts-jest/utils')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./tsconfig.json')\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/controller/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                    \n                \n\n            \n                \n                    \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableOpenApiDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/course.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CourseFactory.define(Course, ({ sequence, params }) => {\n\tlet school: School;\n\tif (params?.school) {\n\t\tschool = params.school as School;\n\t} else {\n\t\tschool = schoolFactory.build();\n\t}\n\n\treturn {\n\t\tname: `course #${sequence}`,\n\t\tdescription: `course #${sequence} description`,\n\t\tcolor: '#FFFFFF',\n\t\tschool,\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oneDay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 24 * 60 * 60 * 1000\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/coursegroup.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseGroupFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(CourseGroup, () => {\n\treturn {\n\t\tcourse: courseFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/news.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseNewsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(CourseNews, ({ sequence }) => {\n\treturn {\n\t\ttitle: `news ${sequence}`,\n\t\tcontent: `content of news ${sequence}`,\n\t\tdisplayAt: new Date(),\n\t\tschool: schoolFactory.build(),\n\t\tcreator: userFactory.build(),\n\t\ttarget: courseFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolNewsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(SchoolNews, ({ sequence }) => {\n\treturn {\n\t\ttitle: `news ${sequence}`,\n\t\tcontent: `content of news ${sequence}`,\n\t\tdisplayAt: new Date(),\n\t\tschool: schoolFactory.build(),\n\t\tcreator: userFactory.build(),\n\t\ttarget: schoolFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamNewsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(TeamNews, ({ sequence }) => {\n\treturn {\n\t\ttitle: `news ${sequence}`,\n\t\tcontent: `content of news ${sequence}`,\n\t\tdisplayAt: new Date(),\n\t\tschool: schoolFactory.build(),\n\t\tcreator: userFactory.build(),\n\t\ttarget: teamFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/create-current-test-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCurrentTestUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tinitPermissions?: string[],\n\tpassedUser?: User\n): {\n\tcurrentUser: ICurrentUser;\n\tuser: User;\n\troles: Role[];\n} => {\n\tconst accountId = new ObjectId().toHexString();\n\tconst school = schoolFactory.build();\n\tschool._id = new ObjectId();\n\n\tconst permissions = initPermissions || ['A', 'B'];\n\tconst roles = [new Role({ name: 'name', permissions })] as Role[];\n\tconst roleIds = roles.map((role) => role.id);\n\n\tconst user = passedUser || userFactory.build({ roles, school });\n\t// const user = new User({ email: `Date.now()@email.de`, roles, school });\n\tuser._id = new ObjectId();\n\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, permissions, roles);\n\n\tconst currentUser = {\n\t\tuserId: user.id,\n\t\troles: roleIds,\n\t\tschoolId: school.id,\n\t\taccountId,\n\t\tuser: resolvedUser,\n\t} as ICurrentUser;\n\treturn { currentUser, user, roles };\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForHttpException\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                    \n                \n\n            \n                \n                    Creates ErrorResponse from NestJS build in technical exceptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBusinessError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFeathersError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTechnicalError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                    \n                \n\n            \n                \n                    Compare helper to detect an error is a build in NestJS http exception.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeErrorLog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValidationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMikroOrmModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/mail/mail.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRabbitMqModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/course.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/file.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        directoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Directory, ({ sequence }) => {\n\treturn {\n\t\tstorageFileName: `directory-${sequence}`,\n\t\tbucket: 'test-bucket',\n\t\tstorageProvider: storageProviderFactory.build(),\n\t\tcreator: userFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(File, ({ sequence }) => {\n\treturn {\n\t\tstorageFileName: `file-${sequence}`,\n\t\tbucket: 'test-bucket',\n\t\tstorageProvider: storageProviderFactory.build(),\n\t\tcreator: userFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmptyResultQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { $and: [{ _id: false }] }\n                    \n                \n\n            \n                \n                    When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                \n            \n\n        \n    \n\n    apps/server/src/console/test/bootstrap.console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/dashboard/dashboard.repo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateEmptyDashboard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (userId: EntityId) => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tconst dashboard = new DashboardEntity(new ObjectId().toString(), { grid: gridArray, userId });\n\treturn dashboard;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : externalAuthConfig\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/lesson.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lessonFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : LessonFactory.define(Lesson, ({ sequence, params }) => {\n\tlet course: Course;\n\tif (params.course) {\n\t\tcourse = params.course as Course;\n\t} else {\n\t\tcourse = courseFactory.build();\n\t}\n\n\treturn {\n\t\tname: `lesson #${sequence}`,\n\t\tcourse,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NEWS_SOURCES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['internal', 'rss'] as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/server-error-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_ERROR_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IErrorType\n\n                    \n                \n                \n                    \n                        Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverErrorTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : legacyErrorTypes\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : serverErrorTypes\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/role.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        roleFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Role, ({ sequence }) => {\n\treturn {\n\t\tname: `role #${sequence}`,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/school.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        schoolFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(School, ({ sequence }) => {\n\treturn { name: `school #${sequence}` };\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/setup-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupEntities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (): Promise => {\n\tconst orm = await MikroORM.init({ type: 'mongo', dbName: 'dummy', entities: ALL_ENTITIES });\n\treturn orm;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/storageprovider.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        storageProviderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(\n\tStorageProvider,\n\t() => {\n\t\treturn {\n\t\t\tendpointUrl: 'http://localhost',\n\t\t\taccessKeyId: 'accessKeyId',\n\t\t\tsecretAccessKey: 'secret',\n\t\t};\n\t}\n)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/submission.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        submissionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SubmissionFactory.define(Submission, ({ sequence }) => {\n\treturn {\n\t\ttask: taskFactory.build(),\n\t\tstudent: userFactory.build(),\n\t\tcomment: `submission comment #${sequence}`,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/task.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        taskFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TaskFactory.define(Task, ({ sequence }) => {\n\t// private is by default in constructor true, but in the most test cases we need private: false\n\treturn { name: `task #${sequence}`, private: false };\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/team.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        teamFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Team, ({ sequence }) => {\n\treturn {\n\t\tname: `team #${sequence}`,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usedGlobals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConstants\n\n                    \n                \n                \n                    \n                        Default value : globals\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : usedGlobals\n                    \n                \n\n            \n                \n                    Database URL\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : jwtWhitelist\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/file-system/file-system.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : fsp\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/user.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(User, ({ sequence }) => {\n\treturn {\n\t\tfirstName: 'John',\n\t\tlastName: `Doe ${sequence}`,\n\t\temail: `user-${sequence}@example.com`,\n\t\troles: [],\n\t\tschool: schoolFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\nRabbitMQ (configure using RABBITMQ_URL, see default.schema.json)\n\npreconditions\n\nHave a MongoDB started, run mongod \nHave some seed data in datase, use npm run setup to reset the db and apply seed data\nHave RabbitMQ started, run docker run -d -p 5672:5672 -p 15672:15672 --name rabbitmq rabbitmq:3.8.9-management. This starts RabbitMQ on port 5672 and a web admin console at localhost:15672 (use guest:guest to login).\n\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:start starts the nest application on localhost:3030\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to build and serve the documentation\n\nnest:docs:build builds code documentation and module relations into /documentation folder\nnest:docs:serve builds code documentation and module relations into /documentation folder and serves it on port :8080 with hot reload on changes\n\nHow to start the server console\nThe console offers management capabilities of the application.\n\nnest:console after nest:build in production or\nnest:console:dev for development\n\nTo run a specific command run npm run nest:console:dev -- command . The --is required for npm to send params to the console. Use --helpto get an overview about existing commands.\nHow to test the nest-application with jest\n NestJS must not use _.test.[ts|js] as filename but instead either *.spec.ts for unit-tests beside tested files or *.e2e-spec.ts in test folder for end-to-end tests. This ensures legacy/feathers/mocha tests can be separated from jest test suites.\nThe application must pass the following statement which executes separate checks:\n\nnest:test executes all jest (NestJS) tests with coverage and eslint\n\nTo test a subset, use\n\nnest:test:all execute unit and e2e tests \n\nnest:test:e2e execute e2e tests only\n\nnest:test:spec execute unit tests (without e2e) only\n\nnest:test:cov executes all jest tests with coverage check\n\nnest:test:watch executes changed tests again on save\n\nnest:test:debug executes tests with debugging\n\nnest:lint run eslint to report linter issues and apply formatting\n\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting\n\n\nQuality gates\nWith coverage on tests and static code analysis we ensure some quality gates which are all handled by running nest:test:\n\nESLint with prettier ensures formatting and static code analysis to pass, see .eslintrc.js for details.\nTests ensure functional requirements via unit & e2e tests.\nCoverage on tests ensures a coverage of 80% on NestJS code, see jest.config.ts for details.\n\nGates are part of pull request checks.\nOpenAPI documentation\nThe NestJS applicaiton serves a documentation at :3030/v3/docs. The JSON-representation can be found at /v3/docs-json to be used for generating a client application.\nLegacy/feathers Swagger UI documentation when running the server locally, it is served at :3030/docs/.\nLegacy (feathers) testing with mocha\n\nnpm run test\nTo run a single test, use npm run mocha-single -- .\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\nhttps://min.io/\nhttps://www.rabbitmq.com/\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture **divides the application into technical ****layers** based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into *component parts* for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to **external consumers **over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n    \n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '@src/core/logger';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '@src/core/logger';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Samples\nHandling of function return values\nWhen assigning a value to an expect, separate the function call from the expectation to simplify debugging. This later helps when you not know about the return value type or if it's an promise or not. This is good style not only for tests.\n    // doSomethingCrazy : retValue\n    it('bad sample', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good sample', () => {\n        const result = doSomethingCrazy(x,y,z)\n        expect(result).to... // here we can simply debug\n    })\nPromises and Timouts in tests\nWhen using asynchronous functions and/opr promises, results must be awaited within of an async test function instead of using promise chains. While for expexting error conditions it might be helpful to use catch for extracting a value from an expected error, in every case avoid writing long promise chains.\n\nInstead of using done callback, use async test functions.\nUse await instead of (long) promise chains\nnever manually set a timeout\n\n    // doSomethingCrazy : Promise\n    it('bad async sample', async function (done) => {\n        this.timeout(10000);\n        return doSomethingCrazy(x,y,z).then(result=>{\n            expect(result).to...\n            done() // expected done\n        }).catch(()=>{\n            logger.info(`Could not ... ${error}`);\n            done() // unexpected done, test will always succeed which is wrong\n        })\n    })\n    it('good async sample', async () => {\n        // no timeout set\n        const result = await doSomethingCrazy(x,y,z)\n        expect(result).to...\n    })\nTimeouts must not be used, when async handling is correctly defined!\n\nExpecting errors in tests\nWhen expecting an error, you might take values from an error, test for the error type thrown and must care of promises.\n    // doSomethingCrazy : Promise\n    it('bad async sample expecting an error', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good async sample expecting an error value', async () => {\n        const code = await doSomethingCrazy(x,y,z).catch(err => err.code)\n        expect(code).to...\n    })\n    it('good sample expecting an error type from a sync function', () => {\n        expect(() => doSomethingCrazySync(wrong, param)).toThrow(BadRequestException);\n    })\n    it('good sample expecting an error type from an async function', async () => {\n        await expect(doSomethingCrazySync(wrong, param)).rejects.toThrow(BadRequestException);\n    })Testing Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                                  (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                                    (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });Testing expected error\n\nExecute the function with the expected exception in expect context than define how and with which exception\nthe function should be rejected\n\n\nDon't forget to add 'await' before expect, otherwise the test will be executed successfully regardless assertions\nand throw an error in log after the test execution.\n\n        it('should throw not found exception if news was not found', async () => {\n            const anotherNewsId = new ObjectId().toHexString();\n            await expect(service.findOneByIdForUser(anotherNewsId, userId)).rejects.toThrow(NotFoundException);  (1)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead.\n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                                     (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as NewsListResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n        it('should throw not found error, if news doesnt exists', async () => {\n            const newsId = new ObjectId().toHexString();\n            await request(app.getHttpServer()).delete(`/news/${newsId}`).expect(404);\n        });\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nStrict settings: Property Initialization\nDue to different ways of how instances are generated while we focus on having strict settings enabled by default, we have the following exceptions for strict property initialization defined:\n\nreponse dtos (generated in controllers by mappers based on entities) will get constructors added for setting all or at least all required properties via constructors\nrequest dtos will use ! on properties ang do not get constructors added. The validity must be defined by and match with class validator decorators on properties. The application then will generate valid instances on input data. \nfor entity id and _id the developer must know if the values are present or not depending on persistence state of an entity\nall other classes should use complete constructors, and avoid use of ! on properties, especially all providers, and entities for application use and testing\nlegacy code might have got some ! added which should be removed and get constructors added correctly.\n\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
